[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"instructions on how to use it.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"   first)","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"   like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"richiehx":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"richiehx":21,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"# Nano Chatbot User Guide","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"Nano is a **Chatbot for tracking tasks, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you possess fast typing skills, Nano has the potential to expedite your task management more efficiently than conventional GUI applications.","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"## Quick start","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"1. Ensure that you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/richiehx/ip/releases/tag/A-Release).","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Nano Chatbot.","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"4. To run the application, open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar duke.jar` command to run the application.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"5. A GUI similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"![Screenshot of Nano Chatbot Ui](Ui.png)","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"6. Type the command in the command box and press Enter or click the SEND button to execute it. e.g. typing `list` and pressing Enter will list out all the current tasks saved.\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"   * `list` : Lists all tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"   * `todo Task` : Adds a new task of type **Todo** with the title `Task` to the Chatbot.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"   * `delete 3` : Deletes the 3rd task shown in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"   * `mark 1` : Marks the 1st task shown in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"   * `bye` : Exits the app.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"     ","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"8. Refer to the Features below for details of each command.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"   ","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"### Creation of Tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"There are 3 types of tasks that can be created: **Todo**, **Deadline** and **Event**.","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"* **Todo** : A task with a description.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"* **Deadline** : A task with a description and a due date and time.","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"* **Event** : A task with a description and the starting and ending date and time for the task.","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"### Task Marking","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"Tasks can be marked as completed and unmarked when needed, allowing for better task tracking.","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"### Task Editing","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"Tasks can be edited if needed.","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"## Feature Commands","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"  e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo New Task`.","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"* Parameters must be in the specified order.\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"  e.g. if the command specifies `DESC /by DEADLINE`, the parameter order must be followed.","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"### Adding a Todo Task: `todo`","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"Adds a **Todo** Task to the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"* `todo Watch CS2103T Lecture`","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"Noted. I\u0027ve added this task: ","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"[T][ ] Watch CS2103T Lecture","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"### Adding a Deadline Task: `deadline`","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"Adds a **Deadline** Task to the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"Format: `deadline DESCRIPTION /by DUE_DATE`","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"* All parameter fields must be provided.","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"* `DUE_DATE` must follow the format of `yyyy-mm-dd HH:mm` (year-month-day hours:minutes)","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"* `deadline Do CS2103T project /by 2023-09-22 23:59` : Creates a new Deadline Task with the description `Do CS2103T project` and due by `22 September 2023 23:59`","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"Noted. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"[D][ ] Do CS2103T project (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"### Adding an Event Task: `event`","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"Adds an **Event** Task to the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"Format: `event DESCRIPTION /from START_DATE /to END_DATE`","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"* All parameter fields must be provided.","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"* `START_DATE` and `END_DATE` must follow the format of `yyyy-mm-dd HH:mm` (year-month-day hours:minutes)","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"* `event Watch CS2103T Lecture /from 2023-09-15 16:00 /to 2023-09-15 18:00` : Creates a new Event Task with the description `Watch CS2103T Lecture` starting from `15 September 2023 16:00` and ending on `15 September 2023 18:00`","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"richiehx"},"content":"Noted. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"richiehx"},"content":"[E][ ] Watch CS2103T Lecture (from: 15 September 2023 16:00 to: 15 September 2023 18:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"richiehx"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"richiehx"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"richiehx"},"content":"Shows a list of all tasks in the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"richiehx"},"content":"Format: `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"richiehx"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"richiehx"},"content":"1. [T][ ] Watch CS2103T Lecture","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"richiehx"},"content":"2. [D][ ] Do CS2103T project (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"richiehx"},"content":"3. [E][ ] Watch CS2103T Lecture (from: 15 September 2023 16:00 to: 15 September 2023 18:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"richiehx"},"content":"### Marking a task: `mark`","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"richiehx"},"content":"Marks the specified task as complete.","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"richiehx"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"richiehx"},"content":"* Marks the task at the specified `INDEX`.","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"richiehx"},"content":"* The index refers to the index number shown in the full Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"richiehx"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"richiehx"},"content":"  ","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"richiehx"},"content":"* `mark 1` : Marks the 1st task in the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"richiehx"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"richiehx"},"content":"[T][X] Watch CS2103T Lecture","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"richiehx"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"richiehx"},"content":"Unmarks the specified task as incomplete.","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"richiehx"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"richiehx"},"content":"* Unmarks the task at the specified `INDEX`.","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"richiehx"},"content":"* The index refers to the index number shown in the full Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"richiehx"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"richiehx"},"content":"  ","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"richiehx"},"content":"* `unmark 1` : Unmarks the 1st task in the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"richiehx"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"richiehx"},"content":"[T][ ] Watch CS2103T Lecture","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"richiehx"},"content":"### Editing a task: `edit`","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"richiehx"},"content":"Edits an existing task in the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"richiehx"},"content":"Format: `edit INDEX FIELD_TO_EDIT NEW_VALUE`","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"richiehx"},"content":"* Edits the task at the specified `INDEX`. The index refers to the index number shown in the full Task List. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"richiehx"},"content":"* All parameter fields must be provided.","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"richiehx"},"content":"#### 1. Editing a Todo Task","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"richiehx"},"content":"For **Todo** tasks, only the description can be edited.","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"richiehx"},"content":"* `FIELD_TO_EDIT` : Possible fields are `/desc`","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"richiehx"},"content":"* `NEW_VALUE` : The new value must follow the restrictions of the specified field. (For `/desc`, Description provided cannot be empty)","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"richiehx"},"content":"  ","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"richiehx"},"content":"*  `edit 1 /desc Do CS2103T Tutorial` : Edits the description of the 1st task to be `Do CS2103T Tutorial`.","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"richiehx"},"content":"Noted. I\u0027ve updated this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"richiehx"},"content":"[T][ ] Do CS2103T Tutorial","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"richiehx"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"richiehx"},"content":"#### 2. Editing a Deadline Task","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"richiehx"},"content":"For **Deadline** tasks, the description and due date can be edited.","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"richiehx"},"content":"* `FIELD_TO_EDIT`: Possible fields are `/desc`, `/by`","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"richiehx"},"content":"* `NEW_VALUE`: The new value must follow the restrictions of the specified field. (For `/by`, the `NEW_VALUE` must follow the format of `yyyy-mm-dd HH:mm`)","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"richiehx"},"content":"*  `edit 2 /desc Submit Project` : Edits the description of the 2nd task to be `Submit Project`.","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"richiehx"},"content":"*  `edit 2 /by 2023-10-12 22:12` : Edits the due date of the 2nd task to be `12 October 2023 22:12`.","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"richiehx"},"content":"Noted. I\u0027ve updated this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"richiehx"},"content":"[D][ ] Submit Project (by: 12 October 2023 22:12)","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"richiehx"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"richiehx"},"content":"#### 3. Editing an Event Task","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"richiehx"},"content":"For **Event** tasks, the description, start time and end time can be edited.","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"richiehx"},"content":"* `FIELD_TO_EDIT`: Possible fields are `/desc`, `/from`, `/to`","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"richiehx"},"content":"* `NEW_VALUE`: The new value must follow the restrictions of the specified field. (For `/from` and `/to`, the `NEW_VALUE` must follow the format of `yyyy-mm-dd HH:mm`)","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":215,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"richiehx"},"content":"*  `edit 3 /desc Watch CS2100 Lecture` : Edits the description of the 3rd task to be `Watch CS2100 Lecture`.","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"richiehx"},"content":"*  `edit 3 /from 2023-10-12 20:00` : Edits the start time of the 3rd task to be `12 October 2023 20:00`.","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"richiehx"},"content":"*  `edit 3 /to 2023-10-13 22:00` : Edits the end time of the 3rd task to be `13 October 2023 22:00`.","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":221,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":223,"author":{"gitId":"richiehx"},"content":"Noted. I\u0027ve updated this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"richiehx"},"content":"[E][ ] Watch CS2100 Lecture (from: 12 October 2023 20:00 to: 13 October 2023 22:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"richiehx"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"richiehx"},"content":"### Locating tasks by description: `find`","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"richiehx"},"content":"Finds tasks whose description contain the given keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"richiehx"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-18"},{"lineNumber":234,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":235,"author":{"gitId":"richiehx"},"content":"* The search is case-sensitive. e.g. `task` will **NOT** match `Task`","lastModifiedDate":"2023-09-18"},{"lineNumber":236,"author":{"gitId":"richiehx"},"content":"  ","lastModifiedDate":"2023-09-18"},{"lineNumber":237,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":238,"author":{"gitId":"richiehx"},"content":"- Current List : ","lastModifiedDate":"2023-09-18"},{"lineNumber":239,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":240,"author":{"gitId":"richiehx"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":241,"author":{"gitId":"richiehx"},"content":"1. [T][ ] Watch CS2103T Lecture","lastModifiedDate":"2023-09-18"},{"lineNumber":242,"author":{"gitId":"richiehx"},"content":"2. [D][ ] Do CS2103T project (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"richiehx"},"content":"3. [E][ ] Watch CS2100 Lecture (from: 15 September 2023 16:00 to: 15 September 2023 18:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":246,"author":{"gitId":"richiehx"},"content":"* `find Watch` : returns `Watch CS2103T Lecture` and `Watch CS2100 Lecture`","lastModifiedDate":"2023-09-18"},{"lineNumber":247,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":249,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":250,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":251,"author":{"gitId":"richiehx"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":252,"author":{"gitId":"richiehx"},"content":"1. [T][ ] Watch CS2103T Lecture","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"richiehx"},"content":"2. [E][ ] Watch CS2100 Lecture (from: 15 September 2023 16:00 to: 15 September 2023 18:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":254,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":255,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":256,"author":{"gitId":"richiehx"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-09-18"},{"lineNumber":257,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":258,"author":{"gitId":"richiehx"},"content":"Deletes the specified task from the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":259,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":260,"author":{"gitId":"richiehx"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":261,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"richiehx"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2023-09-18"},{"lineNumber":263,"author":{"gitId":"richiehx"},"content":"* The index refers to the index number shown in the full Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":264,"author":{"gitId":"richiehx"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-18"},{"lineNumber":265,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":266,"author":{"gitId":"richiehx"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":267,"author":{"gitId":"richiehx"},"content":"- Current List :","lastModifiedDate":"2023-09-18"},{"lineNumber":268,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":269,"author":{"gitId":"richiehx"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":270,"author":{"gitId":"richiehx"},"content":"1. [T][ ] Watch CS2103T Lecture","lastModifiedDate":"2023-09-18"},{"lineNumber":271,"author":{"gitId":"richiehx"},"content":"2. [D][ ] Do CS2103T project (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":272,"author":{"gitId":"richiehx"},"content":"3. [E][ ] Watch CS2100 Lecture (from: 15 September 2023 16:00 to: 15 September 2023 18:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":273,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":274,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":275,"author":{"gitId":"richiehx"},"content":"* `delete 2` : deletes the 2nd task in the Task List.","lastModifiedDate":"2023-09-18"},{"lineNumber":276,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":277,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":278,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":279,"author":{"gitId":"richiehx"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":280,"author":{"gitId":"richiehx"},"content":"[D][ ] Do CS2103T project (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":281,"author":{"gitId":"richiehx"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":282,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":283,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":284,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":286,"author":{"gitId":"richiehx"},"content":"### Exiting the program : `bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":288,"author":{"gitId":"richiehx"},"content":"Exits the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":290,"author":{"gitId":"richiehx"},"content":"Format: `bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":292,"author":{"gitId":"richiehx"},"content":"Expected Output:","lastModifiedDate":"2023-09-18"},{"lineNumber":293,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":294,"author":{"gitId":"richiehx"},"content":"Chat has ended! Please Exit.","lastModifiedDate":"2023-09-18"},{"lineNumber":295,"author":{"gitId":"richiehx"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":296,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":297,"author":{"gitId":"richiehx"},"content":"### Saving the data","lastModifiedDate":"2023-09-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":299,"author":{"gitId":"richiehx"},"content":"Nano Chatbot data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":301,"author":{"gitId":"richiehx"},"content":"### Editing the data file","lastModifiedDate":"2023-09-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":303,"author":{"gitId":"richiehx"},"content":"Nano Chatbot data is saved automatically as a Text file `[JAR file location]/data/duke.txt`. Advanced users can update the data directly by editing that data file.","lastModifiedDate":"2023-09-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":305,"author":{"gitId":"richiehx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-09-18"},{"lineNumber":306,"author":{"gitId":"richiehx"},"content":"If your changes to the data file make its format invalid, Nano may process the data wrongly and load corrupted data. Hence, it is recommended to make a backup of the file before editing it.","lastModifiedDate":"2023-09-19"},{"lineNumber":307,"author":{"gitId":"richiehx"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":309,"author":{"gitId":"richiehx"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":311,"author":{"gitId":"richiehx"},"content":"## Command summary","lastModifiedDate":"2023-09-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":313,"author":{"gitId":"richiehx"},"content":"Action | Format, Examples","lastModifiedDate":"2023-09-18"},{"lineNumber":314,"author":{"gitId":"richiehx"},"content":"--------|------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":315,"author":{"gitId":"richiehx"},"content":"**Add Todo** | `todo DESCRIPTION` \u003cbr\u003e e.g., `todo Watch CS2103T Lecture`","lastModifiedDate":"2023-09-18"},{"lineNumber":316,"author":{"gitId":"richiehx"},"content":"**Add Deadline** | `deadline DESCRIPTION /by DUE_DATE` \u003cbr\u003e e.g., `deadline Do CS2103T project /by 2023-09-22 23:59`","lastModifiedDate":"2023-09-18"},{"lineNumber":317,"author":{"gitId":"richiehx"},"content":"**Add Event** | `event DESCRIPTION /from START_DATE /to END_DATE` \u003cbr\u003e e.g., `event Watch CS2100 Lecture /from 2023-09-15 16:00 /to 2023-09-15 18:00`","lastModifiedDate":"2023-09-19"},{"lineNumber":318,"author":{"gitId":"richiehx"},"content":"**Mark Task** | `mark INDEX`\u003cbr\u003e e.g., `mark 2`","lastModifiedDate":"2023-09-18"},{"lineNumber":319,"author":{"gitId":"richiehx"},"content":"**Unmark Task** | `unmark INDEX`\u003cbr\u003e e.g., `unmark 2`","lastModifiedDate":"2023-09-18"},{"lineNumber":320,"author":{"gitId":"richiehx"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2023-09-18"},{"lineNumber":321,"author":{"gitId":"richiehx"},"content":"**Edit** | `edit INDEX FIELD_TO_EDIT NEW_VALUE` \u003cbr\u003e e.g.,`edit 2 /desc newDesc`, `edit 3 /from 2023-09-15 17:00`","lastModifiedDate":"2023-09-19"},{"lineNumber":322,"author":{"gitId":"richiehx"},"content":"**Find** | `find KEYWORD`\u003cbr\u003e e.g., `find tutorial`","lastModifiedDate":"2023-09-18"},{"lineNumber":323,"author":{"gitId":"richiehx"},"content":"**List** | `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":324,"author":{"gitId":"richiehx"},"content":"**Exit** | `bye`","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"richiehx":297,"-":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":" * Duke is a Chatbot that helps you keep track of your tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":" * In this version, Duke is renamed to Nano.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"     * The file path to store the User\u0027s Task Data.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"     * The storage that is used to save and load the user\u0027s tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    private static Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"     * The Message to display when the Chat is Ended.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"    private static final String END_CHAT_MESSAGE \u003d \"Chat has ended! Please Exit.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"     * The Error Message to display when Invalid command is given.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"    private static final String INVALID_ERROR_MESSAGE \u003d \"I don\u0027t understand what you\u0027re saying.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"     * The task list that is used to store the user\u0027s tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"     * Boolean value to check if the chat has ended.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"    private boolean isChatEnd \u003d false;","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"     * Handles the Chatbot Response.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"     * @param input The raw String data.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"     * @return The String response of the command.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        if (isChatEnd) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"        Command command \u003d parseLine.getCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"            return INVALID_ERROR_MESSAGE;","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"            switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"            case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"                isChatEnd \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"                return END_CHAT_MESSAGE;","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"            case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"                return tasks.formatList();","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"            case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"                return tasks.handleMarking(parseLine.getArguments(), command.getCommandName());","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"            case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"                return tasks.handleDelete(parseLine.getArguments());","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"            case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"                String todoData \u003d parseLine.parseToDoArguments();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"                return tasks.handleToDo(todoData);","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"                String[] deadlineData \u003d parseLine.parseDeadlineArguments();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"                return tasks.handleDeadline(deadlineData[0], deadlineData[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"            case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"                String[] eventData \u003d parseLine.parseEventArguments();","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"                return tasks.handleEvent(eventData[0], eventData[1], eventData[2]);","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"            case FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"                String findQuery \u003d parseLine.parseFindQuery();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"                return tasks.findTasks(findQuery).formatList();","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"            case EDIT:","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"                String[] editArgs \u003d parseLine.parseEditArguments();","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"                for (String item : editArgs) {","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"                    System.out.println(item);","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"                return tasks.editTask(editArgs[0], editArgs[1], editArgs[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"                return INVALID_ERROR_MESSAGE;","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"richiehx"},"content":"     * Runs the Chatbot program.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"richiehx"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"richiehx"},"content":"        assert !isChatEnd : \"Chat should not be Ended when first run!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"richiehx"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"richiehx"},"content":"            tasks \u003d new TaskList(storage.load(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"richiehx"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"richiehx"},"content":"     * Runs the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"richiehx"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"richiehx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"richiehx"},"content":"        new Duke().run();","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"richiehx":127,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.ui.Main;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"richiehx":13}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":" * The Command enum for the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"public enum Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    EDIT(\"edit\");","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"     * The String value of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"    private String value;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"     * The Constructor for the Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"     * @param value The String value of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    Command(String value) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"     * Returns the respective command of the input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"     * @param value The input String containing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"     * @return The respective command of the input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"    public static Command getCommand(String value) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"        for (Command cmd : Command.values()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"            if (cmd.value.equals(value)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"                return cmd;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"     * Returns the String value of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"     * @return The String value of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"        return this.value;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"richiehx":55}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":" * A Checked Exception that is thrown when there is an error in the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"     * The Constructor for the Exception class.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"     * @param message The message given when the Exception is thrown.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"richiehx":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":" * The Parser to parse input for the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"     * The Message to display when Invalid Description is given.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    private static final String INVALID_DESC_MESSAGE \u003d \"Hey! The task description cannot be empty!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"     * The Message to display when Invalid Deadline is given.","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    private static final String INVALID_DEADLINE_MESSAGE \u003d \"Hey, the Deadline given is Invalid! \"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"            + \"Make sure that you follow this format:\\n\" + \" \u0027taskDescription /by yyyy-mm-dd HH:mm\u0027\";","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"     * The Message to display when Invalid Event is given.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    private static final String INVALID_EVENT_MESSAGE \u003d \"Hey, the Event given is Invalid!\"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"            + \" Make sure that you follow this format:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"            + \" \u0027eventDescription /from yyyy-mm-dd HH:mm /to yyyy-mm-dd HH:mm\u0027\";","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"     * The Message to display when Invalid Event is given.","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    private static final String INVALID_EDIT_MESSAGE \u003d \"The parameters for the Edit command are Invalid. \"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"            + \"Edit only one field at a time!\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"            + \"Follow this format:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"            + \" \u0027edit taskIndex /fieldToEdit editData\u0027\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"            + \"Eg. \u0027edit 4 /desc newTaskTitle\u0027\";","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"     * The command parsed from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    private Command command;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"     * The arguments parsed from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"    private String arguments \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"     * The Constructor of the Parser.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"     * @param rawData The data to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    public Parser(String rawData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"            this.command \u003d parseCommand(rawData);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"     * Parses the input given to the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"     * @param rawData Input from the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"     * @return The given Command from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if there is no input.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"    public Command parseCommand(String rawData) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"        String[] commandArray \u003d rawData.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"        if (commandArray.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey, Type Something!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"        } else if (commandArray.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"            this.arguments \u003d commandArray[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"        return Command.getCommand(commandArray[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"     * Returns the command of the parsed input.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"     * @return The command of the parsed input.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"        return this.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"     * Returns the arguments of the parsed input.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"     * @return The arguments of the parsed input.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"    public String getArguments() {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"        return this.arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"     * Parses the ToDo Arguments from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"     * @return The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if description is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"    public String parseToDoArguments() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_DESC_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"richiehx"},"content":"        return arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"richiehx"},"content":"     * Parses the find arguments.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"richiehx"},"content":"     * @return The arguments of the find command.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if argument is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"richiehx"},"content":"    public String parseFindQuery() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"richiehx"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_DESC_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"richiehx"},"content":"        return arguments;","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"richiehx"},"content":"     * Parses the Deadline arguments from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"richiehx"},"content":"     * @return The String Array containing the description as the first element","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"richiehx"},"content":"     *     and time as the second element.","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if description is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"richiehx"},"content":"    public String[] parseDeadlineArguments() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"richiehx"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_DESC_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"richiehx"},"content":"        String[] arr \u003d this.arguments.split(\" /by \");","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"richiehx"},"content":"        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_DEADLINE_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"richiehx"},"content":"        return arr;","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"richiehx"},"content":"     * Parses the Event arguments from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"richiehx"},"content":"     * @return The String array containing the description as the first element,","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"richiehx"},"content":"     *     start time as the second element and end time as the third element.","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if description is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"richiehx"},"content":"    public String[] parseEventArguments() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"richiehx"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_DESC_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"richiehx"},"content":"        String[] arr \u003d this.arguments.split(\" /from \");","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"richiehx"},"content":"        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_EVENT_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"richiehx"},"content":"        String desc \u003d arr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"richiehx"},"content":"        String[] startEnd \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"richiehx"},"content":"        if (startEnd.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_EVENT_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"richiehx"},"content":"        String start \u003d startEnd[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"richiehx"},"content":"        String end \u003d startEnd[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"richiehx"},"content":"        return new String[]{desc, start, end};","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"richiehx"},"content":"     * Parses the Edit arguments from the input.","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"richiehx"},"content":"     * @return The String array containing the Index of the Task, the Edit Type and the Edit Data.","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If the arguments are invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"richiehx"},"content":"    public String[] parseEditArguments() throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"richiehx"},"content":"        String[] commandArray \u003d arguments.split(\"\\\\s+\", 3);","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"richiehx"},"content":"        if (commandArray.length !\u003d 3) {","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_EDIT_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"richiehx"},"content":"        String index \u003d commandArray[0];","lastModifiedDate":"2023-09-10"},{"lineNumber":183,"author":{"gitId":"richiehx"},"content":"        String editType \u003d commandArray[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":184,"author":{"gitId":"richiehx"},"content":"        String editData \u003d commandArray[2];","lastModifiedDate":"2023-09-10"},{"lineNumber":185,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":186,"author":{"gitId":"richiehx"},"content":"        return new String[]{index, editType, editData};","lastModifiedDate":"2023-09-10"},{"lineNumber":187,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":188,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":189,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"richiehx":189}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":" * The Storage to read and write from the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"     * A Temporary storage for reading the Tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    private ArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"     * The file path to read and write data from.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    private String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"     * The formatter to parse the time of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter storeTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"     * The formatter to format the time of the tasks to store.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"     * Constructor for the Storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"     * @param filePath The file path of the data file to write and read from.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"        assert filePath.length() !\u003d 0 : \"File Path should be specified!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"     * Saves the data to the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"     * @param data The data to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"    public void saveData(String data) {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"            fw.write(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"            fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"            System.out.println(\"Could not save data to storage!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"     * Loads the task data from the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"     * @return The Task List from the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if data file is corrupted or not found.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"                // Process file line input","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"                String newLine \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"                String[] taskComponents \u003d newLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"                String type \u003d taskComponents[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"                String isCompleted \u003d taskComponents[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"                String desc \u003d taskComponents[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"                    Task item \u003d new ToDo(taskComponents[2]);","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"                    if (isCompleted.equals(\"X\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"                        item.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"                    store.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"                    if (taskComponents.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"                        throw new DukeException(\"Invalid Deadline Format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"                    LocalDateTime buffer \u003d LocalDateTime.parse(taskComponents[3], storeTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"richiehx"},"content":"                    Task item \u003d new Deadline(desc, buffer.format(inputFormatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"richiehx"},"content":"                    if (isCompleted.equals(\"X\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"richiehx"},"content":"                        item.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"richiehx"},"content":"                    store.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"richiehx"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"richiehx"},"content":"                    if (taskComponents.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"richiehx"},"content":"                        throw new DukeException(\"Invalid Event Format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"richiehx"},"content":"                    String[] timeComponents \u003d taskComponents[3].split(\"-\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"richiehx"},"content":"                    if (taskComponents.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"richiehx"},"content":"                        throw new DukeException(\"Invalid Event Format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"richiehx"},"content":"                    LocalDateTime bufferStart \u003d LocalDateTime.parse(timeComponents[0], storeTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"richiehx"},"content":"                    LocalDateTime bufferEnd \u003d LocalDateTime.parse(timeComponents[1], storeTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"richiehx"},"content":"                    Task item \u003d new Event(desc, bufferStart.format(inputFormatter), bufferEnd.format(inputFormatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"richiehx"},"content":"                    if (isCompleted.equals(\"X\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"richiehx"},"content":"                        item.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"richiehx"},"content":"                    store.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"richiehx"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"richiehx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"File not Found!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"richiehx"},"content":"        return store;","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"richiehx":138}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":" * A task that needs to be done before a specific date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"     * The date and time of the deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"     * The input formatter to parse Date and Time input.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"     * The output formatter to format Date and Time output.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"     * @param date        The deadline of the Deadline task. Must follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If the deadline does not follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"            LocalDateTime d1 \u003d LocalDateTime.parse(date, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"            by \u003d d1.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Deadline time must be in this format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"     * Updates the due date of the Deadline Task.","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"     * @param newDate The new due date.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If the deadline does not follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"    public void updateDeadline(String newDate) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"            LocalDateTime d1 \u003d LocalDateTime.parse(newDate, inputFormatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"            by \u003d d1.format(outputFormatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Deadline time must be in this format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"     * Returns the Formatted String to be saved into Storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"     * @return Formatted String representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"        return \"D | \" + this.getStatusIcon() + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"     * Returns the String representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":82}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":" * A Task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"     * The start time of the Event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    protected String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"     * The end time of the Event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    protected String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"     * The input formatter to parse Date and Time input.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     * The output formatter to format Date and Time output.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"     * @param startTime   The start time of the Event task. Must follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"     * @param endTime     The end time of the Event task. Must follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If the times do not follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"    public Event(String description, String startTime, String endTime) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"            LocalDateTime parseStart \u003d LocalDateTime.parse(startTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"            LocalDateTime parseEnd \u003d LocalDateTime.parse(endTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"            start \u003d parseStart.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"            end \u003d parseEnd.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Event times must be in this format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"     * Updates the start time of the Event task.","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"     * @param newDate The new start time of the Event task.","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If the start time does not follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"    public void updateStart(String newDate) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"            LocalDateTime d1 \u003d LocalDateTime.parse(newDate, inputFormatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"            start \u003d d1.format(outputFormatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Event Start time must be in this format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"     * Updates the end time of the Event task.","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"     * @param newDate The new end time of the Event task.","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If the end time does not follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"    public void updateEnd(String newDate) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"            LocalDateTime d1 \u003d LocalDateTime.parse(newDate, inputFormatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"            end \u003d d1.format(outputFormatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Event End time must be in this format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"     * Returns the Formatted String to be saved into Storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"     * @return Formatted String representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"        return \"E | \" + this.getStatusIcon() + \" | \" + this.description + \" | \" + this.start + \"-\" + this.end;","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"     * Returns the String representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":105}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":" * A Class to Represent a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"     * The description of the Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"     * The boolean to represent if the Task is Done.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"     * Constructor for a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"     * Returns the status of the checkbox for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     * @return String [ ] if not done, [X] if done.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"     * Marks the Task as Done.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"     * Marks the Task as Not Done.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"     * @return The description of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"     * Updates the Description of the Task.","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"     * @param newDesc The new description of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"    public void updateDesc(String newDesc) {","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"        System.out.println(newDesc);","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"        this.description \u003d newDesc;","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"     * Returns the Formatted String of the Task to be saved into Storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"     * @return Formatted String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"        return this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"richiehx":88}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":" * Represents a Task List to store User\u0027s Tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"     * The Message to display when Invalid Index is given.","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"    private static final String INVALID_INDEX_MESSAGE \u003d \"Invalid Task Index provided!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"     * The ArrayList to represent the Task List.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"     * The Storage for the Chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     * The Constructor for the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"     * @param taskList The ArrayList to initialise as the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"     * @param storage  The Storage of the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"        assert taskList !\u003d null : \"TaskList should be initialised!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"        assert storage !\u003d null : \"Storage should be initialised!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"     * Formats the Task List to output.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"     * @return The formatted task list as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"    public String formatList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"        String str \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"        int len \u003d taskList.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"            str \u003d str + (i + 1) + \". \" + taskList.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"            if (i !\u003d (len - 1)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"                str +\u003d \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        return str;","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"     * Handles the Marking of the Tasks in the Task List.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"     * @param commandNum The Index of the Task as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"     * @param status     The status of the marking as either \u0027mark\u0027 or \u0027unmark\u0027.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"     * @return The Success output as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If Task Index provided is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"    public String handleMarking(String commandNum, String status) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"            int index \u003d Integer.parseInt(commandNum) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"            String buffer \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"            if (index \u003e taskList.size() - 1 || index \u003c 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"                throw new DukeException(INVALID_INDEX_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"            Task selectedTask \u003d taskList.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"            if (status.equals(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"                selectedTask.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"                buffer \u003d \"Nice! I\u0027ve marked the task as done:\\n\" + selectedTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"            } else if (status.equals(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"                selectedTask.unmarkTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"                buffer \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + selectedTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"            this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"            return buffer;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_INDEX_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"     * Formats the return Message for deleting and adding Tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"     * @param status The action type of the Message.","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"     * @param task The task to be added or removed.","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"     * @param size The size of the taskList.","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"     * @return The formatted String Message.","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"    private String formatMessage(String status, Task task, Integer size) {","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"        String adjTaskWord \u003d \"tasks\";","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"        if (size \u003d\u003d 1) {","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"            adjTaskWord \u003d \"task\";","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"        return \"Noted. I\u0027ve \" + status + \" this task:\\n\" + task + \"\\nNow you have \"","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"richiehx"},"content":"                + size + \" \" + adjTaskWord + \" in the list.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"richiehx"},"content":"     * Handles the Deleting of a Task from the Task List.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"richiehx"},"content":"     * @param commandNum The Index of the Task as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"richiehx"},"content":"     * @return The Success output as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If Task Index provided is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"richiehx"},"content":"    public String handleDelete(String commandNum) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"richiehx"},"content":"            int index \u003d Integer.parseInt(commandNum) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"richiehx"},"content":"            if (index \u003e taskList.size() - 1 || index \u003c 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"richiehx"},"content":"                throw new DukeException(INVALID_INDEX_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"richiehx"},"content":"            Task selectedTask \u003d taskList.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"richiehx"},"content":"            this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"richiehx"},"content":"            return formatMessage(\"removed\", selectedTask, taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"richiehx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_INDEX_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"richiehx"},"content":"     * Handles the Adding of a ToDo Task to the Task List.","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"richiehx"},"content":"     * @param task The Description of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"richiehx"},"content":"     * @return The Success output as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"richiehx"},"content":"    public String handleToDo(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"richiehx"},"content":"        ToDo item \u003d new ToDo(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"richiehx"},"content":"        taskList.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"richiehx"},"content":"        this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"richiehx"},"content":"        return formatMessage(\"added\", item, taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"richiehx"},"content":"     * Handles the Adding of a Deadline Task to the Task List.","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"richiehx"},"content":"     * @param desc The Description of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"richiehx"},"content":"     * @param by   The deadline of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"richiehx"},"content":"     * @return The Success output as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if there is an Error in creating the Deadline Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"richiehx"},"content":"    public String handleDeadline(String desc, String by) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"richiehx"},"content":"        Deadline item \u003d new Deadline(desc, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"richiehx"},"content":"        taskList.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"richiehx"},"content":"        this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"richiehx"},"content":"        return formatMessage(\"added\", item, taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"richiehx"},"content":"     * Handles the Adding of an Event Task to the Task List.","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"richiehx"},"content":"     * @param desc  The Description of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"richiehx"},"content":"     * @param start The start time of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"richiehx"},"content":"     * @param end   The end time of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"richiehx"},"content":"     * @return The Success output as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException if there is an Error in creating the Event Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"richiehx"},"content":"    public String handleEvent(String desc, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"richiehx"},"content":"        Event item \u003d new Event(desc, start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"richiehx"},"content":"        taskList.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"richiehx"},"content":"        this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"richiehx"},"content":"        return formatMessage(\"added\", item, taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"richiehx"},"content":"     * Finds the tasks containing the query and returns a new Task List.","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"richiehx"},"content":"     * @param query The query to find the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"richiehx"},"content":"     * @return The new Task List containing the tasks that contain the query.","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"richiehx"},"content":"    public TaskList findTasks(String query) {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"richiehx"},"content":"        ArrayList\u003cTask\u003e buffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"richiehx"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"richiehx"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"richiehx"},"content":"                buffer.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"richiehx"},"content":"        return new TaskList(buffer, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":193,"author":{"gitId":"richiehx"},"content":"     * Edits the selected task.","lastModifiedDate":"2023-09-10"},{"lineNumber":194,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":195,"author":{"gitId":"richiehx"},"content":"     * @param strIndex The Index of the Task in the Task List.","lastModifiedDate":"2023-09-10"},{"lineNumber":196,"author":{"gitId":"richiehx"},"content":"     * @param editType The type of Edit to be made. (\"/desc\", \"/by\", \"/from\", \"/to\")","lastModifiedDate":"2023-09-10"},{"lineNumber":197,"author":{"gitId":"richiehx"},"content":"     * @param editData The new data.","lastModifiedDate":"2023-09-10"},{"lineNumber":198,"author":{"gitId":"richiehx"},"content":"     * @return The Success output as a String.","lastModifiedDate":"2023-09-10"},{"lineNumber":199,"author":{"gitId":"richiehx"},"content":"     * @throws DukeException If Task Index provided is invalid or command parameters are invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":200,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":201,"author":{"gitId":"richiehx"},"content":"    public String editTask(String strIndex, String editType, String editData) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":202,"author":{"gitId":"richiehx"},"content":"        Task selectedTask;","lastModifiedDate":"2023-09-10"},{"lineNumber":203,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":204,"author":{"gitId":"richiehx"},"content":"            int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":205,"author":{"gitId":"richiehx"},"content":"            if (index \u003e taskList.size() - 1 || index \u003c 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":206,"author":{"gitId":"richiehx"},"content":"                throw new DukeException(INVALID_INDEX_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":207,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":208,"author":{"gitId":"richiehx"},"content":"            selectedTask \u003d taskList.get(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":209,"author":{"gitId":"richiehx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":210,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(INVALID_INDEX_MESSAGE);","lastModifiedDate":"2023-09-10"},{"lineNumber":211,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":212,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":213,"author":{"gitId":"richiehx"},"content":"        if (selectedTask \u003d\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":214,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"No Task Selected!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":215,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":216,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":217,"author":{"gitId":"richiehx"},"content":"        if (editType.equals(\"/desc\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":218,"author":{"gitId":"richiehx"},"content":"            selectedTask.updateDesc(editData);","lastModifiedDate":"2023-09-10"},{"lineNumber":219,"author":{"gitId":"richiehx"},"content":"        } else if (editType.equals(\"/by\") \u0026\u0026 selectedTask instanceof Deadline) {","lastModifiedDate":"2023-09-10"},{"lineNumber":220,"author":{"gitId":"richiehx"},"content":"            Deadline buffer \u003d (Deadline) selectedTask;","lastModifiedDate":"2023-09-10"},{"lineNumber":221,"author":{"gitId":"richiehx"},"content":"            buffer.updateDeadline(editData);","lastModifiedDate":"2023-09-10"},{"lineNumber":222,"author":{"gitId":"richiehx"},"content":"        } else if (editType.equals(\"/from\") \u0026\u0026 selectedTask instanceof Event) {","lastModifiedDate":"2023-09-10"},{"lineNumber":223,"author":{"gitId":"richiehx"},"content":"            Event buffer \u003d (Event) selectedTask;","lastModifiedDate":"2023-09-10"},{"lineNumber":224,"author":{"gitId":"richiehx"},"content":"            buffer.updateStart(editData);","lastModifiedDate":"2023-09-10"},{"lineNumber":225,"author":{"gitId":"richiehx"},"content":"        } else if (editType.equals(\"/to\") \u0026\u0026 selectedTask instanceof Event) {","lastModifiedDate":"2023-09-10"},{"lineNumber":226,"author":{"gitId":"richiehx"},"content":"            Event buffer \u003d (Event) selectedTask;","lastModifiedDate":"2023-09-10"},{"lineNumber":227,"author":{"gitId":"richiehx"},"content":"            buffer.updateEnd(editData);","lastModifiedDate":"2023-09-10"},{"lineNumber":228,"author":{"gitId":"richiehx"},"content":"        } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":229,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Invalid Edit Command!\\nMake sure that the Task is of the correct type!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":230,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":231,"author":{"gitId":"richiehx"},"content":"        this.saveList();","lastModifiedDate":"2023-09-17"},{"lineNumber":232,"author":{"gitId":"richiehx"},"content":"        return formatMessage(\"updated\", selectedTask, taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":233,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":234,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":235,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"richiehx"},"content":"     * Formats the Task List to be saved to Storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"richiehx"},"content":"     * @return The formatted List as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"richiehx"},"content":"    public String exportList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":241,"author":{"gitId":"richiehx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":242,"author":{"gitId":"richiehx"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":243,"author":{"gitId":"richiehx"},"content":"            sb.append(task.exportData()).append(\"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":244,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":245,"author":{"gitId":"richiehx"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":246,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":247,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":248,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"richiehx"},"content":"     * Saves the Task List to the Storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"richiehx"},"content":"    public void saveList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":252,"author":{"gitId":"richiehx"},"content":"        String data \u003d this.exportList();","lastModifiedDate":"2023-08-28"},{"lineNumber":253,"author":{"gitId":"richiehx"},"content":"        storage.saveData(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":254,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":255,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":256,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":257,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"richiehx":257}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":" * A Task to be done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"     * The Constructor for a ToDo Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"     * Returns the Formatted String to be saved into Storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"     * @return Formatted String representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"        return \"T | \" + this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"     * Returns the String representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"     * @return String representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":35}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"richiehx":61}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"        duke.run();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"            stage.setTitle(\"Nano\");","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"richiehx":33}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     * Initializes the Main Window for the GUI.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"        String input \u003d \"Hello! I\u0027m Nano. What can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"                DialogBox.getDukeDialog(input, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"richiehx":60}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":" * Handles User Interface output","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"     * The Indentation Level to format text.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"     * Scanner to read user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"     * Returns the input from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"     * @return The input from the user as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"     * Formats and Returns the given input.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"     * @param output The raw output to be formatted.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"     * @return The formatted output as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"    private static String formatOutput(String output) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"        String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"        return INDENTATION + horizontalLine + \"\\n \"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"                + INDENTATION + output + \u0027\\n\u0027 + INDENTATION + horizontalLine + \u0027\\n\u0027;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"     * Prints the Greeting of the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(\"Hello! I\u0027m Nano\\n\" + INDENTATION + \" What can I do for you?\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"     * Prints the Goodbye of the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"    public void printBye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"     * Prints the Invalid Command Output of the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"    public void printInvalidCommandError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(\"I don\u0027t understand what you\u0027re saying.\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"     * Prints the formatted output of the Chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"     * @param rawOutput The raw output to be formatted and printed.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"    public void printOutput(String rawOutput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(rawOutput));","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"richiehx":72}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" \u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"        \u003cclip\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"            \u003cCircle centerX\u003d\"49.5\" centerY\u003d\"49.5\" radius\u003d\"49.5\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"        \u003c/clip\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"richiehx":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"richiehx":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    public void parseToDoSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"todo boo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseToDoArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"boo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    public void parseDeadlineSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"deadline boo /by 2001-12-10 11:11\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseDeadlineArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"        String expectedName \u003d \"boo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"        String expectedBy \u003d \"2001-12-10 11:11\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedName, actual[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedBy, actual[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"    public void testParseDeadlineError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"deadline boo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"            parseLine.parseDeadlineArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Hey, the Deadline given is Invalid! \"","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"                + \"Make sure that you follow this format:\\n\" + \" \u0027taskDescription /by yyyy-mm-dd HH:mm\u0027\";","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"    public void parseEventSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"event boo /from 2001-12-10 11:11 /to 2001-12-10 11:12\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseEventArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"        String expectedName \u003d \"boo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"        String expectedFrom \u003d \"2001-12-10 11:11\";","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"        String expectedTo \u003d \"2001-12-10 11:12\";","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedName, actual[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedFrom, actual[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedTo, actual[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"    public void testParseEventError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"event boo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"            parseLine.parseEventArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Hey, the Event given is Invalid!\"","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"                + \" Make sure that you follow this format:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"                + \" \u0027eventDescription /from yyyy-mm-dd HH:mm /to yyyy-mm-dd HH:mm\u0027\";","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"    public void parseEditToDoSuccess() {","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"edit 5 /desc boo\");","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseEditArguments();","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"        String expectedIndex \u003d \"5\";","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"        String expectedDesc \u003d \"boo\";","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedIndex, actual[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedDesc, actual[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"    public void parseEditDeadlineDescSuccess() {","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"edit 5 /desc boo\");","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseEditArguments();","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"richiehx"},"content":"        String expectedIndex \u003d \"5\";","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"richiehx"},"content":"        String expectedDesc \u003d \"boo\";","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedIndex, actual[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedDesc, actual[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"richiehx"},"content":"    public void parseEditDeadlineBySuccess() {","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"edit 5 /by 2001-12-10 11:11\");","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseEditArguments();","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"richiehx"},"content":"        String expectedIndex \u003d \"5\";","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"richiehx"},"content":"        String expectedBy \u003d \"2001-12-10 11:11\";","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedIndex, actual[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedBy, actual[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"richiehx"},"content":"    public void parseEditEventFromSuccess() {","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"edit 5 /from 2001-12-10 11:11\");","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseEditArguments();","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"richiehx"},"content":"        String expectedIndex \u003d \"5\";","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"richiehx"},"content":"        String expectedFrom \u003d \"2001-12-10 11:11\";","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedIndex, actual[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedFrom, actual[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"richiehx"},"content":"    public void parseEditEventToSuccess() {","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"edit 5 /to 2001-12-10 11:11\");","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseEditArguments();","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"richiehx"},"content":"        String expectedIndex \u003d \"5\";","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"richiehx"},"content":"        String expectedTo \u003d \"2001-12-10 11:11\";","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedIndex, actual[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedTo, actual[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"richiehx":165}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    public void testAddToDoSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"        String actual \u003d testList.handleToDo(\"test desc\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Noted. I\u0027ve added this task:\\n\" + \"[T][ ] test desc\" + \"\\nNow you have \"","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"                + 1 + \" task in the list.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"    public void testAddDeadlineSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"            actual \u003d testList.handleDeadline(\"boo\", \"2001-10-22 11:12\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"            fail(\"Did not add Deadline successfully\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Noted. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"                + \"[D][ ] boo (by: 22 October 2001 11:12)\" + \"\\nNow you have \"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"                + 1 + \" task in the list.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"    public void testAddDeadlineError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"            testList.handleDeadline(\"boo\", \"2001-10-22\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Deadline time must be in this format: yyyy-mm-dd HH:mm\";","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"    public void testAddEventSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"            actual \u003d testList.handleEvent(\"boo\", \"2001-10-22 11:12\", \"2001-11-22 11:12\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"            fail(\"Did not add Event successfully\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Noted. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"                + \"[E][ ] boo (from: 22 October 2001 11:12 to: 22 November 2001 11:12)\"","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"                + \"\\nNow you have \" + 1 + \" task in the list.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"    public void testAddEventError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"            testList.handleEvent(\"boo\", \"2001-10-22 11:12\", \"2001-11-22\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Event times must be in this format: yyyy-mm-dd HH:mm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"richiehx":81}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"T |   | boo1","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"D |   | return book | 01 December 2021 11:11","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"E |   | project meeting | 01 December 2021 11:11-01 December 2021 11:12","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"richiehx":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"todo boo1","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"todo boo2","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"delete 2","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"deadline return book /by 2021-12-01 11:11","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"event project meeting /from 2021-12-01 11:11 /to 2021-12-01 11:12","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"delete 2","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"richiehx":2,"-":19}}]
