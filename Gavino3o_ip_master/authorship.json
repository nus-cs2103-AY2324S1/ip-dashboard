[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    private static final String divider \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"    private static final String logo \u003d","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"            \".-. .-\u0027)              .-. .-\u0027)   \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"            \"\\\\  ( OO )             \\\\  ( OO )  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"            \" ;-----.\\\\  .-\u0027),-----. ;-----.\\\\  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"            \" | .-.  | ( OO\u0027  .-.  \u0027| .-.  |  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"            \" | \u0027-\u0027 /_)/   |  | |  || \u0027-\u0027 /_) \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"            \" | .-. `. \\\\_) |  |\\\\|  || .-. `.  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"            \" | |  \\\\  |  \\\\ |  | |  || |  \\\\  | \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"            \" | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027| \u0027--\u0027  / \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"            \" `------\u0027      `-----\u0027 `------\u0027  \";","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    private static int pointer \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    private static boolean isActive \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"        Duke.printWelcomeMessage();","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"            processResponse();","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(e.getMessage() + divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        String welcomeMessage \u003d \"Hi, I\u0027m Bob. How can I help you?\";","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(divider + logo + \"\\n\" + welcomeMessage + divider);","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    private static void printGoodbyeMessage() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        String goodbyeMessage \u003d \"Goodbye! Bob signing out!\";","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(goodbyeMessage + divider);","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"    private static void printListMessage() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        if (pointer \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(String.format(\"\\nNow you have %d task in your list!\", pointer) + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(String.format(\"\\nNow you have %d tasks in your list!\", pointer) + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    private static Commands parseCommand(String keyword) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"            return Commands.valueOf(keyword);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"            return Commands.INVALID;","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"    private static void processResponse() throws DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        String displayMessage \u003d \"I gotchu. New task added to the list:\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        String input \u003d Duke.scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        String command \u003d inputSplit[0].toUpperCase();","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        String argument \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        if (inputSplit.length \u003e 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"            argument \u003d inputSplit[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"            switch (parseCommand(command)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"                case BYE:","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"                    Duke.printGoodbyeMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"                    Duke.isActive \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"                case LIST:","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"                    if (pointer \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You don\u0027t have any tasks. Good job!\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"                    for (int i \u003d 0; i \u003c pointer; i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"                case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Tell me which task to mark as done! Give me an integer number!\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"                        int markIndex \u003d Integer.parseInt(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"                        tasks.get(markIndex - 1).markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Great Job! I\u0027ve helped mark this task as done:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"                                tasks.get(markIndex - 1).toString() + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The mark command must be followed by an integer number.\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You are trying to mark a non-existent task, ensure you mark a task that you have created :O\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Tell me which task to mark as done! Give me an integer number!\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"                        int unmarkIndex \u003d Integer.parseInt(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"                        tasks.get(unmarkIndex - 1).unmarkTask();","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"No worries! I will help you unmark this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"                                tasks.get(unmarkIndex - 1).toString() + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The mark command must be followed by an integer number.\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You are trying to unmark a non-existent task, ensure you mark a task that you have created :O\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"                case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The description of your todo should not be empty! Try:\\ntodo [description]\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"                    Duke.tasks.add(new Todo(argument));","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(displayMessage + Duke.tasks.get(pointer).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"                    Duke.pointer++;","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"                    printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The description of your deadline should not be empty! Try:\\ndeadline [description] /by [duedate]\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"                    String[] bySplit \u003d argument.split(\" /by \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"                    if (bySplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Incorrect deadline command format! It should be:\\ndeadline [description] /by [duedate]\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"                    Duke.tasks.add(new Deadline(bySplit[0], bySplit[1]));","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(displayMessage + Duke.tasks.get(pointer).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"                    Duke.pointer++;","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"                    printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"                case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The description of your event should not be empty! Try:\\nevent [description] /from [start] /to [end]\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"                    String[] descSplit \u003d argument.split(\" /from \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"                    if (descSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Incorrect event command format! It should be:\\nevent [description] /from [start] /to [end]\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"                    String[] periodSplit \u003d descSplit[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"                    if (periodSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Incorrect event command format! It should be:\\nevent [description] /from [start] /to [end]\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"                    Duke.tasks.add(new Event(descSplit[0], periodSplit[0], periodSplit[1]));","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(displayMessage + Duke.tasks.get(pointer).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"                    Duke.pointer++;","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"                    printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"                case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Tell me which task to delete! Give me an integer number!\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Gavino3o"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"Gavino3o"},"content":"                        int delIndex \u003d Integer.parseInt(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"Gavino3o"},"content":"                        Task deletedTask \u003d tasks.remove(delIndex - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Foosh! Let it be gone! I\u0027ve helped delete the task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"Gavino3o"},"content":"                                deletedTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"                        Duke.pointer--;","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"                        printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The delete command must be followed by an integer number.\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You are trying to delete a non-existent task, ensure you delete a task that you have created :3\" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"Gavino3o"},"content":"                case INVALID:","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(\"I\u0027m sorry! I don\u0027t understand the command :( \" + divider);","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"Gavino3o"},"content":"            if (Duke.isActive) {","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"Gavino3o"},"content":"                processResponse();","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"Gavino3o"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"Gavino3o"},"content":"            throw new DukeException(\"An unknown error has occurred. I\u0027ll shut myself off for now.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"Gavino3o"},"content":"    public enum Commands {","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"Gavino3o"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, INVALID","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gavino3o":189,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Gavino3o":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"    protected String startDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"    protected String endDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"    Event(String description, String startDateTime, String endDateTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s, to: %s)\", startDateTime, endDateTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"    Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":12}}]
