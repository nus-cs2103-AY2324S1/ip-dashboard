[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"# Bob project template","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"3. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gavino3o":2,"-":22}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"import exceptions.BobCorruptFileException;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"import exceptions.BobException;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import task.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"public class Bob {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    private static final String divider \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    private static final String logo \u003d","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"            \".-. .-\u0027)              .-. .-\u0027)   \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"            \"\\\\  ( OO )             \\\\  ( OO )  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"            \" ;-----.\\\\  .-\u0027),-----. ;-----.\\\\  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"            \" | .-.  | ( OO\u0027  .-.  \u0027| .-.  |  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"            \" | \u0027-\u0027 /_)/   |  | |  || \u0027-\u0027 /_) \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"            \" | .-. `. \\\\_) |  |\\\\|  || .-. `.  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"            \" | |  \\\\  |  \\\\ |  | |  || |  \\\\  | \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"            \" | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027| \u0027--\u0027  / \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"            \" `------\u0027      `-----\u0027 `------\u0027  \";","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    private static boolean isActive \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    private static String taskDirectoryRelativePath \u003d \"data/\";","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    private static String taskFileName \u003d \"Bob.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    public enum Commands {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, INVALID","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        Bob.printWelcomeMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"            Bob.tasks \u003d loadTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"            processResponse();","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(e.getMessage() + divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        String welcomeMessage \u003d \"Hi, I\u0027m Bob. How can I help you?\";","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(divider + logo + \"\\n\" + welcomeMessage + divider);","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    private static void printGoodbyeMessage() {","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"        String goodbyeMessage \u003d \"Goodbye! Bob signing out!\";","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    private static void printListMessage() {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"            System.out.printf(\"\\nNow you have %d task in your list!%n\", tasks.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"            System.out.printf(\"\\nNow you have %d tasks in your list!%n\", tasks.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"    private static Commands parseCommand(String keyword) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"            return Commands.valueOf(keyword);","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"            return Commands.INVALID;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"    // DateTime edit here","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"    private static Task parseStoredTask(String inputString) throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"        String[] split \u003d inputString.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"        String commandType \u003d split[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"                case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"                    return new Todo(split[2], Integer.parseInt(split[1]) \u003d\u003d 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"                case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"                    return new Deadline(split[2], split[3], Integer.parseInt(split[1]) \u003d\u003d 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"                case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"                    return new Event(split[2], split[3], split[4], Integer.parseInt(split[1]) \u003d\u003d 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"            throw new BobCorruptFileException(\"Your save file might be corrupted :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"    private static ArrayList\u003cTask\u003e loadTasks() throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"        File dataDirectory \u003d new File(Bob.taskDirectoryRelativePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"            File taskFile \u003d new File(Bob.taskDirectoryRelativePath + Bob.taskFileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"            Scanner fileScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"                Task task \u003d parseStoredTask(fileScanner.nextLine());","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"                loadedTasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"            fileScanner.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"            return loadedTasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"    private static void saveTasks() throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        File dataDirectory \u003d new File(Bob.taskDirectoryRelativePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"            FileWriter fileWriter \u003d new FileWriter(Bob.taskDirectoryRelativePath + Bob.taskFileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"                fileWriter.write(task.convertToFileFormat() + System.lineSeparator());","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"            throw new BobException(\"Something went wrong when saving your tasks :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"    private static void processResponse() throws BobException {","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"        String displayMessage \u003d \"I gotchu. New task added to the list:\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"        String input \u003d Bob.scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"        String command \u003d inputSplit[0].toUpperCase();","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"        String argument \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"        if (inputSplit.length \u003e 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"            argument \u003d inputSplit[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"            switch (parseCommand(command)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"                case BYE:","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"                    Bob.saveTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"                    Bob.printGoodbyeMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"                    scanner.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"                    Bob.isActive \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"                case LIST:","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You don\u0027t have any tasks. Good job!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"Gavino3o"},"content":"                case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Tell me which task to mark as done! Give me an integer number!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"                        int markIndex \u003d Integer.parseInt(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"                        tasks.get(markIndex - 1).markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Great Job! I\u0027ve helped mark this task as done:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"Gavino3o"},"content":"                                tasks.get(markIndex - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The mark command must be followed by an integer number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You are trying to mark a non-existent task, ensure you mark a task that you have created :O\");","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Tell me which task to mark as done! Give me an integer number!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"Gavino3o"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"                        int unmarkIndex \u003d Integer.parseInt(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"Gavino3o"},"content":"                        tasks.get(unmarkIndex - 1).unmarkTask();","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"No worries! I will help you unmark this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"Gavino3o"},"content":"                                tasks.get(unmarkIndex - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The mark command must be followed by an integer number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You are trying to unmark a non-existent task, ensure you mark a task that you have created :O\");","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"                case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The description of your todo should not be empty! Try:\\ntodo [description]\");","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"Gavino3o"},"content":"                    Bob.tasks.add(new Todo(argument));","lastModifiedDate":"2023-08-27"},{"lineNumber":191,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(displayMessage + Bob.tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":192,"author":{"gitId":"Gavino3o"},"content":"                    printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"Gavino3o"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The description of your deadline should not be empty! Try:\\ndeadline [description] /by [duedate]\");","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"Gavino3o"},"content":"                    String[] bySplit \u003d argument.split(\" /by \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"Gavino3o"},"content":"                    // DateTime edit here","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"Gavino3o"},"content":"                    if (bySplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Incorrect deadline command format! It should be:\\ndeadline [description] /by [duedate]\");","lastModifiedDate":"2023-08-28"},{"lineNumber":204,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"Gavino3o"},"content":"                    Bob.tasks.add(new Deadline(bySplit[0], bySplit[1]));","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(displayMessage + Bob.tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":208,"author":{"gitId":"Gavino3o"},"content":"                    printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"Gavino3o"},"content":"                case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The description of your event should not be empty! Try:\\nevent [description] /from [start] /to [end]\");","lastModifiedDate":"2023-08-28"},{"lineNumber":213,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":216,"author":{"gitId":"Gavino3o"},"content":"                    // DateTime edit here","lastModifiedDate":"2023-08-28"},{"lineNumber":217,"author":{"gitId":"Gavino3o"},"content":"                    String[] descSplit \u003d argument.split(\" /from \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"Gavino3o"},"content":"                    if (descSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Incorrect event command format! It should be:\\nevent [description] /from [start] /to [end]\");","lastModifiedDate":"2023-08-28"},{"lineNumber":220,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"Gavino3o"},"content":"                    String[] periodSplit \u003d descSplit[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"Gavino3o"},"content":"                    if (periodSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Incorrect event command format! It should be:\\nevent [description] /from [start] /to [end]\");","lastModifiedDate":"2023-08-28"},{"lineNumber":225,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"Gavino3o"},"content":"                    Bob.tasks.add(new Event(descSplit[0], periodSplit[0], periodSplit[1]));","lastModifiedDate":"2023-08-27"},{"lineNumber":228,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(displayMessage + Bob.tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":229,"author":{"gitId":"Gavino3o"},"content":"                    printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":231,"author":{"gitId":"Gavino3o"},"content":"                case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":232,"author":{"gitId":"Gavino3o"},"content":"                    if (argument.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":233,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Tell me which task to delete! Give me an integer number!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":234,"author":{"gitId":"Gavino3o"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":235,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":236,"author":{"gitId":"Gavino3o"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":237,"author":{"gitId":"Gavino3o"},"content":"                        int delIndex \u003d Integer.parseInt(argument);","lastModifiedDate":"2023-08-22"},{"lineNumber":238,"author":{"gitId":"Gavino3o"},"content":"                        Task deletedTask \u003d tasks.remove(delIndex - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":239,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"Foosh! Let it be gone! I\u0027ve helped delete the task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":240,"author":{"gitId":"Gavino3o"},"content":"                                deletedTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":241,"author":{"gitId":"Gavino3o"},"content":"                        printListMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":242,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":243,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"The delete command must be followed by an integer number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":244,"author":{"gitId":"Gavino3o"},"content":"                    } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":245,"author":{"gitId":"Gavino3o"},"content":"                        System.out.println(\"You are trying to delete a non-existent task, ensure you delete a task that you have created :3\");","lastModifiedDate":"2023-08-28"},{"lineNumber":246,"author":{"gitId":"Gavino3o"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":247,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":248,"author":{"gitId":"Gavino3o"},"content":"                case INVALID:","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"Gavino3o"},"content":"                    System.out.println(\"I\u0027m sorry! I don\u0027t understand the command :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":250,"author":{"gitId":"Gavino3o"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":251,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":252,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":253,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(divider);","lastModifiedDate":"2023-08-28"},{"lineNumber":254,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":255,"author":{"gitId":"Gavino3o"},"content":"            if (Bob.isActive) {","lastModifiedDate":"2023-08-27"},{"lineNumber":256,"author":{"gitId":"Gavino3o"},"content":"                processResponse();","lastModifiedDate":"2023-08-22"},{"lineNumber":257,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":258,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"Gavino3o"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":260,"author":{"gitId":"Gavino3o"},"content":"            throw new BobException(\"An unknown error has occurred. I\u0027ll shut myself off for now.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":261,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":263,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gavino3o":262,"-":2}},{"path":"src/main/java/exceptions/BobCorruptFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"public class BobCorruptFileException extends BobException{","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"    public BobCorruptFileException(String errorMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":7}},{"path":"src/main/java/exceptions/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"public class BobException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"    public BobException(String errorMessage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Gavino3o":7}},{"path":"src/main/java/task/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"public class DateFormatter {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"    public static final String DEFAULT_FORMAT \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    public static String format(String inputString, String format) {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"            date \u003d LocalDate.parse(inputString);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"            return date.format(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"            return inputString;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"            return date.format(DateTimeFormatter.ofPattern(DateFormatter.DEFAULT_FORMAT));","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":21}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        this.by \u003d DateFormatter.format(by, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"        this.by \u003d DateFormatter.format(by, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"D|%s|%s\", super.convertToFileFormat(), this.by);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":26}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.Date;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"    protected String startDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"    protected String endDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    public Event(String description, String startDateTime, String endDateTime) {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"        this.startDateTime \u003d DateFormatter.format(startDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"        this.endDateTime \u003d DateFormatter.format(endDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    public Event(String description, String startDateTime, String endDateTime, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"        this.startDateTime \u003d DateFormatter.format(startDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"        this.endDateTime \u003d DateFormatter.format(endDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"[E]%s (from: %s, to: %s)\", super.toString(), this.startDateTime, this.endDateTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"E|%s|%s|%s\", super.convertToFileFormat(), this.startDateTime, this.endDateTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":29}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"%s|%s\", this.isDone? 1 : 0, this.description);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":39}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"T|%s\", super.convertToFileFormat());","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gavino3o":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gavino3o":1,"-":37}}]
