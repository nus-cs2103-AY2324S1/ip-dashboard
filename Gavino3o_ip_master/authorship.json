[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"3. After that, locate the `src/main/java/bob.java` file, right-click it, and choose `Run bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gavino3o":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    mainClass.set(\"bob.Launcher\")","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"javafx {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Gavino3o":15,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"Bob is a Chatbot that can help free your mind of having to remember things you need to do! It helps you record down your todos, deadlines or events using a CLI within a custom GUI.","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"## Features","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"### Notes about the command format:","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"- Words within curly brackers `{}` are the parameters to be supplied by the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"  e.g. in `todo {description}`, `{description}` is a parameter which can be used as add `todo do laundry`.","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"- Extraneous parameters for commands that do not take in parameters (such as list and bye) will be ignored.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"- Items with …​ after them can be used multiple times.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"e.g. `mark {index}…`​ can be used as `mark 2 4 5`.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"### Feature - Adding a todo","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"Format: `todo {description}`","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"- `todo Visit Italy`","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"- `todo Wash car`","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"### Feature - Adding a deadline","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"Adds a task with a deadline to the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"Format: `deadline {description} /by {due_date}`","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"Tip 💡: `{due_date}` can accept dates in the pattern - `yyyy-mm-dd`","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"Examples: ","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"- `deadline Essay submission /by 2023-10-10`","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"- `deadline Submit bank statemnet /by Monday`","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"### Feature - Add an event","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"Adds an event with a start date and an end date to the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"Format: `event {description} /from {start_date} /to {end_date}`","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"Tip 💡: Both start and end dates can accept dates in the pattern - `yyyy-mm-dd`","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"- `event Dining with Master /from Sunday 2pm /to 4pm`","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"- `event Flower festival /from 2023-10-10 /to 2023-10-15`","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"### Feature - List","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"Lists out all current todos, deadlines and events.","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"Format: `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"### Feature - Marking tasks as done","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"Marks one or multiple task as completed in the task list. If a task is already completed, the completion status of the task will remain unchanged.","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"Format: `mark {index}...`","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"- Marks the task at the specified `{index}` as completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"- The index refers to the index number shown in the displayed task list after `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"- The index ***must be a positive integer*** 1, 2, 3, ...","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"- `list` followed by `mark 2 3` marks the 2nd and 3rd task in the task list as completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"### Feature - Unmarking completed tasks ","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"Unmarks one or multiple completed task as incomplete in the task list. If a task is incompleted, the completion status of the task will remain unchanged.","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"Format: `unmark {index}...`","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"- Unmarks the task at the specified `{index}` as incompleted.","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"- The index refers to the index number shown in the displayed task list after `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"- The index ***must be a positive integer*** 1, 2, 3, ...","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"- `list` followed by `unmark 1` marks the 1st task in the task list as incomplete.","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"### Feature - Deleting a task","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"Deletes one or multiple tasks from the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"Format: `delete {index}...`","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"- Deletes the task at the specified `{index}`","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"- The index refers to the index number shown in the task list after `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"- The index ***must be a positive integer*** 1, 2, 3, …​","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"- `list` followed by `delete 2 3` deletes the 2nd and 3rd task in the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"### Feature - Finding a Task","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"Finds a task which has a description containing the give keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"Format: `find {keyword}`","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"- The search is *case sensitive*. e.g `apple` will not match with `Apple`.","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"- Only the descriptions will be searched.","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"- Partial words will be matched e.g. `ea` will match wit `eat`","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"- `find Flower` returns task with descriptions `Flower Festival` and `Flower Dance`","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"- `find Geo` returns task with description `Eat lunch with George`;","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"### Feature - Exit the program","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"Exits the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"Format: `bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"### Feature - Saving and Loading Data","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"The data of your task list is saved in the hard disk automatically after any command that changes the data is executed.","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"There is no need to save manually.","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"When starting the program in a future session, the previously saved task list will be loaded automatically as well.","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"Gavino3o":100,"-":21}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.parser.Parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextGenerator;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextUi;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" * A ChatBot that helps the user note down todos, deadlines and events.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" * It can be interacted with via the Command Line Interface","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"public class Bob {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private static final String defaultDirectoryPath \u003d \"data/\";","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    private static final String defaultFileName \u003d \"Bob.txt\";","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    private StorageFile storageFile;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    private TextUi textUi;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    private boolean isActive;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the Bob Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     * @param fileDirectoryPath Relative path to directory containing save file","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     * @param fileName Name of save file","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    public Bob(String fileDirectoryPath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        textUi \u003d new TextUi();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"        storageFile \u003d new StorageFile(fileDirectoryPath, fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"        isActive \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"            taskList \u003d storageFile.loadTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"            assert taskList !\u003d null : \"A null value has been returned when loading task list\";","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"            textUi.printErrorMessage(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"     * Default constructor for Bob Class that utilises","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"     * default directory path and file name.","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    public Bob() {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        textUi \u003d new TextUi();","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        storageFile \u003d new StorageFile(defaultDirectoryPath, defaultFileName);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"        isActive \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"            taskList \u003d storageFile.loadTasks();","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"            assert taskList !\u003d null : \"A null value has been returned when loading task list\";","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"            textUi.printErrorMessage(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"     * Executes a command to read or modify the task list if user input abides","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"     * by a given command format. Returns a crafted String message based on","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"     * command executed or error prompted.","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"     * @param input User input","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"     * @return A message to displayed to user","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"            assert c !\u003d null : \"Parser has returned a null value instead of a Command instance\";","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"            c.execute(taskList, storageFile);","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"                isActive \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"            return c.getOutputMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            return TextGenerator.getErrorMessage(e);","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"    public boolean isActive() {","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"        return this.isActive;","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"    public String getBobWelcomeMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"        return TextGenerator.getWelcomeMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gavino3o":86,"-":2}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" * Launches the application.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Gavino3o":12}},{"path":"src/main/java/bob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.controller.MainWindow;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":" * Main Class that setups and initialises the stage and primary scene","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":" * of the JavaFX GUI of this application.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    private Bob bob \u003d new Bob();","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"        MainWindow mainWindow \u003d new MainWindow();","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"        mainWindow.setBob(this.bob);","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        mainWindow.setStage(stage);","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"        mainWindow.initialise();","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"        stage.setTitle(\"It\u0027s Bob\");","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Gavino3o":28}},{"path":"src/main/java/bob/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.enums.CommandType;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextGenerator;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":" * The AddCommand Class encapsulates logic that can be executed","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":" * to add a specific task to current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    private CommandType command;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    private String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    private String startDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    private String endDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    private Task task;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the AddCommand class.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"     * @param command Type of AddCommand","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"     * @param startDate Start date of task, potentially null","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"     * @param endDate End date of task, potentially null","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobInvalidCommandException If CommandType","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"     *         is not a valid add task command","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    public AddCommand(CommandType command, String description,","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"                      String startDate, String endDate) throws BobInvalidCommandException {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        if (command !\u003d CommandType.TODO \u0026\u0026 command !\u003d CommandType.DEADLINE \u0026\u0026 command !\u003d CommandType.EVENT) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidCommandException(\"You can only add tasks of type: Todo, Deadline and Event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    public void execute(TaskList taskList, StorageFile storageFile) throws BobException {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        switch (command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"        case TODO:","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"            task \u003d new Todo((this.description));","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"            task \u003d new Deadline(this.description, this.endDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        case EVENT:","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"            task \u003d new Event(this.description, this.startDate, this.endDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        default:","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"            assert false : \"Incorrect CommandType enum has been passed into a AddCommand instance\";","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"        storageFile.saveTasks(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"    public String getOutputMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"        return TextGenerator.getAddTaskMessage(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":76}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextUi;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":" * A command encapsulates logic that can be executed to interact with the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * It can be stored an executed at a later instance or be reused.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"     * Executes the current command and can modify the current state of the task list or","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"     * print out messages.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"     * @param storageFile Storage file reader and writer","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobException if the command is constructed with invalid arguments","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    public abstract void execute(TaskList taskList, StorageFile storageFile) throws BobException;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     * Represents whether the current command should terminate the current application.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     * @return a boolean signifying whether to terminate the program","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"     * Returns a message to be displayed to the user after command is executed","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"     * successfully. This method should only be called after the execute method","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"     * has been called.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"     * @return Message to be displayed","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    public abstract String getOutputMessage() throws BobException;","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":39}},{"path":"src/main/java/bob/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextGenerator;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":" * The DeleteCommand class encapsulates logic that can be executed","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":" * to delete tasks from the current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    private ArrayList\u003cInteger\u003e taskNumbers;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    private TaskList deletedTasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"     * Constructor for the DeleteCommand Class.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * @param taskNumbers Task number of tasks to be deleted","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    public DeleteCommand(ArrayList\u003cInteger\u003e taskNumbers) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        this.deletedTasks \u003d new TaskList();","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    public void execute(TaskList taskList, StorageFile storageFile) throws BobException {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"            for (Integer i: taskNumbers) {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"                taskList.getTask(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobInvalidTaskNumberException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            String message \u003d \"One of the tasks you are trying to delete is non-existent!\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"            String recommendation \u003d \"Use the command: \\\"list\\\" to find out what tasks you have.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException(message + recommendation);","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        Collections.sort(this.taskNumbers);","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        for (Integer i : taskNumbers) {","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            Task currTask \u003d taskList.getTask(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"            deletedTasks.addTask(currTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        this.taskNumbers.sort(Collections.reverseOrder());","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"        for (Integer i : taskNumbers) {","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"            taskList.deleteTask(i);","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        storageFile.saveTasks(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"    public String getOutputMessage() throws BobException {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        return TextGenerator.getDeleteMultipleMessage(deletedTasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":64}},{"path":"src/main/java/bob/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextGenerator;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":" * The ExitCommand encapsulates logic to be executed when","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":" * the application should be terminated.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    public void execute(TaskList taskList, StorageFile storageFile) throws BobException {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"        storageFile.saveTasks(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    public String getOutputMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"        return TextGenerator.getFarewellMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":27}},{"path":"src/main/java/bob/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextGenerator;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":" * The FindCommand Class encapsulates logic that can be executed","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * to find tasks with descriptions corresponding to a given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    private String keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private TaskList filteredTaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    public void execute(TaskList taskList, StorageFile storageFile) {","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        filteredTaskList \u003d taskList.keywordFilter(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    public String getOutputMessage() throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        return TextGenerator.getFindMessage(filteredTaskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Gavino3o":36}},{"path":"src/main/java/bob/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextGenerator;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":" * The ListCommand encapsulates logic to be executed to print out","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":" * the tasks within the current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    public void execute(TaskList taskList, StorageFile storageFile) {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    public String getOutputMessage() throws BobException {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        return TextGenerator.getListMessage(taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":28}},{"path":"src/main/java/bob/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.storage.StorageFile;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import bob.ui.TextGenerator;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":" * The MarkCommand encapsulates logic to be executed to modify the","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":" * completion status of one or multiple tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    private ArrayList\u003cInteger\u003e taskNumbers;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    private TaskList changedTasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"     * Constructor for the MarkMultipleCommand class.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * @param taskNumbers List of task numbers representing task to be mark/unmark","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     * @param isDone Completion status of the tasks","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    public MarkCommand(ArrayList\u003cInteger\u003e taskNumbers, boolean isDone) {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        this.changedTasks \u003d new TaskList();","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    public void execute(TaskList taskList, StorageFile storageFile) throws BobException {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"            for (Integer i: taskNumbers) {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"                Task currTask \u003d taskList.getTask(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobInvalidTaskNumberException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"            String message \u003d \"One of the tasks you are trying to mark/unmark is non-existent!\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"            String recommendation \u003d \"Use the command: \\\"list\\\" to find out what tasks you have.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException(message + recommendation);","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        for (Integer i: taskNumbers) {","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            Task currTask \u003d taskList.getTask(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"                currTask.markAsDone();","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"                currTask.unmarkTask();","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"            changedTasks.addTask(currTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        storageFile.saveTasks(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"    public String getOutputMessage() throws BobException {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"            return TextGenerator.getMarkMultipleMessage(changedTasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"            return TextGenerator.getUnmarkMultipleMessage(changedTasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":69}},{"path":"src/main/java/bob/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.controller;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    private TextFlow textFlow;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    private Circle displayPicture;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        assert dialog !\u003d null : \"Dialog has not been loaded properly from fxml file\";","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        assert displayPicture !\u003d null : \"Display picture has not been loaded properly from fxml file\";","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        displayPicture.setFill(new ImagePattern((img)));","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        textFlow.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Gavino3o":67}},{"path":"src/main/java/bob/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.controller;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.Bob;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.Main;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":" * This control represents a text window consisting of a scroll pane, user input text field,","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":" * a button to input text, and a dialog box.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"public class MainWindow extends GridPane {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    private final Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"            .getResourceAsStream(\"/images/DefaultUserProfilePic.jpg\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    private final Image bobImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            .getResourceAsStream(\"/images/Bob.jpg\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    private Bob bob;","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"     * Constructor for the MainWindow Controller","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"    public MainWindow() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        assert userInput !\u003d null : \"User input has not been loaded properly from fxml file\";","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"        assert sendButton !\u003d null : \"Send button picture has not been loaded properly from fxml file\";","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        assert scrollPane !\u003d null : \"Scroll pane has not been loaded properly from fxml file\";","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"        assert dialogContainer !\u003d null : \"Dialog Container picture has not been loaded properly from fxml file\";","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    public void setBob(Bob b) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"        bob \u003d b;","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"     * Initialises the interactive components of the chat window.","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"    public void initialise() {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"        dialogContainer.getChildren().add(DialogBox.getBobDialog(bob.getBobWelcomeMessage(), bobImage));","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Bob\u0027s reply and then appends them to","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"        String response \u003d bob.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"                DialogBox.getBobDialog(response, bobImage)","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"        if (!bob.isActive()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"            stage.close();","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Gavino3o":91}},{"path":"src/main/java/bob/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.enums;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * Enumerations for types of commands available to be executed.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, INVALID","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":8}},{"path":"src/main/java/bob/exception/BobCorruptFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * Exception thrown when reading from a corrupted file.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"public class BobCorruptFileException extends BobException {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"     * Constructor for the BobCorruptFileException.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"     * @param errorMessage Shown to standard output","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    public BobCorruptFileException(String errorMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"        super(\"Your file may be corrupted :(\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Gavino3o":15}},{"path":"src/main/java/bob/exception/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * A general exception that will be thrown when an executable command","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * encounters an error. Error message will be shown to standard output.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class BobException extends Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    public BobException(String errorMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        super(errorMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Gavino3o":11}},{"path":"src/main/java/bob/exception/BobInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * Exception to be thrown when user inputs a string command in","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * an invalid format.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class BobInvalidCommandException extends BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    public BobInvalidCommandException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        super(\"Invalid command format chosen\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    public BobInvalidCommandException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":15}},{"path":"src/main/java/bob/exception/BobInvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * Exception thrown when a command that requires an integer number","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * as task number is input wrongly.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class BobInvalidTaskNumberException extends BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    public BobInvalidTaskNumberException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        super(\"Index chosen for task is invalid\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    public BobInvalidTaskNumberException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":15}},{"path":"src/main/java/bob/exception/BobMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * Exception thrown when a command that requires an argument is","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * input without one.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class BobMissingArgumentException extends BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    public BobMissingArgumentException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"        super(\"You are missing an argument!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    public BobMissingArgumentException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":15}},{"path":"src/main/java/bob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.command.*;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.enums.CommandType;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobCorruptFileException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobMissingArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":" * Processes user input or save files to executable commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     * Returns an instance of a Command with specific user input to be executed.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     * @param input Text input to be parsed","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     * @return Executable command based on input","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobException If command given has invalid format","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    public static Command parse(String input) throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"        CommandType commandType \u003d strToCommandType(inputSplit[0].toUpperCase());","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        String argument \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        if (inputSplit.length \u003e\u003d 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"            argument \u003d inputSplit[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"        case BYE:","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        case LIST:","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        case MARK:","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"            return Parser.parseMarkCommand(commandType, argument);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        case TODO:","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"            return Parser.parseTodoCommand(commandType, argument);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"            return Parser.parseDeadlineCommand(commandType, argument);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        case EVENT:","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"            return Parser.parseEventCommand(commandType, argument);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        case DELETE:","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"            return Parser.parseDeleteCommand(argument);","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        case FIND:","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"            return Parser.parseFindCommand(argument);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        case INVALID:","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidCommandException(\"I\u0027m sorry! I don\u0027t understand the command :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidCommandException(\"I\u0027m sorry! Something went wrong when processing your command :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"    private static Command parseMarkCommand(CommandType commandType, String argument)","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"            throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException(\"Give me multiple task numbers to mark/unmark as done!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"            ArrayList\u003cInteger\u003e taskNumbers \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"            String[] argumentSplit \u003d argument.split(\" \");","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"            for (String s : argumentSplit) {","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"                Integer taskNumber \u003d Integer.parseInt(s);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"                taskNumbers.add(taskNumber);","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"            return new MarkCommand(taskNumbers, commandType \u003d\u003d CommandType.MARK);","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException(\"The mark/unmark multiple command \"","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"                    + \"needs to be followed up by spaced integer numbers!\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"    private static Command parseTodoCommand(CommandType commandType, String argument)","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"            throws BobMissingArgumentException, BobInvalidCommandException {","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"            throw new BobMissingArgumentException(\"The description of your todo \"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"                    + \"should not be empty! Try:\\ntodo [description]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        return new AddCommand(commandType, argument, null, null);","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"    private static Command parseDeadlineCommand(CommandType commandType, String argument)","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"            throws BobMissingArgumentException, BobInvalidCommandException {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"            throw new BobMissingArgumentException(\"The description of your deadline should not be empty!\"","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"                    + \" Try:\\ndeadline [description] /by [duedate]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"        String[] bySplit \u003d argument.split(\" /by \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"        if (bySplit.length !\u003d 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidCommandException(\"Incorrect deadline command format!\"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"                    + \" It should be:\\ndeadline [description] /by [duedate]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"        return new AddCommand(commandType, bySplit[0], null, bySplit[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"    private static Command parseEventCommand(CommandType commandType, String argument)","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"            throws BobMissingArgumentException, BobInvalidCommandException {","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"            throw new BobMissingArgumentException(\"The description of your event should not be empty! Try:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"                    + \"event [description] /from [start] /to [end]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        String[] descSplit \u003d argument.split(\" /from \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"        if (descSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidCommandException(\"Incorrect event command format! It should be:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"                    + \"event [description] /from [start] /to [end]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"        String[] periodSplit \u003d descSplit[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"        if (periodSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidCommandException(\"Incorrect event command format! It should be:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"                    + \"event [description] /from [start] /to [end]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        return new AddCommand(commandType, descSplit[0], periodSplit[0], periodSplit[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"    private static Command parseDeleteCommand(String argument) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException(\"Give me one or multiple task numbers to delete!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"            ArrayList\u003cInteger\u003e taskNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"            String[] argumentSplit \u003d argument.split(\" \");","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"            for (String s: argumentSplit) {","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"                Integer taskNumber \u003d Integer.parseInt(s);","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"                taskNumbers.add(taskNumber);","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"            return new DeleteCommand(taskNumbers);","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException(\"The delete command needs to be followed up \"","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"                    + \"by integer number(s)!\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"    private static Command parseFindCommand(String argument) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"        return new FindCommand(argument);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"    private static CommandType strToCommandType(String s) {","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"            return CommandType.valueOf(s);","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"            return CommandType.INVALID;","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"     * Returns an instance of a Task after processing a String in stored format.","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"     * @param inputString Text input to be parsed","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"     * @return An instance of Task based on input string","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobException If input string has incorrect format","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"    public static Task parseStoredTask(String inputString) throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"Gavino3o"},"content":"        String[] split \u003d inputString.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"Gavino3o"},"content":"        String commandType \u003d split[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"Gavino3o"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"Gavino3o"},"content":"            case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"Gavino3o"},"content":"                return new Todo(split[2], Integer.parseInt(split[1]) \u003d\u003d 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"            case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"                return new Deadline(split[2], split[3], Integer.parseInt(split[1]) \u003d\u003d 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"Gavino3o"},"content":"            case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"Gavino3o"},"content":"                return new Event(split[2], split[3], split[4], Integer.parseInt(split[1]) \u003d\u003d 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"Gavino3o"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"Gavino3o"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"Gavino3o"},"content":"            throw new BobCorruptFileException(\"Your save file might be corrupted :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":180}},{"path":"src/main/java/bob/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.parser.Parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":" * Handles reading and writing save files from the system.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"public class StorageFile {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"    private String fileDirectoryPath;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    private String fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the StorageFile class.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     * @param fileDirectoryPath Relative path to directory containing save file","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     * @param fileName Name of save file","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    public StorageFile(String fileDirectoryPath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        this.fileDirectoryPath \u003d fileDirectoryPath;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"     * Saves the current state of tasks by writing into a .txt file based on relative","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"     * file path determined when current object instantiated.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"     * @param taskList List of tasks to be written into save file","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobException If there is error when accessing current state of task list","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"    public void saveTasks(TaskList taskList) throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        this.checkDirectoryExists();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.fileDirectoryPath + this.fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"                fileWriter.write(taskList.getTask(i).convertToFileFormat() + System.lineSeparator());","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"            throw new BobException(\"Something went wrong when saving your tasks :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"     * Reads from save file and changes current memory state of application, effective loading","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"     * tasks stored in previous sessions.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"     * @return A TaskList of previously saved tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobException if save file has lines with incorrect format","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"    public TaskList loadTasks() throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"        this.checkDirectoryExists();","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"            File taskFile \u003d new File(this.fileDirectoryPath + this.fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"            Scanner fileScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"                String currentLine \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"                if (currentLine.isBlank()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"                Task task \u003d Parser.parseStoredTask(currentLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"                loadedTasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"            fileScanner.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"            return new TaskList(loadedTasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"    private void checkDirectoryExists() throws BobException {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"        File dataDirectory \u003d new File(this.fileDirectoryPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"            boolean isMkDirSuccess \u003d dataDirectory.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"            if (!isMkDirSuccess) {","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"                throw new BobException(\"Something went wrong when loading saving/loading your tasks :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":90}},{"path":"src/main/java/bob/task/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":" * Formats dates into different patterns.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"public class DateFormatter {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    public static final String DEFAULT_FORMAT \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"     * Formats input String into required pattern if input String abides by","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"     * Java LocalDate format. Otherwise, returns original input String.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"     * @param inputString Raw String input","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"     * @param format Required pattern for date format conversion","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"     * @return Date of required pattern, original String may be returned (based on input)","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"    public static String format(String inputString, String format) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"            date \u003d LocalDate.parse(inputString);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"            return date.format(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"            return inputString;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"            return date.format(DateTimeFormatter.ofPattern(DateFormatter.DEFAULT_FORMAT));","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":32}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * A Deadline is a task that has a due date. Hence, it stores a date at which the","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * task should be completed by.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"    protected String dueDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the Deadline Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of Deadline Task","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"     * @param dueDate Due date of Deadline task","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.dueDate \u003d DateFormatter.format(dueDate, \"MMM d yyyy\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the Deadline Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * Instantiates an instance of a deadline and set its completion status","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     * according to boolean value provided.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of Deadline Task","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     * @param by Due date of Deadline task","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"     * @param isDone Completion status of Deadline Task","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        this.dueDate \u003d DateFormatter.format(by, \"MMM d yyyy\");","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"D|%s|%s\", super.convertToFileFormat(), this.dueDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":45}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * An Event is a task that has a time period at which it occurs or should be completed. Hence,","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * it contains a start and end date to represent the time period.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    protected String startDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"    protected String endDateTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the Event Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of Event task","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"     * @param startDateTime Start Time of Event Task","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"     * @param endDateTime End Time of Event task","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public Event(String description, String startDateTime, String endDateTime) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"        this.startDateTime \u003d DateFormatter.format(startDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"        this.endDateTime \u003d DateFormatter.format(endDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the Event Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     * Instantiates the event and marks its completion status based on boolean provided.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of Event task","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"     * @param startDateTime Start Time of Event Task","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"     * @param endDateTime End Time of Event task","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"     * @param isDone Completion status of event task","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    public Event(String description, String startDateTime, String endDateTime, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        this.startDateTime \u003d DateFormatter.format(startDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"        this.endDateTime \u003d DateFormatter.format(endDateTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"[E]%s (from: %s, to: %s)\", super.toString(), this.startDateTime, this.endDateTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"E|%s|%s|%s\", super.convertToFileFormat(), this.startDateTime, this.endDateTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":48}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * The Task class encapsulates a task in real life. A task contains a description and keeps","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * track of whether the task has been completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the Task Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"     * Instantiates an instance of a task that has not been completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the Task Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * Instantiates an instance of a task based on provided description and","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     * sets the completion status of the class based on provided boolean.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"     * @param isDone Completions status of task","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"     * Prints an icon to signify if a task is completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"     * @return X is task is completed, empty space otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"     * Marks this task as completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"     * Marks this task as yet to be completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"     * Indicates whether the task description contains keyword provided.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"     * @param keyword Keyword used to check description","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"     * @return True if task contains keyword, false otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"%s|%s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":78}},{"path":"src/main/java/bob/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":" * Represents a list of Tasks that can contain date and be mark/unmark as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":" * Acts as a dynamic data structure to be manipulated by user.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of a TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"     * Instantiates an empty array list to store tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of a TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * Instantiates an array list of tasks based on given argument.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"     * @param tasks ArrayList of tasks to instantiate TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"     * Adds task into current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"     * @param task Task to be added into list","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"     * Deletes task in current task list based on index given.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"     * Input index is expected to start from 1 instead of 0.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"     * @param num Index of task to be deleted","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"     * @return Instance of deleted task","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobInvalidTaskNumberException If index provided is out of bounds.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    public Task deleteTask(int num) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"            return tasks.remove(num - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"     * Returns number of current tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"     * @return number of current tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"    public int size() {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"     * Fetches task from current task list based on provided index.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"     * Index is expected to start from 0.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"     * @param num Index of task to be fetched","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"     * @return The task at the given index","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobInvalidTaskNumberException If index provided is out of bounds","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"    public Task getTask(int num) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"            return this.tasks.get(num);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"            throw new BobInvalidTaskNumberException(\"You are trying to access a non-existent task :O\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"                    + \"Use the command: \\\"list\\\" to find out what tasks you have.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"     * Creates a new TaskList by filtering existing TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"     * with provided keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"     * @param keyword Keyword used to filter task descriptions","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"     * @return A filtered TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"    public TaskList keywordFilter(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"        TaskList filteredTasklist \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"            return this;","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"        for (Task currentTask : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"            if (currentTask.containsKeyword(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"                filteredTasklist.addTask(currentTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"        return filteredTasklist;","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":102}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":" * A Todo is a task that can be done in the future, but has no specific deadline or period","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":" * of which it should be completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of Todo Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"     * @param description Test description of Todo Task","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of Todo Class.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"     * Instantiates an instance of Todo class with a string description and","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"     * a boolean indicating whether the task is done.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"     * @param description Text description of Todo Task","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"     * @param isDone Completion status of Todo Task","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"        return String.format(\"T|%s\", super.convertToFileFormat());","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":39}},{"path":"src/main/java/bob/ui/TextGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":" * Generates text required for ChatBot GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"public class TextGenerator {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"            \".-. .-\u0027)              .-. .-\u0027)   \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"                    + \"\\\\  ( OO )             \\\\  ( OO )  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"                    + \" ;-----.\\\\  .-\u0027),-----. ;-----.\\\\  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"                    + \" | .-.  | ( OO\u0027  .-.  \u0027| .-.  |  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"                    + \" | \u0027-\u0027 /_)/   |  | |  || \u0027-\u0027 /_) \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"                    + \" | .-. `. \\\\_) |  |\\\\|  || .-. `.  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"                    + \" | |  \\\\  |  \\\\ |  | |  || |  \\\\  | \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"                    + \" | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027| \u0027--\u0027  / \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"                    + \" `------\u0027      `-----\u0027 `------\u0027  \";","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"        return \"Hi, I\u0027m Bob. How can I help you?\";","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"    public static String getFarewellMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"        return \"Goodbye! I\u0027ll see you next time\";","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    public static String getNumOfTaskMessage(TaskList taskList) {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"        int numOfTask \u003d taskList.size();","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"        if (numOfTask \u003d\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"            return \"You currently have no tasks! Good Job!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"        } else if (numOfTask \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"            return String.format(\"Now you have %d task in your list!\", numOfTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"            return String.format(\"Now you have %d tasks in your list!\", numOfTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"    public static String getErrorMessage(Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"    public static String getListMessage(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"        return getRawList(taskList) + getNumOfTaskMessage(taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    public static String getMarkMessage(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        return \"Great Job! I\u0027ve helped mark this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    public static String getUnmarkMessage(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"        return \"No worries! I will help you unmark this task:\\n\" + task.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"    public static String getDeleteMessage(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        return \"Foosh! Let it be gone! I\u0027ve helped delete the task:\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"                + task.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"    public static String getAddTaskMessage(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"        return \"I gotchu. New task added to the list:\\n\" + task.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"    public static String getFindMessage(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        String message \u003d \"These are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        return message + getRawList(taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"    private static String getRawList(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"            result.append((i + 1)).append(\". \");","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"            result.append(taskList.getTask(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"        return result.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"    public static String getMarkMultipleMessage(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"        String message \u003d \"Nice one bud! I have marked all the following tasks as done:\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"        return message + getRawList(taskList);","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"    public static String getUnmarkMultipleMessage(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"        String message \u003d \"No worries bud! I unmarked all the following tasks for you:\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"        return message + getRawList(taskList);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"    public static String getDeleteMultipleMessage(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"        String message \u003d \"Out of sight, out of mind! Let these tasks be gone:\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"        return message + getRawList(taskList);","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Gavino3o":94}},{"path":"src/main/java/bob/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":" * Represents the text user interface at which the user reads and writes","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":" * commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"public class TextUi {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"    private static final String DIVIDER \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"            \".-. .-\u0027)              .-. .-\u0027)   \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"        + \"\\\\  ( OO )             \\\\  ( OO )  \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"        + \" ;-----.\\\\  .-\u0027),-----. ;-----.\\\\  \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"        + \" | .-.  | ( OO\u0027  .-.  \u0027| .-.  |  \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"        + \" | \u0027-\u0027 /_)/   |  | |  || \u0027-\u0027 /_) \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"        + \" | .-. `. \\\\_) |  |\\\\|  || .-. `.  \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"        + \" | |  \\\\  |  \\\\ |  | |  || |  \\\\  | \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        + \" | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027| \u0027--\u0027  / \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"        + \" `------\u0027      `-----\u0027 `------\u0027  \";","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"     * Constructor of the text UI.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"    public TextUi() {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"     * Prints a divider acting as a horizontal line break to standard output.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"    public void printDivider() {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"     * Prints a welcome message to greet the user to standard output.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"        String welcomeMessage \u003d \"Hi, I\u0027m Bob. How can I help you?\";","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(DIVIDER + LOGO + \"\\n\" + welcomeMessage + DIVIDER);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"     * Prints a farewell message to user to standard output.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        String goodbyeMessage \u003d \"Goodbye! Bob signing out!\";","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"     * Prints out a message to notify user how many tasks are left currently.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"     * Prints out lists of task with numbering based on order of creation.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"     * @param taskList List of tasks to be counted","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"    public void printListEndMessage(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(\"You currently have no tasks! Good Job!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"            if (numOfTasks \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"                System.out.printf(\"\\nNow you have %d task in your list!%n\", numOfTasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"                System.out.printf(\"\\nNow you have %d tasks in your list!%n\", numOfTasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"     * Prints out an error message based on error occurred to standard output.","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"     * @param e Exception caught","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"    public void printErrorMessage(Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"     * Prints out the list of currently saved tasks to standard output.","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"     * @param taskList Lists of tasks to be printed","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobInvalidTaskNumberException If an error occurs when accessing a task","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"    public void printListMessage(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"        printRawList(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"        printListEndMessage(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"     * Prints a message to notify the user that a task has been mark/unmark as done to","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"     * standard output.","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"     * @param task Task to be mark/unmark","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"     * @param isDone Completion status of task","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"    public void printMarkMessage(Task task, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"        System.out.println();","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(\"Great Job! I\u0027ve helped mark this task as done:\\n\" + task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"            System.out.println(\"No worries! I will help you unmark this task:\\n\" + task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"     * Prints a message to standard output to notify the user when a task has","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"     * been successfully deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"     * @param task Deleted task","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"    public void printDeleteMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(\"Foosh! Let it be gone! I\u0027ve helped delete the task:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"                + task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"     * Prints a message to standard output notifying the user the required task","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"     * has been added to current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"     * @param task Added task","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"    public void printAddMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"        String displayMessage \u003d \"I gotchu. New task added to the list:\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(displayMessage + task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"     * Prints a list of filtered tasks after find command is executed.","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"     * @param taskList List of filtered tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"     * @throws BobInvalidTaskNumberException If an error occurs when trying to access a task","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"    public void printFindMessage(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"        String displayMessage \u003d \"These are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"        System.out.println(displayMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"        printRawList(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"    private void printRawList(TaskList taskList) throws BobInvalidTaskNumberException {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"            System.out.println((i + 1) + \". \" + taskList.getTask(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"     * Reads the user input in the Command Line Interface as a whole line.","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"     * @return A String representing user input","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"    public String readTextInput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"    } //TODO: Remove this?","lastModifiedDate":"2023-09-04"},{"lineNumber":162,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gavino3o":162}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"        \u003cTextFlow fx:id\u003d\"textFlow\" opacity\u003d\"0.85\" prefWidth\u003d\"375\" style\u003d\"-fx-background-color: white; -fx-background-radius: 20;\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"                \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"                  \u003cFont name\u003d\"Century Gothic Bold\" size\u003d\"12.666666984558105\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" pickOnBounds\u003d\"true\" radius\u003d\"50.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Gavino3o":31}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.effect.Blend?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.GridPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" opacity\u003d\"0.5\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" text\u003d\"Tell Bob something...\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"            \u003cFont name\u003d\"Century Gothic\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"            \u003cBlend /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"            \u003cFont name\u003d\"Dubai Medium\" size\u003d\"12.666666984558105\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"                    GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"2\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #d2fadf\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Gavino3o":31}},{"path":"src/test/java/bob/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.command.AddCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"import bob.command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import bob.command.ExitCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import bob.command.FindCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import bob.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import bob.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobMissingArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"    public void parse_bye_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof ExitCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"    public void parse_list_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof ListCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"    public void parse_mark_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof MarkCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Gavino3o"},"content":"    public void parse_unmark_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"unmark 3\");","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof MarkCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Gavino3o"},"content":"    public void parse_todo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"todo learn origami\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof AddCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Gavino3o"},"content":"    public void parse_deadline_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"deadline make origami /by 2023-09-10\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof AddCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Gavino3o"},"content":"    public void parse_event_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"event summer fiesta /from 2023-09-10 /to /2023-09-12\");","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof AddCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Gavino3o"},"content":"    public void parse_find_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"find book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof FindCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Gavino3o"},"content":"    public void parse_delete_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"delete 2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(c instanceof DeleteCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Gavino3o"},"content":"    public void parse_mark_exceptionThrown1() {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidTaskNumberException);","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"Give me a task number to mark/unmark as done!\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Gavino3o"},"content":"    public void parse_mark_exceptionThrown2() {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"mark egg sandwich\");","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidTaskNumberException);","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"The mark/unmark command needs to be followed up by an integer number!\\n\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Gavino3o"},"content":"    public void parse_unmark_exceptionThrown1() {","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidTaskNumberException);","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"Give me a task number to mark/unmark as done!\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Gavino3o"},"content":"    public void parse_unmark_exceptionThrown2() {","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"unmark test\");","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidTaskNumberException);","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"The mark/unmark command needs to be followed up by an integer number!\\n\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Gavino3o"},"content":"    public void parse_todo_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobMissingArgumentException);","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"The description of your todo should not be empty! Try:\\ntodo [description]\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"Gavino3o"},"content":"    public void parse_deadline_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"deadline /by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidCommandException);","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"Incorrect deadline command format! It should be:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"Gavino3o"},"content":"                    + \"deadline [description] /by [duedate]\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"Gavino3o"},"content":"    public void parse_event_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"event indonesia trip /from Monday\");","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidCommandException);","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"Incorrect event command format! It should be:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":188,"author":{"gitId":"Gavino3o"},"content":"                    + \"event [description] /from [start] /to [end]\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"Gavino3o"},"content":"    public void parse_delete_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"Gavino3o"},"content":"            Command c \u003d Parser.parse(\"delete non-integer\");","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidTaskNumberException);","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(\"The delete command needs to be followed up by an integer number!\\n\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Gavino3o":202}},{"path":"src/test/java/bob/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"package bob.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"import bob.exception.BobInvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"    public void getTask_validIndex_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gavino3o"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"            Task t1 \u003d new Todo(\"todo task 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gavino3o"},"content":"            Task t2 \u003d new Todo(\"todo task 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gavino3o"},"content":"            Task t3 \u003d new Todo(\"todo task 3\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gavino3o"},"content":"            taskList.addTask(t1);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gavino3o"},"content":"            taskList.addTask(t2);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"            taskList.addTask(t3);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(t1, taskList.getTask(0));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gavino3o"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gavino3o"},"content":"    public void getTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gavino3o"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gavino3o"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gavino3o"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gavino3o"},"content":"            Task t1 \u003d new Todo(\"todo task 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gavino3o"},"content":"            Task t2 \u003d new Todo(\"todo task 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gavino3o"},"content":"            Task t3 \u003d new Todo(\"todo task 3\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gavino3o"},"content":"            taskList.addTask(t1);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Gavino3o"},"content":"            taskList.addTask(t2);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Gavino3o"},"content":"            taskList.addTask(t3);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Gavino3o"},"content":"            assertEquals(t1, taskList.getTask(100));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Gavino3o"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Gavino3o"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gavino3o"},"content":"            assertTrue(e instanceof BobInvalidTaskNumberException);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gavino3o"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Gavino3o"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gavino3o"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Gavino3o":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gavino3o"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gavino3o"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gavino3o"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gavino3o"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gavino3o"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gavino3o"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gavino3o"},"content":"delete 1","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Gavino3o"},"content":"delete 1","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Gavino3o"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Gavino3o"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gavino3o":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Gavino3o"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bob\\*.java","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Gavino3o"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gavino3o":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Gavino3o"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gavino3o":1,"-":37}}]
