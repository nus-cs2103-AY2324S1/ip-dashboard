[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"    archiveBaseName \u003d \"Launcher\"","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"task deleteTextFile(type: Delete) {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"    delete \u0027./data/duke.txt\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"    delete \u0027./data/test-duke.txt\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"clean.dependsOn deleteTextFile","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"-":42,"Blizzeracz":21}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"[D][ ] eat (by: 2024-12-11)","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"[D][ ] ereevw (by: 2020-12-11)","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"[D][ ] shit (by: 2022-12-11)","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"[D][ ] qq (by: 2023-12-11)","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Blizzeracz":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Blizzeracz":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":" * Duke is a task management application that allows users to","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":" * manage their tasks by adding, deleting, and marking tasks as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":" * It provides a command-line interface for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a Duke object and initializes the user interface (UI),","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"     * storage, and task list. It attempts to load tasks from storage","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"     * and handles exceptions if loading fails.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"    public Duke() {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"            tasks \u003d new TaskList(storage.loadTask());","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"     * Retrieves the welcome message from the user interface.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"     * @return A welcome message as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"        return ui.showWelcomeMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"     * Processes user input and returns a response.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"     * @return The response message as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"            if (input.equalsIgnoreCase(\"save\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"                return \"List saved!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"            } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"                String response \u003d Parser.parse(input, tasks, ui);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"                return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"Blizzeracz":57}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":" * DukeException is a custom exception class for handling exceptions","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":" * specific to the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"     * @param message The error message associated with this exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Blizzeracz":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"     * The main entry point for the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If there is an issue with Duke\u0027s execution.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"    public static void main(String[] args)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Blizzeracz":15}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"    // The Duke instance for handling user interactions.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"            // Load the FXML file for the main window","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"            // Create a new scene with the main window content","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"            // Set the scene for the primary stage","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"            // Get the controller for the main window","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"            MainWindow mainWindowController \u003d fxmlLoader.getController();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"            // Set the Duke instance in the main window controller","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"            mainWindowController.setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"            // Display a welcome message in the main window","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"            mainWindowController.welcomeMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"            // Show the primary stage","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Blizzeracz":52}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"        dialogContainer.prefHeightProperty().bind(scrollPane.heightProperty());","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.welcomeMessage(), dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Blizzeracz":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":" * The Parser class is responsible for parsing user input and executing","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":" * the corresponding commands on the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"    private static Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"     * @param tasks The TaskList instance to perform operations on.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"     * @param ui    The Ui instance for user interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"     * @return The result of executing the command as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If an error occurs during parsing or execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"    public static String parse(String input, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"        Parser.ui \u003d ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"            switch (command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"            case \"list\":","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.listTask();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"                int task \u003d parseDeleteCommand(parts);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.deleteTask(task, ui);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"                ToDoTask toDoTask \u003d parseTodoCommand(parts, false);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.addTask(toDoTask, ui);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"                DeadlineTask deadlineTask \u003d parseDeadline(parts[1], false);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.addTask(deadlineTask, ui);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"            case \"event\":","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"                EventTask eventTask \u003d parseEvent(parts[1], false);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.addTask(eventTask, ui);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"                int markNo \u003d parseMarkCommand(parts) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.markTask(markNo, ui);","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"                int unmarkNo \u003d parseUnmarkCommand(parts) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.unmarkTask(unmarkNo, ui);","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"            case \"find\":","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.findTasks(parseFindCommand(parts), ui);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"            case \"sort\":","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"                return tasks.sortTasks(ui);","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"            default:","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"                return ui.showInvalidCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"                throw new DukeException(\"The description of a deadline/event cannot be empty.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Blizzeracz"},"content":"     * Parses the task type, details, and completion status to create a Task object during data loading","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Blizzeracz"},"content":"     * @param taskType    The type of task (e.g., [T], [D], [E]).","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Blizzeracz"},"content":"     * @param taskDetails The details of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Blizzeracz"},"content":"     * @return A Task object created from the provided information.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If an error occurs during parsing.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Blizzeracz"},"content":"    public static Task parseLoad(String taskType, String taskDetails, boolean isDone) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"Blizzeracz"},"content":"        assert taskType !\u003d null : \"Task type cannot be null.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"Blizzeracz"},"content":"        if (taskType.equalsIgnoreCase(\"[T\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Blizzeracz"},"content":"            return new ToDoTask(clearWhitespace(taskDetails), isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"Blizzeracz"},"content":"        } else if (taskType.equals(\"[D\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Blizzeracz"},"content":"            return Parser.parseDeadline(taskDetails, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Blizzeracz"},"content":"        } else if (taskType.equals(\"[E\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Blizzeracz"},"content":"            return Parser.parseEvent(taskDetails, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Blizzeracz"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Blizzeracz"},"content":"            return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Blizzeracz"},"content":"    private static String parseFindCommand(String[] parts) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Blizzeracz"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"The description of a find cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Blizzeracz"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Blizzeracz"},"content":"        return keyword;","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Blizzeracz"},"content":"     * Parses the task number from a \"mark\" command.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Blizzeracz"},"content":"     * @param parts The input command split into parts.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Blizzeracz"},"content":"     * @return The task number to mark as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the command is not properly formatted.","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Blizzeracz"},"content":"    private static int parseMarkCommand(String[] parts) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"Blizzeracz"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please provide a task number for \u0027done\u0027 command.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Blizzeracz"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Blizzeracz"},"content":"            return taskNumber;","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Blizzeracz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please pick a number instead of using letters!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Blizzeracz"},"content":"     * Parses the task number from an \"unmark\" command.","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Blizzeracz"},"content":"     * @param parts The input command split into parts.","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Blizzeracz"},"content":"     * @return The task number to unmark as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the command is not properly formatted.","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Blizzeracz"},"content":"    private static int parseUnmarkCommand(String[] parts) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"Blizzeracz"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please provide a task number for \u0027done\u0027 command.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"Blizzeracz"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"Blizzeracz"},"content":"            return taskNumber;","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"Blizzeracz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please pick a number instead of using letters!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Blizzeracz"},"content":"     * Parses the task number from a \"delete\" command.","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Blizzeracz"},"content":"     * @param parts The input command split into parts.","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Blizzeracz"},"content":"     * @return The task number to delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the command is not properly formatted.","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Blizzeracz"},"content":"    private static int parseDeleteCommand(String[] parts) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"Blizzeracz"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please provide a task number for \u0027delete\u0027 command.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"Blizzeracz"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"Blizzeracz"},"content":"            return taskNumber;","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"Blizzeracz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please pick a number instead of using letters!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Blizzeracz"},"content":"     * Parses a \"todo\" command and creates a ToDoTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Blizzeracz"},"content":"     * @param parts  The input command split into parts.","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Blizzeracz"},"content":"     * @return A ToDoTask created from the input.","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the command is not properly formatted.","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Blizzeracz"},"content":"    private static ToDoTask parseTodoCommand(String[] parts, boolean isDone) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"Blizzeracz"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"Blizzeracz"},"content":"        return new ToDoTask(parts[1], isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"Blizzeracz"},"content":"     * Parses a \"deadline\" command and creates a DeadlineTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"Blizzeracz"},"content":"     * @param taskDetails The details of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"Blizzeracz"},"content":"     * @return A DeadlineTask created from the input.","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the command is not properly formatted.","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"Blizzeracz"},"content":"    private static DeadlineTask parseDeadline(String taskDetails, boolean isDone) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"Blizzeracz"},"content":"        if (!taskDetails.contains(\"by:\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Remember to include \u0027by:\u0027 after the deadline command!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"Blizzeracz"},"content":"        String[] details \u003d taskDetails.split(\"by:\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"Blizzeracz"},"content":"        String description \u003d trimDescription(details[0]);","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"Blizzeracz"},"content":"        String by \u003d clearWhitespace(details[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"Blizzeracz"},"content":"        return new DeadlineTask(description, by, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"Blizzeracz"},"content":"     * Parses an \"event\" command and creates an EventTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"Blizzeracz"},"content":"     * @param taskDetails The details of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"Blizzeracz"},"content":"     * @return An EventTask created from the input.","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the command is not properly formatted.","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"Blizzeracz"},"content":"    public static EventTask parseEvent(String taskDetails, boolean isDone) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"Blizzeracz"},"content":"        if (!taskDetails.contains(\"from:\") || !taskDetails.contains(\"to:\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Remember to include \u0027from:\u0027 and \u0027to:\u0027 after the event command!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"Blizzeracz"},"content":"        String[] details \u003d taskDetails.split(\"from:\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"Blizzeracz"},"content":"        String[] innerDetails \u003d details[1].split(\" to:\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"Blizzeracz"},"content":"        String description \u003d trimDescription(details[0]);","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"Blizzeracz"},"content":"        String from \u003d clearWhitespace(innerDetails[0]);","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"Blizzeracz"},"content":"        String to \u003d clearWhitespace(innerDetails[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"Blizzeracz"},"content":"        return new EventTask(description, from, to, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"Blizzeracz"},"content":"     * Trims leading and trailing whitespace from the given description.","lastModifiedDate":"2023-09-12"},{"lineNumber":206,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"Blizzeracz"},"content":"     * @param description The description to be trimmed.","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"Blizzeracz"},"content":"     * @return The trimmed description.","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the trimmed description becomes empty.","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"Blizzeracz"},"content":"    public static String trimDescription(String description) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"Blizzeracz"},"content":"        description \u003d description.trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":213,"author":{"gitId":"Blizzeracz"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"Blizzeracz"},"content":"        return description;","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":219,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"Blizzeracz"},"content":"     * Removes all whitespace from the given description.","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"Blizzeracz"},"content":"     * @param description The description from which whitespace will be removed.","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"Blizzeracz"},"content":"     * @return The description with all whitespace removed.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"Blizzeracz"},"content":"    public static String clearWhitespace(String description) {","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"Blizzeracz"},"content":"        description \u003d description.replace(\" \", \"\");","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"Blizzeracz"},"content":"        return description;","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":229,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":230,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Blizzeracz":230}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":" * The `Storage` class handles loading and saving tasks to a data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"    private static final String FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"    private String filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a `Storage` object with the default data file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"    public Storage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"        this.filePath \u003d DATA_FILE_PATH;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a `Storage` object with a custom data file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"     * @param filePath The file path to the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"     * Loads tasks from the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"     * @return An ArrayList of tasks loaded from the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If there is an error loading tasks or the data file is corrupted.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"    public ArrayList\u003cTask\u003e loadTask() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"            File folder \u003d new File(FOLDER_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"                folder.mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"                return loadedTasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"                String[] parts \u003d line.split(\"]\", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"                boolean isDone \u003d parts[1].equals(\"[X\");","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"                description \u003d description.replace(\"(\", \"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Blizzeracz"},"content":"                description \u003d description.replace(\")\", \"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Blizzeracz"},"content":"                Task task \u003d Parser.parseLoad(taskType, description, isDone);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"Blizzeracz"},"content":"                loadedTasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Blizzeracz"},"content":"            scanner.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Blizzeracz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Corrupted data file: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Blizzeracz"},"content":"        return loadedTasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Blizzeracz"},"content":"     * Saves tasks to the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Blizzeracz"},"content":"     * @param tasks The ArrayList of tasks to be saved.","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If there is an error saving tasks to the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Blizzeracz"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Blizzeracz"},"content":"            File folder \u003d new File(FOLDER_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Blizzeracz"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Blizzeracz"},"content":"                folder.mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Blizzeracz"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"Blizzeracz"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"Blizzeracz"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"Blizzeracz"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"Blizzeracz"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"Blizzeracz"},"content":"                fw.write((tasks.get(i)).toSave() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"Blizzeracz"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"Blizzeracz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Error saving tasks to data file: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Blizzeracz":105}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":" * Represents a User interface for interacting with the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a `Ui` object and initializes the scanner for user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"    public Ui() {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"     * Displays a welcome message when the program starts.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"     * @return A welcome message as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"        return \"Hi! This is your AI assistant LoyBoy!\\n Remember to type \u0027save\u0027 to save\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"                \" your list! What can I do for you today?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"     * Reads and returns user input as a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"        System.out.print(\"\\nEnter a command: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"     * Displays a message when a task is added to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"     * @param task       The task that was added.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"     * @param totalTasks The total number of tasks in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating the task addition.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"    public String showTaskAddedMessage(Task task, int totalTasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"        String response \u003d \"Got it! I\u0027ve added this task: \\n\" + task +","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"                \"\\n\" + \"Now you have \" + totalTasks + \" task(s) in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"     * Displays a message when a task is removed from the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"     * @param task       The task that was removed.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"     * @param totalTasks The total number of tasks in the list after removal.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating the task removal.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"    public String showTaskRemoveMessage(Task task, int totalTasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"        String response \u003d \"Yes Sir. I\u0027ve removed the following task:\" + \"\\n\" + task +","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"                \"\\n\" + \"Now you have \" + totalTasks + \" task(s) in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"Blizzeracz"},"content":"     * Displays a message when there are no matching tasks found.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating no matching tasks found.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"Blizzeracz"},"content":"    public String showNoMatchingTasksMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"Blizzeracz"},"content":"        return \"No matching tasks found in your list :(\";","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"Blizzeracz"},"content":"     * Displays a message when there are matching tasks found.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating matching tasks found.","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"Blizzeracz"},"content":"    public String showFindTaskMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"Blizzeracz"},"content":"        return \"Here are the matching tasks in your list :D\";","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"Blizzeracz"},"content":"     * Displays a message when no task is found for a given number.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating no task found for a given number.","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"Blizzeracz"},"content":"    public String showNoTaskFound() {","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"Blizzeracz"},"content":"        return \"There is no task for this number!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"Blizzeracz"},"content":"     * Displays an error message when loading tasks from a data file fails.","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"Blizzeracz"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Blizzeracz"},"content":"        System.err.println(\"Error! Cannot load tasks from data file.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"Blizzeracz"},"content":"     * Closes the scanner used for user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"Blizzeracz"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Blizzeracz"},"content":"        scanner.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"Blizzeracz"},"content":"     * Displays a message for an invalid command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating an invalid command.","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"Blizzeracz"},"content":"    public String showInvalidCommand() {","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"Blizzeracz"},"content":"        return \"You inputted an invalid command! Please try deadline, todo, or event :)\";","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Blizzeracz":114}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":" * Represents a task with a deadline, which extends the base `Task` class.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"    protected Type type \u003d Type.DEADLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a `DeadlineTask` object with a description, deadline date, and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"     * @param by      The deadline date in the \"YYYY-MM-DD\" format.","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DateTimeException If the input date format is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"    public DeadlineTask(String description, String by, boolean isDone) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"        assert description !\u003d null : \"Description cannot be null.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"            byDate \u003d setDate(by);","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please input your date in the YYYY-MM-DD format!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the formatted deadline date.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"     * @return The formatted deadline date in \"MMM dd yyyy\" format.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"    public String getFormattedDeadline() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"        return byDate.format(formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the deadline date.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"     * @return The deadline date as a `LocalDate` object.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"        return byDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.byDate + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"    public Type getType() {","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"        return type;","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"Blizzeracz"},"content":"    public LocalDate getCompareDate() {","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"Blizzeracz"},"content":"        return byDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Blizzeracz"},"content":"     * Returns a string representation of the `DeadlineTask`.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Blizzeracz"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"Blizzeracz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"Blizzeracz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedDeadline() + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Blizzeracz":79}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":" * Represents an event task, which extends the base `Task` class.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"    protected Type type \u003d Type.EVENT;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs an `EventTask` object with a description, start date, end date, and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"     * @param from        The start date of the event in the \"YYYY-MM-DD\" format.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"     * @param to          The end date of the event in the \"YYYY-MM-DD\" format.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException     If the input date format is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"    public EventTask(String description, String from, String to, boolean isDone) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"        assert description !\u003d null : \"Description cannot be null.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"            fromDate \u003d setDate(from);","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"            toDate \u003d setDate(to);","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Please input your date in the YYYY-MM-DD format!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the formatted start date of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"     * @return The formatted start date in \"MMM dd yyyy\" format.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"    public String getFormattedFromDate() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"        return fromDate.format(formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the formatted end date of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"     * @return The formatted end date in \"MMM dd yyyy\" format.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"    public String getFormattedToDate() {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"        return toDate.format(formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.fromDate + \" to: \" + this.toDate + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"    public Type getType() {","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"        return type;","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"Blizzeracz"},"content":"     * @return","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"Blizzeracz"},"content":"    public LocalDate getCompareDate() {","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"Blizzeracz"},"content":"        return fromDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the end date of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Blizzeracz"},"content":"     * @return The end date as a `LocalDate` object.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Blizzeracz"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Blizzeracz"},"content":"        return toDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the start date of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Blizzeracz"},"content":"     * @return The start date as a `LocalDate` object.","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Blizzeracz"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Blizzeracz"},"content":"        return fromDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Blizzeracz"},"content":"     * Returns a string representation of the `EventTask`.","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Blizzeracz"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"Blizzeracz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"Blizzeracz"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFormattedFromDate() + \" to: \" + getFormattedToDate() + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Blizzeracz":101}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":" * Represents a task that can be added to a task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"    protected enum Type {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"        TODO,","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"        DEADLINE,","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"        EVENT","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"     * Converts the task to a string for saving to the data file.","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"     * @return A string representation of the task for saving.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"    public abstract String toSave();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a `Task` object with a description and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"     * @return \"X\" if the task is done, \" \" (space) if the task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"    public String markTask() {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"        return \"Heyyo! I\u0027ve marked this task as done!\\n\" + this;","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"    public String unmarkTask() {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"        return \"Aww snap! I\u0027ve unmarked this task!\\n\" + this;","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Blizzeracz"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Blizzeracz"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Blizzeracz"},"content":"        return this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Blizzeracz"},"content":"    public abstract Type getType();","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"Blizzeracz"},"content":"    public abstract LocalDate getCompareDate();","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Blizzeracz"},"content":"     * Returns a string representation of the `Task` for display.","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Blizzeracz"},"content":"     * @return A string representation of the task in the format \"[X] description\".","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"Blizzeracz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"Blizzeracz"},"content":"        return \"[\" + this.getStatus() + \"] \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Blizzeracz"},"content":"     * Parses a date string and returns a LocalDate object.","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Blizzeracz"},"content":"     * @param date The date string in the format \"yyyy-MM-dd\" to be parsed.","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"Blizzeracz"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the date string is invalid or cannot be parsed.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Blizzeracz"},"content":"    public LocalDate setDate(String date) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"Blizzeracz"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"Blizzeracz"},"content":"            return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Invalid date format or date does not exist!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Blizzeracz":106}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":" * Represents a list of tasks and provides operations to manage them.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs an empty `TaskList`.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a `TaskList` with a given list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"     * @param tasks The list of tasks to initialize the `TaskList`.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"     * Adds a task to the task list and displays a confirmation message.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"     * @param ui   The user interface for displaying messages.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"     * @return A confirmation message as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"    public String addTask(Task task, Ui ui) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"        // Assert that task is not null","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"        return ui.showTaskAddedMessage(task, tasks.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Blizzeracz"},"content":"     * Deletes a task from the task list by its index and displays a confirmation message.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Blizzeracz"},"content":"     * @param index The index of the task to be deleted (1-based).","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Blizzeracz"},"content":"     * @param ui    The user interface for displaying messages.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Blizzeracz"},"content":"     * @return A confirmation message as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Blizzeracz"},"content":"    public String deleteTask(int index, Ui ui) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Blizzeracz"},"content":"        Task removedTask \u003d tasks.remove(index - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Blizzeracz"},"content":"        return ui.showTaskRemoveMessage(removedTask, tasks.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Blizzeracz"},"content":"     * Retrieves a task from the task list by its index.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Blizzeracz"},"content":"     * @param index The index of the task to retrieve (0-based).","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Blizzeracz"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Blizzeracz"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Blizzeracz"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Blizzeracz"},"content":"            throw new DukeException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Blizzeracz"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Blizzeracz"},"content":"     * Finds tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Blizzeracz"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Blizzeracz"},"content":"     * @param ui      The Ui instance to display the results.","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message containing matching tasks as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Blizzeracz"},"content":"    public String findTasks(String keyword, Ui ui) {","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"Blizzeracz"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Blizzeracz"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Blizzeracz"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Blizzeracz"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Blizzeracz"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Blizzeracz"},"content":"            // No matching tasks found","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Blizzeracz"},"content":"            return ui.showNoMatchingTasksMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"Blizzeracz"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Blizzeracz"},"content":"            // Matching tasks found, display them to the user","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Blizzeracz"},"content":"            String response \u003d ui.showFindTaskMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"Blizzeracz"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Blizzeracz"},"content":"                response +\u003d i + 1 + \". \" + matchingTasks.get(i) + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Blizzeracz"},"content":"            return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the total number of tasks in the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Blizzeracz"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Blizzeracz"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Blizzeracz"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Blizzeracz"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Blizzeracz"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Blizzeracz"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"Blizzeracz"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Blizzeracz"},"content":"     * Lists all tasks in the task list, displaying them in a numbered format.","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message containing all tasks as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"Blizzeracz"},"content":"     * @throws DukeException If the task list is empty.","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Blizzeracz"},"content":"    public String listTask() throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"Blizzeracz"},"content":"        if (this.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"Blizzeracz"},"content":"            return \"List is empty!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"Blizzeracz"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"Blizzeracz"},"content":"            String response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"Blizzeracz"},"content":"            for (int item \u003d 0; item \u003c this.getTotalTasks(); item++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"Blizzeracz"},"content":"                response +\u003d item + 1 + \". \" + this.tasks.get(item) + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"Blizzeracz"},"content":"            return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"Blizzeracz"},"content":"     * Marks a task at the specified position as done and returns a message.","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"Blizzeracz"},"content":"     * @param pos The position of the task to be marked as done.","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"Blizzeracz"},"content":"     * @param ui The UI instance for displaying messages.","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating the task has been marked as done.","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"Blizzeracz"},"content":"     *         Returns an error message if the specified position is out of range.","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"Blizzeracz"},"content":"    public String markTask(int pos, Ui ui) {","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"Blizzeracz"},"content":"        if (pos \u003c 0 || pos \u003e\u003d this.getTotalTasks()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"Blizzeracz"},"content":"            return ui.showNoTaskFound();","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"Blizzeracz"},"content":"        return tasks.get(pos).markTask();","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"Blizzeracz"},"content":"     * Unmarks a task at the specified position and returns a message.","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"Blizzeracz"},"content":"     * @param pos The position of the task to be unmarked.","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"Blizzeracz"},"content":"     * @param ui The UI instance for displaying messages.","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"Blizzeracz"},"content":"     * @return A message indicating the task has been unmarked.","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"Blizzeracz"},"content":"     *         Returns an error message if the specified position is out of range.","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"Blizzeracz"},"content":"    public String unmarkTask(int pos, Ui ui) {","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"Blizzeracz"},"content":"        if (pos \u003c 0 || pos \u003e\u003d this.getTotalTasks()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"Blizzeracz"},"content":"            return ui.showNoTaskFound();","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"Blizzeracz"},"content":"        return tasks.get(pos).unmarkTask();","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"Blizzeracz"},"content":"     * Sorts the tasks within this TaskList and returns a formatted response.","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"Blizzeracz"},"content":"     * This method categorizes tasks into three types: ToDo, Deadline, and Event,","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"Blizzeracz"},"content":"     * sorts each category separately, and then combines them into a single sorted list.","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"Blizzeracz"},"content":"     * The sorting order for ToDo tasks is based on their descriptions, while Deadline","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"Blizzeracz"},"content":"     * and Event tasks are sorted based on their respective date or time.","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"Blizzeracz"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"Blizzeracz"},"content":"     * @return A formatted response showing the sorted list of tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"Blizzeracz"},"content":"    public String sortTasks(Ui ui) {","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"Blizzeracz"},"content":"        if (this.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"Blizzeracz"},"content":"            return \"There is nothing to sort!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"Blizzeracz"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"Blizzeracz"},"content":"            String response \u003d \"Here is the sorted list! \\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"Blizzeracz"},"content":"            List\u003cTask\u003e todoTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"Blizzeracz"},"content":"            List\u003cTask\u003e deadlineTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"Blizzeracz"},"content":"            List\u003cTask\u003e eventTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"Blizzeracz"},"content":"            // Categorize tasks into different lists based on their types","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"Blizzeracz"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"Blizzeracz"},"content":"                if (task.getType() \u003d\u003d Task.Type.TODO) {","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"Blizzeracz"},"content":"                    todoTasks.add(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"Blizzeracz"},"content":"                } else if (task.getType() \u003d\u003d Task.Type.DEADLINE) {","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"Blizzeracz"},"content":"                    deadlineTasks.add(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"Blizzeracz"},"content":"                } else if (task.getType() \u003d\u003d Task.Type.EVENT) {","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"Blizzeracz"},"content":"                    eventTasks.add(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"Blizzeracz"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"Blizzeracz"},"content":"            // Sort tasks within each category","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"Blizzeracz"},"content":"            Collections.sort(todoTasks, Comparator.comparing(Task::getDescription));","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"Blizzeracz"},"content":"            Collections.sort(deadlineTasks, Comparator.comparing(Task::getCompareDate));","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"Blizzeracz"},"content":"            Collections.sort(eventTasks, Comparator.comparing(Task::getCompareDate));","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"Blizzeracz"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":206,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"Blizzeracz"},"content":"            // Update the original tasks list with the sorted tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"Blizzeracz"},"content":"            for (Task task : todoTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"Blizzeracz"},"content":"                tasks.set(counter, task);","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"Blizzeracz"},"content":"                response +\u003d counter++ + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"Blizzeracz"},"content":"            for (Task task : deadlineTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"Blizzeracz"},"content":"                tasks.set(counter, task);","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"Blizzeracz"},"content":"                response +\u003d counter++ + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"Blizzeracz"},"content":"            for (Task task : eventTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"Blizzeracz"},"content":"                tasks.set(counter, task);","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"Blizzeracz"},"content":"                response +\u003d counter++ + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"Blizzeracz"},"content":"            return response;","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Blizzeracz":226}},{"path":"src/main/java/duke/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":" * Represents a task without a specific deadline or event date.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"    protected Type type \u003d Type.TODO;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"     * Constructs a ToDoTask with the given description and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"     * @param isDone      Indicates whether the task is completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"    public ToDoTask(String description, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"        assert description !\u003d null : \"Description cannot be null.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"    public Type getType() {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"        return type;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"    public LocalDate getCompareDate() {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"        return null;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"     * Returns a string representation of the ToDoTask, including its completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"     * @return A string representation of the ToDoTask.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Blizzeracz":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-font-size: 15px;\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Blizzeracz":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"1000.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"2.0\" layoutY\u003d\"557.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"877.0\" AnchorPane.bottomAnchor\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"879.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"121.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"1000.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"1000.0\" \u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Blizzeracz":21}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"import duke.Parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"    public void testParseDeadline() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"            // Create a test input","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"            String input \u003d \"deadline Finish project by: 2023-12-31\";","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"            // Call the parse method and assert the expected output","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"            Parser.parse(input, taskList, ui);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"            DeadlineTask task \u003d (DeadlineTask) taskList.getTask(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"            assertEquals(\"Finish project\", task.getDescription());","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"            assertEquals(\"2023-12-31\", task.getByDate().toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"    public void testParseEvent() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"            // Create a test input","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"            String input \u003d \"event Birthday party from: 2023-09-01 to: 2023-09-03\";","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"            // Call the parse method and assert the expected output","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"            Parser.parse(input, taskList, ui);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"            EventTask task \u003d (EventTask) taskList.getTask(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"            assertEquals(\"Birthday party\", task.getDescription());","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"            assertEquals(\"2023-09-01\", task.getFromDate().toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"            assertEquals(\"2023-09-03\", task.getToDate().toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Blizzeracz":49}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Blizzeracz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Blizzeracz"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Blizzeracz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Blizzeracz"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Blizzeracz"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Blizzeracz"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Blizzeracz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Blizzeracz"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Blizzeracz"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Blizzeracz"},"content":"    public void testSaveAndLoadTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Blizzeracz"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Blizzeracz"},"content":"            // Create a sample list of tasks","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Blizzeracz"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Blizzeracz"},"content":"            tasks.add(new ToDoTask(\"Task 1\", false));","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Blizzeracz"},"content":"            tasks.add(new DeadlineTask(\"Task 2\", \"2001-02-28\", false));","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Blizzeracz"},"content":"            tasks.add(new EventTask(\"Task 3\", \"2001-02-28\", \"2001-03-28\", true));","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Blizzeracz"},"content":"            // Create a temporary file path for testing","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Blizzeracz"},"content":"            String testFilePath \u003d \"./data/test-duke.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Blizzeracz"},"content":"            // Save tasks to the test file","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Blizzeracz"},"content":"            Storage storage \u003d new Storage(testFilePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Blizzeracz"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Blizzeracz"},"content":"            // Load tasks from the test file","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Blizzeracz"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Blizzeracz"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Blizzeracz"},"content":"            // Assert that the loaded tasks match the original tasks","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Blizzeracz"},"content":"            assertEquals(tasks.size(), loadedTasks.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Blizzeracz"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Blizzeracz"},"content":"                assertEquals(tasks.get(i).getDescription(), loadedTasks.get(i).getDescription());","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Blizzeracz"},"content":"                assertEquals(tasks.get(i).getStatus(), loadedTasks.get(i).getStatus());","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Blizzeracz"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Blizzeracz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Blizzeracz"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Blizzeracz"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Blizzeracz"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Blizzeracz"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Blizzeracz":44}}]
