[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"    public void writeToFile(String path) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"            FileWriter file \u003d new FileWriter(path, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"            int completed \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"            file.write(\"D \" + \"| \" + completed + \" | \" + this.description + \"| \" + this.by + \"\\r\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"            file.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"revdrag":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"    static String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"    final static String LIST \u003d \"list\";","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"    final static String MARK \u003d \"mark\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"    final static String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"    final static String TODO \u003d \"todo\";","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"    final static String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"    final static String EVENT \u003d \"event\";","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"    final static String DELETE \u003d \"delete\";","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"        ArrayList\u003cTask\u003e storedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"            System.out.println(\"Checking for data file!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"            findDirectory(\"./data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"            readFile(\"./data\", \"data.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"            PrintWriter writer \u003d new PrintWriter(\"./data/data.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"            writer.print(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"revdrag"},"content":"        String logo \u003d \"        ┏┓\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"                + \"        ┃┃\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"                + \"        ┃┗━┳┓╋┏┳━━┓\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"revdrag"},"content":"                + \"        ┃┏┓┃┃╋┃┃┃━┫\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"revdrag"},"content":"                + \"        ┗━━┻━┓┏┻━━┛\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"revdrag"},"content":"                + \"        ╋╋╋┏━┛┃\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"revdrag"},"content":"                + \"        ╋╋╋┗━━┛\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"revdrag"},"content":"        System.out.println(\"\\nHello! I\u0027m \\n\" + logo);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"revdrag"},"content":"        System.out.println(\"How can I help you? \\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"revdrag"},"content":"        String input \u003d userInput.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"        String[] inputArr \u003d input.split(\" \",2);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"revdrag"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"            startDuke(input, inputArr, storedList);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"revdrag"},"content":"            input \u003d userInput.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"revdrag"},"content":"            inputArr \u003d input.split(\" \",2);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"revdrag"},"content":"        storedList.forEach((x) -\u003e x.writeToFile(\"./data/data.txt\")); // store inside data.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"revdrag"},"content":"        System.out.println(\"Bye (actually hehe). Hope to see you again!\\n\" + line);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"revdrag"},"content":"    public static void startDuke(String input, String[] inputArr, ArrayList\u003cTask\u003e storedList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"revdrag"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"revdrag"},"content":"            switch (inputArr[0]) {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"revdrag"},"content":"                case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"revdrag"},"content":"                    System.out.print(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"revdrag"},"content":"                    for (int i \u003d 0; i \u003c storedList.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"revdrag"},"content":"                        int index \u003d i + 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"revdrag"},"content":"                        Task t \u003d storedList.get(i);","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"revdrag"},"content":"                        System.out.println(index + \".\" + t.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"revdrag"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"revdrag"},"content":"                    System.out.print(line + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"revdrag"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"revdrag"},"content":"                case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"revdrag"},"content":"                    int mIndex \u003d input.charAt(5) - 49;","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"revdrag"},"content":"                    Task t \u003d storedList.get(mIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"revdrag"},"content":"                    storedList.get(mIndex).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"revdrag"},"content":"                    System.out.println(t.toString() + \"\\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"revdrag"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"revdrag"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"revdrag"},"content":"                    int umIndex \u003d input.charAt(7) - 49;","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"revdrag"},"content":"                    Task umTask \u003d storedList.get(umIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"revdrag"},"content":"                    storedList.get(umIndex).markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"revdrag"},"content":"                    System.out.println(umTask.toString() + \"\\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"revdrag"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"revdrag"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"revdrag"},"content":"                    if (inputArr[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"revdrag"},"content":"                        throw new DukeException(String.format(DukeException.NON_EMPTY, DEADLINE));","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"revdrag"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"revdrag"},"content":"                    String[] deadlineArr \u003d inputArr[1].split(\"/by \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"revdrag"},"content":"                    Task deadline \u003d new Deadline(deadlineArr[0], deadlineArr[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"revdrag"},"content":"                    storedList.add(deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"added \" + deadline.toString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"Now you have \" + storedList.size() + \" tasks in the list. \\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"revdrag"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"revdrag"},"content":"                case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"revdrag"},"content":"                    if (inputArr[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"revdrag"},"content":"                        throw new DukeException(String.format(DukeException.NON_EMPTY, EVENT));","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"revdrag"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"revdrag"},"content":"                    String[] eventArr1 \u003d inputArr[1].split(\"/from \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"revdrag"},"content":"                    String[] eventArr2 \u003d eventArr1[1].split(\"/to \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"revdrag"},"content":"                    Task event \u003d new Event(eventArr1[0], eventArr2[0], eventArr2[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"revdrag"},"content":"                    storedList.add(event);","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"added \" + event.toString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"Now you have \" + storedList.size() + \" tasks in the list. \\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"revdrag"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"revdrag"},"content":"                case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"revdrag"},"content":"                    if (inputArr[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"revdrag"},"content":"                        throw new DukeException(String.format(DukeException.NON_EMPTY, TODO));","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"revdrag"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"revdrag"},"content":"                    Task todo \u003d new Todo(inputArr[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"revdrag"},"content":"                    storedList.add(todo);","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"added \" + todo.toString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"Now you have \" + storedList.size() + \" tasks in the list. \\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"revdrag"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"revdrag"},"content":"                case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"revdrag"},"content":"                    int deleteIndex \u003d input.charAt(7) - 49;","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"revdrag"},"content":"                    Task deleted \u003d storedList.get(deleteIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"revdrag"},"content":"                    storedList.remove(deleteIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"Noted. I\u0027ve removed the task: \\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"revdrag"},"content":"                    System.out.println(deleted.toString() + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"revdrag"},"content":"                    System.out.println(\"Now you have \" + storedList.size() + \" tasks in the list. \\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"revdrag"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"revdrag"},"content":"                default:","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"revdrag"},"content":"                    throw new DukeException(DukeException.UNKNOWN);","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"revdrag"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"revdrag"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"revdrag"},"content":"            System.out.println(e.getMessage() + \"\\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"revdrag"},"content":"    public static void findDirectory(String directory) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"revdrag"},"content":"        File dataDirectory \u003d new File(directory);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"revdrag"},"content":"        if (dataDirectory.exists() \u0026\u0026 dataDirectory.isDirectory()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"revdrag"},"content":"            System.out.println(\"Directory exists.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"revdrag"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"revdrag"},"content":"            if (dataDirectory.mkdir()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"revdrag"},"content":"                System.out.println(\"Directory created.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"revdrag"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"revdrag"},"content":"    public static void readFile(String directory, String fileName) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"revdrag"},"content":"        File data \u003d new File(directory, fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"revdrag"},"content":"        if (data.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"revdrag"},"content":"            System.out.println(\"Data file exists.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"revdrag"},"content":"            Scanner scanner \u003d new Scanner(data);","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"revdrag"},"content":"            scanner.useDelimiter(\"\\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"revdrag"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"revdrag"},"content":"                String taskType \u003d scanner.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"revdrag"},"content":"                System.out.println(taskType);","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"revdrag"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"revdrag"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"revdrag"},"content":"            if (data.createNewFile()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"revdrag"},"content":"                System.out.println(\"Data file created.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"revdrag"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"revdrag":152,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"    private static final String OOPS \u003d \"Oopssss!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"    public static final String NON_EMPTY \u003d \"The description of %s cannot be empty!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"    public static final String UNKNOWN \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"        super(String.format(\"%s %s\", OOPS, message));","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"revdrag":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"    public void writeToFile(String path) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"            FileWriter file \u003d new FileWriter(path, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"            int completed \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"            file.write(\"E \" + \"| \" + completed + \" | \" + this.description + \"| \" + this.from","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"                    + \"| \" + this.to + \"\\r\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"            file.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"revdrag":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"    abstract void writeToFile(String path);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"revdrag":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"    public void writeToFile(String path) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"            FileWriter file \u003d new FileWriter(path, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"            int completed \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"            file.write(\"T \" + \"| \" + completed + \" | \" + this.description + \"\\r\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"            file.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"revdrag":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"todo read a book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"deadline buy groceries /by tmr","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"event dinner /from Monday 6pm /to Monday 7pm","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"list","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"revdrag":8}}]
