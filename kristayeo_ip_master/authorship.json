[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"checkstyle {","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kristayeo":23,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"# Duke User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"### Adding Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"- The user can add three types of tasks: ","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"  1. To do: `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"  2. Deadline: `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"  3. Event: `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"### Viewing Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"- See all tasks using `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"- Find specific tasks using `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"### Edit Task List","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"- Delete tasks with `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"- Mark tasks with `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"- Unmark tasks with `unmark`","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"### Ask for help","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"Be informed of available commands with `help`","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"### Exit program","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"Close duke with `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"### `todo` - Add a new todo","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"Use `todo \u003cdescription\u003e` to add a new todo to your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"`todo homework`","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"Duke will show an acknowledgement message, displaying the added todo and number of tasks in your existing list.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"    [T][ ] homework","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"### `Deadline` - Add a new deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"use `deadline \u003cdescription\u003e /by \u003cdate in dd/MM/yyyy\u003e` to add a new deadline to your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"`deadline submit homework /by 15/03/2023`","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"Duke will show an acknowledgement message, displaying the added deadline and number of tasks in your existing list.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"    [D][ ] submit homework (by: Mar 15 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"### `Event` - Add a new event","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"Use `event \u003cdescription\u003e /from \u003cdate in dd/MM/yyyy\u003e /to \u003cdate in dd/MM/yyyy\u003e` to add a new event to your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"`event camp /from 22/05/2023 /to 25/05/2023`","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"Duke will show an acknowledgement message, displaying the added event and number of tasks in your existing list.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"    [E][ ] camp (from: May 22 2023 to: May 25 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"### `list` - Display all tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"Use `list` to display all existing tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"Duke will acknowledge the `list` command and display all tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"1. [T][ ] homework","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"2. [D][ ] submit homework (by: Mar 15 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"3. [E][ ] camp (from: May 22 2023 to: May 25 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"If there are no existing tasks in the list, Duke will display:","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"You currently have no tasks in your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"kristayeo"},"content":"### `find` - Search for specific tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"kristayeo"},"content":"Use `find \u003ckeyword\u003e` to filter all tasks, displaying those that contain the given keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"kristayeo"},"content":"`find work`","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"kristayeo"},"content":"Duke will list all the tasks that have \u0027work\u0027 in the task description.","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"kristayeo"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"kristayeo"},"content":"1. [T][ ] homework","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"kristayeo"},"content":"2. [D][ ] submit homework (by: Mar 15 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"kristayeo"},"content":"If there are no matching tasks, Duke will display the message:","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"kristayeo"},"content":"No matching tasks found.","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"kristayeo"},"content":"### `delete` - Remove task from list","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"kristayeo"},"content":"Use `delete \u003ctask number\u003e` to remove the task at the given integer position in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"kristayeo"},"content":"`delete 2`","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"kristayeo"},"content":"Duke will acknowledge the command, display the deleted task and update the number of tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"kristayeo"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"kristayeo"},"content":"    [D][ ] submit homework (by: Mar 15 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"kristayeo"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"kristayeo"},"content":"If the given task does not exist, Duke will display the message: ","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"kristayeo"},"content":"The given task does not exist.","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"kristayeo"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"kristayeo"},"content":"Use `mark \u003ctask number\u003e` to mark the task at the given integer position in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"kristayeo"},"content":"`mark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"kristayeo"},"content":"Duke will acknowledge the command and update its status, displaying the updated version of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"kristayeo"},"content":"OK, I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"kristayeo"},"content":"    [T][X] homework","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"kristayeo"},"content":"### `unmark` - Unmark a task","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"kristayeo"},"content":"Use `unmark \u003ctask number\u003e` to set the task at the given integer position as not done yet.","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"kristayeo"},"content":"`unmark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"kristayeo"},"content":"Duke will acknowledge the command and update its status, displaying the updated version of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"kristayeo"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"kristayeo"},"content":"    [T][X] homework","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"kristayeo"},"content":"### `help` - Get the list of available commands","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"kristayeo"},"content":"Use `help` to get the list of commands and their uses.","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"kristayeo"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"kristayeo"},"content":"`help`","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"kristayeo"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"kristayeo"},"content":"Duke will acknowledge the command and display the list of commands to use.","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"kristayeo"},"content":"I heard you needed some help!","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"kristayeo"},"content":"Here are your commands:","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"kristayeo"},"content":"Viewing your tasks:","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"kristayeo"},"content":"    list","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"kristayeo"},"content":"    find {keyword}","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"kristayeo"},"content":"Adding new tasks:","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"kristayeo"},"content":"    todo {task}","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"kristayeo"},"content":"    deadline {task} /by {dd/MM/yyyy}","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"kristayeo"},"content":"    \"event {task} /from {dd/MM/yyyy} /to {dd/MM/yyyy}","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"kristayeo"},"content":"Editing your task list:","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"kristayeo"},"content":"    mark {task number}","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"kristayeo"},"content":"    unmark {task number}","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"kristayeo"},"content":"    delete {task number}","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"kristayeo"},"content":"Exit the program: bye","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"kristayeo"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"kristayeo"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"kristayeo"},"content":"### `bye` - Exit Duke","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":219,"author":{"gitId":"kristayeo"},"content":"Use `bye` when you\u0027re done using Duke to close the program.","lastModifiedDate":"2023-09-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":223,"author":{"gitId":"kristayeo"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":227,"author":{"gitId":"kristayeo"},"content":"Duke will acknowledge the command and close the program shortly after.","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":230,"author":{"gitId":"kristayeo"},"content":"Bye! Hope to see you again soon","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"kristayeo":204,"-":27}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"    private void flip() {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"        db.flip();","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"        return db;","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"kristayeo":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":" * Class that implements the chatbot","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"        stage.show();","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"        });","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"kristayeo"},"content":"        });","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"        });","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"kristayeo"},"content":"        });","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"kristayeo"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"kristayeo"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"kristayeo"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"kristayeo"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"kristayeo"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"kristayeo"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"kristayeo"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"kristayeo"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"kristayeo"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"kristayeo"},"content":"     * Iteration 2:","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"kristayeo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"kristayeo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"kristayeo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"kristayeo"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"kristayeo"},"content":"        String dukeText \u003d getResponse(userText);","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"kristayeo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"kristayeo"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"kristayeo"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"kristayeo"},"content":"        );","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"kristayeo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"kristayeo"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"kristayeo"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"kristayeo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"kristayeo"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"kristayeo"},"content":"            return \"Bye! Hope to see you again soon.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"kristayeo"},"content":"            return Parser.parseCommand(input, taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"kristayeo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"kristayeo"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"kristayeo"},"content":"    public Duke() {","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"kristayeo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"kristayeo"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"kristayeo"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"kristayeo"},"content":"    public void run() {","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"kristayeo"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":164,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"kristayeo"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"kristayeo"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"kristayeo"},"content":"                String userCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"kristayeo"},"content":"                if (userCommand.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"kristayeo"},"content":"                    ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":171,"author":{"gitId":"kristayeo"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"kristayeo"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"kristayeo"},"content":"                String response \u003d Parser.parseCommand(userCommand, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"kristayeo"},"content":"                ui.showMessage(response);","lastModifiedDate":"2023-09-04"},{"lineNumber":176,"author":{"gitId":"kristayeo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"kristayeo"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":178,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"kristayeo"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-09-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"kristayeo"},"content":"     * Constructs the required variables for the chatbot and runs it","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"kristayeo"},"content":"     * @param args Command-line arguments passed in at startup","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"kristayeo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"kristayeo"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":191,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":" * Exception class for handling invalid commands","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new DukeException","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"     * @param message Error message to be printed to the user","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"public class Launcher {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"kristayeo":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"            stage.show();","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"kristayeo":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\", dukeImage)","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"        );","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"        );","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"                javafx.application.Platform.exit();","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"            });","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"            pause.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"kristayeo":68}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":" * Handler to load tasks from the file and save tasks into the file","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"     * Constructs a Storage object","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"     * @param filePath Location of the file to save the tasks into","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        ensureFolderExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        ensureFileExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"     * Ensures that the given folder of the filePath exists, and creates the folder if it doesn\u0027t","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"    private void ensureFolderExists() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"        File folder \u003d new File(filePath).getParentFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"     * Ensures that the given file of the filePath exists, and creates file if it doesn\u0027t","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"     * Loads tasks from the file","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"     * @return List of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"            if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"                // File is empty, return an empty list","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"                return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"            try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"//                    System.out.println(\"Line: \" + line); // Add this line for debugging","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"                    if (parts.length \u003e\u003d 3) { // Ensure there are enough parts to proceed","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"                        String type \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"                        String isDone \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"                        String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"                        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"                            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"                                tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"                            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"                                tasks.add(parseDeadline(parts, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"                            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"                                tasks.add(parseEvent(parts, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"kristayeo"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kristayeo"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"                        System.out.println(\"Skipping line with insufficient parts: \" + line);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"            // Handle file reading error","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kristayeo"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"kristayeo"},"content":"     * Parses the saved deadline from the file into the list","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"kristayeo"},"content":"     * @param parts The string array containing the split parts of the task saved into the file","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the deadline is done","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"kristayeo"},"content":"     * @return The deadline task","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"kristayeo"},"content":"    private Deadline parseDeadline(String[] parts, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"kristayeo"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"kristayeo"},"content":"        String dueBy \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"kristayeo"},"content":"        LocalDate dueDate \u003d LocalDate.parse(dueBy);  // Parse the date","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"kristayeo"},"content":"        return new Deadline(description, dueDate, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"kristayeo"},"content":"     * Parses the saved event from the file into the list","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"kristayeo"},"content":"     * @param parts The string array containing","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the deadline is done","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"kristayeo"},"content":"     * @return The event task","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"kristayeo"},"content":"    private Event parseEvent(String[] parts, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"kristayeo"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"kristayeo"},"content":"        String startTiming \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"kristayeo"},"content":"        String endTiming \u003d parts[4];","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"kristayeo"},"content":"        LocalDate startTime \u003d LocalDate.parse(startTiming);  // Parse the datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"kristayeo"},"content":"        LocalDate endTime \u003d LocalDate.parse(endTiming);  // Parse the datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"kristayeo"},"content":"        return new Event(description, startTime, endTime, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"kristayeo"},"content":"     * Saves the tasks from the list into the file","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"kristayeo"},"content":"     * @param tasks List of tasks to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"kristayeo"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"kristayeo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"kristayeo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"kristayeo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"kristayeo"},"content":"            try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"kristayeo"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"kristayeo"},"content":"                    String taskType \u003d task instanceof ToDo ? \"T\" : task instanceof Deadline ? \"D\" : \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"kristayeo"},"content":"                    String taskData \u003d taskType + \" | \" + task.toDataString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"kristayeo"},"content":"                    writer.write(taskData);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"kristayeo"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"kristayeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kristayeo"},"content":"            // Handle file writing error","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"kristayeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":166}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":" * Class to handle user interactions","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Ui object","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"     * Prints the welcome message of the bot","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        System.out.println(\"Hello! I\u0027m Meep.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * Reads the user input from the command line","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the user input","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     * Prints the response to the user input","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * @param message Response to user input","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"     * Prints goodbye message","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        System.out.println(\"Bye! Hope to see you again soon.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"        scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":53}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":" * Class that parses the user commands","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"     * Parses the given command of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"     * @param command Command given by the user","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"     * @param taskList TaskList object containing the existing tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"     * @return The reply to the given command","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid command","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    public static String parseCommand(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        String[] tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        String action \u003d tokens[0].trim().toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        switch (action) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"        case \"help\":","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"            return generateHelpResponse();","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"            return generateListResponse(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"            return generateDeleteResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"            return generateMarkResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"            return generateUnmarkResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"            return generateTodoResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"            return generateDeadlineResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"            return generateEventResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"        case \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"            return generateFindResponse(tokens, taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Sorry, I don\u0027t understand what that means.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"     * Runs through the existing TaskList and prints out the string representation of it","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"     * @return String representation of the list","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"    private static String generateListResponse(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"            return \"You currently have no tasks in your list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"            response.append((i + 1)).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a delete command","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"     * @param tokens String array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the deleted task response","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid delete command","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"    private static String generateDeleteResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"        boolean isCommandEmpty \u003d tokens.length \u003c 2;","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty) {","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please specify which task you wish to delete.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1].trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please insert a valid integer.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"kristayeo"},"content":"        boolean isInvalidTask \u003d taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size();","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"kristayeo"},"content":"        if (isInvalidTask) {","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The given task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"        Task deletedTask \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"        taskList.removeTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"        return generateTaskDeletedResponse(deletedTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a valid delete task command","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"kristayeo"},"content":"     * @param task Task the user wishes to delete","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the deleted task response","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"kristayeo"},"content":"    private static String generateTaskDeletedResponse(Task task, TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\\t\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"kristayeo"},"content":"        response.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"kristayeo"},"content":"        response.append(\"Now you have \").append(taskList.getTasks().size()).append(\" task(s) in the list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a mark task command","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task marked response","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid mark command","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"kristayeo"},"content":"    private static String generateMarkResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"kristayeo"},"content":"        boolean isCommandEmpty \u003d tokens.length \u003c 2;","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty) {","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please specify which task you wish to mark.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"kristayeo"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kristayeo"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1].trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kristayeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please insert a valid integer.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"kristayeo"},"content":"        boolean isInvalidTask \u003d taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size();","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"kristayeo"},"content":"        if (isInvalidTask) {","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The given task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"kristayeo"},"content":"        Task task \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"kristayeo"},"content":"        taskList.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"kristayeo"},"content":"        return generateTaskMarkedResponse(task, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for an unmark task command","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":155,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task unmarked response","lastModifiedDate":"2023-09-04"},{"lineNumber":156,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid unmark command","lastModifiedDate":"2023-09-04"},{"lineNumber":157,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":158,"author":{"gitId":"kristayeo"},"content":"    private static String generateUnmarkResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kristayeo"},"content":"        boolean isCommandEmpty \u003d tokens.length \u003c 2;","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty) {","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please specify which task you wish to unmark.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"kristayeo"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"kristayeo"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1].trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"kristayeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please insert a valid integer.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"kristayeo"},"content":"        boolean isInvalidTask \u003d taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size();","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"kristayeo"},"content":"        if (isInvalidTask) {","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The given task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"kristayeo"},"content":"        Task task \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"kristayeo"},"content":"        taskList.unmarkTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"kristayeo"},"content":"        return generateTaskMarkedResponse(task, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":184,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a valid mark or unmark task command","lastModifiedDate":"2023-09-04"},{"lineNumber":185,"author":{"gitId":"kristayeo"},"content":"     * @param task Task the user wishes to mark","lastModifiedDate":"2023-09-04"},{"lineNumber":186,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of the task to be set","lastModifiedDate":"2023-09-04"},{"lineNumber":187,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task marked response","lastModifiedDate":"2023-09-04"},{"lineNumber":188,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":189,"author":{"gitId":"kristayeo"},"content":"    private static String generateTaskMarkedResponse(Task task, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"kristayeo"},"content":"        String status \u003d isDone ? \"done\" : \"not done yet\";","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"kristayeo"},"content":"        return \"OK, I\u0027ve marked this task as \" + status + \":\\n\\t\" + task.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":195,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a todo command","lastModifiedDate":"2023-09-04"},{"lineNumber":196,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":197,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":198,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the todo added response","lastModifiedDate":"2023-09-04"},{"lineNumber":199,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid todo command","lastModifiedDate":"2023-09-04"},{"lineNumber":200,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":201,"author":{"gitId":"kristayeo"},"content":"    private static String generateTodoResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"kristayeo"},"content":"        boolean isCommandEmpty \u003d tokens.length \u003c 2 || tokens[1].trim().equalsIgnoreCase(\"\");","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty) {","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The description of todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"kristayeo"},"content":"        String taskDescription \u003d tokens[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"kristayeo"},"content":"        Task newTask \u003d new ToDo(taskDescription, \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"kristayeo"},"content":"        return generateTaskAddedResponse(newTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":216,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a deadline command","lastModifiedDate":"2023-09-04"},{"lineNumber":217,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":218,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":219,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the deadline added response","lastModifiedDate":"2023-09-04"},{"lineNumber":220,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid deadline command","lastModifiedDate":"2023-09-04"},{"lineNumber":221,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"kristayeo"},"content":"    private static String generateDeadlineResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"kristayeo"},"content":"        boolean isCommandEmpty \u003d tokens.length \u003c 2;","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty) {","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The description of deadline cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"kristayeo"},"content":"        String[] parts \u003d tokens[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"kristayeo"},"content":"        boolean isDeadlineAbsent \u003d parts.length \u003c 2 || parts[1].trim().isEmpty();","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"kristayeo"},"content":"        boolean isDescriptionAbsent \u003d parts[0].trim().isEmpty();","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty|| isDescriptionAbsent || isDeadlineAbsent) {","lastModifiedDate":"2023-09-20"},{"lineNumber":234,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please provide a task description and deadline.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"kristayeo"},"content":"        String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"kristayeo"},"content":"        String dueByString \u003d parts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":240,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":241,"author":{"gitId":"kristayeo"},"content":"            LocalDate dueBy \u003d LocalDate.parse(dueByString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"kristayeo"},"content":"            Task newTask \u003d new Deadline(taskDescription, dueBy, \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"kristayeo"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"kristayeo"},"content":"            return generateTaskAddedResponse(newTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"kristayeo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":248,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please enter valid date in dd/MM/yyyy format.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":249,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":250,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":251,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":254,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for an event command","lastModifiedDate":"2023-09-04"},{"lineNumber":255,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":256,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":257,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the event added response","lastModifiedDate":"2023-09-04"},{"lineNumber":258,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid event command","lastModifiedDate":"2023-09-04"},{"lineNumber":259,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":260,"author":{"gitId":"kristayeo"},"content":"    private static String generateEventResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"kristayeo"},"content":"        boolean isCommandEmpty \u003d tokens.length \u003c 2;","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":263,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty) {","lastModifiedDate":"2023-09-18"},{"lineNumber":264,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The description of event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":265,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":266,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":267,"author":{"gitId":"kristayeo"},"content":"        String[] parts \u003d tokens[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":268,"author":{"gitId":"kristayeo"},"content":"        boolean isStartAbsent \u003d parts.length \u003c 2 || parts[1].trim().isEmpty();","lastModifiedDate":"2023-09-18"},{"lineNumber":269,"author":{"gitId":"kristayeo"},"content":"        boolean isDescriptionAbsent \u003d parts[0].trim().isEmpty();","lastModifiedDate":"2023-09-18"},{"lineNumber":270,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":271,"author":{"gitId":"kristayeo"},"content":"        if (isDescriptionAbsent || isStartAbsent) {","lastModifiedDate":"2023-09-18"},{"lineNumber":272,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please provide a task description and event timing.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":273,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":274,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"kristayeo"},"content":"        String[] timingParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":276,"author":{"gitId":"kristayeo"},"content":"        boolean isEndAbsent \u003d timingParts.length \u003c 2 || timingParts[1].trim().isEmpty();","lastModifiedDate":"2023-09-18"},{"lineNumber":277,"author":{"gitId":"kristayeo"},"content":"        boolean isStartEmpty \u003d timingParts[0].trim().isEmpty();","lastModifiedDate":"2023-09-18"},{"lineNumber":278,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":279,"author":{"gitId":"kristayeo"},"content":"        if (isStartEmpty || isEndAbsent) {","lastModifiedDate":"2023-09-18"},{"lineNumber":280,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please provide both the start and end timings for the event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":281,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":282,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":283,"author":{"gitId":"kristayeo"},"content":"        String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":284,"author":{"gitId":"kristayeo"},"content":"        String startTimingString \u003d timingParts[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"kristayeo"},"content":"        String endTimingString \u003d timingParts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":286,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":287,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":288,"author":{"gitId":"kristayeo"},"content":"            LocalDate startTiming \u003d LocalDate.parse(startTimingString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":289,"author":{"gitId":"kristayeo"},"content":"            LocalDate endTiming \u003d LocalDate.parse(endTimingString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":290,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":291,"author":{"gitId":"kristayeo"},"content":"            Task newTask \u003d new Event(taskDescription, startTiming, endTiming, \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":292,"author":{"gitId":"kristayeo"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":293,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":294,"author":{"gitId":"kristayeo"},"content":"            return generateTaskAddedResponse(newTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":295,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":296,"author":{"gitId":"kristayeo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":297,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please enter valid date in dd/MM/yyyy format.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":298,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":299,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":300,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":301,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":302,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":303,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a valid task command","lastModifiedDate":"2023-09-04"},{"lineNumber":304,"author":{"gitId":"kristayeo"},"content":"     * @param task Task that has been added to the list","lastModifiedDate":"2023-09-04"},{"lineNumber":305,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":306,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task added response","lastModifiedDate":"2023-09-04"},{"lineNumber":307,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":308,"author":{"gitId":"kristayeo"},"content":"    private static String generateTaskAddedResponse(Task task, TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":309,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\\t\");","lastModifiedDate":"2023-08-31"},{"lineNumber":310,"author":{"gitId":"kristayeo"},"content":"        response.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":311,"author":{"gitId":"kristayeo"},"content":"        response.append(\"Now you have \").append(taskList.getTasks().size()).append(\" task(s) in the list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":312,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":313,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":314,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":315,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":316,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a find command","lastModifiedDate":"2023-09-04"},{"lineNumber":317,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command that has been split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":318,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":319,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the find response","lastModifiedDate":"2023-09-04"},{"lineNumber":320,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":321,"author":{"gitId":"kristayeo"},"content":"    private static String generateFindResponse(String[] tokens, TaskList taskList) {","lastModifiedDate":"2023-09-04"},{"lineNumber":322,"author":{"gitId":"kristayeo"},"content":"        boolean isCommandEmpty \u003d tokens.length \u003c 2;","lastModifiedDate":"2023-09-18"},{"lineNumber":323,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":324,"author":{"gitId":"kristayeo"},"content":"        if (isCommandEmpty) {","lastModifiedDate":"2023-09-18"},{"lineNumber":325,"author":{"gitId":"kristayeo"},"content":"            return \"Please specify a keyword to search for.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":326,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":327,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":328,"author":{"gitId":"kristayeo"},"content":"        String keyword \u003d tokens[1].trim();","lastModifiedDate":"2023-09-04"},{"lineNumber":329,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":330,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":331,"author":{"gitId":"kristayeo"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":332,"author":{"gitId":"kristayeo"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":333,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":334,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":335,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":336,"author":{"gitId":"kristayeo"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":337,"author":{"gitId":"kristayeo"},"content":"            response.append((i + 1)).append(\". \").append(matchingTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":338,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":339,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":340,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":341,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":342,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":343,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for the help command","lastModifiedDate":"2023-09-20"},{"lineNumber":344,"author":{"gitId":"kristayeo"},"content":"     * @return string containing a guide of the commands","lastModifiedDate":"2023-09-20"},{"lineNumber":345,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":346,"author":{"gitId":"kristayeo"},"content":"    private static String generateHelpResponse() {","lastModifiedDate":"2023-09-18"},{"lineNumber":347,"author":{"gitId":"kristayeo"},"content":"        String helpResponse \u003d \"I heard you needed some help!\\nHere are your commands:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":348,"author":{"gitId":"kristayeo"},"content":"                + \"Viewing your tasks:\\n\\tlist\\n\\tfind {keyword}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":349,"author":{"gitId":"kristayeo"},"content":"                + \"Adding new tasks:\\n\\t\"","lastModifiedDate":"2023-09-20"},{"lineNumber":350,"author":{"gitId":"kristayeo"},"content":"                + \"todo {task}\\n\\t\"","lastModifiedDate":"2023-09-20"},{"lineNumber":351,"author":{"gitId":"kristayeo"},"content":"                + \"deadline {task} /by {dd/MM/yyyy}\\n\\t\"","lastModifiedDate":"2023-09-20"},{"lineNumber":352,"author":{"gitId":"kristayeo"},"content":"                + \"event {task} /from {dd/MM/yyyy} /to {dd/MM/yyyy}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":353,"author":{"gitId":"kristayeo"},"content":"                + \"Editing your task list:\\n\\t\"","lastModifiedDate":"2023-09-20"},{"lineNumber":354,"author":{"gitId":"kristayeo"},"content":"                + \"mark {task number}\\n\\t\"","lastModifiedDate":"2023-09-20"},{"lineNumber":355,"author":{"gitId":"kristayeo"},"content":"                + \"unmark {task number}\\n\\t\"","lastModifiedDate":"2023-09-20"},{"lineNumber":356,"author":{"gitId":"kristayeo"},"content":"                + \"delete {task number}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":357,"author":{"gitId":"kristayeo"},"content":"                + \"Exit the program: bye\";","lastModifiedDate":"2023-09-20"},{"lineNumber":358,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":359,"author":{"gitId":"kristayeo"},"content":"        return helpResponse;","lastModifiedDate":"2023-09-20"},{"lineNumber":360,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":361,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":362,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":363,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":364,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":365,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":365}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" * Represents a Deadline, which is a Task with a due date","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    protected LocalDate dueBy;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"     * @param dueBy Date the deadline is due","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the deadline is done","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    public Deadline(String name, LocalDate dueBy, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the deadline to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event and the due date","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        return super.toDataString() + \" | \" + dueBy.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the deadline to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event and the due date","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"        String str \u003d \"[D] \" + super.getStatus() + \" \" + super.name + \" (by: \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"                dueBy.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":" * Represents an Event, which is a Task with a start and end date","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"    public LocalDate begin;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    public LocalDate end;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Event","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the event","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"     * @param begin Date of when the event begins","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"     * @param end Date of when the event ends","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the event is done","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"    public Event(String name, LocalDate begin, LocalDate end, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"        this.begin \u003d begin;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the event to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event, begin and end dates","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        return super.toDataString() + \" | \" + begin.format(DateTimeFormatter.ISO_LOCAL_DATE)","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"                + \" | \" + end.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the event to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event, begin and end dates","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        String str \u003d \"[E] \" + super.getStatus() + \" \" + super.name + \" (from: \"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"                + begin.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \"","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":" * Represents a Task object with a name and a toggleable status","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"    protected String name;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Task","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the task","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the task is done","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"    public Task(String name, String isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"        this.isDone \u003d isDone.equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"     * Sets the isDone status to true","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    public void mark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * Sets the isDone status to false","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task isDone status to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * @return \"[X]\" if done, \"[ ]\" if not done","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task isDone status to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"     * @return \"1\" if done, \"0\" if not done","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"    public String getDataStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        return this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task and task status to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"     * @return \"1\" if done, \"0\" if not done + \"|\" + name of the task","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + name;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task and task status to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"     * @return \"[X]\" if done, \"[ ]\" if not done + name of the task","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"        String str \u003d this.getStatus() + \" \" + this.name;","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":67}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":" * Represents a list of tasks that can be interacted with","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"     * Constructs a TaskList object","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"     * @param storage Storage where this list is saved","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * Adds a task to this TaskList object","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * Removes a task from this TaskList object","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     * @param index Position of the task to be removed","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Thrown DukeException if there is no such task of that index","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    public void removeTask(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"     * Marks a specified task\u0027s isDone status to true","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"     * @param index Position of the task to be marked","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Thrown DukeException if there is no such task of that index","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"     * Marks a specified task\u0027s isDone status to false","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"     * @param index Position of the task to be unmarked","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Thrown DukeException if there is no such task of that index","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"    public void unmarkTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"     * Returns a list with all the tasks in the TaskList","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"     * @return List of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"     * Returns a list of all the tasks that contain the given keyword","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"     * @param keyword Keyword to search for","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"     * @return List of tasks that contain the keyword","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"            if (task.name.contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"     * Loads the saved tasks into the current list","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"    private void loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"        tasks \u003d storage.loadTasks(); // Load tasks from storage when initializing","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":105}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":" * Represents a basic task, which is a ToDo","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new ToDo","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the ToDo","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the ToDo is done","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"    public ToDo(String name, String isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the ToDo to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status and name of the todo","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        return super.toDataString();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the ToDo to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status and name of the todo","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        String str \u003d \"[T] \" + super.getStatus() + \" \" + super.name;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kristayeo":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"kristayeo":19}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"        // Create a temporary test directory","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"        String testDir \u003d \"test_data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"        File tempDir \u003d new File(testDir);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"        if (!tempDir.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"            tempDir.mkdir();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        storage \u003d new Storage(testDir + \"/test.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    public void testSaveToDo() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"        tasks.add(new ToDo(\"Task 1\", \"0\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"        tasks.add(new ToDo(\"Task 2\", \"1\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(\"test_data/test.txt\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        assert lines.toString().equals(\"[T | 0 | Task 1, T | 1 | Task 2]\") : \"Mismatch in saved vs expected data.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"//        assertEquals(\"[T | 0 | Task 1, T | 1 | Task 2]\", lines.toString()); // Check if the file contains the expected content","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":49}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        // Create a temporary test directory","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        String testDir \u003d \"test_data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"        taskList \u003d new TaskList(new Storage(testDir + \"/test.txt\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    public void testAddTask() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        Task task \u003d new ToDo(\"Sample ToDo\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"        assertEquals(task, tasks.get(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    public void testRemoveTask() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        Task task1 \u003d new ToDo(\"Task 1\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        Task task2 \u003d new ToDo(\"Task 2\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        taskList.removeTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"        assertEquals(task2, tasks.get(1));","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"    public void testMarkTaskAsDone() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"        ToDo task \u003d new ToDo(\"Sample Task\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"        taskList.markTaskAsDone(2);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"        assert tasks.size() \u003d\u003d 3 : \"Mismatch between expected vs actual list size\";","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"        assert tasks.get(2).getDataStatus() \u003d\u003d \"1\" : \"Mismatch between expected vs actual task status\";","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"//        assertEquals(3, tasks.size());","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"//        assertEquals(\"1\", tasks.get(2).getDataStatus());","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"    public void testMarkTaskAsDone_InvalidIndex() {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.markTaskAsDone(10));","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"list","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"kristayeo":9}}]
