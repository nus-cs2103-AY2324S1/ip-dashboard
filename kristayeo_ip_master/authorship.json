[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kristayeo":3,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" * Class that implements the chatbot","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"     * Constructs the required variables for the chatbot and runs it","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"     * @param args Command-line arguments passed in at startup","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"        TaskList taskList \u003d new TaskList(storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"                String userCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"                if (userCommand.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"                    ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"                String response \u003d Parser.parseCommand(userCommand, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"                ui.showMessage(response);","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":36,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":" * Exception class for handling invalid commands","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new DukeException","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"     * @param message Error message to be printed to the user","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":16}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":" * Handler to load tasks from the file and save tasks into the file","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"     * Constructs a Storage object","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"     * @param filePath Location of the file to save the tasks into","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        ensureFolderExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        ensureFileExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"     * Ensures that the given folder of the filePath exists, and creates the folder if it doesn\u0027t","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"    private void ensureFolderExists() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"        File folder \u003d new File(filePath).getParentFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"     * Ensures that the given file of the filePath exists, and creates file if it doesn\u0027t","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"     * Loads tasks from the file","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"     * @return List of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"            if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"                // File is empty, return an empty list","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"                return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"            try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"//                    System.out.println(\"Line: \" + line); // Add this line for debugging","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"                    if (parts.length \u003e\u003d 3) { // Ensure there are enough parts to proceed","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"                        String type \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"                        String isDone \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"                        String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"                        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"                            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"                                tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"                            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"                                tasks.add(parseDeadline(parts, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"                            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"                                tasks.add(parseEvent(parts, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"kristayeo"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kristayeo"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"                        System.out.println(\"Skipping line with insufficient parts: \" + line);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"            // Handle file reading error","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kristayeo"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"kristayeo"},"content":"     * Parses the saved deadline from the file into the list","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"kristayeo"},"content":"     * @param parts The string array containing the split parts of the task saved into the file","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the deadline is done","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"kristayeo"},"content":"     * @return The deadline task","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"kristayeo"},"content":"    private Deadline parseDeadline(String[] parts, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"kristayeo"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"kristayeo"},"content":"        String dueBy \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"kristayeo"},"content":"        LocalDate dueDate \u003d LocalDate.parse(dueBy);  // Parse the date","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"kristayeo"},"content":"        return new Deadline(description, dueDate, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"kristayeo"},"content":"     * Parses the saved event from the file into the list","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"kristayeo"},"content":"     * @param parts The string array containing","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the deadline is done","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"kristayeo"},"content":"     * @return The event task","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"kristayeo"},"content":"    private Event parseEvent(String[] parts, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"kristayeo"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"kristayeo"},"content":"        String startTiming \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"kristayeo"},"content":"        String endTiming \u003d parts[4];","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"kristayeo"},"content":"        LocalDate startTime \u003d LocalDate.parse(startTiming);  // Parse the datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"kristayeo"},"content":"        LocalDate endTime \u003d LocalDate.parse(endTiming);  // Parse the datetime","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"kristayeo"},"content":"        return new Event(description, startTime, endTime, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"kristayeo"},"content":"     * Saves the tasks from the list into the file","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"kristayeo"},"content":"     * @param tasks List of tasks to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"kristayeo"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"kristayeo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"kristayeo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"kristayeo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"kristayeo"},"content":"            try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"kristayeo"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"kristayeo"},"content":"                    String taskType \u003d task instanceof ToDo ? \"T\" : task instanceof Deadline ? \"D\" : \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"kristayeo"},"content":"                    String taskData \u003d taskType + \" | \" + task.toDataString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"kristayeo"},"content":"                    writer.write(taskData);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"kristayeo"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"kristayeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kristayeo"},"content":"            // Handle file writing error","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"kristayeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":166}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":" * Class to handle user interactions","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Ui object","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"     * Prints the welcome message of the bot","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        System.out.println(\"Hello! I\u0027m Meep.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * Reads the user input from the command line","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the user input","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     * Prints the response to the user input","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * @param message Response to user input","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"     * Prints goodbye message","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        System.out.println(\"Bye! Hope to see you again soon.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"        scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":53}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":" * Class that parses the user commands","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"     * Parses the given command of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"     * @param command Command given by the user","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"     * @param taskList TaskList object containing the existing tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"     * @return The reply to the given command","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid command","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    public static String parseCommand(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        String[] tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        String action \u003d tokens[0].trim().toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        switch (action) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"                return generateListResponse(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"                return generateDeleteResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"                return generateMarkResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"                return generateUnmarkResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"                return generateTodoResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"                return generateDeadlineResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"                return generateEventResponse(tokens, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"            case \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"                return generateFindResponse(tokens, taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"                throw new DukeException(\"Sorry, I don\u0027t understand what that means.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"     * Runs through the existing TaskList and prints out the string representation of it","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"     * @return String representation of the list","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"    private static String generateListResponse(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"            return \"You currently have no tasks in your list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"            response.append((i + 1)).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a delete command","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"     * @param tokens String array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the deleted task response","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid delete command","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"    private static String generateDeleteResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please specify which task you wish to delete.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1].trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please insert a valid integer.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The given task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"kristayeo"},"content":"        Task deletedTask \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kristayeo"},"content":"        taskList.removeTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"        return generateTaskDeletedResponse(deletedTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a valid delete task command","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"     * @param task Task the user wishes to delete","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the deleted task response","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"kristayeo"},"content":"    private static String generateTaskDeletedResponse(Task task, TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\\t\");","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kristayeo"},"content":"        response.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kristayeo"},"content":"        response.append(\"Now you have \").append(taskList.getTasks().size()).append(\" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a mark task command","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task marked response","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid mark command","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"kristayeo"},"content":"    private static String generateMarkResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"kristayeo"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please specify which task you wish to mark.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"kristayeo"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"kristayeo"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1].trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"kristayeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please insert a valid integer.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"kristayeo"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The given task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"kristayeo"},"content":"        Task task \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"kristayeo"},"content":"        taskList.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"kristayeo"},"content":"        return generateTaskMarkedResponse(task, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":144,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for an unmark task command","lastModifiedDate":"2023-09-04"},{"lineNumber":145,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task unmarked response","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid unmark command","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"kristayeo"},"content":"    private static String generateUnmarkResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"kristayeo"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please specify which task you wish to unmark.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"kristayeo"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"kristayeo"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1].trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"kristayeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please insert a valid integer.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"kristayeo"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The given task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"kristayeo"},"content":"        Task task \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"kristayeo"},"content":"        taskList.unmarkTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"kristayeo"},"content":"        return generateTaskMarkedResponse(task, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":173,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a valid mark or unmark task command","lastModifiedDate":"2023-09-04"},{"lineNumber":174,"author":{"gitId":"kristayeo"},"content":"     * @param task Task the user wishes to mark","lastModifiedDate":"2023-09-04"},{"lineNumber":175,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of the task to be set","lastModifiedDate":"2023-09-04"},{"lineNumber":176,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task marked response","lastModifiedDate":"2023-09-04"},{"lineNumber":177,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":178,"author":{"gitId":"kristayeo"},"content":"    private static String generateTaskMarkedResponse(Task task, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"kristayeo"},"content":"        String status \u003d isDone ? \"done\" : \"not done yet\";","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"kristayeo"},"content":"        return \"OK, I\u0027ve marked this task as \" + status + \":\\n\\t\" + task.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":184,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a todo command","lastModifiedDate":"2023-09-04"},{"lineNumber":185,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":186,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":187,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the todo added response","lastModifiedDate":"2023-09-04"},{"lineNumber":188,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid todo command","lastModifiedDate":"2023-09-04"},{"lineNumber":189,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":190,"author":{"gitId":"kristayeo"},"content":"    private static String generateTodoResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"kristayeo"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The description of todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"kristayeo"},"content":"        String taskDescription \u003d tokens[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"kristayeo"},"content":"        Task newTask \u003d new ToDo(taskDescription, \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"kristayeo"},"content":"        return generateTaskAddedResponse(newTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":203,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a deadline command","lastModifiedDate":"2023-09-04"},{"lineNumber":204,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":205,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":206,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the deadline added response","lastModifiedDate":"2023-09-04"},{"lineNumber":207,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid deadline command","lastModifiedDate":"2023-09-04"},{"lineNumber":208,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":209,"author":{"gitId":"kristayeo"},"content":"    private static String generateDeadlineResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"kristayeo"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The description of deadline cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"kristayeo"},"content":"        String[] parts \u003d tokens[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"kristayeo"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please provide a task description and deadline.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"kristayeo"},"content":"        String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"kristayeo"},"content":"        String dueByString \u003d parts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":223,"author":{"gitId":"kristayeo"},"content":"            LocalDate dueBy \u003d LocalDate.parse(dueByString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"kristayeo"},"content":"            Task newTask \u003d new Deadline(taskDescription, dueBy, \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"kristayeo"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"kristayeo"},"content":"            return generateTaskAddedResponse(newTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"kristayeo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":230,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please enter valid date in dd/MM/yyyy format.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":231,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":232,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":233,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":236,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for an event command","lastModifiedDate":"2023-09-04"},{"lineNumber":237,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":238,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":239,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the event added response","lastModifiedDate":"2023-09-04"},{"lineNumber":240,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Error message to indicate invalid event command","lastModifiedDate":"2023-09-04"},{"lineNumber":241,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":242,"author":{"gitId":"kristayeo"},"content":"    private static String generateEventResponse(String[] tokens, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"kristayeo"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"The description of event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"kristayeo"},"content":"        String[] parts \u003d tokens[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"kristayeo"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please provide a task description and event timing.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"kristayeo"},"content":"        String[] timingParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"kristayeo"},"content":"        if (timingParts.length \u003c 2 || timingParts[0].trim().isEmpty() || timingParts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please provide both the start and end timings for the event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":256,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":257,"author":{"gitId":"kristayeo"},"content":"        String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"kristayeo"},"content":"        String startTimingString \u003d timingParts[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"kristayeo"},"content":"        String endTimingString \u003d timingParts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"kristayeo"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"kristayeo"},"content":"            LocalDate startTiming \u003d LocalDate.parse(startTimingString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"kristayeo"},"content":"            LocalDate endTiming \u003d LocalDate.parse(endTimingString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"kristayeo"},"content":"            Task newTask \u003d new Event(taskDescription, startTiming, endTiming, \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":266,"author":{"gitId":"kristayeo"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":267,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":268,"author":{"gitId":"kristayeo"},"content":"            return generateTaskAddedResponse(newTask, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":269,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"kristayeo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":271,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Please enter valid date in dd/MM/yyyy format.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":272,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":273,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":274,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":276,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":277,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a valid task command","lastModifiedDate":"2023-09-04"},{"lineNumber":278,"author":{"gitId":"kristayeo"},"content":"     * @param task Task that has been added to the list","lastModifiedDate":"2023-09-04"},{"lineNumber":279,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":280,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the task added response","lastModifiedDate":"2023-09-04"},{"lineNumber":281,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":282,"author":{"gitId":"kristayeo"},"content":"    private static String generateTaskAddedResponse(Task task, TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":283,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\\t\");","lastModifiedDate":"2023-08-31"},{"lineNumber":284,"author":{"gitId":"kristayeo"},"content":"        response.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":285,"author":{"gitId":"kristayeo"},"content":"        response.append(\"Now you have \").append(taskList.getTasks().size()).append(\" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":286,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":287,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":288,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":289,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":290,"author":{"gitId":"kristayeo"},"content":"     * Generates the response for a find command","lastModifiedDate":"2023-09-04"},{"lineNumber":291,"author":{"gitId":"kristayeo"},"content":"     * @param tokens The string array containing the command that has been split into parts","lastModifiedDate":"2023-09-04"},{"lineNumber":292,"author":{"gitId":"kristayeo"},"content":"     * @param taskList Given TaskList of the user","lastModifiedDate":"2023-09-04"},{"lineNumber":293,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the find response","lastModifiedDate":"2023-09-04"},{"lineNumber":294,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":295,"author":{"gitId":"kristayeo"},"content":"    private static String generateFindResponse(String[] tokens, TaskList taskList) {","lastModifiedDate":"2023-09-04"},{"lineNumber":296,"author":{"gitId":"kristayeo"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":297,"author":{"gitId":"kristayeo"},"content":"            return \"Please specify a keyword to search for.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":298,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":299,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":300,"author":{"gitId":"kristayeo"},"content":"        String keyword \u003d tokens[1].trim();","lastModifiedDate":"2023-09-04"},{"lineNumber":301,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":302,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":303,"author":{"gitId":"kristayeo"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":304,"author":{"gitId":"kristayeo"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":305,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":306,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":307,"author":{"gitId":"kristayeo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":308,"author":{"gitId":"kristayeo"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":309,"author":{"gitId":"kristayeo"},"content":"            response.append((i + 1)).append(\". \").append(matchingTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":310,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":311,"author":{"gitId":"kristayeo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":312,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":313,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":314,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":315,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":316,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":316}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" * Represents a Deadline, which is a Task with a due date","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    protected LocalDate dueBy;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"     * @param dueBy Date the deadline is due","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the deadline is done","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    public Deadline(String name, LocalDate dueBy, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the deadline to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event and the due date","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        return super.toDataString() + \" | \" + dueBy.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the deadline to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event and the due date","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"        String str \u003d \"[D] \" + super.getStatus() + \" \" + super.name + \" (by: \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"                dueBy.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":" * Represents an Event, which is a Task with a start and end date","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"    public LocalDate begin;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    public LocalDate end;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Event","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the event","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"     * @param begin Date of when the event begins","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"     * @param end Date of when the event ends","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the event is done","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"    public Event(String name, LocalDate begin, LocalDate end, String isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"        this.begin \u003d begin;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the event to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event, begin and end dates","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        return super.toDataString() + \" | \" + begin.format(DateTimeFormatter.ISO_LOCAL_DATE) +","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"                \" | \" + end.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the event to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status of event, name of event, begin and end dates","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        String str \u003d \"[E] \" + super.getStatus() + \" \" + super.name + \" (from: \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"                begin.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"                end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":" * Represents a Task object with a name and a toggleable status","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"    protected String name;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new Task","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the task","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the task is done","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"    public Task(String name, String isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"        this.isDone \u003d isDone.equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"     * Sets the isDone status to true","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    public void mark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * Sets the isDone status to false","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task isDone status to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * @return \"[X]\" if done, \"[ ]\" if not done","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task isDone status to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"     * @return \"1\" if done, \"0\" if not done","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"    public String getDataStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        return this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task and task status to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"     * @return \"1\" if done, \"0\" if not done + \"|\" + name of the task","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + name;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the task and task status to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"     * @return \"[X]\" if done, \"[ ]\" if not done + name of the task","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"        String str \u003d this.getStatus() + \" \" + this.name;","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":67}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":" * Represents a list of tasks that can be interacted with","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"     * Constructs a TaskList object","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"     * @param storage Storage where this list is saved","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * Adds a task to this TaskList object","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     * Removes a task from this TaskList object","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     * @param index Position of the task to be removed","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Thrown DukeException if there is no such task of that index","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    public void removeTask(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"     * Marks a specified task\u0027s isDone status to true","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"     * @param index Position of the task to be marked","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Thrown DukeException if there is no such task of that index","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"     * Marks a specified task\u0027s isDone status to false","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"     * @param index Position of the task to be unmarked","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"     * @throws DukeException Thrown DukeException if there is no such task of that index","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"    public void unmarkTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"     * Returns a list with all the tasks in the TaskList","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"     * @return List of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"     * Returns a list of all the tasks that contain the given keyword","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"     * @param keyword Keyword to search for","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"     * @return List of tasks that contain the keyword","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"            if (task.name.contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"kristayeo"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"kristayeo"},"content":"     * Loads the saved tasks into the current list","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"kristayeo"},"content":"    private void loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kristayeo"},"content":"        tasks \u003d storage.loadTasks(); // Load tasks from storage when initializing","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kristayeo":105}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":" * Represents a basic task, which is a ToDo","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new ToDo","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"     * @param name Name of the ToDo","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"     * @param isDone Status of whether the ToDo is done","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"    public ToDo(String name, String isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the ToDo to be saved","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status and name of the todo","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        return super.toDataString();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"     * Returns the string representation of the ToDo to be printed","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"     * @return String containing the status and name of the todo","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        String str \u003d \"[T] \" + super.getStatus() + \" \" + super.name;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"        return str;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kristayeo":38}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"        // Create a temporary test directory","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"        String testDir \u003d \"test_data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"        File tempDir \u003d new File(testDir);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"        if (!tempDir.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"            tempDir.mkdir();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"        storage \u003d new Storage(testDir + \"/test.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    public void testSaveToDo() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"        tasks.add(new ToDo(\"Task 1\", \"0\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"        tasks.add(new ToDo(\"Task 2\", \"1\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(\"test_data/test.txt\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        assertEquals(\"[T | 0 | Task 1, T | 1 | Task 2]\", lines.toString()); // Check if the file contains the expected content","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":48}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        // Create a temporary test directory","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"        String testDir \u003d \"test_data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"        taskList \u003d new TaskList(new Storage(testDir + \"/test.txt\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    public void testAddTask() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"        Task task \u003d new ToDo(\"Sample ToDo\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"        assertEquals(task, tasks.get(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"    public void testRemoveTask() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        Task task1 \u003d new ToDo(\"Task 1\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        Task task2 \u003d new ToDo(\"Task 2\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        taskList.removeTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"        assertEquals(task2, tasks.get(1));","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"    public void testMarkTaskAsDone() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"        ToDo task \u003d new ToDo(\"Sample Task\", \"0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"        taskList.markTaskAsDone(2);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"        assertEquals(\"1\", tasks.get(2).getDataStatus());","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"    public void testMarkTaskAsDone_InvalidIndex() {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.markTaskAsDone(10));","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kristayeo":71}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"list","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"kristayeo":9}}]
