[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    protected String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"        return \"[D]\" + super.toString() + \" (\" + by + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"        System.out.println(\"    Hello! I\u0027m Arona, your Virtual Assistant.\\n    What can I do for you today?\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"        String echo \u003d scanner.nextLine().toLowerCase().trim();","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"        while (!echo.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"                String[] strings \u003d echo.split(\" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"                if (!echo.isEmpty()) { // Skips processing when echo is empty.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"                    if (echo.equals(\"list\")) { // Lists all current tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    \" +","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"                                (tasks.size() \u003d\u003d 0","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"                                        ? \"Great job! No tasks right now, enjoy your day!\"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"                                        : (tasks.size() \u003d\u003d 1","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"                                        ? \"Good news! You only have one task:\"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"                                        : \"Hello! Here is your list of tasks:\")));","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"\");","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"mark\")) { // Marks a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Whoops! Don\u0027t forget to specify the task.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d Integer.valueOf(strings[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"                        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Uh-oh, that task does not exist.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"                        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"                        task.mark();","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Awesome! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + task + \"\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"unmark\")) { // Unmarks a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Whoops! Don\u0027t forget to specify the task.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d Integer.valueOf(strings[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"                        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Uh-oh, that task does not exist.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"                        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"                        task.unmark();","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Sure thing! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + task + \"\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"todo\")) { // Adds a todo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Oh no! You forgot to specify the task!\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"                        String description \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, strings.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"                        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + todo);","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"deadline\")) { // Adds a deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Oh no! You forgot to specify the task!\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"                        if (!echo.contains(\"/\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Whoopsie! The deadline seems a bit confused. Please use \u0027/by\u0027 to set it.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d -1;","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"                        for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"                            if (strings[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"                                index \u003d i;","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"                                strings[i] \u003d strings[i].substring(1) + \":\";","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"                                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"                        String description \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, index));","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"                        String by \u003d String.join(\" \", Arrays.copyOfRange(strings, index, strings.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"                        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + deadline);","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"event\")) { // Adds an event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Oh no! You forgot to specify the event!\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"                        int count \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"                        for (int i \u003d 0; i \u003c echo.length(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"                            if (echo.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"                                count++;","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"                        if (count !\u003d 2) { //echo should contain two \u0027/\u0027.","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Uh-oh! This event seems to have lost its way. Please use \u0027/from\u0027 and \u0027/to\u0027 to set it.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"                        int indexStart \u003d -1;","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"                        int indexEnd \u003d -1;","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"                        boolean first \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"                        for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"                            if (strings[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"                                if (first) {","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"                                    indexStart \u003d i;","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"                                    first \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"                                    strings[i] \u003d strings[i].substring(1) + \":\";","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"                                } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"                                    indexEnd \u003d i;","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"                                    strings[i] \u003d strings[i].substring(1) + \":\";","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"                                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"                                }","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"                        String description \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, indexStart));","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"                        String from \u003d String.join(\" \", Arrays.copyOfRange(strings, indexStart, indexEnd));","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"                        String to \u003d String.join(\" \", Arrays.copyOfRange(strings, indexEnd, strings.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"                        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + event);","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"delete\")) { // Deletes a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Whoops! Don\u0027t forget to specify the task to be deleted.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d Integer.valueOf(strings[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"                        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"kanna-1"},"content":"                            throw new DukeException(\"    Uh-oh, that task does not exist.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"                        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"                        tasks.remove(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Sure thing! I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + task + \"\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"                    } else { // Invalid arguments","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"                        throw new DukeException(\"    Oops! I\u0027m not quite sure what that means...\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"kanna-1"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"kanna-1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":"            } finally {","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"                echo \u003d scanner.nextLine().toLowerCase().trim(); // Reads next line","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"        System.out.println(\"    Goodbye. See you soon!\"); // Exits the programme.","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":155,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    protected String from;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"    protected String to;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"        return \"[E]\" + super.toString() + \" (\" + from + \" \" + to + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    public void mark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"        return getStatusIcon() + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"kanna-1":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":10}}]
