[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.2\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.2\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"    mainClass.set(\"arona.Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"    archiveFileName \u003d \u0027arona.jar\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"run {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"checkstyle {","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"-":35,"kanna-1":25}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"Welcome to **A.R.O.N.A**, your personal chatbot assistant designed to simplify your life and help with **task tracking**. This user guide provides an overview of A.R.O.N.A\u0027s features and instructions on how to use them.","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"## 1. Getting Started","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"### 1.1 System Requirements","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"Before you begin using A.R.O.N.A, ensure that your computer meets the following system requirements:","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"- You have **Java 11** or above installed on your computer.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"### 1.2 Installation","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"To install A.R.O.N.A, follow these steps:","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"- [Installation Link](https://github.com/kanna-1/ip/releases)","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"### 1.3 Launching A.R.O.N.A","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"To run A.R.O.N.A, open your terminal and navigate to the directory where the downloaded jar file is and enter the following command.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"```sh","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"java -jar arona.jar","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"or right-click the executable file.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"## 2. Features","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"A.R.O.N.A offers a range of features to assist you in various tasks. Here are some of the key features:","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"\u003e**Notes about the command format:**","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"\u003e1. Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"\u003e2. Commands are case-insensitive, and all tasks stored will be lowercased as well.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"### 2.1 Adding a task: `todo, deadline, event`","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"Adds the corresponding tasks to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"**Usage:**","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"- `todo TASK`","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"- `deadline TASK /by DEADLINE (in YYYY-MM-DD)`","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"- `event TASK /from FROM /to TO`","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"### 2.2 Managing a task: `mark, unmark`","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"Marks/unmarks a task at the specified index.","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"**Usage:** `unmark/mark INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"- The index must be a **positive integer**.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"### 2.3 Deleting a task: `delete`","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"Deletes a task at the specified index.","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"**Usage:** `delete INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"- The index must be a **positive integer**.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"### 2.4 Listing all tasks: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"Shows a list of all tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"**Usage:** `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"### 2.5 Undoing a command: `undo`","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"Undoes the last command (if it is undoable).","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"**Usage:** `undo`","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"- Commands that can be undone are: `todo`, `deadline`, `event`, `mark`, `unmark` and `delete`.","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"- Commands that cannot be undone are: `list`, `undo`, `bye` and `find`.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"### 2.6 Finding a task: `find`","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"Shows all tasks that match the TASK keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"**Usage:** `find TASK`","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"- Only full words will be matched.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"- Only one keyword can be used.","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"- Only the task name is searched.","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"### 2.7 Exiting the program: `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"Exits the program.","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"**Usage:** `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"### 2.8 Saving the data","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"Task data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"### 2.9 Editing the data file","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"Tasks data are saved automatically as a txt file at `[JAR file location]/data/arona.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"## 3. Known Issues","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"1. Enlarging the window may cause UI problems.","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"2. Resetting the application will also reset the history of commands, potentially affecting the `undo` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"## 4. Command Summary","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"Here\u0027s a summary of available actions:","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"| Action      | Format                         | Examples                                             |","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"|-------------|--------------------------------|------------------------------------------------------|","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"| Add         | `todo TASK`                    | `todo buy groceries`                                 |","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"|             | `deadline TASK /by DEADLINE`   | `deadline submit report /by 2023-12-31`              |","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"|             | `event TASK /from FROM /to TO` | `event team meeting /from 2023-10-15 /to 2023-10-16` |","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"| Mark/Unmark | `unmark/mark INDEX`            | `mark 1`                                             |","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"| Delete      | `delete INDEX`                 | `delete 3`                                           |","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"| List        | `list`                         |                                                      |","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"| Undo        | `undo`                         |                                                      |","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"| Find        | `find TASK`                    | `find meeting`                                       |","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"| Bye         | `bye`                          |                                                      |","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"-":15,"kanna-1":107}},{"path":"src/main/java/arona/Arona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.util.Stack;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.commands.Command;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":" * Arona is a simple command-line task management application that allows users to manage their tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":" * Users can add tasks, mark tasks as done, delete tasks, and list all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"public class Arona {","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    private Stack\u003cCommand\u003e commandHistory \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the Arona application.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    public Arona() {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"        String resourcePath \u003d \"./data/arona.txt\";","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        storage \u003d new Storage(resourcePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"        tasks \u003d new TaskList(storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     * Generates a response to user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     * @return The response generated by Arona.","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"        String[] inputTokens \u003d Parser.parseUserInput(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        String command \u003d Parser.getCommand(inputTokens);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        Command cmd \u003d Parser.parseCommand(command, inputTokens, tasks, ui, storage, commandHistory);","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        commandHistory.push(cmd);","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"        return cmd.execute();","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":46,"-":1}},{"path":"src/main/java/arona/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"* This control represents a dialog box in the Arona application\u0027s user interface. Each dialog box consists of","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"* an ImageView to represent the speaker and a label containing text from the speaker.","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"*/","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    private MessageType messageType;","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"     * Enum to define message types (User or Arona).","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    public enum MessageType {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        USER, ARONA","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     * Sets the message type for the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"     * @param messageType The message type (USER or ARONA).","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"    public void setMessageType(MessageType messageType) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        this.messageType \u003d messageType;","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        setDialogStyle();","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"     * Sets the visual style of the dialog box based on its message type.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     * If the message type is USER, it applies the user dialog box style.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     * If the message type is ARONA, it applies the Arona dialog box style.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"    private void setDialogStyle() {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"        if (messageType \u003d\u003d MessageType.USER) {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"            dialog.getStyleClass().clear();","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"            dialog.getStyleClass().add(\"user-dialog-box\");","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        } else if (messageType \u003d\u003d MessageType.ARONA) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"            dialog.getStyleClass().clear();","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"            dialog.getStyleClass().add(\"arona-dialog-box\");","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"     * Creates a new dialog box with the specified text and image.","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"     * @param text The text content of the dialog.","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"     * @param img  The image to display in the dialog.","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"    private void flip() {","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"     * Creates and returns a dialog box representing user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"     * @param img  The image representing the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"     * @return A dialog box representing the user\u0027s message.","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"        return db;","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"     * Creates and returns a dialog box representing Arona\u0027s response.","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"     * @param text The text content of Arona\u0027s message.","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"     * @param img  The image representing Arona.","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"     * @return A dialog box representing Arona\u0027s message.","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"    public static DialogBox getAronaDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"        db.flip();","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"        return db;","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"kanna-1":115}},{"path":"src/main/java/arona/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":" * A launcher class to workaround classpath issues and start the Arona application.","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"public class Launcher {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"kanna-1":12}},{"path":"src/main/java/arona/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":" * A GUI for Arona using FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    private Arona arona \u003d new Arona();","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * The entry point for the JavaFX application.","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"            Image appIcon \u003d new Image(\"/images/arona.png\");","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"            stage.getIcons().add(appIcon);","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"            stage.setTitle(\"A.R.O.N.A - Your Virtual Assistant\");","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/styles.css\").toExternalForm());","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setArona(arona);","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"            stage.show();","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"kanna-1":46}},{"path":"src/main/java/arona/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":" * Controller for the main application window. This class provides the layout for the user interface controls.","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    private Arona arona;","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    private Image aronaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/arona_icon.jpg\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * Initializes the main window.","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     * Binds the scroll pane\u0027s vertical value to the height of the dialog container.","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     * Displays a welcome message from Arona.","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        DialogBox welcomeDialog \u003d DialogBox.getAronaDialog(\"Hello! I\u0027m Arona, your Virtual Assistant.\", aronaImage);","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        welcomeDialog.setMessageType(DialogBox.MessageType.ARONA);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"        dialogContainer.getChildren().add(welcomeDialog);","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     * Sets the Arona instance for the main window controller.","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     * @param a The Arona instance to be set.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"    public void setArona(Arona a) {","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"        arona \u003d a;","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"     * Handles user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"     * Creates dialog boxes for user input and Arona\u0027s reply and appends them to the dialog container.","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"     * Exits the application if the user enters \"bye\" after a 2-second pause.","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"        String input \u003d userInput.getText().toLowerCase().trim();","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"            DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"            userDialog.setMessageType(DialogBox.MessageType.USER);","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"            DialogBox goodbyeDialog \u003d DialogBox.getAronaDialog(\"Goodbye. See you soon!\", aronaImage);","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"            goodbyeDialog.setMessageType(DialogBox.MessageType.ARONA);","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"                    userDialog, goodbyeDialog);","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"            delay.play();","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"            return;","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"        // Add a 0.5-second delay before displaying Arona\u0027s response","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"        userDialog.setMessageType(DialogBox.MessageType.USER);","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"                userDialog","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"        );","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"        PauseTransition responseDelay \u003d new PauseTransition(Duration.seconds(0.5));","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"        responseDelay.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"            String response \u003d arona.getResponse(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"            DialogBox aronaDialog \u003d DialogBox.getAronaDialog(response, aronaImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"            aronaDialog.setMessageType(DialogBox.MessageType.ARONA);","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"                    aronaDialog","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"            );","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"        });","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"        responseDelay.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"kanna-1":102}},{"path":"src/main/java/arona/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":" * Represents an abstract command that can be executed in the Arona application.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" * Subclasses of Command implement specific actions to be performed when executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    protected Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the Command class with the specified task list and user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * @param taskList The task list that the command operates on.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     * @param ui       The user interface for displaying messages and interacting with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    public Command(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     * Executes the command, performing the specific action associated with the command type.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    public abstract String execute();","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":31}},{"path":"src/main/java/arona/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.exception.IllegalArgumentAronaException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.task.DeadlineTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":" * Represents a command to add a deadline task. When executed, this command creates a","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":" * new deadline task with the specified description and due date, adds it to the task list,","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":" * saves it to storage, and displays a confirmation message to the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"public class DeadlineCommand extends Command implements UndoableCommand {","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    private DeadlineTask deadlineTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the DeadlineCommand class with the specified task list,","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     * user interface, storage, and descriptions array.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * @param taskList      The task list to add the deadline task to.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * @param ui            The user interface for displaying messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     * @param storage       The storage for saving the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     * @param descriptions  An array containing the description and due date of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     * @throws IllegalArgumentAronaException If the descriptions array is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     *                                       or the due date is in an incorrect format.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    public DeadlineCommand(TaskList taskList, Ui ui, Storage storage, String[] descriptions)","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"            throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"        this.deadlineTask \u003d new DeadlineTask(descriptions[0], Parser.parseDate(descriptions[1]));","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     * Executes the \"Deadline\" command by creating a new deadline task, adding it to the task list,","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"     * saving it to storage, and displaying a confirmation message to the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().add(deadlineTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"        storage.saveTask(deadlineTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        return ui.showTaskAdded(deadlineTask, taskList.getTasks().size());","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     * Reverses the \"Deadline\" action by removing the last added task from the task list","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"     * and storage, and displaying a confirmation message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"    public String undo() {","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"        int lastIndex \u003d taskList.getTasks().size() - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"        if (lastIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"            taskList.getTasks().remove(lastIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"            storage.deleteTask(lastIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"        return ui.showUndoDeadlineCommand(deadlineTask);","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the task index associated with this \"Deadline\" command.","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"     * As \"Deadline\" tasks don\u0027t have a specific task index, this method returns -1.","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"     * @return The task index, which is -1 for \"Deadline\" tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"        return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":76}},{"path":"src/main/java/arona/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * Represents a command to delete a task. When executed, this command removes the","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" * specified task from the task list, deletes it from storage, and displays a","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":" * confirmation message to the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"public class DeleteCommand extends Command implements UndoableCommand {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    private int taskIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    private Task deletedTask;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the DeleteCommand class with the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * task list, user interface, storage, and task index to delete.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * @param taskList   The task list from which the task will be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * @param ui         The user interface for displaying messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * @param storage    The storage for deleting the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     * @param taskIndex  The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    public DeleteCommand(TaskList taskList, Ui ui, Storage storage, int taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * Executes the \"Delete\" command by removing the specified task from the task list,","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     * deleting it from storage, and displaying a confirmation message to the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"            return ui.showTaskDoesNotExist();","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"        Task task \u003d taskList.getTasks().get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"        deletedTask \u003d task; // Store the deleted task for potential undo","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().remove(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"        storage.deleteTask(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"        return ui.showTaskRemoved(task, taskList.getTasks().size());","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"     * Reverses the \"Delete\" action by restoring the previously deleted task to the task list,","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"     * updating the task list and storage, and displaying a confirmation message.","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"    public String undo() {","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().add(taskIndex, deletedTask);","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"        storage.saveTaskWithIndex(deletedTask, taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"        return ui.showUndoDeleteCommand(deletedTask.toString());","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the task index associated with this DeleteCommand.","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"     * @return The task index.","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":74}},{"path":"src/main/java/arona/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":" * Represents an Error Command that handles exceptions and displays error messages to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    private Exception exception;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the ErrorCommand class with the specified task list, user interface,","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     * and an exception that represents the error.","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     * @param taskList   The task list associated with the error command.","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * @param ui         The user interface for displaying error messages.","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     * @param exception  The exception that represents the error.","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    public ErrorCommand(TaskList taskList, Ui ui, Exception exception) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"        this.exception \u003d exception;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     * Executes the ErrorCommand by displaying the error message contained in the exception to the user interface.","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the error message to be displayed in the GUI.","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"        return ui.showErrorMessage(exception);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"kanna-1":33}},{"path":"src/main/java/arona/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.task.EventTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * Represents a command to add an event task. When executed, this command creates","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" * a new event task and adds it to the task list. It also saves the task to storage","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":" * and displays a confirmation message to the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"public class EventCommand extends Command implements UndoableCommand {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    private EventTask eventTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the EventCommand class with the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * task list, user interface, storage, and event task descriptions.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * @param taskList      The task list to which the event task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * @param ui            The user interface for displaying messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * @param storage       The storage for saving the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     * @param descriptions  An array containing the event task descriptions, including","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     *                      the description, starting date, and ending date.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    public EventCommand(TaskList taskList, Ui ui, Storage storage, String[] descriptions) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"        this.eventTask \u003d new EventTask(descriptions[0], descriptions[1], descriptions[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     * Executes the \"Event\" command by adding the event task to the task list,","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     * saving it to storage, and displaying a confirmation message to the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().add(eventTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        storage.saveTask(eventTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"        return ui.showTaskAdded(eventTask, taskList.getTasks().size());","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     * Reverses the \"Event\" action by removing the last added task from the task list","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     * and storage, and displaying a confirmation message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"    public String undo() {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        int lastIndex \u003d taskList.getTasks().size() - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        if (lastIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"            taskList.getTasks().remove(lastIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"            storage.deleteTask(lastIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"        return ui.showUndoEventCommand(eventTask);","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the task index associated with this \"Event\" command.","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"     * As \"Event\" tasks don\u0027t have a specific task index, this method returns -1.","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"     * @return The task index, which is -1 for \"Event\" tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"        return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":73}},{"path":"src/main/java/arona/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" * Represents a command to search for tasks containing a specific keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    private String keyWord;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new FindCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     * @param ui       The user interface for displaying results.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * @param keyWord  The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    public FindCommand(TaskList taskList, Ui ui, String keyWord) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     * Executes the FindCommand to search for tasks containing the specified keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"        TaskList matchingTasks \u003d filterTasksByKeyword(taskList, keyWord);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"        return ui.showSearchResult(matchingTasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"     * This method searches through the descriptions of tasks in the provided TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"     * and adds tasks to a new TaskList if their descriptions contain the specified keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"     * @param taskList The TaskList to search for matching tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"     * @param keyWord  The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"     * @return A TaskList containing the matching tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    public static TaskList filterTasksByKeyword(TaskList taskList, String keyWord) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"            String[] descriptionTokens \u003d task.getDescription().split(\"\\\\s+\");","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"            for (String word : descriptionTokens) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"                if (word.equals(keyWord)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"                    result.getTasks().add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"        return result;","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":62}},{"path":"src/main/java/arona/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":" * Represents an invalid command.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the InvalidCommand class due to an invalid command keyword.","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    public InvalidCommand(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * Executes the InvalidCommand.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating that the command was invalid.","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"        return ui.showInvalidArgumentMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"kanna-1":30}},{"path":"src/main/java/arona/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":" * Represents a command to list all tasks. When executed, this command displays","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" * the list of tasks to the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the ListCommand class with the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     * task list and user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     * @param taskList   The task list containing the tasks to be listed.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * @param ui         The user interface to display the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    public ListCommand(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * Executes the \"List\" command by displaying the list of tasks to the user","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     * interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"        return ui.showTaskList(taskList);","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":33}},{"path":"src/main/java/arona/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" * Represents a command to mark a task as done. When executed, this command marks","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * the specified task as done, updates its status in storage, and displays a","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" * confirmation message.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"public class MarkCommand extends Command implements UndoableCommand {","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    private int taskIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the MarkCommand class with the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     * task list, user interface, storage, and task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * @param taskList   The task list containing the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * @param storage    The storage responsible for loading and saving tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * @param taskIndex  The index of the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    public MarkCommand(TaskList taskList, Ui ui, Storage storage, int taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"     * Executes the \"Mark\" command by marking the specified task as done, updating","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     * its status in storage, and displaying a confirmation message to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * If the task index is out of bounds, an error message is shown.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"            return ui.showTaskDoesNotExist();","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().get(taskIndex).mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"        storage.updateTaskStatusAsMarked(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"        return ui.showTaskMarkedAsDone(taskList.getTasks().get(taskIndex));","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     * Reverses the mark action by unmarking the specified task in the task list,","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     * updating its status in storage, and displaying the result to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"    public String undo() {","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().get(taskIndex).unMark();","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"        storage.updateTaskStatusAsUnmarked(taskIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"        return ui.showUndoMarkCommand(taskList.getTasks().get(taskIndex));","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the task index associated with this MarkCommand.","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"     * @return The task index.","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":69}},{"path":"src/main/java/arona/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.task.ToDoTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * Represents a command to add a new to-do task. When executed, this command","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" * creates a new to-do task with the specified description, adds it to the task","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":" * list, saves it in storage, and displays a confirmation message.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"public class ToDoCommand extends Command implements UndoableCommand {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    private ToDoTask todoTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the ToDoCommand class with the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     * task list, user interface, storage, and task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     * @param taskList    The task list containing the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * @param ui          The user interface to interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * @param storage     The storage responsible for loading and saving tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the new \"To-Do\" task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"    public ToDoCommand(TaskList taskList, Ui ui, Storage storage, String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"        this.todoTask \u003d new ToDoTask(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     * Executes the \"To-Do\" command by creating a new To-Do task with the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * description, adding it to the task list, saving it in storage, and displaying","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     * a confirmation message to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().add(todoTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        storage.saveTask(todoTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        return ui.showTaskAdded(todoTask, taskList.getTasks().size());","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     * Reverses the \"To-Do\" action by removing the last added task from the task list","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     * and storage, and displaying a confirmation message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"    public String undo() {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        int lastIndex \u003d taskList.getTasks().size() - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        if (lastIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"            taskList.getTasks().remove(lastIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"            storage.deleteTask(lastIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"        return ui.showUndoToDoCommand(todoTask);","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the task index associated with this \"To-Do\" command.","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"     * As \"To-Do\" tasks don\u0027t have a specific task index, this method returns -1.","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"     * @return The task index, which is -1 for \"To-Do\" tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"        return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":73}},{"path":"src/main/java/arona/commands/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.util.Stack;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" * Represents a command to undo the previous action in the Arona application.","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":" * When executed, this command reverses the effects of the most recent user action","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":" * by examining the command history and applying the appropriate undo action.","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    private Stack\u003cCommand\u003e commandHistory;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the UndoCommand class with the specified","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * task list, user interface, storage, and command history.","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * @param taskList       The task list for managing tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * @param ui             The user interface for displaying messages.","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * @param storage        The storage for saving and loading tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     * @param commandHistory The stack of previously executed commands to track user actions.","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    public UndoCommand(TaskList taskList, Ui ui, Storage storage, Stack\u003cCommand\u003e commandHistory) {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"        this.commandHistory \u003d commandHistory;","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * Executes the \"Undo\" command, which reverses the most recent user action","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     * by examining the command history and applying the appropriate undo action.","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        return undoCommand(commandHistory);","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"     * Performs the undo operation by analyzing the command history and applying","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"     * the appropriate undo action for the most recent command.","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     * @param commandHistory The stack of previously executed commands.","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"    public String undoCommand(Stack\u003cCommand\u003e commandHistory) {","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"        while (!commandHistory.empty()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"            Command lastCommand \u003d commandHistory.pop();","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"            if (!(lastCommand instanceof UndoableCommand)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"                continue;","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"            if (lastCommand instanceof MarkCommand || lastCommand instanceof UnmarkCommand) {","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"                int taskIndex \u003d ((UndoableCommand) lastCommand).getTaskIndex();","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"                if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"                    continue;","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"                return ((UndoableCommand) lastCommand).undo();","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"            } else if (lastCommand instanceof DeleteCommand) {","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"                int taskIndex \u003d ((UndoableCommand) lastCommand).getTaskIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"                if (taskIndex \u003c 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"                    continue;","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"                return ((UndoableCommand) lastCommand).undo();","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"                return ((UndoableCommand) lastCommand).undo();","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        return ui.showCannotUndo();","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kanna-1":79}},{"path":"src/main/java/arona/commands/UndoableCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":" * An interface representing a command that can be undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"public interface UndoableCommand {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"     * Undoes the previous action performed by this command.","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    String undo();","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the task index associated with this undoable command.","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * @return The task index or -1 if not applicable.","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    int getTaskIndex();","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kanna-1":21}},{"path":"src/main/java/arona/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" * Represents a command to unmark a task as done. When executed, this command","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * unmarks a specified task in the task list and updates its status in storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"public class UnmarkCommand extends Command implements UndoableCommand {","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    private int taskIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the UnMarkCommand class with the specified","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * task list, user interface, storage, and task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     * @param taskList   The task list containing the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     * @param storage    The storage responsible for loading and saving tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     * @param taskIndex  The index of the task to be unmarked in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    public UnmarkCommand(TaskList taskList, Ui ui, Storage storage, int taskIndex) {","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"        super(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"     * Executes the unmark command by unmarking the specified task in the task list,","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"     * updating its status in storage, and displaying the result to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the message in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"    public String execute() {","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"            return ui.showTaskDoesNotExist();","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().get(taskIndex).unMark();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        storage.updateTaskStatusAsUnmarked(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        return ui.showTaskUnmarked(taskList.getTasks().get(taskIndex));","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"     * Reverses the unmark action by marking the specified task as done in the task","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     * list, updating its status in storage, and displaying the result to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     * @return A string message indicating the result of the undo operation.","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    public String undo() {","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"        taskList.getTasks().get(taskIndex).mark();","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        storage.updateTaskStatusAsMarked(taskIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        return ui.showUndoUnmarkCommand(taskList.getTasks().get(taskIndex));","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the task index associated with this UnmarkCommand.","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"     * @return The task index.","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":67}},{"path":"src/main/java/arona/data/arona.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"T|0|review cs2105","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"D|0|ip submission|2023-09-22","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"E|0|meeting|from: mon 2pm|to: 4pm","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kanna-1":3}},{"path":"src/main/java/arona/exception/IllegalArgumentAronaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":" * The `IllegalArgumentAronaException` is a custom exception class for handling invalid arguments in Arona.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":" * It is thrown when an operation receives an invalid or unexpected argument.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"public class IllegalArgumentAronaException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new `IllegalArgumentAronaException` with the specified detail message.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    public IllegalArgumentAronaException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":18}},{"path":"src/main/java/arona/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import java.util.Stack;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import arona.commands.Command;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import arona.commands.DeadlineCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import arona.commands.DeleteCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"import arona.commands.ErrorCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"import arona.commands.EventCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"import arona.commands.FindCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"import arona.commands.InvalidCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"import arona.commands.ListCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"import arona.commands.MarkCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"import arona.commands.ToDoCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"import arona.commands.UndoCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"import arona.commands.UnmarkCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"import arona.exception.IllegalArgumentAronaException;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"import arona.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":" * The `Parser` class is responsible for parsing user input and extracting relevant information.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"     * Parses the user input into an array of tokens, splitting by spaces.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     * @param userInput The user\u0027s input as a single string.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * @return An array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"    public static String[] parseUserInput(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"        return userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"     * Extracts the command keyword from the tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"     * @param tokens The array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"     * @return The command keyword as a lowercase string.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    public static String getCommand(String[] tokens) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        if (tokens.length \u003e 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"            return tokens[0].toLowerCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"        return \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"     * Gets the description of a to-do task from the tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"     * @param tokens The array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"     * @return The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"     * @throws IllegalArgumentAronaException If the description is missing.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"    public static String getToDoDescription(String[] tokens) throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Oh no! You forgot to specify the task!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"        return String.join(\" \", Arrays.copyOfRange(tokens, 1, tokens.length));","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"     * Gets the description and deadline date from the tokens for a deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"     * @param tokens The array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"     * @return An array containing the description and deadline date.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"     * @throws IllegalArgumentAronaException If the description or \u0027/by\u0027 is missing.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"    public static String[] getDeadlineDescription(String[] tokens) throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Oh no! You forgot to specify the task!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"        boolean isByFound \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"            if (token.equals(\"/by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"                isByFound \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"        if (!isByFound) {","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"                    \"Whoopsie! The deadline seems a bit confused. Please use \u0027/by\u0027 to set it.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"        for (int i \u003d 0; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"            if (tokens[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"                index \u003d i;","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"                tokens[i] \u003d tokens[i].substring(1) + \":\";","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(tokens, 1, index));","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"        String by \u003d String.join(\" \", Arrays.copyOfRange(tokens, index + 1, tokens.length));","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"        if (description.trim().equals(\"\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Oh no! You forgot to specify the task!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"        String[] descriptions \u003d {description, by};","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"        return descriptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"     * Gets the description, start date, and end date from the tokens for an event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"     * @param tokens The array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"     * @return An array containing the description, start date, and end date.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"     * @throws IllegalArgumentAronaException If the description, \u0027/from\u0027, or \u0027/to\u0027 is missing.","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"    public static String[] getEventDescription(String[] tokens) throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Oh no! You forgot to specify the event!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"        boolean isFromFound \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"        boolean isToFound \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"            if (token.equals(\"/from\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"                isFromFound \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"            } else if (isFromFound \u0026\u0026 token.equals(\"/to\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"kanna-1"},"content":"                isToFound \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"        if (!(isFromFound \u0026\u0026 isToFound)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"                    \"Whoopsie! The deadline seems a bit confused. Please use \u0027/from\u0027 and \u0027/to\u0027 to set it.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"        int indexStart \u003d -1;","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"        int indexEnd \u003d -1;","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"        boolean first \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"        for (int i \u003d 0; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"            if (tokens[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"                if (first) {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"                    indexStart \u003d i;","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"                    first \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":"                    tokens[i] \u003d tokens[i].substring(1) + \":\";","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"kanna-1"},"content":"                    indexEnd \u003d i;","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"kanna-1"},"content":"                    tokens[i] \u003d tokens[i].substring(1) + \":\";","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"kanna-1"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(tokens, 1, indexStart));","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"kanna-1"},"content":"        String from \u003d String.join(\" \", Arrays.copyOfRange(tokens, indexStart, indexEnd));","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"kanna-1"},"content":"        String to \u003d String.join(\" \", Arrays.copyOfRange(tokens, indexEnd, tokens.length));","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"kanna-1"},"content":"        if (from.substring(5).trim().isEmpty() || to.substring(3).trim().isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Oh no! The start and/or end time cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"kanna-1"},"content":"        if (description.trim().equals(\"\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Oh no! You forgot to specify the event!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"kanna-1"},"content":"        String[] descriptions \u003d {description, from, to};","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"kanna-1"},"content":"        return descriptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"kanna-1"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"kanna-1"},"content":"     * @param dateStr The date string in \u0027YYYY-MM-DD\u0027 format.","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"kanna-1"},"content":"     * @return The parsed LocalDate.","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"kanna-1"},"content":"     * @throws IllegalArgumentAronaException If the date format is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"kanna-1"},"content":"    public static LocalDate parseDate(String dateStr) throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"kanna-1"},"content":"            return LocalDate.parse(dateStr);","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"kanna-1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"kanna-1"},"content":"                    \"Whoopsie! The deadline seems a bit confused. Please use a valid \u0027YYYY-MM-DD\u0027 format to set it.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"kanna-1"},"content":"     * Gets the task index from the tokens, used for marking or deleting tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"kanna-1"},"content":"     * @param tokens The array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"kanna-1"},"content":"     * @return The task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"kanna-1"},"content":"    public static int getTaskIndex(String[] tokens) {","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"kanna-1"},"content":"        if (tokens.length \u003e 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"kanna-1"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"kanna-1"},"content":"                return Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"kanna-1"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"kanna-1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"kanna-1"},"content":"        return -1;","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"kanna-1"},"content":"     * Extracts and returns a keyword from an array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"kanna-1"},"content":"     * @param tokens An array of tokens containing user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"kanna-1"},"content":"     * @return The keyword to be used for searching.","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"kanna-1"},"content":"     * @throws IllegalArgumentAronaException If the input format is incorrect:","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"kanna-1"},"content":"     *                                      - If no keyword is specified, an exception is thrown.","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"kanna-1"},"content":"     *                                      - If more than one keyword is provided, an exception is thrown.","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"kanna-1"},"content":"    public static String getKeyWord(String[] tokens) throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"kanna-1"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Sorry... Please specify a keyword so I can help you.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"kanna-1"},"content":"        } else if (tokens.length \u003e 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Sorry... I can only handle one keyword.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"kanna-1"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"kanna-1"},"content":"            return tokens[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":227,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":228,"author":{"gitId":"kanna-1"},"content":"     * Parses the user input into the command to be executed.","lastModifiedDate":"2023-09-13"},{"lineNumber":229,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":230,"author":{"gitId":"kanna-1"},"content":"     * @param command       The command in String.","lastModifiedDate":"2023-09-13"},{"lineNumber":231,"author":{"gitId":"kanna-1"},"content":"     * @param inputTokens   The descriptions of the command.","lastModifiedDate":"2023-09-13"},{"lineNumber":232,"author":{"gitId":"kanna-1"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":233,"author":{"gitId":"kanna-1"},"content":"     * @param ui            The user interface for displaying messages.","lastModifiedDate":"2023-09-13"},{"lineNumber":234,"author":{"gitId":"kanna-1"},"content":"     * @param storage       The storage responsible for loading and saving tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":235,"author":{"gitId":"kanna-1"},"content":"     * @param commandHistory A stack to keep track of command history for undo.","lastModifiedDate":"2023-09-14"},{"lineNumber":236,"author":{"gitId":"kanna-1"},"content":"     * @return The command to be executed.","lastModifiedDate":"2023-09-13"},{"lineNumber":237,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":238,"author":{"gitId":"kanna-1"},"content":"    public static Command parseCommand(String command, String[] inputTokens, TaskList tasks,","lastModifiedDate":"2023-09-14"},{"lineNumber":239,"author":{"gitId":"kanna-1"},"content":"                                       Ui ui, Storage storage, Stack\u003cCommand\u003e commandHistory) {","lastModifiedDate":"2023-09-14"},{"lineNumber":240,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":241,"author":{"gitId":"kanna-1"},"content":"            switch (command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":242,"author":{"gitId":"kanna-1"},"content":"            case \"list\":","lastModifiedDate":"2023-09-13"},{"lineNumber":243,"author":{"gitId":"kanna-1"},"content":"                return new ListCommand(tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"kanna-1"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":245,"author":{"gitId":"kanna-1"},"content":"                return new UnmarkCommand(tasks, ui, storage, getTaskIndex(inputTokens));","lastModifiedDate":"2023-09-14"},{"lineNumber":246,"author":{"gitId":"kanna-1"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":247,"author":{"gitId":"kanna-1"},"content":"                return new MarkCommand(tasks, ui, storage, getTaskIndex(inputTokens));","lastModifiedDate":"2023-09-13"},{"lineNumber":248,"author":{"gitId":"kanna-1"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":249,"author":{"gitId":"kanna-1"},"content":"                return new ToDoCommand(tasks, ui, storage, getToDoDescription(inputTokens));","lastModifiedDate":"2023-09-13"},{"lineNumber":250,"author":{"gitId":"kanna-1"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-13"},{"lineNumber":251,"author":{"gitId":"kanna-1"},"content":"                return new DeadlineCommand(tasks, ui, storage, getDeadlineDescription(inputTokens));","lastModifiedDate":"2023-09-13"},{"lineNumber":252,"author":{"gitId":"kanna-1"},"content":"            case \"event\":","lastModifiedDate":"2023-09-13"},{"lineNumber":253,"author":{"gitId":"kanna-1"},"content":"                return new EventCommand(tasks, ui, storage, getEventDescription(inputTokens));","lastModifiedDate":"2023-09-13"},{"lineNumber":254,"author":{"gitId":"kanna-1"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-13"},{"lineNumber":255,"author":{"gitId":"kanna-1"},"content":"                return new DeleteCommand(tasks, ui, storage, getTaskIndex(inputTokens));","lastModifiedDate":"2023-09-13"},{"lineNumber":256,"author":{"gitId":"kanna-1"},"content":"            case \"find\":","lastModifiedDate":"2023-09-13"},{"lineNumber":257,"author":{"gitId":"kanna-1"},"content":"                return new FindCommand(tasks, ui, getKeyWord(inputTokens));","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"kanna-1"},"content":"            case \"undo\":","lastModifiedDate":"2023-09-14"},{"lineNumber":259,"author":{"gitId":"kanna-1"},"content":"                return new UndoCommand(tasks, ui, storage, commandHistory);","lastModifiedDate":"2023-09-14"},{"lineNumber":260,"author":{"gitId":"kanna-1"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":261,"author":{"gitId":"kanna-1"},"content":"                return new InvalidCommand(tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":262,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"kanna-1"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"kanna-1"},"content":"            return new ErrorCommand(tasks, ui, exception);","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":268,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":268}},{"path":"src/main/java/arona/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"import arona.exception.IllegalArgumentAronaException;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"import arona.task.DeadlineTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"import arona.task.EventTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"import arona.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"import arona.task.ToDoTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":" * The `Storage` class is responsible for loading, saving, and updating tasks in a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    private Path path;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    private File inFile;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     * Initializes a new instance of the `Storage` class with the specified file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"        this.path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"        this.inFile \u003d path.toFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"        if (!inFile.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"            try {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"                // Create the parent directories if they don\u0027t exist","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"                File parentDir \u003d inFile.getParentFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"                if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"                    parentDir.mkdirs();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"                // Create the file","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"                inFile.createNewFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"     * Loads tasks from the storage file and populates the given tasks list.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"     * @param tasks The list of tasks to populate with data from the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"    public void loadTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"            if (!inFile.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"                inFile.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(path.toString()));","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"            String line;","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"                String[] strings \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"                switch (strings[0]) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"                case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"                    ToDoTask todoTask \u003d new ToDoTask(strings[2], Integer.parseInt(strings[1]));","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"                    tasks.add(todoTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"                case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"                    DeadlineTask deadlineTask \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"                            new DeadlineTask(strings[2], LocalDate.parse(strings[3]), Integer.parseInt(strings[1]));","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"                    tasks.add(deadlineTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"                case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"                    EventTask eventTask \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"                            new EventTask(strings[2], strings[3], strings[4], Integer.parseInt(strings[1]));","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"                    tasks.add(eventTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"                default:","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"            br.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"            System.out.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"     * Updates the status of a task as marked (completed) in the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"     * @param taskIndex The index of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"    public void updateTaskStatusAsMarked(int taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"        assert taskIndex \u003e\u003d 0 : \"Invalid task index\";","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(inFile));","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"            String line;","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"            int currentLine \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"                if (currentLine !\u003d taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"                    bw.write(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"                    bw.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"                    char[] charArray \u003d line.toCharArray();","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"                    charArray[2] \u003d \u00271\u0027;","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"                    String modifiedLine \u003d new String(charArray);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"                    bw.write(modifiedLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"                    bw.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"                currentLine++;","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"            br.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"            bw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"            inFile.delete();","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"            tempFile.renameTo(inFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"     * Updates the status of a task as unmarked in the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"     * @param taskIndex The index of the task to be unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"    public void updateTaskStatusAsUnmarked(int taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"        assert taskIndex \u003e\u003d 0 : \"Invalid task index\";","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(inFile));","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"            String line;","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"            int currentLine \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"kanna-1"},"content":"                if (currentLine !\u003d taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"kanna-1"},"content":"                    bw.write(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":"                    bw.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"kanna-1"},"content":"                    char[] charArray \u003d line.toCharArray();","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"kanna-1"},"content":"                    charArray[2] \u003d \u00270\u0027;","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"                    String modifiedLine \u003d new String(charArray);","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"kanna-1"},"content":"                    bw.write(modifiedLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"kanna-1"},"content":"                    bw.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"kanna-1"},"content":"                currentLine++;","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"            br.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"kanna-1"},"content":"            bw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"kanna-1"},"content":"            inFile.delete();","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"kanna-1"},"content":"            tempFile.renameTo(inFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"kanna-1"},"content":"     * Saves a to-do task to the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"kanna-1"},"content":"     * @param todoTask The to-do task to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"kanna-1"},"content":"    public void saveTask(ToDoTask todoTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"kanna-1"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(inFile, true));","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"kanna-1"},"content":"            String data \u003d \"T|0|\" + todoTask.getDescription() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"kanna-1"},"content":"            bw.write(data);","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"kanna-1"},"content":"            bw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"kanna-1"},"content":"     * Saves a deadline task to the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"kanna-1"},"content":"     * @param deadlineTask The deadline task to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"kanna-1"},"content":"    public void saveTask(DeadlineTask deadlineTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"kanna-1"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(inFile, true));","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"kanna-1"},"content":"            String data \u003d \"D|0|\" + deadlineTask.getDescription() + \"|\" + deadlineTask.getDate() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"kanna-1"},"content":"            bw.write(data);","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"kanna-1"},"content":"            bw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"kanna-1"},"content":"     * Saves an event task to the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"kanna-1"},"content":"     * @param eventTask The event task to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"kanna-1"},"content":"    public void saveTask(EventTask eventTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"kanna-1"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(inFile, true));","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"kanna-1"},"content":"            String data \u003d \"E|0|\" + eventTask.getDescription() + \"|\"","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"kanna-1"},"content":"                    + eventTask.getFrom() + \"|\" + eventTask.getTo() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"kanna-1"},"content":"            bw.write(data);","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"kanna-1"},"content":"            bw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"kanna-1"},"content":"     * Deletes a task from the storage file based on its index.","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"kanna-1"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"kanna-1"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"kanna-1"},"content":"        assert taskIndex \u003e\u003d 0 : \"Invalid task index\";","lastModifiedDate":"2023-09-13"},{"lineNumber":240,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":241,"author":{"gitId":"kanna-1"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"kanna-1"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(inFile));","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"kanna-1"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"kanna-1"},"content":"            String line \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"kanna-1"},"content":"            int currentLine \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"kanna-1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"kanna-1"},"content":"                if (currentLine !\u003d taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"kanna-1"},"content":"                    bw.write(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"kanna-1"},"content":"                    bw.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"kanna-1"},"content":"                currentLine++;","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":256,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"kanna-1"},"content":"            br.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"kanna-1"},"content":"            bw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"kanna-1"},"content":"            inFile.delete();","lastModifiedDate":"2023-09-02"},{"lineNumber":261,"author":{"gitId":"kanna-1"},"content":"            tempFile.renameTo(inFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":263,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":264,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":265,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":266,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":267,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":268,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":269,"author":{"gitId":"kanna-1"},"content":"     * Saves a task to the storage file at the specified index.","lastModifiedDate":"2023-09-21"},{"lineNumber":270,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":271,"author":{"gitId":"kanna-1"},"content":"     * @param task The task to be saved.","lastModifiedDate":"2023-09-21"},{"lineNumber":272,"author":{"gitId":"kanna-1"},"content":"     * @param taskIndex The index where the task should be saved.","lastModifiedDate":"2023-09-21"},{"lineNumber":273,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":274,"author":{"gitId":"kanna-1"},"content":"    public void saveTaskWithIndex(Task task, int taskIndex) {","lastModifiedDate":"2023-09-21"},{"lineNumber":275,"author":{"gitId":"kanna-1"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":276,"author":{"gitId":"kanna-1"},"content":"        assert taskIndex \u003e\u003d 0 : \"Invalid task index\";","lastModifiedDate":"2023-09-21"},{"lineNumber":277,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":278,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":279,"author":{"gitId":"kanna-1"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2023-09-21"},{"lineNumber":280,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":281,"author":{"gitId":"kanna-1"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(inFile));","lastModifiedDate":"2023-09-21"},{"lineNumber":282,"author":{"gitId":"kanna-1"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-09-21"},{"lineNumber":283,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":284,"author":{"gitId":"kanna-1"},"content":"            String line;","lastModifiedDate":"2023-09-21"},{"lineNumber":285,"author":{"gitId":"kanna-1"},"content":"            int currentLine \u003d 0;","lastModifiedDate":"2023-09-21"},{"lineNumber":286,"author":{"gitId":"kanna-1"},"content":"            boolean isTaskAppended \u003d false;","lastModifiedDate":"2023-09-21"},{"lineNumber":287,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":288,"author":{"gitId":"kanna-1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":289,"author":{"gitId":"kanna-1"},"content":"                if (currentLine \u003d\u003d taskIndex) {","lastModifiedDate":"2023-09-21"},{"lineNumber":290,"author":{"gitId":"kanna-1"},"content":"                    // Save the new task at the specified index","lastModifiedDate":"2023-09-21"},{"lineNumber":291,"author":{"gitId":"kanna-1"},"content":"                    String taskData \u003d taskToData(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":292,"author":{"gitId":"kanna-1"},"content":"                    bw.write(taskData);","lastModifiedDate":"2023-09-21"},{"lineNumber":293,"author":{"gitId":"kanna-1"},"content":"                    bw.newLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":294,"author":{"gitId":"kanna-1"},"content":"                    isTaskAppended \u003d true;","lastModifiedDate":"2023-09-21"},{"lineNumber":295,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":296,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":297,"author":{"gitId":"kanna-1"},"content":"                bw.write(line);","lastModifiedDate":"2023-09-21"},{"lineNumber":298,"author":{"gitId":"kanna-1"},"content":"                bw.newLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":299,"author":{"gitId":"kanna-1"},"content":"                currentLine++;","lastModifiedDate":"2023-09-21"},{"lineNumber":300,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":301,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":302,"author":{"gitId":"kanna-1"},"content":"            // If the taskIndex is equal to the number of lines, append the task as line line","lastModifiedDate":"2023-09-21"},{"lineNumber":303,"author":{"gitId":"kanna-1"},"content":"            if (taskIndex \u003d\u003d currentLine \u0026\u0026 !isTaskAppended) {","lastModifiedDate":"2023-09-21"},{"lineNumber":304,"author":{"gitId":"kanna-1"},"content":"                String taskData \u003d taskToData(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":305,"author":{"gitId":"kanna-1"},"content":"                bw.write(taskData);","lastModifiedDate":"2023-09-21"},{"lineNumber":306,"author":{"gitId":"kanna-1"},"content":"                bw.newLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":307,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":308,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":309,"author":{"gitId":"kanna-1"},"content":"            br.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":310,"author":{"gitId":"kanna-1"},"content":"            bw.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":311,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":312,"author":{"gitId":"kanna-1"},"content":"            inFile.delete();","lastModifiedDate":"2023-09-21"},{"lineNumber":313,"author":{"gitId":"kanna-1"},"content":"            tempFile.renameTo(inFile);","lastModifiedDate":"2023-09-21"},{"lineNumber":314,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":315,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":316,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":317,"author":{"gitId":"kanna-1"},"content":"        } catch (IllegalArgumentAronaException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":318,"author":{"gitId":"kanna-1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-21"},{"lineNumber":319,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":320,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":321,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":322,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":323,"author":{"gitId":"kanna-1"},"content":"     * Converts a task to a data string that can be saved to the storage file.","lastModifiedDate":"2023-09-21"},{"lineNumber":324,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":325,"author":{"gitId":"kanna-1"},"content":"     * @param task The task to be converted to a data string.","lastModifiedDate":"2023-09-21"},{"lineNumber":326,"author":{"gitId":"kanna-1"},"content":"     * @return The data string representing the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":327,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":328,"author":{"gitId":"kanna-1"},"content":"    private String taskToData(Task task) throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-21"},{"lineNumber":329,"author":{"gitId":"kanna-1"},"content":"        if (task instanceof ToDoTask) {","lastModifiedDate":"2023-09-21"},{"lineNumber":330,"author":{"gitId":"kanna-1"},"content":"            ToDoTask todoTask \u003d (ToDoTask) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":331,"author":{"gitId":"kanna-1"},"content":"            return \"T|\" + (todoTask.getIsDone() ? \"1\" : \"0\") + \"|\" + todoTask.getDescription();","lastModifiedDate":"2023-09-21"},{"lineNumber":332,"author":{"gitId":"kanna-1"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2023-09-21"},{"lineNumber":333,"author":{"gitId":"kanna-1"},"content":"            DeadlineTask deadlineTask \u003d (DeadlineTask) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":334,"author":{"gitId":"kanna-1"},"content":"            return \"D|\" + (deadlineTask.getIsDone() ? \"1\" : \"0\") + \"|\"","lastModifiedDate":"2023-09-21"},{"lineNumber":335,"author":{"gitId":"kanna-1"},"content":"                    + deadlineTask.getDescription() + \"|\" + deadlineTask.getDate();","lastModifiedDate":"2023-09-21"},{"lineNumber":336,"author":{"gitId":"kanna-1"},"content":"        } else if (task instanceof EventTask) {","lastModifiedDate":"2023-09-21"},{"lineNumber":337,"author":{"gitId":"kanna-1"},"content":"            EventTask eventTask \u003d (EventTask) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":338,"author":{"gitId":"kanna-1"},"content":"            return \"E|\" + (eventTask.getIsDone() ? \"1\" : \"0\") + \"|\"","lastModifiedDate":"2023-09-21"},{"lineNumber":339,"author":{"gitId":"kanna-1"},"content":"                    + eventTask.getDescription() + \"|\" + eventTask.getFrom() + \"|\" + eventTask.getTo();","lastModifiedDate":"2023-09-21"},{"lineNumber":340,"author":{"gitId":"kanna-1"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":341,"author":{"gitId":"kanna-1"},"content":"            throw new IllegalArgumentAronaException(\"Ehh... I was unable to get back the deleted task :(\");","lastModifiedDate":"2023-09-21"},{"lineNumber":342,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":343,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":344,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":344}},{"path":"src/main/java/arona/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":" * Represents a deadline task. A deadline task has a description and a date for the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new deadline task with the given description and date.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     * @param date        The date of the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    public DeadlineTask(String description, LocalDate date) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new deadline task with the given description, date, and marked status.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     * @param date        The date of the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     * @param isMarked    The marked status of the task (0 for unmarked, 1 for marked).","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    public DeadlineTask(String description, LocalDate date, int isMarked) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"        super(description, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     * Gets the date of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     * @return The date of the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        return this.date;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"     * Gets a string representation of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"     * @return A string containing the task\u0027s status icon, description, and formatted date.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"        return \"[D]\" + super.toString() + \" (\" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":54}},{"path":"src/main/java/arona/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":" * Represents an event task. An event task has a description, a start time, and an end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"    protected String from;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"    protected String to;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new event task with the given description, start time, and end time, marked as undone by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    public EventTask(String description, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new event task with the given description, start time, end time, and marked status.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     * @param isMarked    The marked status (1 for marked, 0 for unmarked).","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    public EventTask(String description, String from, String to, int isMarked) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"        super(description, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"     * @return The start time.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        return this.from;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     * @return The end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"        return this.to;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"     * Returns a string representation of the event task, including its status icon, description, and time frame.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"        return \"[E]\" + super.toString() + \" (\" + from + \" \" + to + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":64}},{"path":"src/main/java/arona/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":" * Represents a task in the task list. A task has a description and can be marked as done or undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new task with the given description and sets it as undone by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new task with the given description and marked status.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"     * @param isMarked    The marked status (1 for marked, 0 for unmarked).","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"    public Task(String description, int isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d (isMarked \u003d\u003d 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"     * Returns an icon representing the status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * @return A string containing \"[X] \" for marked tasks or \"[ ] \" for unmarked tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"     * Returns a boolean value indicating whether the task is marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"     * @return {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"        return isDone;","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"     * @return The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    public void mark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"    public void unMark() {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"        return getStatusIcon() + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"kanna-1":81}},{"path":"src/main/java/arona/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":" * Represents a list of tasks in Arona. The task list stores tasks in an ArrayList and","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * is typically used to manage tasks throughout the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new task list by loading tasks from the provided storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * @param storage The storage object responsible for loading tasks into the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"        storage.loadTasks(this.tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"     * Retrieves the ArrayList of tasks stored in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     * @return An ArrayList of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"        return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":38}},{"path":"src/main/java/arona/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":" * Represents a to-do task. A to-do task is a simple task with a description.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new to-do task with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     * Constructs a new to-do task with the given description and marked status.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"     * @param isMarked    The marked status of the task (1 for marked, 0 for unmarked).","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    public ToDoTask(String description, int isMarked) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"        super(description, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     * Returns a string representation of the to-do task, including its status icon.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":35}},{"path":"src/main/java/arona/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import arona.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import arona.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * The UI class handles user interface-related functionality in the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     * Returns the list of tasks as a formatted string.","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"     * @return A formatted string representing the list of tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    public static String showTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"        if (tasks.getTasks().isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"            return \"Great job! No tasks right now, enjoy your day!\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"            StringBuilder message \u003d new StringBuilder(\"Hello! Here is your list of tasks:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"            for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"                message.append((i + 1)).append(\". \").append(tasks.getTasks().get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"            return message.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"     * Returns a message confirming the addition of a task.","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"     * @param task       The task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"     * @param totalTasks The total number of tasks after adding.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"     * @return A formatted string confirming the addition of a task.","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    public static String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"        return \"Got it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"                + \"Now you have \" + totalTasks + (totalTasks \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"                + \" in the list.\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"     * Returns a message confirming the removal of a task.","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"     * @param task       The task that was removed.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"     * @param totalTasks The total number of tasks after removal.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"     * @return A formatted string confirming the removal of a task.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"    public static String showTaskRemoved(Task task, int totalTasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"        return \"Sure thing! I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"                + \"Now you have \" + totalTasks + (totalTasks \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"                + \" in the list.\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"     * Returns a message confirming that a task has been marked as done.","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"     * @return A formatted string confirming the task as done.","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"    public static String showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"        return \"Awesome! I\u0027ve marked this task as done:\\n\" + \"  \" + task + \"\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"     * Returns a message confirming that a task has been marked as not done yet.","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"     * @param task The task that was marked as not done yet.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"     * @return A formatted string confirming the task as not done yet.","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"    public static String showTaskUnmarked(Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"        return \"Sure thing! I\u0027ve marked this task as not done yet:\\n\" + \"  \" + task + \"\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"     * Returns an error message when a specified task does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"     * @return An error message indicating the task does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"    public static String showTaskDoesNotExist() {","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"        return \"Sorry... I can\u0027t find the task. Please input the task number correctly!\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"     * Returns an error message as a string.","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"     * @param e The exception that occurred.","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"     * @return A formatted string representing the error message.","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"    public static String showErrorMessage(Exception e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"        return e.getMessage() + \"\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that the user input is invalid.","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating invalid user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"    public static String showInvalidArgumentMessage() {","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"        return \"Oops! I\u0027m not quite sure what that means...\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"     * Returns the search results as a formatted string.","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"     * @param result The TaskList containing the matching tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"     * @return A formatted string representing the search results.","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"    public static String showSearchResult(TaskList result) {","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"        if (result.getTasks().isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"            return \"Ehhh... There are no matching tasks.\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"            StringBuilder message \u003d new StringBuilder(\"Yay! Here are your matching tasks:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"            ArrayList\u003cTask\u003e tasks \u003d result.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"                message.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"            return message.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that there is no valid command to undo.","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating that there is nothing to undo.","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"kanna-1"},"content":"    public static String showCannotUndo() {","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":"        return \"Hmm... There is no valid command I can undo.\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that a delete command has been undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"     * @param task The task that was added back.","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating the success of undoing a delete command.","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"    public static String showUndoDeleteCommand(String task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"        return \"Okay... I\u0027ve re-added back this task:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"                + \"    \" + task;","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that a mark command has been undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating the success of undoing a mark command.","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":"    public static String showUndoMarkCommand(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"kanna-1"},"content":"        return \"Okay... I\u0027ve re-updated the task to be not done.\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"kanna-1"},"content":"                + \"    \" + task;","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that an unmark command has been undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":158,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating the success of undoing an unmark command.","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"kanna-1"},"content":"    public static String showUndoUnmarkCommand(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"kanna-1"},"content":"        return \"Okay... I\u0027ve re-updated the task to be done.\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":162,"author":{"gitId":"kanna-1"},"content":"                + \"    \" + task;","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that a to-do command has been undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":168,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating the success of undoing a to-do command.","lastModifiedDate":"2023-09-14"},{"lineNumber":169,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":170,"author":{"gitId":"kanna-1"},"content":"    public static String showUndoToDoCommand(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":171,"author":{"gitId":"kanna-1"},"content":"        return \"Okay... I\u0027ve deleted the recently added task:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"                + \"    \" + task;","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":176,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that an event command has been undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":178,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating the success of undoing an event command.","lastModifiedDate":"2023-09-14"},{"lineNumber":179,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":180,"author":{"gitId":"kanna-1"},"content":"    public static String showUndoEventCommand(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":181,"author":{"gitId":"kanna-1"},"content":"        return \"Okay... I\u0027ve deleted the recently added task.\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":182,"author":{"gitId":"kanna-1"},"content":"                + \"    \" + task;","lastModifiedDate":"2023-09-14"},{"lineNumber":183,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":184,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":185,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":186,"author":{"gitId":"kanna-1"},"content":"     * Returns a message indicating that a deadline command has been undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":188,"author":{"gitId":"kanna-1"},"content":"     * @return A string indicating the success of undoing a deadline command.","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"kanna-1"},"content":"    public static String showUndoDeadlineCommand(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"kanna-1"},"content":"        return \"Okay... I\u0027ve deleted the recently added task:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":192,"author":{"gitId":"kanna-1"},"content":"                + \"    \" + task;","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":194}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"        \u003cStackPane\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"90.0\" fitWidth\u003d\"90.0\" pickOnBounds\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"                \u003cCircle radius\u003d\"45.0\" centerX\u003d\"45.0\" centerY\u003d\"45.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    \u003cspacing\u003e10.0\u003c/spacing\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"kanna-1":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"arona.MainWindow\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"kanna-1":21}},{"path":"src/test/java/arona/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import arona.exception.IllegalArgumentAronaException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":" * Unit tests for the Parser class.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"     * Tests parsing user input into an array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    public void parseUserInputTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"        String input \u003d \"todo description\";","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"        String[] result \u003d Parser.parseUserInput(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"        String[] expected \u003d {\"todo\", \"description\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"        assertArrayEquals(expected, result);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"     * Tests extracting the command from an array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"    public void getCommandTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"        String[] tokens \u003d {\"deadline\", \"description\", \"/by\", \"2023-09-15\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"        String result \u003d Parser.getCommand(tokens);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"     * Tests extracting the description from a \"todo\" command.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    public void getToDoDescriptionTest() throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"        String[] tokens \u003d {\"todo\", \"description\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"        String result \u003d Parser.getToDoDescription(tokens);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"description\", result);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"     * Tests extracting description and date from a \"deadline\" command.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"    public void getDeadlineDescriptionTest() throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        String[] tokens \u003d {\"deadline\", \"description\", \"/by\", \"2023-09-15\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        String[] result \u003d Parser.getDeadlineDescription(tokens);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"        String[] expected \u003d {\"description\", \"2023-09-15\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"        assertArrayEquals(expected, result);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"     * Tests extracting description, start date, and end date from an \"event\" command.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"    public void getEventDescriptionTest() throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"        String[] tokens \u003d {\"event\", \"description\", \"/from\", \"2023-09-15\", \"/to\", \"2023-09-16\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"        String[] result \u003d Parser.getEventDescription(tokens);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"        String[] expected \u003d {\"description\", \"from: 2023-09-15\", \"to: 2023-09-16\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"        assertArrayEquals(expected, result);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"     * Tests parsing a date string into a LocalDate object.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"    public void parseDateTest() throws IllegalArgumentAronaException {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        String dateStr \u003d \"2023-09-15\";","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"        LocalDate result \u003d Parser.parseDate(dateStr);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"        LocalDate expected \u003d LocalDate.of(2023, 9, 15);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"     * Tests extracting a task index from an array of tokens.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"    public void getTaskIndexTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"        String[] tokens \u003d {\"done\", \"2\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"        int result \u003d Parser.getTaskIndex(tokens);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"        assertEquals(1, result);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":92}},{"path":"src/test/java/arona/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"import arona.task.DeadlineTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"import arona.task.EventTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"import arona.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":" * Unit tests for the Storage class.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"    private static final String TEST_FILE_PATH \u003d \"test_tasks.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"     * Sets up a test file before each test.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        // Create a test file for each test","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"        File testFile \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"            if (!testFile.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"                testFile.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"     * Tests loading tasks from a valid input file.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"    public void loadTasksTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"        Storage storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"        // Add some test data to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(TEST_FILE_PATH))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"T|0|Task 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"D|0|Task 2|2023-09-15\");","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"E|0|Task 3|from: 2023-09-15|to: 2023-09-16\");","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"            e.getMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"        storage.loadTasks(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"        // Verify that the tasks were loaded correctly","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"Task 1\", tasks.get(0).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"Task 2\", tasks.get(1).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"        assertEquals(LocalDate.of(2023, 9, 15), ((DeadlineTask) tasks.get(1)).getDate());","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"Task 3\", ((EventTask) tasks.get(2)).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"from: 2023-09-15\", ((EventTask) tasks.get(2)).getFrom());","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"to: 2023-09-16\", ((EventTask) tasks.get(2)).getTo());","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"     * Tests updating the status of a task to marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"    public void updateTaskStatusAsMarkedTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"        Storage storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"        // Add some test data to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(TEST_FILE_PATH))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"T|0|Task 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"D|0|Task 2|2023-09-15\");","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"E|0|Task 3|2023-09-15|2023-09-16\");","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"        // Mark the second task as done (index 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"        storage.updateTaskStatusAsMarked(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"        // Verify that the task status was updated","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"        storage.loadTasks(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"[X] \", tasks.get(1).getStatusIcon());","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"     * Tests updating the status of a task to unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"    public void updateTaskStatusAsUnmarkedTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"        Storage storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"        // Add some test data to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(TEST_FILE_PATH))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"T|1|Task 1\"); // Task 1 is already marked as done","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"D|0|Task 2|2023-09-15\");","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"E|1|Task 3|2023-09-15|2023-09-16\"); // Task 3 is already marked as done","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"        // Unmark the first task (index 0)","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"        storage.updateTaskStatusAsUnmarked(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"        // Verify that the task status was updated","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"        storage.loadTasks(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"[ ] \", tasks.get(0).getStatusIcon());","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"kanna-1"},"content":"     * Tests deleting a task from the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"        Storage storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"        // Add some test data to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(TEST_FILE_PATH))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"T|0|Task 1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"D|0|Task 2|2023-09-15\");","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"            writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"            writer.write(\"E|0|Task 3|2023-09-15|2023-09-16\");","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"        // Delete the second task (index 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"        storage.deleteTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":"        // Verify that the task was deleted","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"kanna-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"kanna-1"},"content":"        storage.loadTasks(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"Task 1\", tasks.get(0).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"Task 3\", tasks.get(1).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":157}},{"path":"src/test/java/arona/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"package arona.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":" * Unit tests for the ToDoTask class.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"     * Tests creating a ToDoTask with a description.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    public void createToDoTaskWithDescriptionTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"        String description \u003d \"Buy groceries\";","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"        ToDoTask task \u003d new ToDoTask(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"        assertEquals(description, task.getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"[ ] \", task.getStatusIcon()); // By default, it should not be marked as done","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"     * Tests creating a ToDoTask with a description and marking it as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    public void createToDoTaskWithDescriptionAndMarkedTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"        String description1 \u003d \"Complete homework\";","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"        ToDoTask task1 \u003d new ToDoTask(description1, 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        String description2 \u003d \"Do laundry\";","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"        ToDoTask task2 \u003d new ToDoTask(description2);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"        task2.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"        assertEquals(description1, task1.getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"[X] \", task1.getStatusIcon());","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"        assertEquals(description2, task2.getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"[X] \", task2.getStatusIcon());","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"     * Tests the toString method of ToDoTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"        String description \u003d \"Read a book\";","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"        ToDoTask task \u003d new ToDoTask(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"        String taskString \u003d task.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"[T][ ] \" + description, taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"kanna-1":56}},{"path":"test_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"T|0|Task 1","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"E|0|Task 3|2023-09-15|2023-09-16","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kanna-1":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"todo borrow book","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"deadline return book /by 2020-10-10","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\arona\\*.java","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"java -classpath ..\\bin arona.Arona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"kanna-1":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/arona/*.java","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"java -classpath ../bin arona.Arona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"kanna-1":2}}]
