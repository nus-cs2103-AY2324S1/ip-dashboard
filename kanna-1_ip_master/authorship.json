[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    public Deadline(String description, LocalDate date, int isMarked) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"        super(description, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"        return \"[D]\" + super.toString() + \" (\" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"import java.io.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"        Path path \u003d Paths.get(\"src/main/java/data/duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"            File file \u003d path.toFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(path.toString()));","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"            String line;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"                String[] strings \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"                switch (strings[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"                case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"                    Todo todo \u003d new Todo(strings[2], Integer.parseInt(strings[1]));","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"                    tasks.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"                case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"                    Deadline deadline \u003d new Deadline(strings[2], LocalDate.parse(strings[3]), Integer.parseInt(strings[1]));","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"                case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"                    Event event \u003d new Event(strings[2], strings[3], strings[4], Integer.parseInt(strings[1]));","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"            br.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"        File inFile \u003d path.toFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"        System.out.println(\"    Hello! I\u0027m Arona, your Virtual Assistant.\\n    What can I do for you today?\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"        String echo \u003d scanner.nextLine().toLowerCase().trim();","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        while (!echo.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"                String[] strings \u003d echo.split(\" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"                if (!echo.isEmpty()) { // Skips processing when echo is empty.","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"                    if (echo.equals(\"list\")) { // Lists all current tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    \" +","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"                                (tasks.size() \u003d\u003d 0","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"                                        ? \"Great job! No tasks right now, enjoy your day!\"","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"                                        : (tasks.size() \u003d\u003d 1","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"                                        ? \"Good news! You only have one task:\"","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"                                        : \"Hello! Here is your list of tasks:\")));","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"\");","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"mark\")) { // Marks a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Whoops! Don\u0027t forget to specify the task.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d Integer.valueOf(strings[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"                        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Uh-oh, that task does not exist.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"                        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"                        task.mark();","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"                            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"                            BufferedReader br \u003d new BufferedReader(new FileReader(inFile));","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"                            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"                            String line \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"                            int currentLine \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"                            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"                                if (currentLine !\u003d index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"                                    bw.write(line);","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"                                    bw.newLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"                                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"                                    char[] charArray \u003d line.toCharArray();","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"                                    charArray[2] \u003d \u00271\u0027;","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"                                    String modifiedLine \u003d new String(charArray);","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"                                    bw.write(modifiedLine);","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"                                    bw.newLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"                                }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"                                currentLine++;","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"                            br.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"                            bw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"                            inFile.delete();","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"                            tempFile.renameTo(inFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Awesome! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + task + \"\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"unmark\")) { // Unmarks a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Whoops! Don\u0027t forget to specify the task.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d Integer.valueOf(strings[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"                        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Uh-oh, that task does not exist.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"                        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-20"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"                        task.unmark();","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"kanna-1"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":"                            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"                            BufferedReader br \u003d new BufferedReader(new FileReader(inFile));","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"                            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"                            String line \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"                            int currentLine \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"                            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"                                if (currentLine !\u003d index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"                                    bw.write(line);","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"                                    bw.newLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"                                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"                                    char[] charArray \u003d line.toCharArray();","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"                                    charArray[2] \u003d \u00270\u0027;","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"kanna-1"},"content":"                                    String modifiedLine \u003d new String(charArray);","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"                                    bw.write(modifiedLine);","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"                                    bw.newLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":"                                }","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":"                                currentLine++;","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":"                            br.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"                            bw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"kanna-1"},"content":"                            inFile.delete();","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"                            tempFile.renameTo(inFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"kanna-1"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Sure thing! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + task + \"\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"todo\")) { // Adds a todo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Oh no! You forgot to specify the task!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"kanna-1"},"content":"                        String description \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, strings.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"kanna-1"},"content":"                        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"kanna-1"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"kanna-1"},"content":"                            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(inFile, true));","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"kanna-1"},"content":"                            String data \u003d \"T|0|\" + description + \"\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"kanna-1"},"content":"                            bw.write(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"kanna-1"},"content":"                            bw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"kanna-1"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":185,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":187,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + todo);","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":189,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":190,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"deadline\")) { // Adds a deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":191,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":192,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Oh no! You forgot to specify the task!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":194,"author":{"gitId":"kanna-1"},"content":"                        if (!echo.contains(\"/by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Whoopsie! The deadline seems a bit confused. Please use \u0027/by\u0027 to set it.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":197,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d -1;","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"kanna-1"},"content":"                        for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":199,"author":{"gitId":"kanna-1"},"content":"                            if (strings[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-21"},{"lineNumber":200,"author":{"gitId":"kanna-1"},"content":"                                index \u003d i;","lastModifiedDate":"2023-08-21"},{"lineNumber":201,"author":{"gitId":"kanna-1"},"content":"                                strings[i] \u003d strings[i].substring(1) + \":\";","lastModifiedDate":"2023-08-21"},{"lineNumber":202,"author":{"gitId":"kanna-1"},"content":"                                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":203,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-20"},{"lineNumber":204,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":205,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":206,"author":{"gitId":"kanna-1"},"content":"                        String description \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, index));","lastModifiedDate":"2023-08-21"},{"lineNumber":207,"author":{"gitId":"kanna-1"},"content":"                        String by \u003d String.join(\" \", Arrays.copyOfRange(strings, index + 1, strings.length));","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"kanna-1"},"content":"                        LocalDate d \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"kanna-1"},"content":"                        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"kanna-1"},"content":"                            // Attempt to parse as a LocalDate","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"kanna-1"},"content":"                            d \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"kanna-1"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"kanna-1"},"content":"                            // Handle the case where the format is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"Whoopsie! The deadline seems a bit confused. Please use a \u0027YYYY-MM-DD\u0027 format to set it.\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"kanna-1"},"content":"                        Deadline deadline \u003d new Deadline(description, d);","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"kanna-1"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-08-21"},{"lineNumber":221,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":222,"author":{"gitId":"kanna-1"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":223,"author":{"gitId":"kanna-1"},"content":"                            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(inFile, true));","lastModifiedDate":"2023-08-28"},{"lineNumber":224,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":225,"author":{"gitId":"kanna-1"},"content":"                            String data \u003d \"D|0|\" + description + \"|\" + by + \"\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":226,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":227,"author":{"gitId":"kanna-1"},"content":"                            bw.write(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":228,"author":{"gitId":"kanna-1"},"content":"                            bw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":229,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":230,"author":{"gitId":"kanna-1"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":231,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":232,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":233,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":234,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":235,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + deadline);","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":237,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":238,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"event\")) { // Adds an event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":239,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":240,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Oh no! You forgot to specify the event!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":241,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":242,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"kanna-1"},"content":"                        if (!(echo.contains(\"/from\") \u0026\u0026 echo.contains(\"/to\"))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Uh-oh! This event seems to have lost its way. Please use \u0027/from\u0027 and \u0027/to\u0027 to set it.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":245,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":246,"author":{"gitId":"kanna-1"},"content":"                        int indexStart \u003d -1;","lastModifiedDate":"2023-08-21"},{"lineNumber":247,"author":{"gitId":"kanna-1"},"content":"                        int indexEnd \u003d -1;","lastModifiedDate":"2023-08-21"},{"lineNumber":248,"author":{"gitId":"kanna-1"},"content":"                        boolean first \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":249,"author":{"gitId":"kanna-1"},"content":"                        for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":250,"author":{"gitId":"kanna-1"},"content":"                            if (strings[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-21"},{"lineNumber":251,"author":{"gitId":"kanna-1"},"content":"                                if (first) {","lastModifiedDate":"2023-08-21"},{"lineNumber":252,"author":{"gitId":"kanna-1"},"content":"                                    indexStart \u003d i;","lastModifiedDate":"2023-08-21"},{"lineNumber":253,"author":{"gitId":"kanna-1"},"content":"                                    first \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":254,"author":{"gitId":"kanna-1"},"content":"                                    strings[i] \u003d strings[i].substring(1) + \":\";","lastModifiedDate":"2023-08-21"},{"lineNumber":255,"author":{"gitId":"kanna-1"},"content":"                                } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":256,"author":{"gitId":"kanna-1"},"content":"                                    indexEnd \u003d i;","lastModifiedDate":"2023-08-21"},{"lineNumber":257,"author":{"gitId":"kanna-1"},"content":"                                    strings[i] \u003d strings[i].substring(1) + \":\";","lastModifiedDate":"2023-08-21"},{"lineNumber":258,"author":{"gitId":"kanna-1"},"content":"                                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":259,"author":{"gitId":"kanna-1"},"content":"                                }","lastModifiedDate":"2023-08-21"},{"lineNumber":260,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":261,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":262,"author":{"gitId":"kanna-1"},"content":"                        String description \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, indexStart));","lastModifiedDate":"2023-08-21"},{"lineNumber":263,"author":{"gitId":"kanna-1"},"content":"                        String from \u003d String.join(\" \", Arrays.copyOfRange(strings, indexStart, indexEnd));","lastModifiedDate":"2023-08-21"},{"lineNumber":264,"author":{"gitId":"kanna-1"},"content":"                        String to \u003d String.join(\" \", Arrays.copyOfRange(strings, indexEnd, strings.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":265,"author":{"gitId":"kanna-1"},"content":"                        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-21"},{"lineNumber":266,"author":{"gitId":"kanna-1"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-08-21"},{"lineNumber":267,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":268,"author":{"gitId":"kanna-1"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":269,"author":{"gitId":"kanna-1"},"content":"                            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(inFile, true));","lastModifiedDate":"2023-08-28"},{"lineNumber":270,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":271,"author":{"gitId":"kanna-1"},"content":"                            String data \u003d \"E|0|\" + description + \"|\" + from + \"|\" + to + \"\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":272,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":273,"author":{"gitId":"kanna-1"},"content":"                            bw.write(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":274,"author":{"gitId":"kanna-1"},"content":"                            bw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":275,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":276,"author":{"gitId":"kanna-1"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":277,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":278,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":279,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":280,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":281,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + event);","lastModifiedDate":"2023-08-21"},{"lineNumber":282,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":283,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":284,"author":{"gitId":"kanna-1"},"content":"                    } else if (strings[0].equals(\"delete\")) { // Deletes a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":285,"author":{"gitId":"kanna-1"},"content":"                        if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":286,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Whoops! Don\u0027t forget to specify the task to be deleted.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":287,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":288,"author":{"gitId":"kanna-1"},"content":"                        int index \u003d Integer.valueOf(strings[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":289,"author":{"gitId":"kanna-1"},"content":"                        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":290,"author":{"gitId":"kanna-1"},"content":"                            throw new IllegalArgumentDukeException(\"    Uh-oh, that task does not exist.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":291,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":292,"author":{"gitId":"kanna-1"},"content":"                        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":293,"author":{"gitId":"kanna-1"},"content":"                        tasks.remove(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":294,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":295,"author":{"gitId":"kanna-1"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":296,"author":{"gitId":"kanna-1"},"content":"                            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2023-08-28"},{"lineNumber":297,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":298,"author":{"gitId":"kanna-1"},"content":"                            BufferedReader br \u003d new BufferedReader(new FileReader(inFile));","lastModifiedDate":"2023-08-28"},{"lineNumber":299,"author":{"gitId":"kanna-1"},"content":"                            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-08-28"},{"lineNumber":300,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":301,"author":{"gitId":"kanna-1"},"content":"                            String line \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":302,"author":{"gitId":"kanna-1"},"content":"                            int currentLine \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":303,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":304,"author":{"gitId":"kanna-1"},"content":"                            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":305,"author":{"gitId":"kanna-1"},"content":"                                if (currentLine !\u003d index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":306,"author":{"gitId":"kanna-1"},"content":"                                    bw.write(line);","lastModifiedDate":"2023-08-28"},{"lineNumber":307,"author":{"gitId":"kanna-1"},"content":"                                    bw.newLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":308,"author":{"gitId":"kanna-1"},"content":"                                }","lastModifiedDate":"2023-08-28"},{"lineNumber":309,"author":{"gitId":"kanna-1"},"content":"                                currentLine++;","lastModifiedDate":"2023-08-28"},{"lineNumber":310,"author":{"gitId":"kanna-1"},"content":"                            }","lastModifiedDate":"2023-08-28"},{"lineNumber":311,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":312,"author":{"gitId":"kanna-1"},"content":"                            br.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":313,"author":{"gitId":"kanna-1"},"content":"                            bw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":314,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":315,"author":{"gitId":"kanna-1"},"content":"                            inFile.delete();","lastModifiedDate":"2023-08-28"},{"lineNumber":316,"author":{"gitId":"kanna-1"},"content":"                            tempFile.renameTo(inFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":317,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":318,"author":{"gitId":"kanna-1"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":319,"author":{"gitId":"kanna-1"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":320,"author":{"gitId":"kanna-1"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":321,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":322,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Sure thing! I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":323,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"      \" + task + \"\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":324,"author":{"gitId":"kanna-1"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":325,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":326,"author":{"gitId":"kanna-1"},"content":"                    } else { // Invalid arguments","lastModifiedDate":"2023-08-21"},{"lineNumber":327,"author":{"gitId":"kanna-1"},"content":"                        throw new IllegalArgumentDukeException(\"    Oops! I\u0027m not quite sure what that means...\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":328,"author":{"gitId":"kanna-1"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":329,"author":{"gitId":"kanna-1"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":330,"author":{"gitId":"kanna-1"},"content":"            } catch (IllegalArgumentDukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":331,"author":{"gitId":"kanna-1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":332,"author":{"gitId":"kanna-1"},"content":"            } finally {","lastModifiedDate":"2023-08-21"},{"lineNumber":333,"author":{"gitId":"kanna-1"},"content":"                echo \u003d scanner.nextLine().toLowerCase().trim(); // Reads next line","lastModifiedDate":"2023-08-21"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":335,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":336,"author":{"gitId":"kanna-1"},"content":"        System.out.println(\"    Goodbye. See you soon!\"); // Exits the programme.","lastModifiedDate":"2023-08-21"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":339,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":334,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    protected String from;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"    protected String to;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    public Event(String description, String from, String to, int isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"        super(description, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"        return \"[E]\" + super.toString() + \" (\" + from + \" \" + to + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":20}},{"path":"src/main/java/IllegalArgumentDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class IllegalArgumentDukeException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    public IllegalArgumentDukeException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"kanna-1":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    public Task(String description, int isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d (isMarked \u003d\u003d 1) ? true : false;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"    public void mark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"        return getStatusIcon() + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"kanna-1":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"    public Todo(String description, int isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"        super(description, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kanna-1":10}}]
