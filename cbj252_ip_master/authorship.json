[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cbj252":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"cbj252"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cbj252":1,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"    protected String by;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"     * Gives string representation of the task, shown to users.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cbj252":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":" * The main class that contains and controls the other components.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"            Ui.showLoadingError();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"     * Main loop that constantly requests input from user when necessary.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"cbj252"},"content":"    public void run() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"cbj252"},"content":"        Ui.showWelcome();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"cbj252"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"cbj252"},"content":"            while (!isExit) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"cbj252"},"content":"                String fullCommand \u003d Ui.readCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"cbj252"},"content":"                String commandType \u003d Parser.parseCommandType(fullCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"cbj252"},"content":"                switch (Objects.requireNonNull(commandType)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"cbj252"},"content":"                case \"bye\" -\u003e isExit \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"cbj252"},"content":"                case \"list\" -\u003e Ui.listTasks(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"cbj252"},"content":"                case \"delete\" -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"cbj252"},"content":"                    tasks.deleteTask(Parser.taskNumber(fullCommand));","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"cbj252"},"content":"                    Ui.listTasks(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"cbj252"},"content":"                    Storage.writeToDisk(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"cbj252"},"content":"                case \"mark\" -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"cbj252"},"content":"                    tasks.markTask(Parser.taskNumber(fullCommand));","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"cbj252"},"content":"                    Ui.listTasks(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"cbj252"},"content":"                    Storage.writeToDisk(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"cbj252"},"content":"                case \"task\" -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"cbj252"},"content":"                    tasks.addTask(Parser.newTask(fullCommand));","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"cbj252"},"content":"                    Ui.listTasks(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"cbj252"},"content":"                    Storage.writeToDisk(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"cbj252"},"content":"                case \"find\" -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"cbj252"},"content":"                    Ui.showFoundTasks(tasks.findTasks(Parser.findKeyword(fullCommand)));","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"cbj252"},"content":"                default -\u003e throw new DukeException(\"Invalid task, uncaught by duke.Parser.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"cbj252"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"cbj252"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"cbj252"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"cbj252"},"content":"        new Duke(\"data\").run();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cbj252":62,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"cbj252":6}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":" * Represents an event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"    protected String from;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"    protected String to;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"     * Gives string representation of the task, shown to users.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cbj252":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":" * Processes the string the user put in.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"     * Returns the type of task.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"     * @param response the string the user put in.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"     * @return type of task.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"    public static String parseCommandType(String response) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"        if (Objects.equals(response, \"bye\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"            return \"bye\";","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"        } else if (Objects.equals(response, \"list\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"            return \"list\";","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"        } else if (response.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"            return \"delete\";","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"cbj252"},"content":"        } else if (response.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"cbj252"},"content":"            return \"mark\";","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"cbj252"},"content":"        } else if (response.startsWith(\"todo\") || response.startsWith(\"deadline\") || response.startsWith(\"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"cbj252"},"content":"            return \"task\";","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"cbj252"},"content":"        } else if (response.startsWith(\"find\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"cbj252"},"content":"            return \"find\";","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"cbj252"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"cbj252"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"cbj252"},"content":"     * Returns the number associated with a delete or mark command.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"cbj252"},"content":"     * number is reduced by 1 since user will write with 1-indexing while","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"cbj252"},"content":"     * taskList is 0-indexed.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"cbj252"},"content":"     * Not to be used for other types of command.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"cbj252"},"content":"     * @param response the string the user put in.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"cbj252"},"content":"     * @return task number.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"cbj252"},"content":"    public static int taskNumber(String response) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"cbj252"},"content":"        String[] array \u003d response.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"cbj252"},"content":"        String lastVal \u003d array[array.length - 1];","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"cbj252"},"content":"        return parseInt(lastVal) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"cbj252"},"content":"     * Returns the task given in a command.","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"cbj252"},"content":"     * @param response the string the user put in.","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"cbj252"},"content":"     * @return the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"cbj252"},"content":"     * @throws DukeException if incomplete task or not a task.","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"cbj252"},"content":"    public static Task newTask(String response) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"cbj252"},"content":"        String[] array \u003d response.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"cbj252"},"content":"        StringBuilder title \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"cbj252"},"content":"        String mode \u003d \"title\";","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"cbj252"},"content":"        if (response.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"cbj252"},"content":"            for (String command : array) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"cbj252"},"content":"                if (!title.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"cbj252"},"content":"                    title.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"cbj252"},"content":"                title.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"cbj252"},"content":"            if (!title.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"cbj252"},"content":"                return new Todo(title.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"cbj252"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"cbj252"},"content":"                throw new DukeException(\"☹ OOPS!!! The title of a todo cannot be empty.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"cbj252"},"content":"        } else if (response.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"cbj252"},"content":"            StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"cbj252"},"content":"            for (String command : array) {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"/by\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"cbj252"},"content":"                    mode \u003d \"deadline\";","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(mode, \"title\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"cbj252"},"content":"                    if (!title.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"cbj252"},"content":"                        title.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"cbj252"},"content":"                    title.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"cbj252"},"content":"                } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"cbj252"},"content":"                    if (!deadline.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"cbj252"},"content":"                        deadline.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"cbj252"},"content":"                    deadline.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"cbj252"},"content":"            if (!title.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"cbj252"},"content":"                try {","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"cbj252"},"content":"                    LocalDate fromDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"cbj252"},"content":"                    deadline \u003d new StringBuilder(fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"cbj252"},"content":"                } catch (DateTimeException ignored) {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"cbj252"},"content":"                return new Deadline(title.toString(), deadline.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"cbj252"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"cbj252"},"content":"                throw new DukeException(\"☹ OOPS!!! The title cannot be empty.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"cbj252"},"content":"        } else if (response.startsWith(\"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"cbj252"},"content":"            StringBuilder from \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"cbj252"},"content":"            StringBuilder to \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"cbj252"},"content":"            for (String command : array) {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"/from\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"cbj252"},"content":"                    mode \u003d \"from\";","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"/to\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"cbj252"},"content":"                    mode \u003d \"to\";","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(mode, \"title\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"cbj252"},"content":"                    if (!title.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"cbj252"},"content":"                        title.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"cbj252"},"content":"                    title.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"cbj252"},"content":"                } else if (Objects.equals(mode, \"from\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"cbj252"},"content":"                    if (!from.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"cbj252"},"content":"                        from.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"cbj252"},"content":"                    from.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"cbj252"},"content":"                } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"cbj252"},"content":"                    if (!to.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"cbj252"},"content":"                        to.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"cbj252"},"content":"                    to.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"cbj252"},"content":"            if (!title.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"cbj252"},"content":"                try {","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"cbj252"},"content":"                    LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"cbj252"},"content":"                    from \u003d new StringBuilder(fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"cbj252"},"content":"                } catch (DateTimeException ignored) {","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"cbj252"},"content":"                try {","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"cbj252"},"content":"                    LocalDate fromDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"cbj252"},"content":"                    to \u003d new StringBuilder(fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"cbj252"},"content":"                } catch (DateTimeException ignored) {","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"cbj252"},"content":"                return new Event(title.toString(), from.toString(), to.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"cbj252"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"cbj252"},"content":"                throw new DukeException(\"☹ OOPS!!! The title cannot be empty.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"cbj252"},"content":"        return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"cbj252"},"content":"    public static String findKeyword(String response) {","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"cbj252"},"content":"        return response.substring(5);","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"cbj252":160}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":" * Handles reading and writing of the data file.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"    private final File file;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"        File diskValues \u003d new File(filePath + \"/duke.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"        this.file \u003d diskValues;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"            File folder \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"                if (!folder.mkdir()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"                    throw new IOException();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"cbj252"},"content":"            if (!diskValues.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"cbj252"},"content":"                if (!diskValues.createNewFile()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"cbj252"},"content":"                    throw new IOException();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"cbj252"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"cbj252"},"content":"            System.out.println(\"IOException in reading files: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"cbj252"},"content":"     * Parses one line of the task and returns the associated task.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"cbj252"},"content":"     * @param oneTask one line from the data file.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"cbj252"},"content":"     * @return the task represented by the line from the data file.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"cbj252"},"content":"     * @throws DukeException if the data file\u0027s input does not match writing.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"cbj252"},"content":"    private Task parseOneLine(String oneTask) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"cbj252"},"content":"        Task theTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"cbj252"},"content":"        String taskName;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"cbj252"},"content":"        char TaskType \u003d oneTask.charAt(1);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"cbj252"},"content":"        String[] splitTask \u003d oneTask.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"cbj252"},"content":"        if (oneTask.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"cbj252"},"content":"            taskName \u003d splitTask[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"cbj252"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"cbj252"},"content":"            taskName \u003d splitTask[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"cbj252"},"content":"        if (TaskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"cbj252"},"content":"            theTask \u003d new Todo(taskName);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"cbj252"},"content":"        } else if (TaskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"cbj252"},"content":"            StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"cbj252"},"content":"            String mode \u003d \"none\";","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"cbj252"},"content":"            for (String command : splitTask) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"(by:\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"cbj252"},"content":"                    mode \u003d \"by\";","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(mode, \"by\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"cbj252"},"content":"                    if (deadline.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"cbj252"},"content":"                        deadline.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"cbj252"},"content":"                    deadline.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"cbj252"},"content":"            if (deadline.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"cbj252"},"content":"                deadline.deleteCharAt(deadline.length() - 1); // Remove last ).","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"cbj252"},"content":"            theTask \u003d new Deadline(taskName, deadline.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"cbj252"},"content":"        } else if (TaskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"cbj252"},"content":"            StringBuilder from \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"cbj252"},"content":"            StringBuilder to \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"cbj252"},"content":"            String mode \u003d \"none\";","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"cbj252"},"content":"            for (String command : splitTask) {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"(from:\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"cbj252"},"content":"                    mode \u003d \"from\";","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(command, \"to:\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"cbj252"},"content":"                    mode \u003d \"to\";","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"cbj252"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"cbj252"},"content":"                if (Objects.equals(mode, \"from\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"cbj252"},"content":"                    if (from.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"cbj252"},"content":"                        from.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"cbj252"},"content":"                    from.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"cbj252"},"content":"                } else if (Objects.equals(mode, \"to\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"cbj252"},"content":"                    if (to.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"cbj252"},"content":"                        to.append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"cbj252"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"cbj252"},"content":"                    to.append(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"cbj252"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"cbj252"},"content":"            if (to.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"cbj252"},"content":"                to.deleteCharAt(to.length() - 1); // Remove last ).","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"cbj252"},"content":"            theTask \u003d new Event(taskName, from.toString(), to.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"cbj252"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"cbj252"},"content":"            throw new DukeException(\"Input file corrupted.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"cbj252"},"content":"        if (oneTask.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"cbj252"},"content":"            theTask.completeTask();","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"cbj252"},"content":"        return theTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"cbj252"},"content":"     * Prepares a list of tasks from a data file.","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"cbj252"},"content":"     * @return The tasks represented by the line from the data file.","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"cbj252"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"cbj252"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"cbj252"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"cbj252"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"cbj252"},"content":"                String oneTask \u003d s.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"cbj252"},"content":"                tasks.add(parseOneLine(oneTask));","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"cbj252"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"cbj252"},"content":"            System.out.println(\"FileNotFoundException in reading files: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"cbj252"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"cbj252"},"content":"     * Writes tasks to the data files.","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"cbj252"},"content":"     * @param tasks Tasks to write to the data file.","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"cbj252"},"content":"    public static void writeToDisk(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"cbj252"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"cbj252"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"cbj252"},"content":"                fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"cbj252"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"cbj252"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"cbj252"},"content":"            System.out.println(\"IOException in writing to file: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"cbj252":146}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"    protected String description;","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"    public void completeTask() {","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cbj252":23}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":" * Class that contains all the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"     * Deletes the task with index taskNumber.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"     * @param taskNumber the index of task to remove.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"     * @throws DukeException if given task does not exist.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"    public void deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"cbj252"},"content":"        if (taskNumber \u003c tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"cbj252"},"content":"            Ui.showMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"cbj252"},"content":"            System.out.println(tasks.get(taskNumber).toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"cbj252"},"content":"            tasks.remove(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"cbj252"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"cbj252"},"content":"            throw new DukeException(\"☹ OOPS!!! The delete command needs to be followed by an existing task number.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"cbj252"},"content":"     * Completes the task with index taskNumber.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"cbj252"},"content":"     * @param taskNumber the index of task to complete.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"cbj252"},"content":"     * @throws DukeException if given task does not exist.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"cbj252"},"content":"    public void markTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"cbj252"},"content":"        // Assumption: \"mark\" is not allowed as a task name \u0026 you can mark already done tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"cbj252"},"content":"        // Issue: \"mark\" by itself crashes.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"cbj252"},"content":"        if (taskNumber \u003c tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"cbj252"},"content":"            tasks.get(taskNumber).completeTask();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"cbj252"},"content":"            Ui.showMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"cbj252"},"content":"            Ui.showMessage(tasks.get(taskNumber).toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"cbj252"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"cbj252"},"content":"            throw new DukeException(\"☹ OOPS!!! The mark command needs to be followed by an existing task number.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"cbj252"},"content":"     * Adds the task newTask.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"cbj252"},"content":"     * @param newTask task to add.","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"cbj252"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"cbj252"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"cbj252"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"cbj252"},"content":"        Pattern pattern \u003d Pattern.compile(keyword, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"cbj252"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"cbj252"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"cbj252"},"content":"            Matcher matcher \u003d pattern.matcher(task.description);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"cbj252"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"cbj252"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"cbj252"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"cbj252"},"content":"        return foundTasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"cbj252":71}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":" * Represents a todo task.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"     * Gives string representation of the task, shown to users.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"     * @return String representation.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cbj252":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":" * Class that deals with interactions with the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"     * Shows a loading error if failing to initialise starting classes.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"        System.out.println(\"Unable to initialise duke.Duke.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"     * Shows welcome message.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"    public static void showWelcome() {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"        System.out.println(\"Hello I\u0027m iP\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"     * Shows a list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"cbj252"},"content":"     * @param tasks Tasks to show.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"cbj252"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"cbj252"},"content":"        System.out.println(\"List of tasks:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"cbj252"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"cbj252"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"cbj252"},"content":"        System.out.println(\"You have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"cbj252"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"cbj252"},"content":"     * Requests input from the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"cbj252"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"cbj252"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"cbj252"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"cbj252"},"content":"        return input.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"cbj252"},"content":"    public static void showMessage(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"cbj252"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"cbj252"},"content":"    public static void showFoundTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"cbj252"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"cbj252"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"cbj252"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"cbj252":54}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;  //same package as the class being tested","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"    public void parseCommandType_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"            Parser.parseCommandType(\"commandThatMakesNoSense\");","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"    public void newTask_missingToFromEvent_nullReturned() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"            Task test \u003d Parser.newTask(\"event 1 /from 2\");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"            assert test !\u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"            assertEquals(\"[E][ ] 1 (from: 2 to: )\", test.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"            assertEquals(\"☹ OOPS!!! The title, from and to sections cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"cbj252":28}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"cbj252"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"cbj252"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"cbj252"},"content":"    public void deleteTask_taskNumberNotAvailable_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"cbj252"},"content":"            TaskList test \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"cbj252"},"content":"            test.deleteTask(1);","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"cbj252"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"cbj252"},"content":"            assertEquals(\"☹ OOPS!!! The delete command needs to be followed by an existing task number.\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"cbj252"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"cbj252"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"cbj252"},"content":"    public void markTask_taskNumberNotAvailable_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"cbj252"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"cbj252"},"content":"            TaskList test \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"cbj252"},"content":"            test.markTask(1);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"cbj252"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"cbj252"},"content":"            assertEquals(\"☹ OOPS!!! The mark command needs to be followed by an existing task number.\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"cbj252"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"cbj252"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"cbj252"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"cbj252":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cbj252"},"content":"todo borrow book","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cbj252"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"cbj252"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cbj252"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cbj252"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cbj252"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cbj252":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"cbj252"},"content":"if ! javac -cp ../src/main/java/Duke.java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cbj252":1,"-":37}}]
