[{"path":"src/main/java/BadInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"public class BadInputException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for BadInputException","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"     * @param e - description of the bad input","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"    public BadInputException(String e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"        super(e);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":10}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":" * use enums to store all the possible commands","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"public enum Commands {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"     * command to list out all current tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"    LIST,","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"     * command to mark a task as completed, requires a index param.","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"    MARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     * command to mark a task as not completed, requires a index param.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    UNMARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * command to create a todo task, no flags required","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    TODO,","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * command to create a event task, requires /from and /to flags","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    EVENT,","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"     * command to create a event task, requires the /by flag","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * command to delete a task, requires a index param.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    DELETE,","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * command to denote an unrecognised input","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    UNRECOGNISED","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":37}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"     * The deadline of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"    private String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"     * constructor for Deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     * @param by   - the deadline of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    public Deadline(String by, String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"     * Default tab spacing","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"    private static final String TAB \u003d \"     \";","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     * Default Welcome Message","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    private static final String WELCOME_MESSAGE \u003d TAB + \"Quack Quack! I am a duck named Quack\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"            + TAB + \"What can I do for you?\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * Default Exit Message","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    private static final String GOODBYE_MESSAGE \u003d TAB + \"Quack Quack! Quack hopes to see you again soon!\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * Line Break","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    private static final String LINE_BREAK \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     * App LOGO","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    private static final String LOGO \u003d \"\\n░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"            +","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████████░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░████░░██████████░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░██░░░░░░░░░░██░░░░░░░░████░░██▒▒▒▒▒▒██░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░██░░██░░░░░░░░██░░░░░░░░░░░░░░██▒▒▒▒▒▒██░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░██░░░░██░░░░░░██░░░░░░░░░░░░░░████████░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░██░░░░░░██░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░████████████░░░░░░░░██░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░██░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░██████░░░░░░░░░░░░░░░░████░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\";","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"     * Quacks memory","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"        new Duke().run();","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"     * Entry point of the software","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"    private void run() {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"        // Welcome Message","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"        print(Duke.LOGO);","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"        print(Duke.LINE_BREAK + Duke.WELCOME_MESSAGE + Duke.LINE_BREAK);","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"        this.collectCommand();","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"        // Good bye Message","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"        print(Duke.LINE_BREAK + Duke.GOODBYE_MESSAGE + Duke.LINE_BREAK);","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"     * Handles the collection and execution of the command","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"    private void collectCommand() {","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"            print(Duke.LINE_BREAK);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"                Parser command \u003d new Parser(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"                switch (command.getCommand()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"                    case LIST:","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"                        this.handleList();","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"                    case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"                        this.handleMark(command.getCommand() \u003d\u003d Commands.MARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"                                this.validateIndex(command.getIndex() - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"                        this.handleDeletion(this.validateIndex(command.getIndex() - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"mingyuanc"},"content":"                    case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"mingyuanc"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"mingyuanc"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"mingyuanc"},"content":"                        this.handleTask(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"mingyuanc"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"mingyuanc"},"content":"                    case UNRECOGNISED:","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"mingyuanc"},"content":"                        this.print(\"Quack does not understand your command!!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"mingyuanc"},"content":"                        this.print(","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"mingyuanc"},"content":"                                \"Quack only understands these commands: list, mark, unmark, delete, todo, deadline, event\");","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"mingyuanc"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"mingyuanc"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"mingyuanc"},"content":"            } catch (BadInputException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"mingyuanc"},"content":"                this.print(\"QUACK QUACK!! \" + e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"mingyuanc"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"mingyuanc"},"content":"                this.print(\"QUACK QUACK!! \" + e.getMessage()","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"mingyuanc"},"content":"                        + \", quack only understand numbers, please input a numeric value!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"mingyuanc"},"content":"            this.print(Duke.LINE_BREAK);","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"mingyuanc"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"mingyuanc"},"content":"        scanner.close();","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"mingyuanc"},"content":"     * Handles the execution of list","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"mingyuanc"},"content":"    private void handleList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"mingyuanc"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"mingyuanc"},"content":"            this.print(\"Quack Quack, you have not entered anything yet!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"mingyuanc"},"content":"            this.print(\"Create new tasks with the todo, deadline or event command\");","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"mingyuanc"},"content":"            return;","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"mingyuanc"},"content":"        this.print(\"Quack Quack, here are the tasks in quack\u0027s memory:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"mingyuanc"},"content":"            this.print((i + 1) + \".\" + this.tasks.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"mingyuanc"},"content":"     * validate the index to ensure it is within range","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"mingyuanc"},"content":"     * @param index - the index of the task in question","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"mingyuanc"},"content":"     * @return the validated index","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"mingyuanc"},"content":"     * @throws BadInputException","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"mingyuanc"},"content":"    private int validateIndex(int index) throws BadInputException {","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"mingyuanc"},"content":"        // vaidate input","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"mingyuanc"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"mingyuanc"},"content":"            throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack currently has no task remembered and cannot execute your command, add one now??\");","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"mingyuanc"},"content":"        // vaidate input","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"mingyuanc"},"content":"        if (index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"mingyuanc"},"content":"            throw new BadInputException(\"Quack does not remember having a task: \" + (index + 1) + \"\\n\" + Duke.TAB +","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack only remember till task \" + (this.tasks.size()));","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"mingyuanc"},"content":"        return index;","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"mingyuanc"},"content":"     * Handles the deletion command","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"mingyuanc"},"content":"     * @param index","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"mingyuanc"},"content":"    private void handleDeletion(int index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"mingyuanc"},"content":"        Task removed \u003d this.tasks.remove(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"mingyuanc"},"content":"        this.print(\"Quack! I have removed this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"mingyuanc"},"content":"        this.print(removed.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"mingyuanc"},"content":"        this.print(\"Quack! Quack is currently remembering \" + this.tasks.size() + \" tasks.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"mingyuanc"},"content":"     * Handles the mark/unmark command","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"mingyuanc"},"content":"     * @param mark  - true if its a mark command else false","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"mingyuanc"},"content":"     * @param index - index of the task in question","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"mingyuanc"},"content":"    private void handleMark(boolean mark, int index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"mingyuanc"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"mingyuanc"},"content":"        // only toggle if mark !\u003d completed as if they are the same then theres no","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"mingyuanc"},"content":"        // effect","lastModifiedDate":"2023-08-21"},{"lineNumber":183,"author":{"gitId":"mingyuanc"},"content":"        String resp;","lastModifiedDate":"2023-08-21"},{"lineNumber":184,"author":{"gitId":"mingyuanc"},"content":"        if (mark !\u003d task.isCompleted()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"mingyuanc"},"content":"            task.toggleCompleted();","lastModifiedDate":"2023-08-21"},{"lineNumber":186,"author":{"gitId":"mingyuanc"},"content":"            resp \u003d mark ? \"Quack! Congrat for finishing the task!\" : \"Quack, I\u0027ve marked this task as not done yet :(\";","lastModifiedDate":"2023-08-21"},{"lineNumber":187,"author":{"gitId":"mingyuanc"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"mingyuanc"},"content":"            resp \u003d mark ? \"Quack! This task is already done QUACK!\"","lastModifiedDate":"2023-08-21"},{"lineNumber":189,"author":{"gitId":"mingyuanc"},"content":"                    : \"Quack! you cant unmark something that isnt done yet!!\";","lastModifiedDate":"2023-08-21"},{"lineNumber":190,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":191,"author":{"gitId":"mingyuanc"},"content":"        this.print(resp);","lastModifiedDate":"2023-08-21"},{"lineNumber":192,"author":{"gitId":"mingyuanc"},"content":"        this.print(task.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":193,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"mingyuanc"},"content":"     * Handles the creation of new tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"mingyuanc"},"content":"     * @param param - parser object containing information on the new task.","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"mingyuanc"},"content":"     * @throws BadInputException","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"mingyuanc"},"content":"    private void handleTask(Parser param) throws BadInputException {","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"mingyuanc"},"content":"        if (this.tasks.size() \u003e\u003d 100) {","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"mingyuanc"},"content":"            throw new BadInputException(\"QUACK!! quack cannot remember any more tasks!!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"mingyuanc"},"content":"        Commands type \u003d param.getCommand();","lastModifiedDate":"2023-08-22"},{"lineNumber":207,"author":{"gitId":"mingyuanc"},"content":"        Task newTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"mingyuanc"},"content":"        if (type \u003d\u003d Commands.TODO) {","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"mingyuanc"},"content":"            newTask \u003d new Todo(param.getParam());","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"mingyuanc"},"content":"        } else if (type \u003d\u003d Commands.DEADLINE) {","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"mingyuanc"},"content":"            newTask \u003d new Deadline(param.getFlag(\"/by\"), param.getParam());","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"mingyuanc"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"mingyuanc"},"content":"            newTask \u003d new Event(param.getFlag(\"/from\"), param.getFlag(\"/to\"), param.getParam());","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":217,"author":{"gitId":"mingyuanc"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"mingyuanc"},"content":"        this.print(\"Quack! I have added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"mingyuanc"},"content":"        this.print(newTask.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":220,"author":{"gitId":"mingyuanc"},"content":"        this.print(\"Quack! Quack is currently remembering \" + this.tasks.size() + \" tasks.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":222,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":223,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":224,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":225,"author":{"gitId":"mingyuanc"},"content":"     * Handles the formating of string being printed","lastModifiedDate":"2023-08-21"},{"lineNumber":226,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":227,"author":{"gitId":"mingyuanc"},"content":"     * @param string - the string being printed","lastModifiedDate":"2023-08-21"},{"lineNumber":228,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":229,"author":{"gitId":"mingyuanc"},"content":"    public void print(String string) {","lastModifiedDate":"2023-08-21"},{"lineNumber":230,"author":{"gitId":"mingyuanc"},"content":"        if (string.startsWith(Duke.LINE_BREAK)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":231,"author":{"gitId":"mingyuanc"},"content":"            System.out.println(string);","lastModifiedDate":"2023-08-21"},{"lineNumber":232,"author":{"gitId":"mingyuanc"},"content":"            return;","lastModifiedDate":"2023-08-21"},{"lineNumber":233,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":234,"author":{"gitId":"mingyuanc"},"content":"        System.out.println(Duke.TAB + string);","lastModifiedDate":"2023-08-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"mingyuanc":232,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"     * The starting time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"    private String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"     * The ending time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"    private String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     * constructor for Deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * @param from - the starting time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * @param to   - the ending time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    public Event(String from, String to, String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\", this.from, this.to);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":30}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"public class Parser {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"     * Hashmap to map the flags to its corresponding string","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"    private HashMap\u003cString, String\u003e flag \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     * type of command","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    private Commands command;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * param that came with the command","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    private String param \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * Index that came with the command","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    private int index \u003d -1;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     * the original input","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    private String input;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the Parser","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * @param input - the input string that needs to be parsed","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     * @throws BadInputException     - if the input cannot be parsed properly","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     * @throws NumberFormatException - if the input cannot be converted to an int","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"    public Parser(String input) throws BadInputException, NumberFormatException {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"        this.input \u003d input.trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"            case \"list\":","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.LIST;","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.MARK;","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"                this.index \u003d this.findIndex(splitInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.UNMARK;","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"                this.index \u003d this.findIndex(splitInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.DELETE;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"                this.index \u003d this.findIndex(splitInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.TODO;","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"                this.param \u003d this.input.replace(\"todo \", \"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"                if (this.param.equals(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"                    throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"                            \"Quack doesnt understand an empty todo description, please provide one!!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.DEADLINE;","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"                this.findFlags(splitInput, \"/by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"            case \"event\":","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.EVENT;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"                this.findFlags(splitInput, \"/from\", \"/to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"            default:","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"                this.command \u003d Commands.UNRECOGNISED;","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"    private int findIndex(String[] splitInput) throws BadInputException, NumberFormatException {","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"        if (splitInput.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"            throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack requires exactly one number after the mark command\");","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"        int ret \u003d Integer.valueOf(splitInput[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"        if (ret \u003c 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"            throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack requires a positive number to help you manage tasks!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"        return ret;","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"     * function to find the flags and update both the flags and param field","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"     * @param splitInputs - input string that has been split into words","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"     * @param flags       - the flags that needs to be found","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"     * @throws BadInputException - if the flags cannot be found or without a","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"     *                           description","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"mingyuanc"},"content":"    private void findFlags(String[] splitInputs, String... flags) throws BadInputException {","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"mingyuanc"},"content":"        int[] flagIndex \u003d this.find(splitInputs, flags);","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c flagIndex.length - 1; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"mingyuanc"},"content":"            if (flagIndex[i] \u003d\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"mingyuanc"},"content":"                throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"mingyuanc"},"content":"                        \"Quack cant find the required \" + flags[i] + \" flags, please provide quack with one please\");","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"mingyuanc"},"content":"            if (flagIndex[i + 1] \u003d\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"mingyuanc"},"content":"                throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"mingyuanc"},"content":"                        \"Quack cant find the required \" + flags[i + 1]","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"mingyuanc"},"content":"                                + \" flags, please provide quack with one please\");","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"mingyuanc"},"content":"            String value \u003d String.join(\" \", Arrays.copyOfRange(splitInputs, flagIndex[i] + 1, flagIndex[i + 1]));","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"mingyuanc"},"content":"            if (value.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"mingyuanc"},"content":"                throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"mingyuanc"},"content":"                        \"Please provide quack a description for the \" + flags[i] + \" flag\");","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"mingyuanc"},"content":"            this.flag.put(splitInputs[flagIndex[i]], value);","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"mingyuanc"},"content":"        this.param \u003d String.join(\" \", Arrays.copyOfRange(splitInputs, 1, flagIndex[0]));","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"mingyuanc"},"content":"        if (this.param.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"mingyuanc"},"content":"            throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack doesnt understand an empty description, please provide one!!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"mingyuanc"},"content":"     * Finds the required flags in the array of strings","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"mingyuanc"},"content":"     * @param arr   - the array of strings that you want to find the flags from","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"mingyuanc"},"content":"     * @param items - the array of flags you want to find from the array","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"mingyuanc"},"content":"     * @return an array of the index of the flags","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"mingyuanc"},"content":"     * @throws BadInputException - if the flags cannot be found or without a","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"mingyuanc"},"content":"     *                           description","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"mingyuanc"},"content":"    private int[] find(String[] arr, String[] items) throws BadInputException {","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"mingyuanc"},"content":"        int[] ret \u003d new int[items.length + 1];","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"mingyuanc"},"content":"        // initialise values","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c items.length + 1; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"mingyuanc"},"content":"            // to capture all text in the flag","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"mingyuanc"},"content":"            if (i \u003d\u003d items.length) {","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"mingyuanc"},"content":"                ret[i] \u003d arr.length;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"mingyuanc"},"content":"                continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"mingyuanc"},"content":"            ret[i] \u003d -1;","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"mingyuanc"},"content":"            for (int j \u003d 0; j \u003c items.length; j++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"mingyuanc"},"content":"                if (arr[i].equals(items[j])) {","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"mingyuanc"},"content":"                    if (ret[j] !\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"mingyuanc"},"content":"                        throw new BadInputException(","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"mingyuanc"},"content":"                                \"There are too many of the \" + items[j] + \" flag, please just provide one\");","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"mingyuanc"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"mingyuanc"},"content":"                    ret[j] \u003d i;","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"mingyuanc"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"mingyuanc"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"mingyuanc"},"content":"        return ret;","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"mingyuanc"},"content":"     * getter for the type of command","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"mingyuanc"},"content":"     * @return the type of command","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"mingyuanc"},"content":"    public Commands getCommand() {","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"mingyuanc"},"content":"        return this.command;","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"mingyuanc"},"content":"     * getter for the value of the flag","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"mingyuanc"},"content":"     * @param key - the flag","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"mingyuanc"},"content":"     * @return the value associated with the key","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"mingyuanc"},"content":"    public String getFlag(String key) {","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"mingyuanc"},"content":"        return this.flag.get(key);","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"mingyuanc"},"content":"     * getter for the param of the input","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"mingyuanc"},"content":"     * @return param","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"mingyuanc"},"content":"    public String getParam() {","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"mingyuanc"},"content":"        return this.param;","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"mingyuanc"},"content":"     * getter for the index of the input","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"mingyuanc"},"content":"     * @return index","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"mingyuanc"},"content":"    public int getIndex() {","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"mingyuanc"},"content":"        return this.index;","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":203}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"     * The description of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"    private String task;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"     * The state of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"    private boolean completed \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the Task class","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     * Accessor for the completed field","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"     * @return true if completed is true","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        return this.completed;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     * Toggles the complete field","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"    public void toggleCompleted() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"        this.completed \u003d !this.completed;","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"        return String.format(\"[%s] %s\", completed ? \"X\" : \" \", this.task);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"mingyuanc":42}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"todo debugging","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"deadline debug2 /by","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"deadline debug2 /by now","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"event debug3 /from noww /to noww","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"event debug3 /from noww /to","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"event debug3 /from /to noww","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"event debug3 /from noww /to noww /from noww","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":20}}]
