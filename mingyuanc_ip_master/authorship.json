[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"instructions on how to use it.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"   first)","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"   like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mingyuanc":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.14\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"javafx {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    version \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    modules \u003d [ \u0027javafx.controls\u0027,\u0027javafx.base\u0027,\u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"dependencies {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"test {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"checkstyle {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mingyuanc":20,"-":42}},{"path":"data/testData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"TODO#test#0","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"TODO#test1#1","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"DEADLINE#test2#0#2023-10-01T23:59","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"DEADLINE#test3#0#2024-01-01T12:00","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"DEADLINE#test4#0#2024-05-05T12:00","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"EVENT#test5#1#2023-05-07T03:03#2023-05-07T03:05","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyuanc":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":" * A task manager that initialise a quack instance","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"public class Duke {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * Instance handling all the user interface","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * Instance handling the tasks state","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     * Path to the storage, default is ./data/data.txt","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     * Construct a new Duke object which uses storageFilePath as the storage","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     * @param storageFilePath - path to the storage file","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    public Duke(String... storageFilePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"        // try to establish a connection to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"        // set this.storage to null if not possible","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"            this.storage \u003d new Storage(storageFilePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"            this.ui.getErrorMessage(","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"                    \"has some internal problem and is unable to help you today, please contact quacks mum\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"            this.storage \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"        } catch (DukeBadInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"            this.ui.getErrorMessage(storageFilePath + \" is not a text file, please provide a file!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"            this.storage \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"        // read from storage, throws an error when unable to rewrite to the storage file","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"        if (this.storage !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"                // check for corrupted files","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"                if (this.taskList.loadTasks(this.storage.readFile())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"                    this.ui.getUnexpectedErrorMessage(\"Some task are corrupted,\"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"                            + \" attempting to recover uncorrupted tasks\");","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"                    if (!this.storage.rewriteAll(this.taskList.getAllTask())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"                        this.ui.getUnexpectedErrorMessage(","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"                                \"not all tasks were successfully written, please contact my mother :( \");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"                this.ui.getUnexpectedErrorMessage(\"error when rewriting to storage: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"     * Entry point of the program","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"     * @param args System arguments, should be empty","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"        // new Duke(\"data/data.txt\").run();","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"            return command.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"        } catch (DukeBadInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"            return e.getMessage()","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"                    + \", quack only understand numbers, please input a numeric value!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"            return e.getMessage()","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"                    + \"Quack only understands date in this format: \"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"                    + \"YYYY-MM-DD HH:MM, do give the hours in 24hours format\";","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"     * Ensure that the files are written","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"    public void close() {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"        this.storage.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"mingyuanc":100}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    private Duke duke \u003d new Duke(\"data/data.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"            stage.setTitle(\"Quack Quack\");","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"mingyuanc":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"import duke.command.UnrecognisedCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeLoadingException;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":" * Handles making sense of the user command and output it in a programme","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":" * readable way","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"public class Parser {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * Formatter to parse date time","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    private static final DateTimeFormatter PARSE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * Factory method to parse the input and output the respective command instance","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @param input - the input string that needs to be parsed","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     * @return a respective subclass of the command that can be executed","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be parsed properly","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"     * @throws NumberFormatException - if the input cannot be converted to an int","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    public static Command parse(String input) throws DukeBadInputException, NumberFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"        HashMap\u003cString, LocalDateTime\u003e flagMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"        String desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"        switch (splitInput[0].toUpperCase()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"        case \"BYE\":","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"        case \"HELP\":","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"        case \"LIST\":","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"        case \"MARK\":","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"            return new MarkCommand(true, findIndex(splitInput));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"            return new MarkCommand(false, findIndex(splitInput));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"            return new DeleteCommand(findIndex(splitInput));","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"        case \"FIND\":","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"            if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"                throw new DukeBadInputException(","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"                        \"Quack doesn\u0027t understand an empty find query, please provide one!!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"            // join the string to find the query","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"            return new FindCommand(String.join(\" \", Arrays.copyOfRange(splitInput, 1, splitInput.length)));","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"        case \"TODO\":","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"            if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"                throw new DukeBadInputException(","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"                        \"Quack doesn\u0027t understand an empty todo description, please provide one!!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"            // join the string to find the description","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"            return new TodoCommand(String.join(\" \", Arrays.copyOfRange(splitInput, 1, splitInput.length)));","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"            desc \u003d Parser.findFlags(flagMap, splitInput, \"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"            return new DeadlineCommand(flagMap.get(\"/by\"), desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"            desc \u003d Parser.findFlags(flagMap, splitInput, \"/from\", \"/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"            return new EventCommand(flagMap.get(\"/from\"), flagMap.get(\"/to\"), desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"        default:","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"            return new UnrecognisedCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"     * Load task from storage","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"     * @param storedStr - the string representing the task from storage","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"     * @return the instance of the class","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeLoadingException   if there is an issue loading the task","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"     * @throws DateTimeParseException if there is an issue parsing the date","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"    public static Task fromStorage(String storedStr) throws DukeLoadingException, DateTimeParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"mingyuanc"},"content":"        String[] content \u003d storedStr.split(Task.SEP);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"mingyuanc"},"content":"        if (content.length \u003c 3 || content.length \u003e 6) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeLoadingException(storedStr + \", this command cannot be read\");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"mingyuanc"},"content":"        boolean isCompleted \u003d content[2].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"mingyuanc"},"content":"        switch (content[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"mingyuanc"},"content":"        case \"TODO\":","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"mingyuanc"},"content":"            return new TodoTask(content[1], isCompleted);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"mingyuanc"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"mingyuanc"},"content":"            if (content.length !\u003d 4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"mingyuanc"},"content":"                throw new DukeLoadingException(storedStr + \", this command cannot be read\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"mingyuanc"},"content":"            return new DeadlineTask(LocalDateTime.parse(content[3]), content[1], isCompleted);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"mingyuanc"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"mingyuanc"},"content":"            if (content.length !\u003d 5) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"mingyuanc"},"content":"                throw new DukeLoadingException(storedStr + \", this command cannot be read\");","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"mingyuanc"},"content":"            return new EventTask(LocalDateTime.parse(content[3]),","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"mingyuanc"},"content":"                    LocalDateTime.parse(content[4]), content[1], isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"mingyuanc"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeLoadingException(storedStr + \", this command cannot be read\");","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"mingyuanc"},"content":"     * Find the index from the split input string","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"mingyuanc"},"content":"     * @param splitInput - the split input string","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"mingyuanc"},"content":"     * @return the index","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException throws an error if it is a negative number","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"mingyuanc"},"content":"     * @throws NumberFormatException throws an error if it is not a number","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"mingyuanc"},"content":"    private static int findIndex(String[] splitInput) throws DukeBadInputException, NumberFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"mingyuanc"},"content":"        if (splitInput.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"mingyuanc"},"content":"                    String.format(\"Quack requires exactly one number after the %s command\", splitInput[0]));","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"mingyuanc"},"content":"        int ret \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"mingyuanc"},"content":"        if (ret \u003c\u003d 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack requires a number more than zero to carry out the command!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"mingyuanc"},"content":"        return ret;","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"mingyuanc"},"content":"     * function to find the flags and update both the flags and param field","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"mingyuanc"},"content":"     * @param flagMap     - the place to store the flag","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"mingyuanc"},"content":"     * @param splitInputs - input string that has been split into words","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"mingyuanc"},"content":"     * @param flags       - the flags that needs to be found","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"mingyuanc"},"content":"     * @return the desc of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException  - if the flags cannot be found or without a","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"mingyuanc"},"content":"     *                                description","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"mingyuanc"},"content":"     * @throws DateTimeParseException - if the value cannot be parsed","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"mingyuanc"},"content":"    private static String findFlags(HashMap\u003cString, LocalDateTime\u003e flagMap,","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"mingyuanc"},"content":"            String[] splitInputs, String... flags)","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"mingyuanc"},"content":"            throws DukeBadInputException, DateTimeParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"mingyuanc"},"content":"        int[] flagIndex \u003d Parser.find(splitInputs, flags);","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"mingyuanc"},"content":"        String desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c flagIndex.length - 1; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"mingyuanc"},"content":"            // Check for the presence of the flag","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"mingyuanc"},"content":"            if (flagIndex[i] \u003d\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"mingyuanc"},"content":"                throw new DukeBadInputException(","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"mingyuanc"},"content":"                        \"Quack cant find the required \" + flags[i] + \" flags, please provide quack with one please\");","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"mingyuanc"},"content":"            if (flagIndex[i + 1] \u003d\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"mingyuanc"},"content":"                throw new DukeBadInputException(","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"mingyuanc"},"content":"                        \"Quack cant find the required \" + flags[i + 1]","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"mingyuanc"},"content":"                                + \" flags, please provide quack with one please\");","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"mingyuanc"},"content":"            // Check for the description of flag","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"mingyuanc"},"content":"            String value \u003d String.join(\" \", Arrays.copyOfRange(splitInputs, flagIndex[i] + 1, flagIndex[i + 1]));","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"mingyuanc"},"content":"            if (value.isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"mingyuanc"},"content":"                throw new DukeBadInputException(","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"mingyuanc"},"content":"                        \"Please provide quack a description for the \" + flags[i] + \" flag\");","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"mingyuanc"},"content":"            // check the format of the flag","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"mingyuanc"},"content":"            LocalDateTime val \u003d LocalDateTime.parse(value, Parser.PARSE_FORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"mingyuanc"},"content":"            flagMap.put(splitInputs[flagIndex[i]], val);","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"mingyuanc"},"content":"        // Check for a valid description","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"mingyuanc"},"content":"        desc \u003d String.join(\" \", Arrays.copyOfRange(splitInputs, 1, flagIndex[0]));","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"mingyuanc"},"content":"        if (desc.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack doesn\u0027t understand an empty description, please provide one!!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"mingyuanc"},"content":"        return desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"mingyuanc"},"content":"     * Finds the required flags in the array of strings","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"mingyuanc"},"content":"     * @param arr   - the array of strings that you want to find the flags from","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"mingyuanc"},"content":"     * @param items - the array of flags you want to find from the array","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"mingyuanc"},"content":"     * @return an array of the index of the flags","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the flags cannot be found or without a","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"mingyuanc"},"content":"     *                               description","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"mingyuanc"},"content":"    private static int[] find(String[] arr, String[] items) throws DukeBadInputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"mingyuanc"},"content":"        int[] ret \u003d new int[items.length + 1];","lastModifiedDate":"2023-08-22"},{"lineNumber":207,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"mingyuanc"},"content":"        // initialise values, these values will contain the index","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c items.length + 1; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"mingyuanc"},"content":"            // set last item as the length to demarcate the end","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"mingyuanc"},"content":"            if (i \u003d\u003d items.length) {","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"mingyuanc"},"content":"                ret[i] \u003d arr.length;","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"mingyuanc"},"content":"                continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"mingyuanc"},"content":"            ret[i] \u003d -1;","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":217,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"mingyuanc"},"content":"            for (int j \u003d 0; j \u003c items.length; j++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":220,"author":{"gitId":"mingyuanc"},"content":"                if (arr[i].equals(items[j])) {","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"mingyuanc"},"content":"                    if (ret[j] !\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"mingyuanc"},"content":"                        throw new DukeBadInputException(","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"mingyuanc"},"content":"                                \"There are too many of the \" + items[j] + \" flag, please just provide one\");","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"mingyuanc"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"mingyuanc"},"content":"                    ret[j] \u003d i;","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"mingyuanc"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"mingyuanc"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":228,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":229,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"mingyuanc"},"content":"        return ret;","lastModifiedDate":"2023-08-22"},{"lineNumber":231,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":232,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":232}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":" * Handles the loading of tasks from the file and saving tasks in the file","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"     * Path of the storage file","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    private Path path;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * The input string that points to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    private String[] storageFilePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     * Writer instance","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    private BufferedWriter writer;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * Constructs a new instance of a duke.Storage object that reads and write to a specific file","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     * @param storageFilePath - the file which your reading/writing to","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"     * @throws IOException           - thrown when there is an IOException","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - thrown when the input provided does not point to a file","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    public Storage(String... storageFilePath) throws IOException, DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"        this.storageFilePath \u003d storageFilePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"        this.path \u003d Paths.get(home, this.storageFilePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"        this.checkFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"        this.writer \u003d Files.newBufferedWriter(this.path, StandardOpenOption.APPEND);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"     * Ensures that default data storage is present","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"     * @throws IOException           if there is an IOException","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException if the path does not lead to a file","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"    private void checkFile() throws IOException, DukeBadInputException {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"        if (!this.storageFilePath[this.storageFilePath.length - 1].endsWith(\".txt\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(this.path.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"        if (!Files.exists(this.path)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"            // Handles folder not existing","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"            for (int i \u003d 1; i \u003c this.storageFilePath.length; i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"                Path tmp \u003d Paths.get(home, Arrays.copyOfRange(this.storageFilePath, 0, i));","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"                if (!Files.exists(tmp)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"                    Files.createDirectories(tmp);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"            // handles file not existing","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"            Files.createFile(this.path);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"     * Reads and parse the storage file","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"     * @return a duke.Parser array storing the parsed input","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"     * @throws IOException thrown if the file cannot be open or read","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"    public List\u003cString\u003e readFile() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"        BufferedReader reader \u003d Files.newBufferedReader(this.path);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"        List\u003cString\u003e ret \u003d reader.lines().collect(Collectors.toList());","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"        reader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"        return ret;","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"     * Writes the given line to storage","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"     * @param input string that is you want to write","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"     * @return true if successfully written","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"mingyuanc"},"content":"    public boolean writeToFile(String input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"mingyuanc"},"content":"            this.writer.append(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"mingyuanc"},"content":"            this.writer.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"mingyuanc"},"content":"            this.writer.flush();","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"mingyuanc"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"mingyuanc"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"mingyuanc"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"mingyuanc"},"content":"     * Rewrites the storage to contain all the current tasks stored in memory","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"mingyuanc"},"content":"     * @param tasks - list of task to be written in","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"mingyuanc"},"content":"     * @return true if carried out successfully","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"mingyuanc"},"content":"     * @throws IOException if there is an IOException","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"mingyuanc"},"content":"    public boolean rewriteAll(Task[] tasks) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"mingyuanc"},"content":"        this.writer.flush();","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"mingyuanc"},"content":"        BufferedWriter tmpWriter \u003d Files.newBufferedWriter(this.path,","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"mingyuanc"},"content":"                StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"mingyuanc"},"content":"        boolean isSuccessful \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"mingyuanc"},"content":"        // rewrite for each","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"mingyuanc"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"mingyuanc"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"mingyuanc"},"content":"                tmpWriter.write(t.getStored());","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"mingyuanc"},"content":"                tmpWriter.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"mingyuanc"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"mingyuanc"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"mingyuanc"},"content":"                isSuccessful \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"mingyuanc"},"content":"        tmpWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"mingyuanc"},"content":"        return isSuccessful;","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"mingyuanc"},"content":"     * Close the connection to the storage and deallocate all resources","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"mingyuanc"},"content":"    public void close() {","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"mingyuanc"},"content":"            this.writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"mingyuanc"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"mingyuanc":148}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeLoadingException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":" * Manages the operation on the tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * Stores all the task","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * construct a new empty task list","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     * Loads the list of task from the storage into the task list instance","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     * @param storedInput - the list of task obtained from storage","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * @return true if all task loaded successfully else false","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    public boolean loadTasks(List\u003cString\u003e storedInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"        // parse and store data while looking out for data corruption","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        boolean isCorrupted \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"        for (String s : storedInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"                Task newTask \u003d Parser.fromStorage(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"                this.tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"            } catch (DukeLoadingException | DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"                isCorrupted \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"        return isCorrupted;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"     * returns the current task list length","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"     * @return task list length","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"    public int length() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"     * Adds the given task into memory","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the task being added","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"     * remove the given task from memory","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"     * @param index - the index of the task being removed","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"     * @return the task that was removed","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"     * returns the element at the index","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"     * @param index - index of the element","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"     * @return the element at the index","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"     * returns all the tasks currently stored","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"     * @return an array of Task","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"    public Task[] getAllTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"        return this.tasks.toArray(new Task[this.length()]);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"mingyuanc":92}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":" * Handles the interaction with user","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     * Default Exit Message","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Quack Quack! Quack hopes to see you again soon!\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * Default Welcome Message","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Quack Quack! I am a duck named Quack\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"            + \"Quack will remember the task you give quack!\\n\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"            + Ui.HELP_MESSAGE;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     * Default Help Message","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    private static final String HELP_MESSAGE \u003d \"Quack understands these commands: list, mark, \"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"            + \"unmark, delete, todo, deadline, event\\n\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"            + \"For mark/unmark/delete please provide a number after, such as mark 2.\\n\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"            + \"deadline requires the /by keyword and event requires the /from and /to keyword.\\n\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"            + \"Please provide a valid date and time after the keyword with the following format:\"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"            + \" YYYY-MM-DD HH:MM\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     * Constructs a new UI instance","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * gets the default help message","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @return the default help message","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"        return Ui.HELP_MESSAGE;","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"     * Prints Error message in the quack convention","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"     * @param e - the error message","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"     * @return the formatted error message","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"    public String getErrorMessage(String e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"        return \"QUACK QUACK!! \" + e;","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"     * Prints Unexpected Error message in the quack convention","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"     * @param e - the error message","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"     * @return the formatted error message","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"    public String getUnexpectedErrorMessage(String e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"        return \"QUACK QUACK!! unexpected error: \" + e;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"     * Generate the usually used representation when adding tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"     * @param newTask - the task being added","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"     * @param length  - the current number of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"     * @return the formatted string","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"    public String getNewTaskMessage(Task newTask, int length) {","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"        return \"Quack! I have added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"                + newTask.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"                + \"\\nQuack! Quack is currently remembering \"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"                + length","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"                + \" tasks.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"mingyuanc":81}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":" * create a command class to handle the execution of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     * validate the index to ensure it is within range","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * @param index - the index of the task in question","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * @param len   - the current length of the task list","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException if the index given is not within range","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    public static void validateIndex(int index, int len) throws DukeBadInputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"        // validate input","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"                    \"Quack currently has no task remembered and cannot execute your command, add one now??\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        // validate input","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"        if (index \u003e\u003d len) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(\"Quack does not remember having a task: \" + (index + 1)","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"                    + \" Quack only remember till task \" + (len));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance  of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException;","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"        return other instanceof Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":61}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" * Represents the Deadline command","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * Stores the description of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    private String desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * Stores the deadline of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     * Constructor of the duke.task.DeadlineTask command","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     * @param by   - the due date of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * @param desc - desc of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    public DeadlineCommand(LocalDateTime by, String desc) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"     *                 storage","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"        if (taskList.length() \u003e\u003d 100) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(\"quack cannot remember any more tasks!!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"        // tries to add task to storage and task list, exception thrown otherwise","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"        Task newTask \u003d new DeadlineTask(this.by, this.desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"        if (!storage.writeToFile(newTask.getStored())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"            return ui.getUnexpectedErrorMessage(\"unable to write to storage\");","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"        return ui.getNewTaskMessage(newTask, taskList.length());","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"        if (other instanceof DeadlineCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"            DeadlineCommand command \u003d (DeadlineCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"            return this.by.equals((command.by)) \u0026\u0026 this.desc.equals(command.desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":86}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" * Represents the delete command","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * the index of the task being deleted","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the duke.command.MarkCommand class","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     * @param index - the index of the task being deleted","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     *                 storage","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"        Command.validateIndex(this.index, taskList.length());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"        // Check if able to remove","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        Task removed \u003d taskList.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"            if (!storage.rewriteAll(taskList.getAllTask())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"                return ui.getUnexpectedErrorMessage(\"not all tasks were successfully written,\"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"                        + \" please contact my mother :( \");","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"            return ui.getUnexpectedErrorMessage(\"error when writing to storage: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"        return \"Quack! I have removed this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"                + removed.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"                + \"\\nQuack! Quack is currently remembering \"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"                + taskList.length()","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"                + \" tasks.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"        if (other instanceof DeleteCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"            DeleteCommand command \u003d (DeleteCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"            return this.index \u003d\u003d command.index;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":85}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" * Represents the Event command","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * Stores the description of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    private String desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * Stores the end date of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"     * Stores the start date of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     * Constructor of the Event command","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     * @param from - the start date of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * @param to   - the end date of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     * @param desc - desc of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    public EventCommand(LocalDateTime from, LocalDateTime to, String desc) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"     *                 storage","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"        if (taskList.length() \u003e\u003d 100) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(\"quack cannot remember any more tasks!!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"        // Tries to write to storage and task list, error thrown otherwise","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"        Task newTask \u003d new EventTask(this.from, this.to, this.desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"        if (!storage.writeToFile(newTask.getStored())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"            return ui.getUnexpectedErrorMessage(\"unable to write to storage\");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"        return ui.getNewTaskMessage(newTask, taskList.length());","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"        if (other instanceof EventCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"            EventCommand command \u003d (EventCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"            return this.from.equals(command.from)","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"                    \u0026\u0026 this.to.equals(command.to)","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"                    \u0026\u0026 this.desc.equals(command.desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":94}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":" * Represents the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance  of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"        storage.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"        return Ui.GOODBYE_MESSAGE;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"        return other instanceof ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":49}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" * Find a task by searching for a keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * Stores the search query","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    private String query;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * Constructor of the todo command","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     * @param query - the desc of the command","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance  of the current duke","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"        String find \u003d this.query.toUpperCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"        // filter out relevant","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        for (Task t : taskList.getAllTask()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"            if (t.getTask().toUpperCase().contains(find)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"                matches.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"        // Handles no matches","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"        int size \u003d matches.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"            return \"Quack has not found any task matching \" + this.query + \", did you spell it correctly?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"        String ret \u003d \"Quack has found \" + matches.size() + \" matching tasks in your list:\";","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"            ret +\u003d \"\\n\" + (i + 1) + \". \" + matches.get(i).toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"        return ret;","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"        if (other instanceof FindCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"            FindCommand command \u003d (FindCommand) other;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"            return this.query.equals(command.query);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyuanc":86}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":" * Represents the help command","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance  of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"        return ui.getHelpMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        return other instanceof HelpCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":47}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":" * Represents the list command","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     *                 storage","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"        if (taskList.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"            return \"Quack Quack, you have not entered any tasks yet!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"                    + \"Create new tasks with the todo, deadline or event command\";","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"        String ret \u003d \"Quack Quack, here are the tasks in quack\u0027s memory:\";","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"        for (int i \u003d 0; i \u003c taskList.length(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"            ret +\u003d \"\\n \" + (i + 1) + \". \" + taskList.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"        return ret;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"        return other instanceof ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":56}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" * Represents the mark/unmark command","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * true if mark command else unmark","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    private boolean isMark;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     * index of the task being marked/unmarked","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the duke.command.MarkCommand class","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     * @param mark  - true if mark command else unmark","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     * @param index - index of the task in question","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"    public MarkCommand(boolean mark, int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"        this.isMark \u003d mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     *                 storage","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"        Command.validateIndex(this.index, taskList.length());","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"        // only toggle if mark !\u003d completed as if they are the same then there is no","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"        // effect","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"        String resp;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"        if (isMark !\u003d task.isComplete()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"            task.toggleComplete();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"            resp \u003d isMark ? \"Quack! Congrats for finishing the task!\"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"                    : \"Quack, I\u0027ve marked this task as not done yet :(\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"            resp \u003d isMark ? \"Quack! This task is already done QUACK!\"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"                    : \"Quack! you cant unmark something that isn\u0027t done yet!!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"            if (!storage.rewriteAll(taskList.getAllTask())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"                return ui.getUnexpectedErrorMessage(\"not all tasks were successfully written,\"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"                        + \" please contact my mother :( \");","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"            return ui.getUnexpectedErrorMessage(\"error when writing to storage: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"        return resp + \"\\n\" + task;","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"        if (other instanceof MarkCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"            MarkCommand command \u003d (MarkCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"            return this.index \u003d\u003d command.index \u0026\u0026 this.isMark \u003d\u003d command.isMark;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":98}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":" * Represents the Todo command","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * Stores the description of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    private String desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     * Constructor of the todo command","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     * @param desc - the desc of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    public TodoCommand(String desc) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     *                 storage","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     * @return the reply of Quack","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"        if (taskList.length() \u003e\u003d 100) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"            throw new DukeBadInputException(\"quack cannot remember any more tasks!!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        // add task to storage and task list, throws error if not successful","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"        Task newTask \u003d new TodoTask(desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"        if (!storage.writeToFile(newTask.getStored())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"            return ui.getUnexpectedErrorMessage(\"unable to write to storage\");","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"        return ui.getNewTaskMessage(newTask, taskList.length());","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"        if (other instanceof TodoCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"            TodoCommand command \u003d (TodoCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"            return this.desc.equals(command.desc);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":78}},{"path":"src/main/java/duke/command/UnrecognisedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":" * Represents a command that is not recognised","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"public class UnrecognisedCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"     * Method to encapsulate the execution logic of the command","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     * @param taskList - the task list instance of the current duke","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * @param ui       - the ui instance of DUKE","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     * @param storage  - the storage instance to allow the command to write to the","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     *                 storage","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     * @throws DukeBadInputException - if the input cannot be used","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeBadInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"        return \"Quack does not understand your command!!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"                + \"Quack only understands these commands: list, mark, unmark, delete, todo, deadline, event\";","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     * Checks if the command is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * @return true if it is the exit command","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same command","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        return other instanceof UnrecognisedCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":47}},{"path":"src/main/java/duke/exception/DukeBadInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":" * Signals when a user input is unable to be parsed or out of bound","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"public class DukeBadInputException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"     * Constructs an BadInputException with the specified detail message.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"     * @param e - description of the bad input","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"    public DukeBadInputException(String e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"        super(e);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":15}},{"path":"src/main/java/duke/exception/DukeLoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":" * Signals when storage cannot be properly loaded","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"public class DukeLoadingException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"     * Constructs an duke.exception.DukeLoadingException with the specified detail message.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"     * @param e - description of the loading exception","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"    public DukeLoadingException(String e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"        super(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"mingyuanc":15}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    private Label textBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    DialogBox(String text) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        this.textBox.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"mingyuanc":31}},{"path":"src/main/java/duke/gui/DialogBoxQuack.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"public class DialogBoxQuack extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    private Label textBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    DialogBoxQuack(String text) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBoxQuack.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"        this.textBox.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"mingyuanc":31}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    private Label textBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    private Label textBoxList;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"     * Initialise the stage","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"        this.scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"        this.textBox.setText(Ui.WELCOME_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"        this.textBoxList.setText(\"Quack Quack, you have not entered any tasks yet!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"                + \"Create new tasks with the todo, deadline or event command\");","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"     * set the current duke instance and also update the current tasks stored","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"        this.textBoxList.setText(this.duke.getResponse(\"list\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"            return;","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"                new DialogBox(input),","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"                new DialogBoxQuack(response));","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"        if (response.equals(Ui.GOODBYE_MESSAGE)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"mingyuanc":74}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":" * Represents a deadline task in a task manager","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     * The deadline of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * constructor for duke.task.DeadlineTask","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"     * @param by   - the deadline of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    public DeadlineTask(LocalDateTime by, String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"     * constructor for duke.task.DeadlineTask from storage","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     * @param by         - the deadline of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     * @param task       - the description of the task created","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     * @param isComplete - if completed","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    public DeadlineTask(LocalDateTime by, String task, boolean isComplete) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"        if (isComplete) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"            this.toggleComplete();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Task.formatDate(this.by) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"     * returns the stored form of this deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"     * Stored as DEADLINE{task description}{by}","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"     * @return DEADLINE{task description}{by}","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"    public String getStored() {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"        return String.join(Task.SEP, new String[] { \"DEADLINE\", this.getTask(),","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"                this.isComplete() ? \"1\" : \"0\", this.by.toString() });","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":58}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":" * Class to encapsulate the logic of an event in a task manager","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     * The starting time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"     * The ending time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * constructor for duke.task.EventTask","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     * Stored as EVENT{marked}{task description}{from}{to}","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     * @param from - the starting time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     * @param to   - the ending time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    public EventTask(LocalDateTime from, LocalDateTime to, String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"     * constructor for duke.task.EventTask from storage","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"     * Stored as EVENT{marked}{task description}{from}{to}","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"     * @param from       - the starting time of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * @param to         - the ending time of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * @param task       - the description of the task created","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * @param isComplete - if completed","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"    public EventTask(LocalDateTime from, LocalDateTime to, String task, boolean isComplete) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"        if (isComplete) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"            this.toggleComplete();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"                Task.formatDate(this.from), Task.formatDate(this.to));","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"     * returns the stored form of this event","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"     * Stored as EVENT,{task description},{from},{to}","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"     * @return EVENT,{task description},{from},{to}","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"    public String getStored() {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"        return String.join(Task.SEP, new String[] { \"EVENT\", this.getTask(),","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"                this.isComplete() ? \"1\" : \"0\",","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"                this.from.toString(), this.to.toString() });","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":" * Implementation of the task logic","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     * Formatter to output date time","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    public static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"EEE hh:mma, MMM yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"     * Separator used","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    public static final String SEP \u003d \"#\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * The description of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"    private String task;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     * The state of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    private boolean isComplete \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the duke.task.Task class","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * Format data according to current format","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     * @param time - the local date time to format","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @return formatted string according to the format","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"    public static String formatDate(LocalDateTime time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"        return Task.OUTPUT_FORMAT.format(time);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"     * Accessor for the completed field","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"     * @return true if completed is true","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"    public boolean isComplete() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"        return this.isComplete;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"     * Toggles the complete field","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"    public void toggleComplete() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"        this.isComplete \u003d !this.isComplete;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"     * Getter for tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"     * @return task string","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"     * returns the stored form of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"     * @return a string which duke Parser could Parse","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"    public String getStored() {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"        return String.format(\"[%s] %s\", isComplete ? \"X\" : \" \", this.task);","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"     * Checks if it is the exact same TASK","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"     * @param other the other command in question","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"     * @return true if there are equals","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"        if (other instanceof Task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"            Task task \u003d (Task) other;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"            return this.getStored().equals(task.getStored());","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"mingyuanc":100}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":" * Class to encapsulate the logic of an todo task","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the duke.task.TodoTask class","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"     * Stored as TODO{task description}{1 if marked else 0}","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"     * @param task - the description of the task created","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"    public TodoTask(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"     * Constructor for the duke.task.TodoTask class from storage","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"     * Stored as TODO{task description}{1 if marked else 0}","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"     * @param task       - the description of the task created","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"     * @param isComplete - if completed","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    public TodoTask(String task, boolean isComplete) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"        super(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"        if (isComplete) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"            this.toggleComplete();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"     * returns the stored form of this tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"     * Stored as TODO{task description}{1 if marked else 0}","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"     * @return TODO{task description}{1 if marked else 0}","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"    public String getStored() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        return String.join(Task.SEP, new String[] { \"TODO\", this.getTask(), this.isComplete() ? \"1\" : \"0\" });","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyuanc":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"      \u003cLabel fx:id\u003d\"textBox\" style\u003d\"-fx-background-radius: 10; -fx-background-color: #b4b8c5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"            \u003cImage url\u003d\"@../images/User.png\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"mingyuanc":29}},{"path":"src/main/resources/view/DialogBoxQuack.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"            \u003cImage url\u003d\"@../images/Quack.png\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"      \u003cLabel fx:id\u003d\"textBox\" maxWidth\u003d\"250.0\" minHeight\u003d\"10.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: #FFFFFF;\" text\u003d\"label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"mingyuanc":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Quack Quack!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #87CEEB; -fx-background-radius: 10; -fx-border-width: 0.5;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"390.0\" style\u003d\"-fx-background-color: #EEEE9B;\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"                  \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░████░░██████████░░░░░░░░░░░██░░░░░░░░░░██░░░░░░░░████░░██▒▒▒▒▒▒██░░░░░░░░░██░░██░░░░░░░░██░░░░░░░░░░░░░░██▒▒▒▒▒▒██░░░░░░░░░██░░░░██░░░░░░██░░░░░░░░░░░░░░████████░░░░░░░░░██░░░░░░░░██░░░░░░██░░░░░░░░░░░░██░░░░░░░░░░░░░░░██░░░░░░░░████████████░░░░░░░░██░░░░░░░░░░░░░░░░░██░░░░░░░░██░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░██████░░░░░░░░░░░░░░░░████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"387.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"                        \u003cInsets left\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"                  \u003c/Text\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"                  \u003cjavafx.scene.layout.HBox maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"                          \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"                              \u003cImage url\u003d\"@../images/Quack.png\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"                              \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"                        \u003cLabel fx:id\u003d\"textBox\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-radius: 10; -fx-padding: 15; -fx-background-color: #FFFFFF;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"                          \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"                  \u003c/javafx.scene.layout.HBox\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"                  \u003cjavafx.scene.layout.HBox maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"                          \u003cImageView fx:id\u003d\"displayPicture1\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"                              \u003cImage url\u003d\"@../images/Quack.png\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"                              \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"                        \u003cLabel fx:id\u003d\"textBoxList\" maxWidth\u003d\"250.0\" minHeight\u003d\"10.0\" style\u003d\"-fx-background-radius: 10; -fx-padding: 15; -fx-background-color: #FFFFFF;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"                          \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"                  \u003c/javafx.scene.layout.HBox\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"               \u003c/children\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"mingyuanc":72}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"import duke.command.UnrecognisedCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeLoadingException;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"    public void parseCommand_correctInputs() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"            // bye command","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new ExitCommand(), Parser.parse(\"bye\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"            // list command","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new ListCommand(), Parser.parse(\"list\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"            // help command","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new HelpCommand(), Parser.parse(\"help\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"            // unrecognised command","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new UnrecognisedCommand(), Parser.parse(\"What is this\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"            // mark command","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new MarkCommand(true, 1), Parser.parse(\"mark 1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"            // unmark command","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new MarkCommand(false, 1), Parser.parse(\"unmark 1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"            // delete command","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new DeleteCommand(1), Parser.parse(\"delete 1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"            // Find command","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new FindCommand(\"testString\"), Parser.parse(\"Find testString\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyuanc"},"content":"            // deadline command","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyuanc"},"content":"            // todo command","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new TodoCommand(\"testing1\"), Parser.parse(\"todo testing1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"mingyuanc"},"content":"            // deadline command","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new DeadlineCommand(LocalDateTime.parse(\"2023-05-07T03:03\"), \"testing\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyuanc"},"content":"                    Parser.parse(\"deadline testing /by 2023-05-07 03:03\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyuanc"},"content":"            // Event command","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new EventCommand(LocalDateTime.parse(\"2023-05-07T03:03\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"mingyuanc"},"content":"                            LocalDateTime.parse(\"2023-05-07T03:05\"), \"testingEvent\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyuanc"},"content":"                    Parser.parse(\"event testingEvent /from 2023-05-07 03:03 /to 2023-05-07 03:05\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyuanc"},"content":"        } catch (DukeBadInputException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyuanc"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"mingyuanc"},"content":"    public void parseCommand_badIndex_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyuanc"},"content":"        // Bad index","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyuanc"},"content":"        Exception e \u003d assertThrows(NumberFormatException.class, () -\u003e Parser.parse(\"mark gan\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"For input string: \\\"gan\\\"\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"mingyuanc"},"content":"        // Bad index","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyuanc"},"content":"        e \u003d assertThrows(NumberFormatException.class, () -\u003e Parser.parse(\"delete gan\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"For input string: \\\"gan\\\"\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyuanc"},"content":"        // no index","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"mingyuanc"},"content":"        e \u003d assertThrows(DukeBadInputException.class, () -\u003e Parser.parse(\"mark\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Quack requires exactly one number after the mark command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyuanc"},"content":"        // no index","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyuanc"},"content":"        e \u003d assertThrows(DukeBadInputException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Quack requires exactly one number after the delete command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"mingyuanc"},"content":"    public void parseCommand_badFlag_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyuanc"},"content":"        // no flag","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"mingyuanc"},"content":"        Exception e \u003d assertThrows(DukeBadInputException.class, () -\u003e Parser.parse(\"deadline test\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Quack cant find the required /by flags, please provide quack with one please\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyuanc"},"content":"        // missing flag","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyuanc"},"content":"        e \u003d assertThrows(DukeBadInputException.class, () -\u003e Parser.parse(\"event test /from 2020-12-12 12:12\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Quack cant find the required /to flags, please provide quack with one please\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyuanc"},"content":"        //bad flag input","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyuanc"},"content":"        e \u003d assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"mingyuanc"},"content":"                Parser.parse(\"event test /from 2020-12-12 /to 2020-12-12 23:59\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Text \u00272020-12-12\u0027 could not be parsed at index 10\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"mingyuanc"},"content":"    public void parseCommand_noDesc_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyuanc"},"content":"        // no desc todo","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"mingyuanc"},"content":"        Exception e \u003d assertThrows(DukeBadInputException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Quack doesn\u0027t understand an empty todo description, please provide one!!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"mingyuanc"},"content":"        // no desc event","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"mingyuanc"},"content":"        e \u003d assertThrows(DukeBadInputException.class, () -\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"mingyuanc"},"content":"                Parser.parse(\"event /from 2020-12-12 12:12 /to 2020-12-12 23:59\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Quack doesn\u0027t understand an empty description, please provide one!!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"mingyuanc"},"content":"        //no desc deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"mingyuanc"},"content":"        e \u003d assertThrows(DukeBadInputException.class, () -\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"mingyuanc"},"content":"                Parser.parse(\"deadline /by 2020-12-12 12:12\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"Quack doesn\u0027t understand an empty description, please provide one!!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"mingyuanc"},"content":"    public void parseStorage_correctInputs() {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"mingyuanc"},"content":"            // tod0 command and marked","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new TodoTask(\"testing1\", true), Parser.fromStorage(\"TODO#testing1#1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"mingyuanc"},"content":"            // deadline command","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new DeadlineTask(LocalDateTime.parse(\"2023-10-01T23:59\"), \"test1\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"mingyuanc"},"content":"                    Parser.fromStorage(\"DEADLINE#test1#0#2023-10-01T23:59\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"mingyuanc"},"content":"            // Event command and mark","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(new EventTask(LocalDateTime.parse(\"2023-05-07T03:03\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"mingyuanc"},"content":"                            LocalDateTime.parse(\"2023-05-07T03:05\"), \"testingEvent\", true),","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"mingyuanc"},"content":"                    Parser.fromStorage(\"EVENT#testingEvent#1#2023-05-07T03:03#2023-05-07T03:05\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"mingyuanc"},"content":"        } catch (DukeLoadingException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"mingyuanc"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"mingyuanc"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyuanc":125}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"import duke.exception.DukeBadInputException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"    public void checkFile_correctInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"        String[] expected \u003d new String[]{\"TODO#test#0\",","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"            \"TODO#test1#1\",","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"            \"DEADLINE#test2#0#2023-10-01T23:59\",","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"            \"DEADLINE#test3#0#2024-01-01T12:00\",","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"            \"DEADLINE#test4#0#2024-05-05T12:00\",","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"            \"EVENT#test5#1#2023-05-07T03:03#2023-05-07T03:05\"};","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"            Storage storage \u003d new Storage(\"data/testData.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"            List\u003cString\u003e ret \u003d storage.readFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"            assertEquals(expected.length, ret.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"            for (int i \u003d 0; i \u003c expected.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"                assertEquals(expected[i], ret.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException | DukeBadInputException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mingyuanc"},"content":"    public void checkFile_notFile_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyuanc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mingyuanc"},"content":"            new Storage(\"data/Data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyuanc"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyuanc"},"content":"            new Storage(\"data/Data.json\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyuanc"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyuanc"},"content":"        } catch (IOException | DukeBadInputException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyuanc"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyuanc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyuanc":47}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuanc"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyuanc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyuanc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyuanc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyuanc"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyuanc"},"content":"    public void toString_correctInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"[T][ ] test\", new TodoTask(\"test\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"[T][X] test1\",","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyuanc"},"content":"                new TodoTask(\"test1\", true).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"[D][ ] test2 (by: Sun 11:59PM, Oct 2023)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyuanc"},"content":"                new DeadlineTask(LocalDateTime.parse(\"2023-10-01T23:59\"), \"test2\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"[E][X] test3 (from: Sun 03:03AM, May 2023 to: Sun 03:05AM, May 2023)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyuanc"},"content":"                new EventTask(LocalDateTime.parse(\"2023-05-07T03:03\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyuanc"},"content":"                        LocalDateTime.parse(\"2023-05-07T03:05\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyuanc"},"content":"                        \"test3\", true).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyuanc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyuanc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyuanc"},"content":"    public void getStored_correctInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"TODO#test#0\", new TodoTask(\"test\").getStored());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"TODO#test1#1\",","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mingyuanc"},"content":"                new TodoTask(\"test1\", true).getStored());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"DEADLINE#test2#0#2023-10-01T23:59\",","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyuanc"},"content":"                new DeadlineTask(LocalDateTime.parse(\"2023-10-01T23:59\"), \"test2\").getStored());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyuanc"},"content":"        assertEquals(\"EVENT#test3#1#2023-05-07T03:03#2023-05-07T03:05\",","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyuanc"},"content":"                new EventTask(LocalDateTime.parse(\"2023-05-07T03:03\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyuanc"},"content":"                        LocalDateTime.parse(\"2023-05-07T03:05\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyuanc"},"content":"                        \"test3\", true).getStored());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyuanc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mingyuanc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyuanc":35}}]
