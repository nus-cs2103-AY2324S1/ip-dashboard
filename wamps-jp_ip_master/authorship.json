[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"sourceCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"targetCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"    archiveBaseName \u003d \"Remi\"","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wamps-jp":20,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"E | 1 | eat | y | x","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":1}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"    private void flip() {","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"        db.flip();","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"        return db;","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidFileException;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":" * The \u003ccode\u003eDuke\u003c/code\u003e class encapsulates the entire chatbot.","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":" * Runs the program, focusing on the GUI.","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Cat.png\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Reaper.png\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"    private Runner runner \u003d new Runner(\"./data/duke.txt\");","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"        // ...","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"        stage.show();","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"        stage.setTitle(\"Remi\");","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"wamps-jp"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"wamps-jp"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"wamps-jp"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"wamps-jp"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"wamps-jp"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"wamps-jp"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"wamps-jp"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"wamps-jp"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"wamps-jp"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"wamps-jp"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"wamps-jp"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"wamps-jp"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"wamps-jp"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"wamps-jp"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"wamps-jp"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"wamps-jp"},"content":"        });","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"wamps-jp"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"wamps-jp"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"wamps-jp"},"content":"        });","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"wamps-jp"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"wamps-jp"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"wamps-jp"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"wamps-jp"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"wamps-jp"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"wamps-jp"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"wamps-jp"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"wamps-jp"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"wamps-jp"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"wamps-jp"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"wamps-jp"},"content":"     * Iteration 2:","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"wamps-jp"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"wamps-jp"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"wamps-jp"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"wamps-jp"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"wamps-jp"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"wamps-jp"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"wamps-jp"},"content":"                DialogBox.getUserDialog(userText.getText(), user),","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"wamps-jp"},"content":"                DialogBox.getDukeDialog(dukeText.getText(), duke)","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"wamps-jp"},"content":"        );","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"wamps-jp"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"wamps-jp"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"wamps-jp"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":136,"author":{"gitId":"wamps-jp"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-25"},{"lineNumber":137,"author":{"gitId":"wamps-jp"},"content":"        return runner.runCommand(input);","lastModifiedDate":"2023-09-25"},{"lineNumber":138,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wamps-jp":137,"-":2}},{"path":"src/main/java/duke/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidDescriptionException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidIndexException;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidTimeException;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"import java.util.List;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":" * A \u003ccode\u003eHandler\u003c/code\u003e object keeps track of the \u003ccode\u003eTaskList\u003c/code\u003e, \u003ccode\u003eUi\u003c/code\u003e,","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":" * and \u003ccode\u003eStorage\u003c/code\u003e objects, using the data from each to handle the new commands as they","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":" * come from the user.","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"public class Handler {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"     * @param taskList A \u003ccode\u003eTaskList\u003c/code\u003e object. Keeps track of the tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"     * @param ui A \u003ccode\u003eUi\u003c/code\u003e object. Handles responses to the user.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"     * @param storage A \u003ccode\u003eStorage\u003c/code\u003e object. Handles reading and writing.","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"    public Handler(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"     * Handles a mark command, marking the relevant \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"     * @param command The command from the user","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"     * @return Acknowledgement of the marking.","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"    public String handleMark(String command) throws DukeInvalidDescriptionException, DukeInvalidIndexException {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"        String[] parsed \u003d Parser.splitSpace(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"        if (parsed.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"        boolean valid \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"            int i \u003d Integer.parseInt(parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"            valid \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"        if (!valid) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"        int ind \u003d Integer.parseInt(parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"        if (ind \u003e taskList.getLength() || ind \u003c 1) {","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"        taskList.mark(ind-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"            storage.save(taskList.writeTaskList());","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"            e.getMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"            System.out.println(ui.failure());","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"wamps-jp"},"content":"        return ui.markText(taskList.getTask(ind-1));","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"wamps-jp"},"content":"     * Handles an unmark command, marking the relevant \u003ccode\u003eTask\u003c/code\u003e as unfinished.","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"wamps-jp"},"content":"     * @param command The command from the user","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"wamps-jp"},"content":"     * @return Acknowledgement of the unmarking.","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"wamps-jp"},"content":"    public String handleUnmark(String command) throws DukeInvalidDescriptionException,","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"wamps-jp"},"content":"            DukeInvalidIndexException {","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"wamps-jp"},"content":"        String[] parsed \u003d Parser.splitSpace(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"wamps-jp"},"content":"        if (parsed.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"wamps-jp"},"content":"        boolean valid \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"wamps-jp"},"content":"            int i \u003d Integer.parseInt(parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"wamps-jp"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"wamps-jp"},"content":"            valid \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"wamps-jp"},"content":"        if (!valid) {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"wamps-jp"},"content":"        int ind \u003d Integer.parseInt(parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"wamps-jp"},"content":"        if (ind \u003e taskList.getLength()  || ind \u003c 1) {","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"wamps-jp"},"content":"        taskList.unmark(ind-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"wamps-jp"},"content":"            storage.save(taskList.writeTaskList());","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"wamps-jp"},"content":"            e.getMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"wamps-jp"},"content":"            System.out.println(ui.failure());","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"wamps-jp"},"content":"        return ui.unmarkText(taskList.getTask(ind-1));","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"wamps-jp"},"content":"     * Handles a todo command, creating a corresponding \u003ccode\u003eToDo\u003c/code\u003e object.","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"wamps-jp"},"content":"     * @param command The command from the user","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"wamps-jp"},"content":"     * @return Acknowledgement of the task creation.","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"wamps-jp"},"content":"    public String handleTodo(String command) throws DukeInvalidDescriptionException {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"wamps-jp"},"content":"        String[] parsed \u003d Parser.splitSpace(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"wamps-jp"},"content":"        if (parsed.length \u003c 2 || parsed[1].equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"wamps-jp"},"content":"        ToDo todo \u003d new ToDo(parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"wamps-jp"},"content":"        this.taskList.addTask(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"wamps-jp"},"content":"        String storeTodo \u003d todo.storedString() + \"\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"wamps-jp"},"content":"            storage.saveAppend(storeTodo);","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"wamps-jp"},"content":"            e.getMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"wamps-jp"},"content":"            System.out.println(ui.failure());","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"wamps-jp"},"content":"        return ui.taskText(todo, taskList.getLength());","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"wamps-jp"},"content":"     * Handles an event command, creating a corresponding \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":136,"author":{"gitId":"wamps-jp"},"content":"     * @param command The command from the user","lastModifiedDate":"2023-09-25"},{"lineNumber":137,"author":{"gitId":"wamps-jp"},"content":"     * @return Acknowledgement of the task creation.","lastModifiedDate":"2023-09-25"},{"lineNumber":138,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":139,"author":{"gitId":"wamps-jp"},"content":"    public String handleEvent(String command) throws DukeInvalidDescriptionException,","lastModifiedDate":"2023-09-25"},{"lineNumber":140,"author":{"gitId":"wamps-jp"},"content":"            DukeInvalidTimeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":141,"author":{"gitId":"wamps-jp"},"content":"        String[] parsed \u003d Parser.splitEvent(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"wamps-jp"},"content":"        if (parsed.length \u003c 1 || parsed[0].equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"wamps-jp"},"content":"        } else if (parsed.length \u003c 3  || parsed[1].equals(\"\") || parsed[2].equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidTimeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"wamps-jp"},"content":"        Event event \u003d new Event(parsed[0], parsed[1], parsed[2]);","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"wamps-jp"},"content":"        this.taskList.addTask(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"wamps-jp"},"content":"        String storeEvent \u003d event.storedString() + \"\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":150,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":151,"author":{"gitId":"wamps-jp"},"content":"            storage.saveAppend(storeEvent);","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":153,"author":{"gitId":"wamps-jp"},"content":"            e.getMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":154,"author":{"gitId":"wamps-jp"},"content":"            System.out.println(ui.failure());","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"wamps-jp"},"content":"        return ui.taskText(event, taskList.getLength());","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":160,"author":{"gitId":"wamps-jp"},"content":"     * Handles a deadline command, creating a corresponding \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-09-25"},{"lineNumber":161,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":162,"author":{"gitId":"wamps-jp"},"content":"     * @param command The command from the user","lastModifiedDate":"2023-09-25"},{"lineNumber":163,"author":{"gitId":"wamps-jp"},"content":"     * @return Acknowledgement of the task creation.","lastModifiedDate":"2023-09-25"},{"lineNumber":164,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":165,"author":{"gitId":"wamps-jp"},"content":"    public String handleDeadline(String command) throws DukeInvalidDescriptionException, DukeInvalidTimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"wamps-jp"},"content":"        String[] parsed \u003d Parser.splitDeadline(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"wamps-jp"},"content":"        if (parsed.length \u003c 1 || parsed[0].equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"wamps-jp"},"content":"        } else if (parsed.length \u003c 2 || parsed[1].equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidTimeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"wamps-jp"},"content":"        Deadline deadline \u003d new Deadline(parsed[0], parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"wamps-jp"},"content":"        this.taskList.addTask(deadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"wamps-jp"},"content":"        String storeDeadline \u003d deadline.storedString() + \"\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":175,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":176,"author":{"gitId":"wamps-jp"},"content":"            storage.saveAppend(storeDeadline);","lastModifiedDate":"2023-09-25"},{"lineNumber":177,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":178,"author":{"gitId":"wamps-jp"},"content":"            e.getMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":179,"author":{"gitId":"wamps-jp"},"content":"            System.out.println(ui.failure());","lastModifiedDate":"2023-09-25"},{"lineNumber":180,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":181,"author":{"gitId":"wamps-jp"},"content":"        return ui.taskText(deadline, taskList.getLength());","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":185,"author":{"gitId":"wamps-jp"},"content":"     * Handles a delete command, deleting the corresponding \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-09-25"},{"lineNumber":186,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":187,"author":{"gitId":"wamps-jp"},"content":"     * @param command The command from the user","lastModifiedDate":"2023-09-25"},{"lineNumber":188,"author":{"gitId":"wamps-jp"},"content":"     * @return Acknowledgement of the task deletion.","lastModifiedDate":"2023-09-25"},{"lineNumber":189,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":190,"author":{"gitId":"wamps-jp"},"content":"    public String handleDelete(String command) throws DukeInvalidDescriptionException, DukeInvalidIndexException {","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"wamps-jp"},"content":"        String[] parsed \u003d Parser.splitSpace(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"wamps-jp"},"content":"        if (parsed.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"wamps-jp"},"content":"        boolean valid \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"wamps-jp"},"content":"            int i \u003d Integer.parseInt(parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"wamps-jp"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"wamps-jp"},"content":"            valid \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"wamps-jp"},"content":"        if (!valid) {","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"wamps-jp"},"content":"        int ind \u003d Integer.parseInt(parsed[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"wamps-jp"},"content":"        if (ind \u003e taskList.getLength()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"wamps-jp"},"content":"        Task t \u003d taskList.getTask(ind-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"wamps-jp"},"content":"        taskList.remove(ind-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":211,"author":{"gitId":"wamps-jp"},"content":"            storage.save(taskList.writeTaskList());","lastModifiedDate":"2023-09-25"},{"lineNumber":212,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":213,"author":{"gitId":"wamps-jp"},"content":"            e.getMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":214,"author":{"gitId":"wamps-jp"},"content":"            System.out.println(ui.failure());","lastModifiedDate":"2023-09-25"},{"lineNumber":215,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":216,"author":{"gitId":"wamps-jp"},"content":"        return ui.removeText(t, taskList.getLength());","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":219,"author":{"gitId":"wamps-jp"},"content":"    public String handleFind(String command) throws DukeInvalidDescriptionException {","lastModifiedDate":"2023-09-25"},{"lineNumber":220,"author":{"gitId":"wamps-jp"},"content":"        String[] parsed \u003d Parser.splitSpace(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":221,"author":{"gitId":"wamps-jp"},"content":"        if (parsed.length \u003c 2) {","lastModifiedDate":"2023-09-25"},{"lineNumber":222,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidDescriptionException();","lastModifiedDate":"2023-09-25"},{"lineNumber":223,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":224,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":225,"author":{"gitId":"wamps-jp"},"content":"        List\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-25"},{"lineNumber":226,"author":{"gitId":"wamps-jp"},"content":"        String keywords \u003d parsed[1];","lastModifiedDate":"2023-09-25"},{"lineNumber":227,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":228,"author":{"gitId":"wamps-jp"},"content":"        for (int i \u003d 0; i \u003c taskList.getLength(); i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":229,"author":{"gitId":"wamps-jp"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-25"},{"lineNumber":230,"author":{"gitId":"wamps-jp"},"content":"            if (task.getDescription().toLowerCase().contains(keywords.toLowerCase())) {","lastModifiedDate":"2023-09-25"},{"lineNumber":231,"author":{"gitId":"wamps-jp"},"content":"                indexList.add(i);","lastModifiedDate":"2023-09-25"},{"lineNumber":232,"author":{"gitId":"wamps-jp"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-09-25"},{"lineNumber":233,"author":{"gitId":"wamps-jp"},"content":"                boolean start \u003d ((Event) task).getFrom().toLowerCase().contains(keywords.toLowerCase());","lastModifiedDate":"2023-09-25"},{"lineNumber":234,"author":{"gitId":"wamps-jp"},"content":"                boolean end \u003d ((Event) task).getTo().toLowerCase().contains(keywords.toLowerCase());","lastModifiedDate":"2023-09-25"},{"lineNumber":235,"author":{"gitId":"wamps-jp"},"content":"                if (start \u0026\u0026 end) {","lastModifiedDate":"2023-09-25"},{"lineNumber":236,"author":{"gitId":"wamps-jp"},"content":"                    indexList.add(i);","lastModifiedDate":"2023-09-25"},{"lineNumber":237,"author":{"gitId":"wamps-jp"},"content":"                }","lastModifiedDate":"2023-09-25"},{"lineNumber":238,"author":{"gitId":"wamps-jp"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-25"},{"lineNumber":239,"author":{"gitId":"wamps-jp"},"content":"                boolean due \u003d ((Deadline) task).getBy().toLowerCase().contains(keywords.toLowerCase());","lastModifiedDate":"2023-09-25"},{"lineNumber":240,"author":{"gitId":"wamps-jp"},"content":"                if (due) {","lastModifiedDate":"2023-09-25"},{"lineNumber":241,"author":{"gitId":"wamps-jp"},"content":"                    indexList.add(i);","lastModifiedDate":"2023-09-25"},{"lineNumber":242,"author":{"gitId":"wamps-jp"},"content":"                }","lastModifiedDate":"2023-09-25"},{"lineNumber":243,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":244,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":245,"author":{"gitId":"wamps-jp"},"content":"        return ui.getMatchingList(taskList, indexList);","lastModifiedDate":"2023-09-25"},{"lineNumber":246,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":247,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":247}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"public class Launcher {","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"            stage.setTitle(\"Reaper Remi\");","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"            stage.show();","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Cat.png\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Reaper.png\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"        );","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":" * The \u003ccode\u003eParser\u003c/code\u003e class takes in strings from the commands and parses them","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":" * for the \u003ccode\u003eHandler\u003c/code\u003e object to use.","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"public class Parser {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"     * Parses a \u003ccode\u003eString\u003c/code\u003e, splitting it by the first space encountered.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"     * @param str The String to be split.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"     * @return Two strings","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"    public static String[] splitSpace (String str) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"        return str.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"     * Parses a \u003ccode\u003eString\u003c/code\u003e, splitting it by the /from and /to keywords.","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"     * @param str The String to be split.","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"     * @return Three strings","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    public static String[] splitEvent (String str) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"        String[] res \u003d new String[3];","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"        String noCommand \u003d Parser.splitSpace(str)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"        String[] temp \u003d noCommand.split(\"/from \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"        res[0] \u003d temp[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"        if (temp.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"            res[1] \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"            res[2] \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"            return res;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"        String[] temp2 \u003d temp[1].split(\"/to \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"        res[1] \u003d temp2[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"        if (temp2.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"            res[2] \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"            return res;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"        res[2] \u003d temp2[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"        //removes leading and trailing spaces","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"        for (int i \u003d 0; i \u003c res.length; i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"            res[i] \u003d res[i].trim();","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"        return res;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"     * Parses a \u003ccode\u003eString\u003c/code\u003e, splitting it by the /by keyword.","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"     * @param str The String to be split.","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"     * @return Two strings.","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"    public static String[] splitDeadline (String str) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"        String noCommand \u003d Parser.splitSpace(str)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"        return noCommand.split(\"/by \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":61}},{"path":"src/main/java/duke/Runner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidFileException;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"public class Runner {","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"     * @param filePath File to be loaded from/written to. May or may not exist initially.","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    public Runner(String filePath) {","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"        } catch (DukeInvalidFileException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"    public String runCommand(String command) {","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"        //System.out.println(ui.startup());","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"            //String command \u003d ui.getInput();","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"            Handler handler \u003d new Handler(taskList, ui, storage);","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"                return ui.exit();","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"                return ui.getList(taskList);","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"                return handler.handleMark(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"                return handler.handleUnmark(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"                return handler.handleTodo(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.startsWith(\"event \")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"                return handler.handleEvent(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"                return handler.handleDeadline(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"                return handler.handleDelete(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"            } else if (command.startsWith(\"find \")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"                return handler.handleFind(command);","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"            } else {","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"                throw new DukeInvalidInputException();","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"            return ui.errorMsg(e.getMessage());","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":62}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import duke.exceptions.DukeInvalidFileException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"import java.io.File;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"import java.util.List;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":" * The \u003ccode\u003eStorage\u003c/code\u003e object handles loading and saving from the computer.","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"public class Storage {","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"    private File file;","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"    private File directory;","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"    private String filePath;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    private boolean hasDirectory \u003d false;","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"     * @param filePath The file path to be written to and loaded from. May already have a file or not.","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"        int lastSlash \u003d filePath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"        if (lastSlash !\u003d -1) {","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"            String dirPath \u003d filePath.substring(0, lastSlash);","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"            this.directory \u003d new File(dirPath);","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"            this.hasDirectory \u003d true;","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"     * Loads the current content of the file.","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"     * If the file does not exist, it creates one.","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"     * @throws DukeInvalidFileException if the file creation fails.","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"    public List\u003cTask\u003e load() throws DukeInvalidFileException {","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"        List\u003cTask\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"        if (hasDirectory \u0026\u0026 !directory.exists()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"            try {","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"                throw new DukeInvalidFileException();","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"        Scanner s \u003d null;","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"            s \u003d new Scanner(file);","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"            throw new DukeInvalidFileException();","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"wamps-jp"},"content":"            //removes leading and trailing spaces","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"wamps-jp"},"content":"            for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"wamps-jp"},"content":"                parts[i] \u003d parts[i].trim();","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"wamps-jp"},"content":"            boolean isDone \u003d false;","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"wamps-jp"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"wamps-jp"},"content":"                isDone \u003d true;","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"wamps-jp"},"content":"            if (parts[0].equals(\"T\")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"wamps-jp"},"content":"                ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"wamps-jp"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"wamps-jp"},"content":"                    todo.markDone();","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"wamps-jp"},"content":"                }","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"wamps-jp"},"content":"                contents.add(todo);","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"wamps-jp"},"content":"            } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"wamps-jp"},"content":"                Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"wamps-jp"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"wamps-jp"},"content":"                    deadline.markDone();","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"wamps-jp"},"content":"                }","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"wamps-jp"},"content":"                contents.add(deadline);","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"wamps-jp"},"content":"            } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"wamps-jp"},"content":"                Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"wamps-jp"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"wamps-jp"},"content":"                    event.markDone();","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"wamps-jp"},"content":"                }","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"wamps-jp"},"content":"                contents.add(event);","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"wamps-jp"},"content":"        return contents;","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"wamps-jp"},"content":"     * Writes the specified content to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"wamps-jp"},"content":"     * Overwrites the current content of the file.","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"wamps-jp"},"content":"     * @param content The content to be written to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"wamps-jp"},"content":"    public void save(String content) throws IOException {","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"wamps-jp"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"wamps-jp"},"content":"        fw.write(content);","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"wamps-jp"},"content":"        fw.close();","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"wamps-jp"},"content":"     * Writes the specified content to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"wamps-jp"},"content":"     * Appends the given content to the current content of the file.","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"wamps-jp"},"content":"     * @param appendedContent The content to be written to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"wamps-jp"},"content":"    public void saveAppend(String appendedContent) throws IOException {","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"wamps-jp"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"wamps-jp"},"content":"        fw.write(appendedContent);","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"wamps-jp"},"content":"        fw.close();","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":128}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"import java.util.List;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":" * The \u003ccode\u003eUi\u003c/code\u003e class stores the chatbot replies to user commands, returning the","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":" * appropriate response to each one.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"public class Ui {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"    private static String LINE \u003d \"______________________\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    private static String NAME \u003d \"Remi\";","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"    private static String INTRO \u003d \"Greetings. I am \" + NAME + \".\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"    private static String DONE \u003d \"It is accomplished.\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"    private static String UNDONE \u003d \"It is unfinished.\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"    private static String ADD_TASK \u003d \"Another task? Very well.\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"    private static String REMOVE_TASK \u003d \"It is gone with the wind.\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"    private static String FAILURE \u003d \"A critical failure occurred. Farewell.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    private static String LOAD_NEW \u003d \"Here\u0027s a blank one instead.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"     * @param scanner The scanner that the UI uses to read commands.","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"    public Ui() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"     * Gets the next line of commands from the user.","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"     * @return Next command","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"     * Returns the startup greeting.","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"     * @return Greeting","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"    public String startup() {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"        return LINE + INTRO + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"     * Returns the failure message.","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"     * @return Failure","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"    public String failure() {","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"        return FAILURE + \"\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"     * Returns the file loading error.","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"     * @return File error","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"        return LOAD_NEW + \"\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"wamps-jp"},"content":"     * Returns the exit statements.","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"wamps-jp"},"content":"     * @return Exit","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"wamps-jp"},"content":"    public String exit() {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"wamps-jp"},"content":"        return LINE + \"Farewell.\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"wamps-jp"},"content":"     * Acknowledges the marking of a task.","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"wamps-jp"},"content":"     * @return Mark acknowledgement","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"wamps-jp"},"content":"    public String markText(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"wamps-jp"},"content":"        return LINE + DONE + task.toString() + \"\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"wamps-jp"},"content":"     * Acknowledges the unmarking of a task.","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"wamps-jp"},"content":"     * @return Unmark acknowledgement","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"wamps-jp"},"content":"    public String unmarkText(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"wamps-jp"},"content":"        return LINE + UNDONE + task.toString() + \"\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"wamps-jp"},"content":"     * Acknowledges the addition of a task.","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"wamps-jp"},"content":"     * @return Task acknowledgement","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"wamps-jp"},"content":"    public String taskText(Task task, int len) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"wamps-jp"},"content":"        return LINE + ADD_TASK + task.toString() + \"\\n\" + \"There are now \"","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"wamps-jp"},"content":"                + len + \" task(s) in your backlog.\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"wamps-jp"},"content":"     * Acknowledges the deletion of a task.","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"wamps-jp"},"content":"     * @return Delete acknowledgement","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"wamps-jp"},"content":"    public String removeText(Task task, int len) {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"wamps-jp"},"content":"        return LINE + REMOVE_TASK + task.toString() + \"\\n\" + \"There are now \"","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"wamps-jp"},"content":"                + len + \" task(s) in your backlog.\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"wamps-jp"},"content":"     * Acknowledges the marking of a task.","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"wamps-jp"},"content":"     * @return Mark acknowledgement","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"wamps-jp"},"content":"    public String errorMsg(String err) {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"wamps-jp"},"content":"        return LINE + err + \"\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"wamps-jp"},"content":"     * Prints the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":131,"author":{"gitId":"wamps-jp"},"content":"     * @return List of tasks","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"wamps-jp"},"content":"    public String getList(TaskList list) {","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"wamps-jp"},"content":"        if (list.getLength() !\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"wamps-jp"},"content":"            String res \u003d \"Here are your tasks: \\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"wamps-jp"},"content":"            for (int i \u003d 0; i \u003c list.getLength(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"wamps-jp"},"content":"                String prev \u003d res;","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"wamps-jp"},"content":"                int count \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"wamps-jp"},"content":"                res \u003d prev + count + \".\" + list.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"wamps-jp"},"content":"            return LINE + res + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":142,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"wamps-jp"},"content":"        return LINE + \"You have no tasks for the day. Congratulations?\" + \"\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":144,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":146,"author":{"gitId":"wamps-jp"},"content":"    public String getMatchingList(TaskList list, List\u003cInteger\u003e indices) {","lastModifiedDate":"2023-09-25"},{"lineNumber":147,"author":{"gitId":"wamps-jp"},"content":"        if (indices.size() !\u003d 0) {","lastModifiedDate":"2023-09-25"},{"lineNumber":148,"author":{"gitId":"wamps-jp"},"content":"            String res \u003d \"Here are the task(s) matching that description: \\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":149,"author":{"gitId":"wamps-jp"},"content":"            for (int i \u003d 0; i \u003c indices.size(); i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":150,"author":{"gitId":"wamps-jp"},"content":"                String prev \u003d res;","lastModifiedDate":"2023-09-25"},{"lineNumber":151,"author":{"gitId":"wamps-jp"},"content":"                int count \u003d i + 1;","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"wamps-jp"},"content":"                int index \u003d indices.get(i);","lastModifiedDate":"2023-09-25"},{"lineNumber":153,"author":{"gitId":"wamps-jp"},"content":"                res \u003d prev + count + \".\" + list.getTask(index).toString() + \"\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":154,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"wamps-jp"},"content":"            return LINE + res + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":157,"author":{"gitId":"wamps-jp"},"content":"        return LINE + \"No tasks found. Apologies.\" + \"\\n\" + LINE;","lastModifiedDate":"2023-09-25"},{"lineNumber":158,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":159,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":159}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":7}},{"path":"src/main/java/duke/exceptions/DukeInvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"public class DukeInvalidDescriptionException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"    public DukeInvalidDescriptionException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"        super(\"While your command is correct, I simply can\u0027t make sense of the rest of it.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":7}},{"path":"src/main/java/duke/exceptions/DukeInvalidFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"public class DukeInvalidFileException extends DukeException{","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"    public DukeInvalidFileException() {","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"        super(\"An exception occurred while looking for the file.\");","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":7}},{"path":"src/main/java/duke/exceptions/DukeInvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"public class DukeInvalidIndexException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"    public DukeInvalidIndexException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"        super(\"You don\u0027t have a task at that index. What are you trying to do?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":7}},{"path":"src/main/java/duke/exceptions/DukeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"public class DukeInvalidInputException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"    public DukeInvalidInputException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"        super(\"This is nonsense.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":7}},{"path":"src/main/java/duke/exceptions/DukeInvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"public class DukeInvalidTimeException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"    public DukeInvalidTimeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"        super(\"As much as it would be nice to live free from the shackles of time... you don\u0027t.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":" * An extension of \u003ccode\u003eTask\u003c/code\u003e, a \u003ccode\u003eDeadline\u003c/code\u003e object keeps track of","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":" * a task that has a time-gated deadline (either a LocalDate or just a String)","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"    protected boolean isDate \u003d true;","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"     * @param by Deadline of the task - either a LocalDate or a String","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"        //To treat the deadline as a date, the user must input it as either of the following formats.","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"            this.date \u003d LocalDate.parse(by, formatter1);","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"        } catch (DateTimeParseException eDate) {","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"            try {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"                this.date \u003d LocalDate.parse(by, formatter2);","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"            } catch (DateTimeParseException eDate2) {","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"                isDate \u003d false;","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"                this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"     * Gets the value of by, whether a \u003ccode\u003eLocalDate\u003c/code\u003e or \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"        if (!isDate) {","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"            return this.by;","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"        return date.format(formatter1);","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eDeadline\u003c/code\u003e task, for writing to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"    public String storedString() {","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"        return \"D | \" + super.storedString() + \" | \" + getBy();","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eDeadline\u003c/code\u003e task, for display to user.","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":70}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":" * An extension of \u003ccode\u003eTask\u003c/code\u003e, a \u003ccode\u003eEvent\u003c/code\u003e object keeps track of","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":" * a task that has a start and end time (both either a LocalDate or just a String)","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    protected boolean areBothDates \u003d true;","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"     * @param from Start of the event - either a LocalDate or String","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"     * @param to End of the event - either a LocalDate or String","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"        //To treat the event start and end as dates,","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"        //the user must input them as either of the following formats.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"            this.fromDate \u003d LocalDate.parse(from, formatter1);","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"        } catch (DateTimeParseException eDate) {","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"            try {","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"                this.fromDate \u003d LocalDate.parse(from, formatter2);","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"            } catch (DateTimeParseException eDate2) {","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"                areBothDates \u003d false;","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"                this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"                this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"        //if only one is a date, there\u0027s no point in treating either like a date","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"        if (areBothDates) {","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"            try {","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"                this.toDate \u003d LocalDate.parse(to, formatter1);","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"            } catch (DateTimeParseException eDate) {","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"                try {","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"                    this.toDate \u003d LocalDate.parse(to, formatter2);","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"                } catch (DateTimeParseException eDate2) {","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"                    areBothDates \u003d false;","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"                    this.from \u003d from;","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"                    this.to \u003d to;","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"                }","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"     * Gets the value of from, whether a \u003ccode\u003eLocalDate\u003c/code\u003e or \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"        if (!areBothDates) {","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"            return this.from;","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"wamps-jp"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"wamps-jp"},"content":"        return fromDate.format(formatter1);","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"wamps-jp"},"content":"     * Gets the value of to, whether a \u003ccode\u003eLocalDate\u003c/code\u003e or \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"wamps-jp"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"wamps-jp"},"content":"        if (!areBothDates) {","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"wamps-jp"},"content":"            return this.to;","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"wamps-jp"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"wamps-jp"},"content":"        return toDate.format(formatter1);","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eEvent\u003c/code\u003e task, for writing to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"wamps-jp"},"content":"    public String storedString() {","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"wamps-jp"},"content":"        return \"E | \" + super.storedString() + \" | \" + getFrom() + \" | \" + getTo();","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eEvent\u003c/code\u003e task, for display to user.","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"wamps-jp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"wamps-jp"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFrom() + \" to: \" + getTo() + \")\";","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":101}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object tracks a singular task that the user","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":" * has noted with a description of said task, and whether or not it is done.","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"     * @param description Description of the \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string representation of the isDone value, for display to user.","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string representation of the isDone value, for writing to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"    public String getStatusBinary() {","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string description of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"        return this.description;","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"     * Marks the task as finished.","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"     * Marks the task as unfinished.","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eTask\u003c/code\u003e object, for writing to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"    public String storedString() {","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"        return this.getStatusBinary() + \" | \" + this.description;","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eTask\u003c/code\u003e object, for display to user.","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":72}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object keeps track of all tasks that the user has noted.","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"    private static List\u003cTask\u003e taskLists;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"     * The empty class constructor. Creates an empty \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"        taskLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor with parameters.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"     * @param arr A \u003ccode\u003eList\u003c/code\u003e of existing tasks","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    public TaskList(List\u003cTask\u003e arr) {","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"        taskLists \u003d arr;","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"     * @param task The \u003ccode\u003eTask\u003c/code\u003e to be added.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"        taskLists.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"     * Returns a specified task from the list.","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"     * Does not remove the task.","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"     * @param index The index location of the \u003ccode\u003eTask\u003c/code\u003e to be provided.","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"     * @return The specified \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"        return taskLists.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"     * Marks a \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be marked as done.","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"wamps-jp"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wamps-jp"},"content":"        taskLists.get(index).markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"wamps-jp"},"content":"     * Marks a \u003ccode\u003eTask\u003c/code\u003e as unfinished.","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"wamps-jp"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be marked as unfinished.","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"wamps-jp"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"wamps-jp"},"content":"        taskLists.get(index).markUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"wamps-jp"},"content":"     * Returns the length of the current list.","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"wamps-jp"},"content":"    public int getLength() {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"wamps-jp"},"content":"        return taskLists.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"wamps-jp"},"content":"     * Removes a specified \u003ccode\u003eTask\u003c/code\u003e from the list.","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"wamps-jp"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be removed.","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"wamps-jp"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"wamps-jp"},"content":"        taskLists.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"wamps-jp"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"wamps-jp"},"content":"     * @return The string representing a list of all tasks","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"wamps-jp"},"content":"    public String writeTaskList() {","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"wamps-jp"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"wamps-jp"},"content":"        String temp;","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"wamps-jp"},"content":"        for (int i \u003d 0; i \u003c taskLists.size(); i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"wamps-jp"},"content":"            temp \u003d taskLists.get(i).storedString();","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"wamps-jp"},"content":"            res \u003d res + temp + \"\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"wamps-jp"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"wamps-jp"},"content":"        return res;","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":97}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":" * An extension of \u003ccode\u003eTask\u003c/code\u003e, a \u003ccode\u003eToDo\u003c/code\u003e object keeps track of","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":" * a task that should be accomplished, but has no strict timeframe","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"     * The class constructor.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"     * @param description Description of the ToDo task.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eToDo\u003c/code\u003e task, for writing to file.","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"    public String storedString() {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"        return \"T | \" + super.storedString();","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"     * Returns the string form of the \u003ccode\u003eToDo\u003c/code\u003e task, for display to user.","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":34}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":19}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"    public void storedStringTest() {","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"        Deadline deadline1 \u003d new Deadline(\"Homework\", \"midnight\");","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"        Deadline deadline2 \u003d new Deadline(\"Final\", \"05/24/2024\");","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"        deadline2.markDone();","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"        //The format should look as follows:","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"D | 0 | Homework | midnight\", deadline1.storedString());","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"        //and the date should be formatted in dd/MM/yyyy","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"D | 1 | Final | 24/05/2024\", deadline2.storedString());","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"        deadline1.markDone();","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"        deadline2.markUndone();","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"        //when you swap the marks, the binary signs should change","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"D | 1 | Homework | midnight\", deadline1.storedString());","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"D | 0 | Final | 24/05/2024\", deadline2.storedString());","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"        Deadline deadline1 \u003d new Deadline(\"Homework\", \"midnight\");","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"        Deadline deadline2 \u003d new Deadline(\"Final\", \"05/24/2024\");","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        deadline2.markDone();","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"        //toString() should behave similarly to storeString()","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"[D][ ] Homework (by: midnight)\", deadline1.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"        //with no spaces between the two sets of brackets","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"        assertNotEquals(\"[D] [ ] Homework | midnight\", deadline1.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"        //and the date should be formatted in dd/MM/yyyy","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"[D][X] Final (by: 24/05/2024)\", deadline2.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"        deadline1.markDone();","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"        deadline2.markUndone();","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"        //when you swap the marks, the \"X\" should become \" \" and vice versa","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"[D][X] Homework (by: midnight)\", deadline1.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"[D][ ] Final (by: 24/05/2024)\", deadline2.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":51}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"public class EventTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"wamps-jp"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"wamps-jp"},"content":"    public void getFrom_areBothDates() {","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"wamps-jp"},"content":"        //input matches output format","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"23/02/2023\", new Event(\"holidays\", \"23/02/2023\", \"03/24/2023\").getFrom());","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"wamps-jp"},"content":"        //even if MM/dd/yyyy is used, it should still match","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"23/02/2023\", new Event(\"holidays\", \"02/23/2023\", \"03/24/2023\").getFrom());","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"wamps-jp"},"content":"        //a different format from the inputs is not equal to the output","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"wamps-jp"},"content":"        assertNotEquals(\"23/02/2023\", new Event(\"holidays\", \"2023/02/23\", \"03/24/2023\").getFrom());","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"wamps-jp"},"content":"        //if to is not a date, the format is not changed","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"23/02/2023\", new Event(\"holidays\", \"23/02/2023\", \"someday\").getFrom());","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"wamps-jp"},"content":"        assertNotEquals(\"23/02/2023\", new Event(\"holidays\", \"02/23/2023\", \"whenever\").getFrom());","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"wamps-jp"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"wamps-jp"},"content":"    public void getFrom_notDates() {","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"wamps-jp"},"content":"        //if from is not a date at all it should not change","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"midnight\", new Event(\"Call with family\", \"midnight\", \"2 AM\").getFrom());","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"wamps-jp"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"wamps-jp"},"content":"    public void getTo_areBothDates() {","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"wamps-jp"},"content":"        //input matches output format","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"24/03/2023\", new Event(\"holidays\", \"23/02/2023\", \"24/03/2023\").getTo());","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"wamps-jp"},"content":"        //even if MM/dd/yyyy is used, it should still match","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"24/03/2023\", new Event(\"holidays\", \"02/23/2023\", \"03/24/2023\").getTo());","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"wamps-jp"},"content":"        //a different format from the inputs is not equal to the output","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"wamps-jp"},"content":"        assertNotEquals(\"24/03/2023\", new Event(\"holidays\", \"2023/02/23\", \"03-24-2023\").getTo());","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"wamps-jp"},"content":"        //if to is not a date, the format is not changed","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"24/03/2023\", new Event(\"holidays\", \"always\", \"24/03/2023\").getTo());","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"wamps-jp"},"content":"        assertNotEquals(\"23/02/2023\", new Event(\"holidays\", \"never\", \"02/23/2023\").getTo());","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"wamps-jp"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"wamps-jp"},"content":"    public void getTo_notDates() {","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"wamps-jp"},"content":"        //if to is not a date at all it should not change","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"wamps-jp"},"content":"        assertEquals(\"2 AM\", new Event(\"Call with family\", \"midnight\", \"2 AM\").getTo());","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"wamps-jp"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"wamps-jp"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"wamps-jp"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"wamps-jp":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wamps-jp"},"content":"deadline hw /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wamps-jp"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wamps-jp"},"content":"event club /from 3 /to 5","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wamps-jp"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wamps-jp"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wamps-jp"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wamps-jp"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wamps-jp"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wamps-jp":8}}]
