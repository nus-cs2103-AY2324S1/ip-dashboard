[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"    testImplementation \"org.mockito:mockito-core:3.+\"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    testImplementation group: \u0027org.assertj\u0027, name: \u0027assertj-core\u0027, version: \u00273.6.1\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    mainClass.set(\"cheems.Cheems\")","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"    archiveBaseName \u003d \"cheems\"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wanghejin":6,"-":40}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wanghejin":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"### `cheems.Keyword` - Describe action","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"wanghejin":1,"-":28}},{"path":"src/main/java/cheems/Cheems.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":" * Represents the main class of the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"public class Cheems {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"    private final static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"    private final Tasklist tasklist;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"    private final UI ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"    public Cheems(String filepath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"        tasklist \u003d new Tasklist(storage, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"        parser \u003d new Parser(tasklist, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    public void run() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        ui.showWelcomeMsg();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        tasklist.loadTaskFromDatabase();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        String input \u003d ui.getInput(scanner);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"        // business logic","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"                parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"            } catch (RuntimeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"            input \u003d ui.getInput(scanner);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"        ui.showExitMsg();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        Cheems cheems \u003d new Cheems(\"data.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        cheems.run();","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"wanghejin":47}},{"path":"src/main/java/cheems/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":" * Represents different commands recognised by the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"public enum Keyword {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"    MARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"    UNMARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"    TODO,","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    EVENT,","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"    LIST,","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"    DELETE,","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    FIND","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":15}},{"path":"src/main/java/cheems/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import cheems.exceptions.EmptyArgumentException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import cheems.exceptions.InvalidKeywordException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":" * Parser parses the input from the user and execute corresponding actions.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":" * Exceptions are thrown should the input be invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"public class Parser {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    private Tasklist tasklist;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"    private UI ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    public Parser(Tasklist listManager, UI thisUi) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"        tasklist \u003d listManager;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"        ui \u003d thisUi;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"     * Parses the given input and tells Tasklist the action to take.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"     * Exceptions are thrown should the input be invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"     * @param input User input.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"     * @throws InvalidKeywordException if the keyword is not recognised.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"     * @throws EmptyArgumentException if no argument is provided for commands requiring arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     * @throws NumberFormatException if non-digit argument is provided for commands requiring digits as arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    public void parseAndExecute(String input)","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"            throws InvalidKeywordException, EmptyArgumentException, NumberFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"            String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"            // if keyword not recognised","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"            if (!inKeywords(words[0])) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"                throw new InvalidKeywordException();","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"            // extract command as the first word","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"            Keyword currentKey \u003d Keyword.valueOf(words[0].toUpperCase());","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"            if (currentKey \u003d\u003d Keyword.LIST) {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"                tasklist.displayData();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"                // if there is no argument provided for commands supposed to have arguments","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"                if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"                    throw new EmptyArgumentException(currentKey.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"                String args \u003d words[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"                // if there are indeed arguments provided","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"                switch (currentKey) {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"                    case FIND:","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"                        tasklist.find(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"                    case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"                        // Fallthrough","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"                        // Fallthrough","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"                        if (args.chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"                            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"                            if (currentKey \u003d\u003d Keyword.MARK) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"                                tasklist.markAsDone(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"                            } else if (currentKey \u003d\u003d Keyword.UNMARK) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"                                tasklist.markAsNotDone(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"                                tasklist.delete(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"                            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"                            String errMsg \u003d \"Sorry you must provide the task number to mark/unmark it!\";","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"                            throw new NumberFormatException(errMsg);","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"                    case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"                        tasklist.addTaskToDatabase(\"TODO\", args);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"                        words \u003d args.split(\" /from \");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"                        String eventDescription \u003d words[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"                        String[] words1 \u003d words[1].split(\" /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"                        String from \u003d words1[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"                        String to \u003d words1[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"                        tasklist.addTaskToDatabase(\"EVENT\", eventDescription, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"                        words \u003d args.split(\" /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"                        String ddlDescription \u003d words[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"                        String by \u003d words[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"                        tasklist.addTaskToDatabase(\"DEADLINE\", ddlDescription, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"            String resp \u003d \"Please give me instructions, if not, I\u0027ll serve you some fries.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"            ui.printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"    private boolean inKeywords(String word) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"        for (Keyword k: Keyword.values()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"            if (k.name().toLowerCase().equals(word)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"                return true;","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"        return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":110}},{"path":"src/main/java/cheems/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import cheems.exceptions.InputOutputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":" * Represents the text database that stores the data.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":" * Contains methods that interacts with the database and current task list during program run.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"     * Each Storage object has a file field storing the file to read and write from.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    private final File file;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"     * This private constructor is called only by getInstance(String filepath).","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"     * Creates the file should it not exist.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"     * Stores the file in this.file field of the class, for easy reference by other methods.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"     * @param filePath The filepath used to find the text file for storing task data.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"     * @throws InputOutputException If fails to create the new file.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    public Storage(String filePath) throws InputOutputException {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"                f.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"            this.file \u003d f;","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"            throw new InputOutputException(\"Failed to create a new data file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"     * Reads tasks from database file.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"     * Calls Tasklist.addTask() to add these into the tasklist maintained during chatbot run.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"     * @return An Arraylist containing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"     * @throws InputOutputException If fails to find the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"    public ArrayList\u003cString[]\u003e loadData() throws InputOutputException {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        try (Scanner s \u003d new Scanner(this.file)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"            String input;","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"            ArrayList\u003cString[]\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"                input \u003d s.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"                String[] taskLine \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"                output.add(taskLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"            return output;","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"            String msg \u003d String.format(\"I cannot find %s! May be accidental deletion, \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"                    \"try restart cheems.Cheems!\", file.getName());","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"            throw new InputOutputException(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"     * Saves a new task to the database text.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"     * @param taskLine The line to be written to the database, formatted based on database specification.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"     * @throws InputOutputException If fails to write to file.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"    public void saveNewTask(String taskLine) throws InputOutputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"            FileWriter fw \u003d new FileWriter(this.file, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"            fw.write(taskLine + System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"            throw new InputOutputException(\"I cannot open the file for writing!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"     * Updates the specific task in the database with either of the following actions: delete, mark, unmark.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"     * Side effect: Overwrites the whole file.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"     * @param content The content to write to database.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"     * @throws InputOutputException If fails to read or write to file.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"    public void updateWholeDatabase(String content) throws InputOutputException {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"            fw.write(content);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"            throw new InputOutputException(\"I cannot open the file for writing!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wanghejin":101}},{"path":"src/main/java/cheems/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":" * Represents a task list directly interacts with the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":" * Interacts with Storage class as well to retrieve and update information to the text database.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"public class Tasklist {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"    private final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"    private int total \u003d 0;  // total also indicates the first free slot","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    private final UI ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    public Tasklist(Storage storage, UI ui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    private void checkIndexOutOfBoundsHelper(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        if (index \u003e\u003d total) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"            String errMsg \u003d String.format(\"Sorry you do not have task #%d, \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"                    \"try \\\"list\\\" to check your current list of tasks!\", index + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"            throw new IndexOutOfBoundsException(errMsg);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"     * Creates a task object based on the string parameters given.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"     * @param isFromDatabase Represents whether the method is used for creating an object based on string input","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"     *                       from the database or the end user, since they have different formats.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"     *                       If from the database, the isDone status needs to be reflected in the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"     * @param params Represents the string parameters used to create the new task.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"     * @return A new task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"    private Task identifyCreateTask(boolean isFromDatabase, String... params) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        // If the params variable arguments is from the database","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        // There is a single digit 0/1 in front to represent isDone status","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        // Needs to move the start index to read arguments for creating the task 1 position back","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        int startIndex \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        if (isFromDatabase) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"            startIndex++;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"            isDone \u003d params[0].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"        // Parse the arguments and create the new task","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        Keyword keyword \u003d Keyword.valueOf(params[startIndex]);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        Task task \u003d new Todo(params[startIndex + 1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        switch (keyword) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"                task \u003d new Deadline(params[startIndex + 1], params[startIndex + 2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"            case EVENT:","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"                task \u003d new Event(params[startIndex + 1], params[startIndex + 2], params[startIndex + 3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        if (isFromDatabase \u0026\u0026 isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"     * Loads the task from the database to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"    public void loadTaskFromDatabase() {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"        ArrayList\u003cString[]\u003e dataList \u003d storage.loadData();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"        for (String[] params : dataList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"            Task newTask \u003d identifyCreateTask(true, params);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"            list.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"            total++;","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"     * Adds a new task the user specified to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"     * Updates the database to include this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"     * @param params An array of strings used to create a new task.","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"    public void addTaskToDatabase(String... params) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        Task newTask \u003d identifyCreateTask(false, params);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"        total++;","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"        storage.saveNewTask(newTask.toStorage());","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"I have added this task for you!\\n\" + newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"        resp +\u003d String.format(\"\\nNow you have %d task(s) in your list!\", total);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"        ui.printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"    public Task getTaskAt(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"        return list.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"    public int getTotal() {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"        return total;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"wanghejin"},"content":"     * Prints all tasks in the current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"wanghejin"},"content":"    public void displayData() {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"wanghejin"},"content":"        if (total \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"wanghejin"},"content":"            resp \u003d \"You have no task right now:) Happy happy!\";","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"wanghejin"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"wanghejin"},"content":"            for (int i \u003d 0; i \u003c total; i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"wanghejin"},"content":"                resp +\u003d String.format(\"%d.%s\\n\", i + 1, list.get(i));","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"wanghejin"},"content":"        ui.printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"wanghejin"},"content":"     * Marks the task at index in the task list as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"wanghejin"},"content":"     * @param index The index of task to be marked done.","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"wanghejin"},"content":"     * @throws IndexOutOfBoundsException when the index entered is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"wanghejin"},"content":"    public void markAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"wanghejin"},"content":"        checkIndexOutOfBoundsHelper(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"wanghejin"},"content":"        list.get(index).markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"        taskListToStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"Good job! I\u0027ve marked this task as done:\\n\" + list.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"wanghejin"},"content":"        ui.printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"wanghejin"},"content":"     * Marks the task at index in the task list as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"wanghejin"},"content":"     * @param index The index of task to be marked undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"wanghejin"},"content":"     * @throws IndexOutOfBoundsException when the index entered is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"wanghejin"},"content":"    public void markAsNotDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"wanghejin"},"content":"        checkIndexOutOfBoundsHelper(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"wanghejin"},"content":"        list.get(index).markAsNotDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"wanghejin"},"content":"        taskListToStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"Okie dokie! I\u0027ve unmarked it for you:\\n\" + list.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"wanghejin"},"content":"        ui.printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"wanghejin"},"content":"     * Deletes the task at index in the task list and updates the database.","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"wanghejin"},"content":"     * @param index The index of task to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"wanghejin"},"content":"     * @throws IndexOutOfBoundsException when the index entered is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"wanghejin"},"content":"    public void delete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"wanghejin"},"content":"        checkIndexOutOfBoundsHelper(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"wanghejin"},"content":"        Task t \u003d list.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"wanghejin"},"content":"        list.remove(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"wanghejin"},"content":"        total--;","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"wanghejin"},"content":"        taskListToStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"wanghejin"},"content":"                        t +","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"wanghejin"},"content":"                        String.format(\"\\nNow you have %d tasks in your list!\", total);","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"wanghejin"},"content":"        ui.printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"wanghejin"},"content":"     * Finds and Print the tasks with corresponding keyword in their description.","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"wanghejin"},"content":"     * @param search The array of strings that represents the keyword we need to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"wanghejin"},"content":"    public void find(String search) {","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"wanghejin"},"content":"        ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"wanghejin"},"content":"        int a \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"wanghejin"},"content":"        for (int i \u003d 0; i \u003c total; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"wanghejin"},"content":"            if (list.get(i).getDescription().contains(search)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"wanghejin"},"content":"                resp +\u003d String.format(\"%d.%s\\n\", a, list.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"wanghejin"},"content":"                a++;","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"wanghejin"},"content":"        if (resp \u003d\u003d \"\") {","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"wanghejin"},"content":"            resp \u003d \"There is no corresponding task in your list!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"wanghejin"},"content":"        ui.printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"wanghejin"},"content":"     * Converts the tasks in list to Storage compatible string format.","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"wanghejin"},"content":"    public void taskListToStorage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"wanghejin"},"content":"        for (int i \u003d 0; i \u003c total; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"wanghejin"},"content":"            resp +\u003d list.get(i).toStorage() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"wanghejin"},"content":"        storage.updateWholeDatabase(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"wanghejin":202}},{"path":"src/main/java/cheems/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":" * Represents the user interface for the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":" * Handles display and interaction with the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"public class UI {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"     * Prints welcome message with logo and greetings.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    public void showWelcomeMsg() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"                \"         __                                             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"                \"        [  |                                            \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"                \" .---.   | |--.    .---.   .---.   _ .--..--.    .--.   \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"                \"/ /\u0027`\\\\]  | .-. |  / /__\\\\\\\\ / /__\\\\\\\\ [ `.-. .-. |  ( (`\\\\]  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"                \"| \\\\__.   | | | |  | \\\\__., | \\\\__.,  | | | | | |   `\u0027.\u0027.  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"                \"\u0027.___.\u0027 [___]|__]  \u0027.__.\u0027  \u0027.__.\u0027 [___||__||__] [\\\\__) ) \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"                \"                                                        \\n\";","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"        System.out.println(\"Hello from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        String hello \u003d \"Heyo I\u0027m Cheems! Nice to meet you:)\" + \"\\n\" + \"Want to get some fries on the pier together?\";","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        printWithFormat(hello);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"     * Prints exit message.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"    public void showExitMsg() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"        String bye \u003d \"Okay bye:( Let\u0027s get the fries next time.\";","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"        printWithFormat(bye);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"     * Prompts and obtains user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"     * @param scanner The scanner to scan user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"     * @return The user input in a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"    public String getInput(Scanner scanner) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        System.out.println(\"\u003e You: \");","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"     * Formats the given feedback to user to comply with chatbot convention.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"     * @param msg Feedback to user.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"    public void printWithFormat(String msg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        System.out.println(\"\u003e Cheems: \");","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"wanghejin":56}},{"path":"src/main/java/cheems/exceptions/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":" * Custom exception class to represent an input with empty arguments.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":" * This exception is thrown when an input with empty arguments is entered by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"public class EmptyArgumentException extends RuntimeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"    public EmptyArgumentException(String keyword) {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"        super(String.format(\"Please specify the correct number of arguments for keyword %s ~~\", keyword));","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":11}},{"path":"src/main/java/cheems/exceptions/InputOutputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"public class InputOutputException extends RuntimeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"    public InputOutputException(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"        super(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wanghejin":7}},{"path":"src/main/java/cheems/exceptions/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":" * Custom exception class to represent an invalid keyword input.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":" * This exception is thrown when an input keyword is not recognised by the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"public class InvalidKeywordException extends RuntimeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"    public InvalidKeywordException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"        super(\"Sorry I do not understand you, can you provide another keyword or I get you some fries?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":11}},{"path":"src/main/java/cheems/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":" * A child class of the abstract Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"    private LocalDate by;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    private final DateTimeFormatter DATE_PATTERN \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"     * Formats the deadline task in a user-friendly readable string.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"    public String toStorage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"        return String.format(\"%d|DEADLINE|%s|%s\", this.isDone ? 1 : 0,","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"                                    this.getDescription(), this.by.format(DATE_PATTERN));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":36}},{"path":"src/main/java/cheems/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":" * A child class of the abstract Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":" * Represents a task that has a start time and an end time.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"    private LocalDate from;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"    private LocalDate to;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    private final DateTimeFormatter DATE_PATTERN \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     * Formats the event task in a user-friendly readable string.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"                \" (from: \" + this.from +","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"                \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    public String toStorage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        return String.format(\"%d|EVENT|%s|%s|%s\", this.isDone ? 1 : 0, this.getDescription(),","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"                this.from.format(DATE_PATTERN), this.to.format(DATE_PATTERN));","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":39}},{"path":"src/main/java/cheems/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":" * An abstract class that represents each task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":" * Each task has a string description and a status.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"    private String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"    public abstract String toStorage();","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    /** Marks this task as done.*/","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    /** Marks this task as undone.*/","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"     * Formats the task in a user-friendly readable string.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"wanghejin":44}},{"path":"src/main/java/cheems/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":" * A child class of the abstract Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":" * Represents a task that is a to-do.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"     * Formats the todo task in a user-friendly readable string.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"     * @return A string representation of the todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    public String toStorage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"        return String.format(\"%d|TODO|%s\", this.isDone ? 1 : 0, this.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":26}},{"path":"src/test/java/cheems/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import cheems.exceptions.EmptyArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    UI uiMock \u003d mock(UI.class);","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"    Tasklist tasklistMock \u003d mock(Tasklist.class);","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"    private Parser parser \u003d new Parser(tasklistMock, uiMock);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_emptyInput_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"Please give me instructions, if not, I\u0027ll serve you some fries.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"        verify(uiMock).printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_validFind_tasklistMethodCalled() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"        String input \u003d \"find book\";","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        verify(tasklistMock).find(\"book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_validMark_tasklistMethodCalled() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        verify(tasklistMock).markAsDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_validUnmark_tasklistMethodCalled() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        String input \u003d \"unmark 1\";","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        verify(tasklistMock).markAsNotDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_validDelete_tasklistMethodCalled() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        verify(tasklistMock).delete(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_validTodo_tasklistMethodCalled() {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        String input \u003d \"todo ballet lesson\";","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        verify(tasklistMock).addTaskToDatabase(\"TODO\", \"ballet lesson\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_validEvent_tasklistMethodCalled() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"        String input \u003d \"event global conference /from 2023-04-29 /to 2023-05-12\";","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        verify(tasklistMock).addTaskToDatabase(\"EVENT\", \"global conference\", \"2023-04-29\", \"2023-05-12\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_validDeadline_tasklistMethodCalled() {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        String input \u003d \"deadline CS2100 quiz /by 2023-09-01\";","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"        parser.parseAndExecute(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"        verify(tasklistMock).addTaskToDatabase(\"DEADLINE\",\"CS2100 quiz\",\"2023-09-01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"    void parseAndExecute_noArguments_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"        assertThrows(EmptyArgumentException.class, () -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"            parser.parseAndExecute(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        });","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"            parser.parseAndExecute(\"mark something\");","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"        });","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wanghejin":95}},{"path":"src/test/java/cheems/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package cheems;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import cheems.tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import org.mockito.internal.matchers.apachecommons.ReflectionEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import static org.assertj.core.api.Assertions.assertThat;;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"class TasklistTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    UI uiMock \u003d mock(UI.class);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    Storage storageMock \u003d mock(Storage.class);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    void addTodoTaskToDatabaseTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"        Tasklist tasklist \u003d new Tasklist(storageMock, uiMock);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"        String[] params \u003d {\"TODO\",\"Sing a song\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"        tasklist.addTaskToDatabase(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        Todo todo \u003d new Todo(\"Sing a song\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"I have added this task for you!\\n\" + todo.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        resp +\u003d String.format(\"\\nNow you have %d task(s) in your list!\", tasklist.getTotal());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"        assertEquals(1, tasklist.getTotal());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"        assertTrue(new ReflectionEquals(todo).matches(tasklist.getTaskAt(0)));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"        verify(storageMock).saveNewTask(todo.toStorage());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"        verify(uiMock).printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"    void addDeadlineTaskToDatabaseTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"        Tasklist tasklist \u003d new Tasklist(storageMock, uiMock);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        String[] params \u003d {\"DEADLINE\", \"do hw\", \"2019-12-14\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"        tasklist.addTaskToDatabase(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        Deadline ddl \u003d new Deadline(\"do hw\", \"2019-12-14\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"I have added this task for you!\\n\" + ddl.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        resp +\u003d String.format(\"\\nNow you have %d task(s) in your list!\", tasklist.getTotal());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        assertEquals(1, tasklist.getTotal());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        verify(storageMock).saveNewTask(ddl.toStorage());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        verify(uiMock).printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"    void addEventTaskToDatabaseTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        Tasklist tasklist \u003d new Tasklist(storageMock, uiMock);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        String[] params \u003d {\"EVENT\", \"conference\", \"2022-12-22\", \"2022-12-24\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        tasklist.addTaskToDatabase(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"        Event event \u003d new Event(\"conference\", \"2022-12-22\", \"2022-12-24\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"        String resp \u003d \"I have added this task for you!\\n\" + event.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        resp +\u003d String.format(\"\\nNow you have %d task(s) in your list!\", tasklist.getTotal());","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        assertEquals(1, tasklist.getTotal());","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"        verify(storageMock).saveNewTask(event.toStorage());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        verify(uiMock).printWithFormat(resp);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wanghejin":65}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"hello","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"mark something","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"unmark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wanghejin":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"java -classpath ../bin Cheems \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wanghejin":1,"-":37}}]
