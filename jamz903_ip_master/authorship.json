[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamz903":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamz903":15,"-":42}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"    protected String by; //deadline of task","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"    protected Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"     * Creates a new deadline task that is not in LocalDate format.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"     * @param description   Description of deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"     * @param by    Deadline of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"    public Deadline(Duke duke, String description, String by) {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"        super(duke, description);","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"     * Creates a new deadline task that is in date format.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"     * @param description   Description of deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"     * @param date  Deadline of task in LocalDate format.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"    public Deadline(Duke duke, String description, LocalDate date) {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"        super(duke, description);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"        this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jamz903":34}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"    private Label text;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"        Circle cir \u003d new Circle(50, 50, 25);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"        cir.setStroke(Color.ORANGE);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"        displayPicture.setClip(cir);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamz903":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"     * Represents the ChatBot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"     * @param filePath  The local storage path.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"     * @throws DukeException    The exception to be thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    public Duke(String filePath) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"        ui \u003d new Ui(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"        storage \u003d new Storage(this, filePath);","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"     * @throws DukeException    The exception to be thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"        ui.echo(\"list\", tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"            return ui.echo(input, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jamz903":41,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"    public DukeException(String s) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"        super(s);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jamz903":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"    protected Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"     * Creates a new Event task that is not in LocalDate format.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"     * @param description   Description of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"     * @param from  Start date of event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"     * @param to    End date of event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"    public Event(Duke duke, String description, String from, String to) {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"        super(duke, description);","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"     * Creates a new Event task that is in LocalDate format.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"     * @param description   Description of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"     * @param from  Start date of event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"     * @param to    End date of event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"    public Event(Duke duke, String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"        super(duke, description);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"        this.from \u003d from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"        this.to \u003d to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \"+ to +\")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jamz903":41}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamz903":8}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"            duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"            duke.run();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamz903":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.jpeg\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"        handleBotInput();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"        String response \u003d duke.getResponse(userInput.getText());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jamz903"},"content":"                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jamz903"},"content":"                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jamz903"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jamz903"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jamz903"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jamz903"},"content":"    private void handleBotInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jamz903"},"content":"        String response \u003d \"Hello! I\u0027m Oranges.\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jamz903"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jamz903"},"content":"                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jamz903"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamz903":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"    protected Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"    TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"    private static final Pattern DATE_PATTERN_DASH \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"    private static final Pattern DATE_PATTERN_SLASH \u003d Pattern.compile(\"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} .*\\\\d{4}$\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    public Parser(Duke duke, TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"     * Writes task into Local Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"     * @param promptText    Task from user\u0027s input.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"     * @throws DukeException    Exception to be thrown when the input cannot be read.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"    public String createTask(String promptText) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"        if (promptText.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"                Task todo \u003d new Todo(duke, promptText.substring(5));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"                String returnStatement \u003d taskList.add(todo, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"                taskList.writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"                returnString \u003d returnStatement;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"            catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"                throw new DukeException(\"OOPS!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"        else if (promptText.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"                String[] parts \u003d promptText.split(\"/\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"                String date \u003d parts[1].substring(3);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"                if (DATE_PATTERN_DASH.matcher(date).matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"                    String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"                    Task deadline \u003d new Deadline(duke, parts[0].substring(9),","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"                            LocalDate.of(Integer.parseInt(dateParts[0]), Integer.parseInt(dateParts[1]), Integer.parseInt(dateParts[2])));","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"                    returnString \u003d taskList.add(deadline, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"                else if (DATE_PATTERN_SLASH.matcher(date).matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"                    String[] dateParts \u003d date.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"                    int day \u003d dateParts[0].length() \u003d\u003d 1 ? Integer.valueOf(\"0\" + dateParts[0]) : Integer.valueOf(dateParts[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jamz903"},"content":"                    int month \u003d dateParts[1].length() \u003d\u003d 1 ? Integer.valueOf(\"0\" + dateParts[1]) : Integer.valueOf(dateParts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jamz903"},"content":"                    String[] yearParts \u003d dateParts[2].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jamz903"},"content":"                    Task deadline \u003d new Deadline(duke, parts[0].substring(9),","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jamz903"},"content":"                            LocalDate.of(Integer.valueOf(yearParts[0]), month, day));","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jamz903"},"content":"                    returnString \u003d taskList.add(deadline, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jamz903"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jamz903"},"content":"                else {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jamz903"},"content":"                    Task deadline \u003d new Deadline(duke, parts[0].substring(9), parts[1].substring(2));","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jamz903"},"content":"                    returnString \u003d taskList.add(deadline, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jamz903"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jamz903"},"content":"                taskList.writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jamz903"},"content":"            catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jamz903"},"content":"                throw new DukeException(\"OOPS!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jamz903"},"content":"        else {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jamz903"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jamz903"},"content":"                String[] parts \u003d promptText.split(\"/\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jamz903"},"content":"                String dateParts \u003d parts[1].substring(5);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jamz903"},"content":"                int splitIndex \u003d dateParts.indexOf(\"/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jamz903"},"content":"                String startDate \u003d dateParts.substring(0, splitIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jamz903"},"content":"                String endDate \u003d dateParts.substring(splitIndex + 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"jamz903"},"content":"                if (DATE_PATTERN_DASH.matcher(startDate).matches() \u0026\u0026","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"jamz903"},"content":"                        DATE_PATTERN_DASH.matcher(endDate).matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"jamz903"},"content":"                    String[] startDateParts \u003d startDate.split(\"-\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jamz903"},"content":"                    String[] endDateParts \u003d endDate.split(\"-\");","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jamz903"},"content":"                    Task event \u003d new Event(duke, parts[0].substring(6),","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"jamz903"},"content":"                            LocalDate.of(Integer.parseInt(startDateParts[0]),","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"jamz903"},"content":"                            Integer.parseInt(startDateParts[1]), Integer.parseInt(startDateParts[2])),","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"jamz903"},"content":"                            LocalDate.of(Integer.parseInt(endDateParts[0]), Integer.parseInt(endDateParts[1]),","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"jamz903"},"content":"                                    Integer.parseInt(endDateParts[2])));","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"jamz903"},"content":"                    returnString \u003d taskList.add(event, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"jamz903"},"content":"                } else if (DATE_PATTERN_SLASH.matcher(startDate).matches() \u0026\u0026","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"jamz903"},"content":"                        DATE_PATTERN_SLASH.matcher(endDate).matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"jamz903"},"content":"                    String[] startDateParts \u003d startDate.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jamz903"},"content":"                    String[] endDateParts \u003d endDate.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jamz903"},"content":"                    int startDay \u003d startDateParts[0].length() \u003d\u003d 1 ? Integer.valueOf(\"0\" + startDateParts[0]) :","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"jamz903"},"content":"                            Integer.valueOf(startDateParts[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"jamz903"},"content":"                    int startMonth \u003d startDateParts[1].length() \u003d\u003d 1 ? Integer.valueOf(\"0\" + startDateParts[1]) :","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"jamz903"},"content":"                            Integer.valueOf(startDateParts[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"jamz903"},"content":"                    int endDay \u003d endDateParts[0].length() \u003d\u003d 1 ? Integer.valueOf(\"0\" + endDateParts[0]) :","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"jamz903"},"content":"                            Integer.valueOf(endDateParts[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"jamz903"},"content":"                    int endMonth \u003d endDateParts[1].length() \u003d\u003d 1 ? Integer.valueOf(\"0\" + endDateParts[1]) :","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"jamz903"},"content":"                            Integer.valueOf(endDateParts[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"jamz903"},"content":"                    String[] startYearParts \u003d startDateParts[2].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jamz903"},"content":"                    String[] endYearParts \u003d endDateParts[2].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jamz903"},"content":"                    Task event \u003d new Event(duke, parts[0].substring(6), LocalDate.of(Integer.valueOf(startYearParts[0]),","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"jamz903"},"content":"                            startMonth, startDay), LocalDate.of(Integer.valueOf(endYearParts[0]), endMonth, endDay));","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"jamz903"},"content":"                    returnString \u003d taskList.add(event, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"jamz903"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"jamz903"},"content":"                    Task event \u003d new Event(duke, parts[0].substring(6), startDate, endDate);","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"jamz903"},"content":"                    returnString \u003d taskList.add(event, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"jamz903"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"jamz903"},"content":"                taskList.writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"jamz903"},"content":"            } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"jamz903"},"content":"                throw new DukeException(\"OOPS!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jamz903"},"content":"        return returnString;","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jamz903"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"jamz903"},"content":"     * Marks task as done or undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"jamz903"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"jamz903"},"content":"     * @param promptText User\u0027s input to mark or unmark a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"jamz903"},"content":"     * @return","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"jamz903"},"content":"     * @throws DukeException Exception that is thrown when the task does not exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"jamz903"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"jamz903"},"content":"    public String markTask(String promptText) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"jamz903"},"content":"        String returnString;","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"jamz903"},"content":"            int i \u003d Integer.parseInt(promptText.substring(promptText.length() - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"jamz903"},"content":"            Task t \u003d taskList.get(i-1);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"jamz903"},"content":"            if (promptText.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"jamz903"},"content":"                returnString \u003d t.unmark();","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"jamz903"},"content":"                taskList.writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"jamz903"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"jamz903"},"content":"                returnString \u003d t.mark(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"jamz903"},"content":"                taskList.writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"jamz903"},"content":"            return returnString;","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"jamz903"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"jamz903"},"content":"            throw new DukeException(\"OOPS!! You must mark/unmark an index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"jamz903"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"jamz903"},"content":"            throw new DukeException(\"OOPS!! This index doesn\u0027t exist.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"jamz903"},"content":"    public String findTask(String promptText) {","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"jamz903"},"content":"        String findTask \u003d promptText.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"jamz903"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"jamz903"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"jamz903"},"content":"            if (taskList.get(i).description.contains(findTask)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"jamz903"},"content":"                returnString +\u003d i+1 + \". \" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"jamz903"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"jamz903"},"content":"        System.out.println(returnString);","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"jamz903"},"content":"        return \"Here are the matching tasks in your list: \\n\" + returnString;","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jamz903":150}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import java.io.File;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"    protected Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    public Storage(Duke duke, String filePath) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"        String[] splitFile \u003d filePath.split(\"/\",2);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"        File dir \u003d new File(splitFile[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"        boolean dirExists \u003d dir.exists();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"        if (!dirExists) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"            dir.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"            throw new DukeException(\"OOPS!! File cannot be created.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"            TaskList returnList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"            BufferedReader reader \u003d new BufferedReader(new InputStreamReader(new FileInputStream(\"./data/duke.txt\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"                if (line.trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"                    return returnList;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"                    Character done \u003d line.charAt(4);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"                    boolean isDone \u003d done.equals(\u0027X\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"                    if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"                        Todo todo \u003d new Todo(duke, line.substring(7));","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"                        if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"                            todo.mark(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"                        returnList.add(todo, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"                    } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"                        int index \u003d line.indexOf(\"(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jamz903"},"content":"                        int endIndex \u003d line.indexOf(\")\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jamz903"},"content":"                        Deadline deadline \u003d new Deadline(duke, line.substring(7, index - 1),","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jamz903"},"content":"                                line.substring(index + 5, endIndex));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jamz903"},"content":"                        if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jamz903"},"content":"                            deadline.mark(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jamz903"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jamz903"},"content":"                        returnList.add(deadline, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jamz903"},"content":"                    } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jamz903"},"content":"                        int index \u003d line.indexOf(\"(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jamz903"},"content":"                        int midIndex \u003d line.indexOf(\"to:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jamz903"},"content":"                        int endIndex \u003d line.indexOf(\")\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jamz903"},"content":"                        Event event \u003d new Event(duke, line.substring(7, index - 1), line.substring(index + 7,","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jamz903"},"content":"                                midIndex - 1),","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jamz903"},"content":"                                line.substring(midIndex + 4, endIndex));","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jamz903"},"content":"                        if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jamz903"},"content":"                            event.mark(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jamz903"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jamz903"},"content":"                        returnList.add(event, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jamz903"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jamz903"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jamz903"},"content":"            return returnList;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jamz903"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"jamz903"},"content":"            throw new DukeException(\"OOPS! File cannot be loaded.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jamz903":74}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"    protected Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"    public Task(Duke duke, String description) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"    public String mark(boolean flag) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"        if (!flag) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"            System.out.println(this);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + this;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"        return \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"    public String unmark() {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + this;","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jamz903":42}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import java.io.File;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"    public String add(Task task, boolean flag) {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"        if (flag) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"            return \"Got it. I\u0027ve added this task:\\n\" + task;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"        return \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"    public void writeToFile() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"            File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"            file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"            FileWriter writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"            throw new DukeException(\"OOPS! I cannot write to the file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"        return taskList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"    public String delete(Task task) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"        String removedTask \u003d task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"        taskList.remove(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"        writeToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + removedTask + \"\\n\" + this;","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jamz903"},"content":"    public String list() {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jamz903"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jamz903"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jamz903"},"content":"            returnString +\u003d i+1 + \". \" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jamz903"},"content":"        System.out.println(returnString);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jamz903"},"content":"        return returnString;","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jamz903"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jamz903"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jamz903"},"content":"        return \"Now you have \" + taskList.size() + \" task(s) in the list\";","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jamz903":63}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"    public Todo(Duke duke, String description) {","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"        super(duke, description);","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jamz903":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"    public Ui(Duke duke) {","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"    public String echo(String promptText, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(duke, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"        if (promptText.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"            return exit();","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"        else if (promptText.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"                System.out.println(\"Your task list is empty!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"                return \"Your task list is empty!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"            } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"                return list(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"        else if (promptText.startsWith(\"todo\") || promptText.startsWith(\"deadline\") || promptText.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"            return parser.createTask(promptText);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"        else if (promptText.startsWith(\"mark\") || promptText.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"            return parser.markTask(promptText);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"        else if (promptText.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"            return deleteTask(tasks,Integer.valueOf(promptText.substring(7)) - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"        else if (promptText.startsWith(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"            return parser.findTask(promptText);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"        else {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"    public String deleteTask(TaskList tasks, int i) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"            return tasks.delete(tasks.get(i));","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"            throw new DukeException(\"OOPS!! This task doesn\u0027t exist!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jamz903"},"content":"    public String list(TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jamz903"},"content":"        return tasks.list();","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jamz903"},"content":"    public String exit() {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jamz903"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jamz903"},"content":"        System.exit(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jamz903"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jamz903"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jamz903"},"content":"        System.out.println(\"OOPS! Loading error.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jamz903":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamz903":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamz903":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"    void testTodo() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"        parser.createTask(\"todo read book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"                \"[T][ ] read book\";","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"        assertEquals(result, outputStreamCaptor.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"                .trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"    void testDeadlineDash() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"        parser.createTask(\"deadline return book /by 2023-12-11\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"                \"[D][ ] return book  (by: Dec 11 2023)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"        assertEquals(result, outputStreamCaptor.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"                .trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"jamz903"},"content":"    void testDeadlineSlash() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"jamz903"},"content":"        parser.createTask(\"deadline return book /by 1/12/2022 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"jamz903"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jamz903"},"content":"                \"[D][ ] return book  (by: Dec 01 2022)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"jamz903"},"content":"        assertEquals(result, outputStreamCaptor.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"jamz903"},"content":"                .trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"jamz903"},"content":"    void testDeadlineOthers() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"jamz903"},"content":"        parser.createTask(\"deadline return book /by December 2022\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"jamz903"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"jamz903"},"content":"                \"[D][ ] return book  (by:  December 2022)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"jamz903"},"content":"        assertEquals(result, outputStreamCaptor.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"jamz903"},"content":"                .trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"jamz903"},"content":"    void testEventDash() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"jamz903"},"content":"        parser.createTask(\"event return book /from 2022-12-11 /to 2022-12-12\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"jamz903"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"jamz903"},"content":"                \"[E][ ] return book  (from: Dec 11 2022 to: Dec 12 2022)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"jamz903"},"content":"        assertEquals(result, outputStreamCaptor.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"jamz903"},"content":"                .trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"jamz903"},"content":"    void testEventSlash() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"jamz903"},"content":"        parser.createTask(\"event return book /from 11/12/2022 1800 /to 12/12/2022 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"jamz903"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"jamz903"},"content":"                \"[E][ ] return book  (from: Dec 11 2022 to: Dec 12 2022)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"jamz903"},"content":"        assertEquals(result, outputStreamCaptor.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"jamz903"},"content":"                .trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"jamz903"},"content":"    void testEventOthers() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"jamz903"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"jamz903"},"content":"        parser.createTask(\"event return book /from Tuesday /to Thursday\");","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"jamz903"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"jamz903"},"content":"                \"[E][ ] return book  (from: Tuesday to: Thursday)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"jamz903"},"content":"        assertEquals(result, outputStreamCaptor.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"jamz903"},"content":"                .trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jamz903":127}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"import duke.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jamz903"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jamz903"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jamz903"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jamz903"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jamz903"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jamz903"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jamz903"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jamz903"},"content":"    void testExceptionThrown() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jamz903"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamz903"},"content":"        Storage storage \u003d new Storage(duke, \"data/duke.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamz903"},"content":"        File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jamz903"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jamz903"},"content":"            file.delete();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jamz903"},"content":"            storage.load();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jamz903"},"content":"        });","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jamz903"},"content":"        String expectedMessage \u003d \"OOPS! File cannot be loaded.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jamz903"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jamz903"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"jamz903"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"jamz903"},"content":"    void testLoad() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jamz903"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jamz903"},"content":"        TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jamz903"},"content":"        TaskList actualList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jamz903"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jamz903"},"content":"        actualList.add(todo, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"jamz903"},"content":"        assertEquals(taskList.get(0), actualList.get(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jamz903"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jamz903"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jamz903"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jamz903":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamz903"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jamz903"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jamz903"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jamz903"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jamz903"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jamz903"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jamz903"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jamz903":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jamz903"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamz903":1,"-":20}}]
