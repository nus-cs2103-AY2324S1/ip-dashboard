[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saraozn":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saraozn":15,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"# Nicole the Chatbot","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"### Adding a to-do task: `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"Adding a to-do task to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"Format: `todo TASK`","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"- `todo read book`","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"- `todo do homework`","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"### Adding a task with deadline: `deadline` ","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"Adding a task with deadline to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"Format: `deadline TASK /by TIME`","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"- `TIME` should be in the format `yyyy-mm-dd`","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"- `deadline finish assignment 1 /by 2023-10-15 `","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"- `deadline project /by 2023-09-20`","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"Adding a event task to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"Format: `event TASK /from START_TIME /to END_TIME`","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"- `START_TIME` and `END_TIME` should be in the format `yyyy-mm-dd`","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"- `event hackathon /from 2023-10-20 /to 2023-10-21`","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"- `event sleep /from 2023-05-25 /to 2023-05-29`","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"### Mark a completed task: `mark`","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"Mark a selected task as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"- Mark the task at the specified `INDEX` as completed. The index refers to the index number shown in the task list. ","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"- `mark 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"### Unmark an uncompleted task: `unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"Mark a selected task as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"- Mark the task at the specified `INDEX` as uncompleted. The index refers to the index number shown in the task list. ","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"- `unmark 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"### Find a task: `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"List down tasks with the same keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"Format: `find TASK`","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"- `find read`","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"- `find homework`","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"saraozn"},"content":"### Edit a task: `edit`","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"saraozn"},"content":"Edit the description of a task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"saraozn"},"content":"Format: `edit INDEX TASK`","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"saraozn"},"content":"- Edits the task at the specified `INDEX`The index refers to the index number shown in the displayed person list. ","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"saraozn"},"content":"The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"saraozn"},"content":"- Description of the task will be updated to `TASK` instead","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"saraozn"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"saraozn"},"content":"- `edit 2 write`","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"saraozn"},"content":"- `edit 3 do work`","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"saraozn"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"saraozn"},"content":"Deletes a selected task.","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"saraozn"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"saraozn"},"content":"- Deletes the task at the specified `INDEX`. The index refers to the index number shown in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"saraozn"},"content":"  The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"saraozn"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"saraozn"},"content":"- `delete 2`","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"saraozn":71,"-":15}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"T | 0 | write","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"D | 0 | return book | Oct 15 2023","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"E | 0 | event | Oct 15 2023 | Oct 18 2023","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"saraozn":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Categorises task as deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    /** String to hold deadline of a task. */","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"     * To create a new task categorised as deadline.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"     * Returns string representation of the deadline task in the","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"     * format that will be outputted to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"     * @return String representation of deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":33}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"\t@FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"\tprivate Text dialog;","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"\t@FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"\tprivate ImageView displayPicture;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"\tprivate DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"\t\ttry {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"\t\t\tfxmlLoader.setController(this);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"\t\t\tfxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"\t\t\tfxmlLoader.load();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"\t\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"\t\tdialog.setText(text);","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"\t\tdisplayPicture.setImage(img);","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"\t/**","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"\t * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"\t */","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"\tprivate void flip() {","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"\t\tObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"\t\tCollections.reverse(tmp);","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"\t\tgetChildren().setAll(tmp);","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"\t\tsetAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"\tpublic static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"\t\treturn new DialogBox(text, img);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"\tpublic static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"\t\tvar db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"\t\tdb.flip();","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"\t\treturn db;","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"saraozn":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":" * Starts the chatbot","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"public class Duke {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"    /** To access file which stores the saved tasks. */","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    /** List to be updated as tasks are added or removed. */","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"    private final TaskList list;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"    private Exit exit;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"     * To be called when starting up chatbot. Shows welcome","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"     * message, starts reading user input and load tasks","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"     * from the file into tasklist.","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"     * @throws FileNotFoundException when file is missing","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"    public Duke() throws FileNotFoundException {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"        storage \u003d new Storage(\"./duke.txt\");","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"        list \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"        exit \u003d new Exit();","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"     * ALlows the chatbbot to run.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"    public String run(String input, TaskList list) {","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"                 message \u003d list.printList();","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseMark(input, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseUnmark(input, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseToDo(input, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseDeadline(input, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseEvent(input, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseDelete(input, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"            } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"                message \u003d \"slay\";","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"                exit.start();","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseFind(input, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"edit \")){","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"                message \u003d Parser.parseEdit(input, list);","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"            } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"saraozn"},"content":"            message \u003d e.getMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"saraozn"},"content":"        storage.save(list);","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"saraozn"},"content":"        return message;","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"saraozn"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"saraozn"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"saraozn"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"saraozn"},"content":"    String getResponse(String input){","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"saraozn"},"content":"        return run(input, list);","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saraozn":84}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Categorises task as Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    /** String to hold start time of an event */","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"    /** String to hold end time of an event */","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"     * To create a new task categorised as event","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"     * @param from Start time of an event task","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"     * @param to End time of an event task","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"     * Returns string representation of the event task in the","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"     * format that will be outputted to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"     * @return String representation of event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":37}},{"path":"src/main/java/duke/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Represents the different commands that the user can input.","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Exit {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"\tprivate Thread thread;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"\t/**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"\t * Creates an exit command.","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"\t */","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"\tpublic Exit() {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"\t\tthread \u003d new Thread(new Runnable() {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"\t\t\tpublic void run() {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\tThread.sleep(500);","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"\t\t\t\t} catch (InterruptedException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\te.printStackTrace();","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"\t\t\t\tSystem.exit(0);","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"\t\t\t}","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"\t\t});","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"\t/**","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"\t * Starts the exit command.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"\t */","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"\tpublic void start() {","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"\t\tthread.start();","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"saraozn":31}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"\t\tApplication.launch(Main.class, args);","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"saraozn":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"\tprivate Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"\tpublic Main() throws FileNotFoundException {","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"\t@Override","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"\tpublic void start(Stage stage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"\t\ttry {","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"\t\t\tAnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"\t\t\tScene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"\t\t\tstage.setScene(scene);","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"\t\t\tfxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"\t\t\tstage.show();","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"\t\t\tfxmlLoader.\u003cMainWindow\u003egetController().showWelcome();","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"\t\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"saraozn":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"\t@FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"\tprivate ScrollPane scrollPane;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"\t@FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"\tprivate VBox dialogContainer;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"\t@FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"\tprivate TextField userInput;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"\tprivate Duke duke;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"\tprivate final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"\tprivate final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"\t@FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"\tpublic void initialize() {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"\t\tscrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"\tpublic void setDuke(Duke d) {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"\t\tduke \u003d d;","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"\t/**","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"\t * Prints welcome message when chatbot is started.","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"\t */","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"\tpublic void showWelcome() {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"\t\tString logo \u003d \"\\n\" +","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\t\t\t\t   \"  _   _                  ____   U  ___ u   _     U _____ u \\n\" +","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\t\t\t\t   \" | \\\\ |\\\"|       ___    U /\\\"___|   \\\\/\\\"_ \\\\/  |\\\"|    \\\\| ___\\\"|/ \\n\" +","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\t\t\t\t   \"\u003c|  \\\\| |\u003e     |_\\\"_|   \\\\| | u     | | | |U | | u   |  _|\\\"   \\n\" +","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\t\t\t\t   \"U| |\\\\  |u      | |     | |/__.-,_| |_| | \\\\| |/__  | |___   \\n\" +","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\t\t\t\t   \" |_| \\\\_|     U/| |\\\\u    \\\\____|\\\\_)-\\\\___/   |_____| |_____|  \\n\" +","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\t\t\t\t   \" ||   \\\\\\\\,-.-,_|___|_,-._// \\\\\\\\      \\\\\\\\     //  \\\\\\\\  \u003c\u003c   \u003e\u003e  \\n\" +","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"\t\t\t\t\t\t\t\t   \" (_\\\")  (_/ \\\\_)-\u0027 \u0027-(_/(__)(__)    (__)   (_\\\")(\\\"_)(__) (__) \\n\";","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"\t\tdialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"\t\t\t\tDialogBox.getDukeDialog(logo + \"Hello! I\u0027m Nicole\\n\" + \"What can I do for you?\", dukeImage)","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"\t\t);","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"\t/**","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"\t * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"\t * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"\t */","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"\t@FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"\tprivate void handleUserInput() {","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"\t\tString input \u003d userInput.getText();","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"\t\tString response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"\t\tdialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"\t\t\t\tDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"\t\t\t\tDialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"\t\t);","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"\t\tuserInput.clear();","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"saraozn":67}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import exceptions.OutOfRangeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":" * Converts user command into a Task","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     * Takes in a deadline task detail as input to add a deadline task to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"     * @param list List for task to be added into.","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"     * @return Message to user when task is successfully added.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"    public static String parseDeadline(String input, TaskList list) {","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"            if (input.substring(9).isBlank()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"            String[] split \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"            String description \u003d split[0];","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"            LocalDate date \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"            String by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyy\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"            return list.addTask(new Deadline(description, by));","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"            return \"oOps invalid time input\";","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"     * Takes in to-do details as input to add a to-do task to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"     * @param list List for task to be added into.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"     * @return Message to user when task is successfully added.","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"    public static String parseToDo(String input, TaskList list) {","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"            String description \u003d input.substring(5);","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"            return list.addTask(new Todo(description));","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"     * Takes in event details as input to add an event task to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"     * @param list List for task to be added into.","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"     * @return Message to user when task is successfully added.","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"saraozn"},"content":"    public static String parseEvent(String input, TaskList list) {","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"saraozn"},"content":"            if (input.substring(6).isBlank()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"saraozn"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"saraozn"},"content":"            String[] split \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"saraozn"},"content":"            String description \u003d split[0];","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"saraozn"},"content":"            String[] fromTo \u003d split[1].split(\" /to \");","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"saraozn"},"content":"            LocalDate startDate \u003d LocalDate.parse(fromTo[0]);","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"saraozn"},"content":"            LocalDate endDate \u003d LocalDate.parse(fromTo[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"saraozn"},"content":"            String from \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyy\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"saraozn"},"content":"            String to \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyy\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"saraozn"},"content":"            return list.addTask(new Event(description, from, to));","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"saraozn"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"saraozn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"saraozn"},"content":"            return \"oOps invalid time input\";","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"saraozn"},"content":"     * Takes in an index as input to delete the corresponding task from the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"saraozn"},"content":"     * @param list List for task to be deleted from.","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"saraozn"},"content":"     * @return Message to user when task is successfully deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"saraozn"},"content":"    public static String parseDelete(String input, TaskList list) {","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"saraozn"},"content":"            int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"saraozn"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d list.count) {","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"saraozn"},"content":"                return list.deleteTask(index);","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"saraozn"},"content":"            } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"saraozn"},"content":"                throw new OutOfRangeException();","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"saraozn"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"saraozn"},"content":"     * Takes in an index as input to mark the corresponding task from the list","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"saraozn"},"content":"     * as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"saraozn"},"content":"     * @param list List for task to be marked.","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"saraozn"},"content":"     * @return Message to user when task is successfully marked","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"saraozn"},"content":"    public static String parseMark(String input, TaskList list) {","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"saraozn"},"content":"            int num \u003d input.charAt(5) - \u00270\u0027 - 1;","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"saraozn"},"content":"            if (num \u003e\u003d 0 \u0026\u0026 num \u003c list.count) {","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"saraozn"},"content":"                list.getTask(num).markAsDone();","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"saraozn"},"content":"                return \"Nice! I\u0027ve marked this task done:\\n\" + list.getTask(num);","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"saraozn"},"content":"            } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":121,"author":{"gitId":"saraozn"},"content":"                throw new OutOfRangeException();","lastModifiedDate":"2023-09-17"},{"lineNumber":122,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":123,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":124,"author":{"gitId":"saraozn"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":127,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":128,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"saraozn"},"content":"     * Takes in an index as input to unmark the corresponding task from the list","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"saraozn"},"content":"     * as uncompleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"saraozn"},"content":"     * @param list List for task to be unmarked.","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"saraozn"},"content":"     * @return Message to user when task is successfully unmarked","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"saraozn"},"content":"    public static String parseUnmark(String input, TaskList list) {","lastModifiedDate":"2023-09-17"},{"lineNumber":138,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":139,"author":{"gitId":"saraozn"},"content":"            int num \u003d input.charAt(7) - \u00270\u0027 - 1;","lastModifiedDate":"2023-09-17"},{"lineNumber":140,"author":{"gitId":"saraozn"},"content":"            if (num \u003e\u003d 0 \u0026\u0026 num \u003c list.count) {","lastModifiedDate":"2023-09-17"},{"lineNumber":141,"author":{"gitId":"saraozn"},"content":"                list.getTask(num).markAsUndone();","lastModifiedDate":"2023-09-17"},{"lineNumber":142,"author":{"gitId":"saraozn"},"content":"                return \"OK, I\u0027ve marked this task as not done yet:\\n\" + list.getTask(num);","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"saraozn"},"content":"            } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":144,"author":{"gitId":"saraozn"},"content":"                throw new OutOfRangeException();","lastModifiedDate":"2023-09-17"},{"lineNumber":145,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":146,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":147,"author":{"gitId":"saraozn"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":148,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":149,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":150,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":151,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"saraozn"},"content":"     * Takes in a keyword as input to find the tasks with matching keywords.","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"saraozn"},"content":"     * @param list List for tasks to be found.","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"saraozn"},"content":"     * @return List of tasks with the same keyword","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"saraozn"},"content":"    public static String parseFind(String input, TaskList list) {","lastModifiedDate":"2023-09-17"},{"lineNumber":159,"author":{"gitId":"saraozn"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2023-09-17"},{"lineNumber":160,"author":{"gitId":"saraozn"},"content":"        return list.findTask(description, list);","lastModifiedDate":"2023-09-17"},{"lineNumber":161,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":162,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"saraozn"},"content":"     * Takes in an index as input to edit the corresponding task from the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"saraozn"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"saraozn"},"content":"     * @param list List for task to be edited.","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"saraozn"},"content":"     * @return Message to user when task is successfully edited","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"saraozn"},"content":"    public static String parseEdit(String input, TaskList list) {","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"saraozn"},"content":"            int num \u003d input.charAt(5) - \u00270\u0027 - 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"saraozn"},"content":"            if (num \u003e\u003d 0 \u0026\u0026 num \u003c list.count) {","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"saraozn"},"content":"                String edit \u003d input.substring(7);","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"saraozn"},"content":"                list.getTask(num).description \u003d edit;","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"saraozn"},"content":"                return \"Ok! I\u0027ve edited this task :\\n\" + (num + 1) + \". \" + list.getTask(num);","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"saraozn"},"content":"            } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"saraozn"},"content":"                throw new OutOfRangeException();","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"saraozn"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-19"},{"lineNumber":183,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":184,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":186}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":" * Class to store the list in text file and retrieve tasks from the same file.","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"    /** Store filepath to text file used to store the tasks. */","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"    private final String filepath;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    /** Takes in filepath to store tasklist. */","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"     * Loads tasks stored in the file to recreate the tasklist,","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"     * else it will return an empty new TaskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"     * @return Original tasklist.","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"     * @throws FileNotFoundException When file is missing.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"        ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"                String taskString \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"                Task task \u003d TaskParser.parseTask(taskString);","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"                dukeList.add(task);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"        return dukeList;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"     * Save the tasklist into the file after exiting chatbot.","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"     * @param list TaskList to be saved.","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"        try (PrintWriter out \u003d new PrintWriter(filepath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"            for (int i \u003d 0; i \u003c list.count; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"                String taskString \u003d TaskParser.taskToString(list.getTask(i)); //convert task to string","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"                out.println(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saraozn":59}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Tasks to be added to tasklist.","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"    /** Description of task. */","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"    /** To access whether a task is completed. */","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"     * Task to be added to list.","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"     * Get icon depending on whether the task is completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"     * @return \"X\" for completed task, \" \" for uncompleted task.","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"     * Get icon depending on whether the task is completed,","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"     * in storage form.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"     * @return \"1\" for completed task, \"0\" for uncompleted task.","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"    public String getStatusToStore() {","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"     * To mark a task as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"     * To mark a task as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"     * Gets String of the task with its corresponding status.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"     * @return String of status and description of task.","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":" * Contains the task list with operations such as","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":" * add or delete to alter the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"    /** List of tasks. */","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    /** Number of tasks in the list. */","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"    int count;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"        this.count \u003d list.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"     * Prints the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"    public String printList() {","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"        StringBuilder fullList \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"            fullList.append(i + 1).append(\". \").append(list.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"        return fullList.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"     * Add tasks to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"     * @param task Task to be added into the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"        this.list.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"        count++;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"                       + list.get(count - 1) + \"\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"                       + \"Now you have \" + (count) + \" tasks in the list.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"     * Delete tasks from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"     * @param index Index of the item to be removed from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"        Task deletedTask \u003d list.get(index);","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"        count--;","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"                       + deletedTask + \"\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"                       + \"Now you have \" + count + \" tasks in the list\";","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"     * Gets the task from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"     * @param index Index of item to be accessed.","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"     * @return Task to be accessed.","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"saraozn"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"saraozn"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"saraozn"},"content":"            if (index \u003d\u003d i) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"saraozn"},"content":"                return list.get(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"saraozn"},"content":"        return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"saraozn"},"content":"     * Finds tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"saraozn"},"content":"     * @param input task to be found.","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"saraozn"},"content":"     * @param list List in which the task is to be found.","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"saraozn"},"content":"     * @return Found tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"saraozn"},"content":"    public String findTask(String input, TaskList list) {","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"saraozn"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"saraozn"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"saraozn"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"saraozn"},"content":"            if (task.toString().contains(input)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"saraozn"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"saraozn"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"saraozn"},"content":"            output \u003d new StringBuilder(\"Oops, there are no matching tasks in your list\");","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"saraozn"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"saraozn"},"content":"            for(int j \u003d 0; j \u003c foundTasks.size(); j++) {","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"saraozn"},"content":"                output.append(j + 1).append(\".\")","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"saraozn"},"content":"                        .append(foundTasks.get(j).toString())","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"saraozn"},"content":"                        .append(\"\\n\");;","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"saraozn"},"content":"        return output.toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":101}},{"path":"src/main/java/duke/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Convert task list between file format and display format.","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class TaskParser {","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"\t/**","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"\t * Convert tasks in file to remake the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"\t *","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"\t * @param taskString Tasks in String from storage file.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"\t * @return\tList of tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"\t */","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"\tpublic static Task parseTask(String taskString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"\t\tString[] parts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"\t\tString type \u003d parts[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"\t\tassert !type.equals(\" \") : \"Task type is missing\";","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"\t\tboolean isDone \u003d Integer.parseInt(parts[1]) \u003d\u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"\t\tString description \u003d parts[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"\t\tswitch (type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"\t\tcase \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"\t\t\treturn new Todo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"\t\tcase \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"\t\t\tString deadline \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"\t\t\treturn new Deadline(description, deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"\t\tcase \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"\t\t\tString from \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"\t\t\tString to \u003d parts[4];","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"\t\t\treturn new Event(description, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"\t\tdefault:","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"\t\t\tthrow new IllegalArgumentException(\"Invalid task type: \" + type);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"\t\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"\t/**","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"\t * To convert tasks from the list to strings to be stored in the file.","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"\t *","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"\t * @param task Tasks from the list to be stored.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"\t * @return String converted from task list in storage form.","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"\t */","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"\tpublic static String taskToString(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"\t\tStringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"\t\tchar type \u003d task.toString().charAt(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"\t\tsb.append(type).append(\" | \");","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"\t\tsb.append(task.getStatusToStore()).append(\" | \");","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"\t\tsb.append(task.description);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"\t\tif (task instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"\t\t\tDeadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"\t\t\tsb.append(\" | \").append(deadlineTask.by);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"\t\t} else if (task instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"\t\t\tEvent eventTask \u003d (Event) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"\t\t\tsb.append(\" | \").append(eventTask.from).append(\" | \").append(eventTask.to);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"\t\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"\t\treturn sb.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saraozn":57}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Categorise task as a to-do.","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"     * Returns string representation of the to-do task in the","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"     * format that will be outputted to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"     * @return String representation of to-do task.","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":23}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":7}},{"path":"src/main/java/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"        super(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":7}},{"path":"src/main/java/exceptions/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class OutOfRangeException extends DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"\tpublic OutOfRangeException() {","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"\t\tsuper(\"OOPS!!! Invalid task.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"saraozn":8}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":7}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"saraozn":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"saraozn":20}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    public void toDoTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"        Parser.parseToDo(\"todo read\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[T][ ] read\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"    public void deadlineTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"        Parser.parseDeadline(\"deadline return book /by 2023-10-15\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 15 2023)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    public void eventTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"        Parser.parseEvent(\"event book event /from 2023-10-20 /to 2023-10-21\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[E][ ] book event (from: Oct 20 2023 to: Oct 21 2023)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"    public void markTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"        Parser.parseEvent(\"event book event /from 2023-10-20 /to 2023-10-21\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"        Parser.parseMark(\"mark 1\", list);","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[E][X] book event (from: Oct 20 2023 to: Oct 21 2023)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"        Parser.parseEvent(\"event book event /from 2023-10-20 /to 2023-10-21\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"        Parser.parseMark(\"mark 1\", list);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"        Parser.parseUnmark(\"unmark 1\", list);","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[E][ ] book event (from: Oct 20 2023 to: Oct 21 2023)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"    public void deleteTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"        Parser.parseEvent(\"event book event /from 2023-10-20 /to 2023-10-21\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"        Parser.parseToDo(\"todo read\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"        Parser.parseDelete(\"delete 1\", list);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[T][ ] read\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"    public void editTest() {","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"        Parser.parseEvent(\"event book event /from 2023-10-20 /to 2023-10-21\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"        Parser.parseToDo(\"todo read\",list);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"        Parser.parseEdit(\"edit 2 write\", list);","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[T][ ] write\",list.getTask(1).toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":61}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"\t@Test","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"\tpublic void addTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"\t\tTaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"\t\tlist.addTask(new Todo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"\t\tassertEquals(\"[T][ ] read book\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"\t@Test","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"\tpublic void deleteTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"\t\tTaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"\t\tlist.addTask(new Todo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"\t\tlist.addTask(new Todo(\"study\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"\t\tlist.deleteTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"\t\tassertEquals(\"[T][ ] study\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saraozn":1,"-":20}}]
