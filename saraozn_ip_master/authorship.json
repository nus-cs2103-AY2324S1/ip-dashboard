[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saraozn":2,"-":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"D | 0 | return book | Oct 15 2023","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"E | 0 | book event | 2pm | 4pm","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"saraozn":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Categorises task as deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"     * Returns string representation of the deadline task in the","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"     * format that will be outputted to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     * @return String representation of deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":" * Starts the chatbot","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"    private final TaskList list;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    public Duke(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"//        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"        list \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"//        } catch (Exceptions.DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"//            ui.showLoadingError();","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"//            tasks \u003d new duke.TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"//        }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"     * ALlows the chatbbot to run","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"    public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"            String input \u003d ui.getUserCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"            parser.parse(input, list);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"            isExit \u003d ui.isExit(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"        storage.save(list);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"     * Executes Duke","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"     * @param args","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saraozn":49,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":7}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"        super(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Categorises task as Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     * Returns string representation of the event task in the","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"     * format that will be outputted to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"     * @return String representation of event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":27}},{"path":"src/main/java/duke/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class OutOfRangeException extends DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"\tpublic OutOfRangeException() {","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"\t\tsuper(\"☹ OOPS!!! Invalid task.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"saraozn":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":" * Converts user command into a Task","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"     * Converts user command into Task and adds it into the list","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"     * @param input User command","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"     * @param list Task is added into list","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    public static void parse(String input, TaskList list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"                list.printList();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"                int num \u003d input.charAt(5) - \u00270\u0027 - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"                if (num \u003e\u003d 0 \u0026\u0026 num \u003c list.count) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"                    list.getTask(num).markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"                    System.out.println(list.getTask(num));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"                    System.out.println(\"Invalid\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"                int num \u003d input.charAt(7) - \u00270\u0027 - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"                if (num \u003e\u003d 0 \u0026\u0026 num \u003c list.count) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"                    list.getTask(num).markAsUndone();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"                    System.out.println(list.getTask(num));","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"                    System.out.println(\"Invalid\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"                String des \u003d input.substring(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"                if (des.isBlank()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"                list.addTask(new Todo(des));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"                if (input.substring(9).isBlank()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"                String[] split \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"                String des \u003d split[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"                LocalDate date \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"                String by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyy\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"                list.addTask(new Deadline(des, by));","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"                if (input.substring(6).isBlank()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"                String[] split \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"                String des \u003d split[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"                String[] fromto \u003d split[1].split(\" /to \");","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"                String from \u003d fromto[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"                String to \u003d fromto[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"saraozn"},"content":"                list.addTask(new Event(des, from, to));","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"saraozn"},"content":"                int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"saraozn"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d list.count) {","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"saraozn"},"content":"                    list.deleteTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"saraozn"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"saraozn"},"content":"                    throw new OutOfRangeException();","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"saraozn"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"saraozn"},"content":"            } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"saraozn"},"content":"                System.out.println(\"slay\");","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"saraozn"},"content":"            } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"saraozn"},"content":"                String description \u003d input.substring(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"saraozn"},"content":"                list.findTask(description, list);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"saraozn"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"saraozn"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"saraozn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"saraozn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"saraozn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"saraozn"},"content":"            System.out.println(\"OOps invalid time input\");","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":88}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    private final String filepath;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"        ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"            try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"                    String task \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"                    Task dtask \u003d Taskparser.parseTask(task); //convert format of tasks in file to list","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"                    dukeList.add(dtask);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"        return dukeList;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"        try (PrintWriter out \u003d new PrintWriter(filepath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"            for (int i \u003d 0; i \u003c list.count; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"                String taskString \u003d Taskparser.taskToString(list.getTask(i)); //convert task to string","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"                out.println(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saraozn":43}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"    protected String cat;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"        this.cat \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":31}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":" * Contains the task list with operations such as","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":" * add or delete to alter the list","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    int count;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"        this.count \u003d list.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"     * Prints the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"    public void printList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"            System.out.println((i + 1) + \".\" + list.get(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"     * Add tasks to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"     * @param task Task to be added into the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"        this.list.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"        System.out.println(list.get(count));","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"        count++;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"     * Delete tasks from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"     * @param index Index of the item to be removed from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"        System.out.println(list.get(index));","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"        count--;","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"saraozn"},"content":"     * Gets the task from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"saraozn"},"content":"     * @param index Index of item to be accessed","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"saraozn"},"content":"     * @return Task to be accessed","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"saraozn"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"saraozn"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"saraozn"},"content":"            if (index \u003d\u003d i) {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"saraozn"},"content":"                return list.get(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"saraozn"},"content":"        return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"saraozn"},"content":"    public void findTask(String input, TaskList list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"saraozn"},"content":"        int[] indexList \u003d new int[100];","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"saraozn"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"saraozn"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"saraozn"},"content":"            if (list.getTask(i).toString().contains(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"saraozn"},"content":"                indexList[counter] \u003d i;","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"saraozn"},"content":"                counter++;","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"saraozn"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"saraozn"},"content":"            System.out.println(\"Oops, there are no matching tasks in your list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"saraozn"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"saraozn"},"content":"            for(int j \u003d 0; j \u003c counter; j++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"saraozn"},"content":"                System.out.println((indexList[j] + 1) + \".\" + list.getTask(indexList[j]).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"saraozn"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":88}},{"path":"src/main/java/duke/Taskparser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"public class Taskparser {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"    public static Task parseTask(String taskString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"        String[] parts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"        boolean isDone \u003d Integer.parseInt(parts[1]) \u003d\u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"        switch (type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"        case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"            return new Todo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"        case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"            String deadline \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"            return new Deadline(description, deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"        case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"             String from \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"             String to \u003d parts[4];","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"             return new Event(description, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"             throw new IllegalArgumentException(\"Invalid task type: \" + type);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"    public static String taskToString(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"\t\tchar type \u003d task.toString().charAt(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"\t\tsb.append(type).append(\" | \");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"\t\tsb.append(task.isDone ? \"1\" : \"0\").append(\" | \");","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"\t\tsb.append(task.description);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"\t\tif (task instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"\t\t\tDeadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"\t\t\tsb.append(\" | \").append(deadlineTask.by);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"\t\t} else if (task instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"\t\t\tEvent eventTask \u003d (Event) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"\t\t\tsb.append(\" | \").append(eventTask.from).append(\" | \").append(eventTask.to);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"\t\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"\t\treturn sb.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saraozn":42}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":" * Categorise task as a todo","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"     * Returns string representation of the todo task in the","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"     * format that will be outputted to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"     * @return String representation of todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":23}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"     * Prints welcome message when chatbot is started.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"\\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"                                   \"  _   _                  ____   U  ___ u   _     U _____ u \\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"                                   \" | \\\\ |\\\"|       ___    U /\\\"___|   \\\\/\\\"_ \\\\/  |\\\"|    \\\\| ___\\\"|/ \\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"                                   \"\u003c|  \\\\| |\u003e     |_\\\"_|   \\\\| | u     | | | |U | | u   |  _|\\\"   \\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"                                   \"U| |\\\\  |u      | |     | |/__.-,_| |_| | \\\\| |/__  | |___   \\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"                                   \" |_| \\\\_|     U/| |\\\\u    \\\\____|\\\\_)-\\\\___/   |_____| |_____|  \\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"                                   \" ||   \\\\\\\\,-.-,_|___|_,-._// \\\\\\\\      \\\\\\\\     //  \\\\\\\\  \u003c\u003c   \u003e\u003e  \\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"                                   \" (_\\\")  (_/ \\\\_)-\u0027 \u0027-(_/(__)(__)    (__)   (_\\\")(\\\"_)(__) (__) \\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"Hello! I\u0027m Nicole\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"//    public boolean blank(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"//        return input.trim().isEmpty();","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"//    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"     * Scans user command and returns the command as a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"     * @return user command a s string.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"        String inData \u003d scan.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"//        while (blank(inData)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"//            inData \u003d scan.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"//        }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"        return inData;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"     * Checks if user command is prompting exit.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"     * @param input user command as string.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"     * @return true is user is prompting exit and false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"    public boolean isExit(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":53}},{"path":"src/main/java/duke/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":6}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"    public void toDoTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"todo read\",list);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[T][ ] read\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"    public void deadlineTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"deadline return book /by 2023-10-15\",list);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 15 2023)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"    public void eventTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"event book event /from 1pm /to 2pm\",list);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[E][ ] book event (from: 1pm to: 2pm)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"saraozn"},"content":"    public void markTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"event book event /from 1pm /to 2pm\",list);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"mark 1\", list);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[E][X] book event (from: 1pm to: 2pm)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"saraozn"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"event book event /from 1pm /to 2pm\",list);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"mark 1\", list);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"unmark 1\", list);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[E][ ] book event (from: 1pm to: 2pm)\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"saraozn"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"saraozn"},"content":"    public void deleteTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"saraozn"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"event book event /from 1pm /to 2pm\",list);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"todo read\",list);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"saraozn"},"content":"        Parser.parse(\"delete 1\", list);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"saraozn"},"content":"        assertEquals(\"[T][ ] read\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"saraozn"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":51}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke; //if packages are matched, the test class can access package-private members of the target class","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"//    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"//    public void storageTest1() throws FileNotFoundException {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"//        Storage store \u003d new Storage(\"storageTest.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"//        TaskList list \u003d new TaskList(store.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"//\t\tSystem.out.println(list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"//        assertEquals(\"[T][ ] read book\", list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"//    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"//","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"//\tpublic void saveTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"//\t\tArrayList\u003cTask\u003e arr \u003d new ArrayList {new Todo(\"read book\"), new Deadline(\"return book\", \"2023\")};","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"//\t\tTaskList list \u003d new TaskList {new Todo(\"read book\"), new Deadline(\"return book\", \"2023\")};","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"//\t\tStorage store \u003d new Storage(\"storage.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"//","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"//\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":25}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"\t@Test","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"\tpublic void addTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"\t\tTaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"saraozn"},"content":"\t\tlist.addTask(new Todo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"saraozn"},"content":"\t\tassertEquals(\"[T][ ] read book\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"saraozn"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"saraozn"},"content":"\t@Test","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"\tpublic void deleteTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"saraozn"},"content":"\t\tTaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"saraozn"},"content":"\t\tlist.addTask(new Todo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"saraozn"},"content":"\t\tlist.addTask(new Todo(\"study\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"saraozn"},"content":"\t\tlist.deleteTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"saraozn"},"content":"\t\tassertEquals(\"[T][ ] study\",list.getTask(0).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"saraozn"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"saraozn"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":25}},{"path":"src/test/storageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"D | 0 | return books | Oct 15 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"E | 0 | book event | Aug 1| Aug 2","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"saraozn":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saraozn"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"saraozn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"saraozn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"saraozn"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"saraozn"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"saraozn"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"saraozn"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"saraozn"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"saraozn"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"saraozn"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"saraozn"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"saraozn"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"saraozn":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"saraozn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saraozn":1,"-":20}}]
