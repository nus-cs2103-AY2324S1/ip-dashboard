[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JeremyYong128":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"JeremyYong128":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"# JermBot User Guide","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"### Interactive Chatbot","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"The chatbot listens to your commands and carries out the corresponding actions.","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"### Multiple Types of Tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"Tasks can be classified as Todos, Deadlines and Events, each with different properties. ","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"Lists out all the tasks in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"`list`","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"A list of all tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"1. [E][ ] sleep (from: now to: later)","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"2. [D][ ] cook (by: tonight)","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"3. [T][ ] clean","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"### `todo` - Add Todo","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"Adds a Todo to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"`todo clean`","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"Adds the Todo to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"Haha now you have this task to do:","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"  [T][ ] clean","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"In total you have 1 things to do.","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"### `deadline` - Add Deadline","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"Adds a Deadline to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"`deadline cook /by tonight`","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"Adds the Deadline to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"Haha now you have this task to do:","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"  [D][ ] cook (by: tonight)","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"In total you have 1 things to do.","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"### `event` - Add Event","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"Adds an Event to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"`event sleep /from now /to tomorrow`","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"Adds the Event to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"Haha now you have this task to do:","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"  [E][ ] sleep (from: now to: tomorrow)","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"In total you have 1 things to do.","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"### `mark` - Mark Task","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"Marks a task as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"`mark 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"Marks the 1st task in the list as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"Ok good job lor you finished this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"  [T][X] clean","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"### `unmark` - Unmark Task","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"Marks a task as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"`umark 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"JeremyYong128"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"JeremyYong128"},"content":"Marks the 1st task in the list as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"JeremyYong128"},"content":"Wah why you never do this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"  [T][ ] clean","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"JeremyYong128"},"content":"### `find` - Find Task","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"Find tasks that start with the substring passed in the command.","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"JeremyYong128"},"content":"`find cle`","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"JeremyYong128"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"JeremyYong128"},"content":"Displays the list of all tasks that start with the given substring.","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"JeremyYong128"},"content":"1. [T][X] clean","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"JeremyYong128"},"content":"### `bye` - Close JermBot","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"JeremyYong128"},"content":"Stops operation of the chatbot and saves task list into storage.","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"JeremyYong128"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"JeremyYong128"},"content":"`bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"JeremyYong128"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"JeremyYong128"},"content":"Displays goodbye greeting.","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"JeremyYong128"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"JeremyYong128"},"content":"Good riddance.","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"JeremyYong128":131,"-":20}},{"path":"src/main/java/duke/DateManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"public class DateManager {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    private final static String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    private final static String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    private final static String DATETIME_OUTPUT_FORMAT \u003d \"d MMMM yyyy h:mma\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    private final static String DATETIME_STORAGE_FORMAT \u003d \"ddMMyyyy HHmm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    private final static String STORAGE_DATE_FORMAT \u003d \"ddMMyyyy\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"     * Parses the date and time strings into a dateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"     * @param dateString String representing the date.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"     * @param timeString String representing the time.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     * @return A dateTime object with the specified date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    public static LocalDateTime parseDateString(String dateString, String timeString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        LocalDate date;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        LocalTime time;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        LocalDateTime dateTime \u003d  null;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"            date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"            time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"            dateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error in parsing date string: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"     * Parses the date and time strings from storage into a dateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"     * @param dateString String representing the date.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     * @param timeString String representing the time.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     * @return A dateTime object with the specified date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    public static LocalDateTime parseStorageDateString(String dateString, String timeString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        LocalDate date;","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        LocalTime time;","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        LocalDateTime dateTime \u003d  null;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"            date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(STORAGE_DATE_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"            time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"            dateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error in parsing date string: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the String representation of a dateTime object in the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"     * @param dateTime The dateTime object to be converted into a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"     * @return A String representing the dateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(DATETIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the String representation of a dateTime object in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"     * @param dateTime The dateTime object to be converted into a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"     * @return A String representing the dateTime object in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"    public static String dateTimeToStringStorage(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(DATETIME_STORAGE_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":79}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"    private String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Deadline, if it is not supplied with a dateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"     * @param by Description of when the Deadline is due.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Deadline, if it is not supplied with a dateTime but its","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"     * done status is specified.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"     * @param by Description of when the Deadline is due.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"     * @param isDone Boolean representing whether the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, String by, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Deadline if it is supplied with a dateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"     * @param dateTime dateTime object representing when the Deadline is due.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Deadline with date and time","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Deadline if it is supplied with a dateTime and done status.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"     * @param dateTime dateTime object representing when the Deadline is due.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"     * @param isDone Boolean representing whether the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, LocalDateTime dateTime, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the String representation of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"        if (by \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + DateManager.dateTimeToString(dateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the String representation of the Deadline in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Deadline in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"    public String toStringStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        String nameField \u003d this.getName();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"        String isDoneField \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"        String deadlineField \u003d by \u003d\u003d null ? DateManager.dateTimeToStringStorage(this.dateTime) : by;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        return \"D|\" + isDoneField + \"|\" + nameField + \"|\" + deadlineField;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"     * Checks if this Deadline is equal to another object.","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"     * @param obj The other object being compared to.","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"     * @return true if the other object is a Deadline with the same string representation, false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"        if (!(obj instanceof Deadline)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"        Deadline otherDeadline \u003d (Deadline) obj;","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"        return this.toString().equals(otherDeadline.toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":102}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"JeremyYong128":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    private Storage storage \u003d new Storage(\"data/list.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    private Tasklist tasks \u003d new Tasklist(storage.getTasks());","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    public Duke() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"     * Generates a response based on user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"     * @param input User input string.","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"     * @return Duke\u0027s response string.","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        return Parser.parseResponse(input, tasks, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JeremyYong128":36,"-":2}},{"path":"src/main/java/duke/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class EmptyTodoException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the String representation of the Exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        return \"Description of Todo cannot be empty.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    private String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    private String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"     * @param from Starting time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"     * @param to Ending time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Event if a done status is supplied.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"     * @param from Starting time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"     * @param to Ending time of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"     * @param isDone Boolean representing whether the Event is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public Event(String name, String from, String to, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the String representation of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the String representation of the Event in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Event in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    public String toStringStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        String nameField \u003d this.getName();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        String isDoneField \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"        String fromField \u003d this.from;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        String toField \u003d this.to;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        return \"E|\" + isDoneField + \"|\" + nameField + \"|\" + fromField + \"|\" + toField;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"     * Checks if this Event is equal to another object.","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"     * @param obj The other object being compared to.","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"     * @return true if the other object is a Event with the same string representation, false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"        if (!(obj instanceof Event)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"        Event otherEvent \u003d (Event) obj;","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"        return this.toString().equals(otherEvent.toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":76}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"JeremyYong128":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"JeremyYong128":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bullets.jpg\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tkl.jpg\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"                DialogBox.getDukeDialog(\"I\u0027m JermBot. What you want?\", dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        String response \u003d duke.getResponse(userInput.getText());","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"JeremyYong128":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"     * Parses the response given by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"     * @param s The response of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"     * @param tasks The current Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    public static String parseResponse(String s, Tasklist tasks, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        if (s.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"            return Ui.listTasks(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"        if (s.equals(\"bye\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"            storage.updateTasks(tasks.getTasks());","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"            return Ui.goodbye();","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"            String[] splitStr \u003d s.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"            if (splitStr.length \u003d\u003d 2 \u0026\u0026 (splitStr[0].equals(\"mark\") || splitStr[0].equals(\"unmark\"))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"                    int itemNumber \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"                    if (splitStr[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"                        tasks.markDone(itemNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"                        return Ui.informTaskDone(tasks.getTask(itemNumber - 1));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"                        tasks.markUndone(itemNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"                        return Ui.informTaskUndone(tasks.getTask(itemNumber - 1));","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"                    throw new WrongInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"            if (splitStr.length \u003d\u003d 2 \u0026\u0026 splitStr[0].equals(\"delete\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"                if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"                    return \"No items already, what you want to delete?\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"                    int itemNumber \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"                    Task deletedTask \u003d tasks.getTask(itemNumber - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.deleteItem(itemNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                    return Ui.informTaskDeleted(deletedTask, tasks.getSize());","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"                    throw new WrongInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"            if (splitStr[0].equals(\"todo\") || splitStr[0].equals(\"deadline\") || splitStr[0].equals(\"event\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"                Task addedTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"                switch (splitStr[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"                    String[] todoSplit \u003d s.split(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"                    if (todoSplit.length \u003c\u003d 1 || todoSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"                        throw new EmptyTodoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"                    addedTask \u003d new Todo(todoSplit[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"                    String splitStr1 \u003d s.split(\"deadline \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"                    String[] splitStr2 \u003d splitStr1.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"                    String[] splitStr3 \u003d splitStr2[1].split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"                    LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"                    if (splitStr3.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"                        dateTime \u003d DateManager.parseDateString(splitStr3[0], splitStr3[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"                    addedTask \u003d dateTime \u003d\u003d null ? new Deadline(splitStr2[0], splitStr2[1])","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"                            : new Deadline(splitStr2[0], dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"                case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"                    String eSplitStr1 \u003d s.split(\"event \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"                    String[] eSplitStr2 \u003d eSplitStr1.split(\" /\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"                    addedTask \u003d new Event(eSplitStr2[0], eSplitStr2[1].substring(5), eSplitStr2[2].substring(3));","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"                default:","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"                    return \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"                if (tasks.isDuplicate(addedTask)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"                    return Ui.informDuplicate();","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"                tasks.addTask(addedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"                assert addedTask !\u003d null: \"Task added should not be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"                return Ui.informTaskAdded(addedTask, tasks.getSize());","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"            if (splitStr[0].equals(\"find\") \u0026\u0026 splitStr.length \u003e 1 \u0026\u0026 !splitStr[1].equals(\"\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"                String subString \u003d s.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"                ArrayList\u003cTask\u003e filteredList \u003d tasks.filterBySubstring(subString);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"                Tasklist newTasklist \u003d new Tasklist(filteredList);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"                return Ui.listTasks(newTasklist);","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"            throw new WrongInputException();","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"            return \"Error: \" + e + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":108}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    private final File hardDiskFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"     * @param filePath Path of file that will be used as storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        this.hardDiskFile \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    private void createFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"            File parentDir \u003d hardDiskFile.getParentFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"            hardDiskFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error when creating new file: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"     * Returns an Arraylist of all tasks in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"     * @return Arraylist of tasks in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        createFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        assert this.hardDiskFile !\u003d null: \"Storage file should exist\";","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"                    continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"                String identifier \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"                boolean done \u003d parts[1] \u003d\u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"                String name \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"                if (identifier.equals(\"T\") \u0026\u0026 parts.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.add(new Todo(name, done));","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"                } else if (identifier.equals(\"D\") \u0026\u0026 parts.length \u003d\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"                    LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"                    String[] dSplitStr \u003d parts[3].split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"                    if (dSplitStr.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"                        dateTime \u003d DateManager.parseStorageDateString(dSplitStr[0], dSplitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.add(dateTime \u003d\u003d null ? new Deadline(name, parts[3], done)","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"                            : new Deadline(name, dateTime, done));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"                } else if (identifier.equals(\"E\") \u0026\u0026 parts.length \u003d\u003d 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.add(new Event(name, parts[3], parts[4], done));","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error when reading tasks: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"     * Updates the storage with the new Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"     * @param tasks The updated Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"    public void updateTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"                    writer.write(todo.toStringStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"                    writer.write(deadline.toStringStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"                    writer.write(event.toStringStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error when updating tasks: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":106}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    public abstract boolean equals(Object obj);","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Task if it is supplied with a done status.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"     * @param isDone Boolean representing whether the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"     * @return Boolean representing whether the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        return isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the String representation of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        String checkbox \u003d isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        return checkbox + name;","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"     * Marks Task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"     * Marks task as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the name of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"     * @return Name of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"    public String getName() {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"        return this.name;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":71}},{"path":"src/main/java/duke/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"public class Tasklist {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Tasklist","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"     * @param tasks Arraylist of tasks to put in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    public Tasklist(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"     * Returns an Arraylist representing the Tasks in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"     * @return Arraylist of Tasks in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     * Returns the size of the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"     * @return Size of the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the task at a particular index in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"     * @param i The index of the Task in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"     * @return The Task at that index in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        assert tasks.size() \u003e i: \"Size of list should be at least \" + (i + 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"     * Gets the String representation of the Task at a particular index in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"     * @param i The index of the Task in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"     * @return The String representation of the Task at that index in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    public String getItemString(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        return tasks.get(i).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"     * Marks an item in the Tasklist as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"     * @param i Index of the item to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"    public void markDone(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        tasks.get(i).markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"     * Marks an item in the Tasklist as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"     * @param i Index of the item to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"    public void markUndone(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        tasks.get(i).markUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"     * Delete an item in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"     * @param i Index of the item to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"    public void deleteItem(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"        tasks.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"     * Adds a Task to the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"     * @param task Task to be added to the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"     * Filters tasks by name.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"JeremyYong128"},"content":"     * @param s Substring which must be present in the Task name.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"JeremyYong128"},"content":"     * @return An Arraylist containing tasks whose names match the substring provided.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"JeremyYong128"},"content":"    public ArrayList\u003cTask\u003e filterBySubstring(String s) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"JeremyYong128"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"JeremyYong128"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"JeremyYong128"},"content":"            String taskName \u003d task.getName().toLowerCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"JeremyYong128"},"content":"            s \u003d s.toLowerCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"JeremyYong128"},"content":"            if (taskName.contains(s)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"JeremyYong128"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"JeremyYong128"},"content":"        return filteredTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"JeremyYong128"},"content":"     * Checks if a given task is already present in the tasklist.","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"JeremyYong128"},"content":"     * @param task The task to be checked.","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"JeremyYong128"},"content":"     * @return true if the task is already present in the tasklist, false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"JeremyYong128"},"content":"    public boolean isDuplicate(Task task) {","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"JeremyYong128"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"JeremyYong128"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"JeremyYong128"},"content":"            if (task.equals(currTask)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"JeremyYong128"},"content":"                return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"JeremyYong128"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":126}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"     * Constructor for Todo if a done status is supplied.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"     * @param name Description of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"     * @param isDone Boolean representing whether the Todo is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"     * Gets String representation of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"     * Gets String representation of the Todo in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Todo in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    public String toStringStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        String nameField \u003d this.getName();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        String isDoneField \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        return \"T|\" + isDoneField + \"|\" + nameField;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     * Checks if this Todo is equal to another object.","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"     * @param obj The other object being compared to.","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"     * @return true if the other object is a Todo with the same string representation, false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"        if (!(obj instanceof Todo)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"        Todo otherTodo \u003d (Todo) obj;","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"        return this.toString().equals(otherTodo.toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":63}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"     * @return Goodbye string.","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public static String goodbye() {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        return \"Good riddance.\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"     * Lists out each task in the Tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"     * @param tasks The Tasklist to be listed out.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representing the tasklist.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public static String listTasks(Tasklist tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"            return \"List is empty. Congrats.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"            String response \u003d \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"                response +\u003d (i + 1) + \". \" + tasks.getItemString(i) + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"            return response;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"     * Notifies the user that the task has been marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"     * @param task The task that is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"     * @return String informing user of a task being marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    public static String informTaskDone(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        return \"Ok good job lor you finished this task:\\n    \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"     * Notifies the user that the task has been marked as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"     * @param task The task that is marked as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"     * @return String informing user of a task being marked as undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"    public static String informTaskUndone(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"        return \"Wah why you never do this task:\\n    \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"     * Notifies the user that the task has been deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"     * @param task The task that is deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"     * @return String informing user of a task being removed.","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"    public static String informTaskDeleted(Task task, int size) {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"        return \"Ok slacker I\u0027ve removed this task:\\n    \"","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"                + task.toString() + \"\\nNow you have \"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"                + size + \" tasks in the list. Happy anot.\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"     * Notifies the user that the task has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"     * @param task The task that is added.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"     * @return String informing user of a task being added.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"    public static String informTaskAdded(Task task, int size) {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        return \"Haha now you have this task to do:\\n   \"","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"                + task.toString() + \"\\nIn total you have \"","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"                + size + \" things to do.\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"     * Notifies the user that the task being added already exists.","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"     * @return String informing the user that the task already exists.","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"    public static String informDuplicate() {","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"        return \"Aiyo this task already added la, can wake up your idea anot.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":83}},{"path":"src/main/java/duke/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class WrongInputException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"     * Gets String representation of the Exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"     * @return String representation of the Exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        return \"Wrong input format. Can type properly anot?\";","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":12}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"JeremyYong128":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#e40000\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"JeremyYong128":19}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    public void toStringTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"        Task unmarkedTask \u003d new Todo(\"Clean\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        Task markedTask \u003d new Todo(\"Cook\", false);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(\"[T][X] Clean\", unmarkedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(\"[T][ ] Cook\", markedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":14}},{"path":"src/test/java/duke/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"public class TasklistTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    public void taskListTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"        Tasklist tasks \u003d new Tasklist(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"        Task task \u003d new Todo(\"Cook\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"        Task obtainedTask \u003d tasks.getTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(obtainedTask.isDone());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(\"Cook\", obtainedTask.getName());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"deadline wake up /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"event cook dinner /from 3pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"JeremyYong128":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"java -classpath ../bin JermBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"JeremyYong128":1}}]
