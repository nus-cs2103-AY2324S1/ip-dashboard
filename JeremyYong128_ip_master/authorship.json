[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JeremyYong128":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"JeremyYong128":1}},{"path":"src/main/java/duke/DateManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"public class DateManager {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    private final static String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    private final static String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    private final static String DATETIME_OUTPUT_FORMAT \u003d \"d MMMM yyyy h:mma\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    private final static String DATETIME_STORAGE_FORMAT \u003d \"ddMMyyyy HHmm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    private final static String STORAGE_DATE_FORMAT \u003d \"ddMMyyyy\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    // Parse the date and time strings into a dateTime object","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    public static LocalDateTime parseDateString(String dateString, String timeString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        LocalDateTime dateTime \u003d  null;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"            date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"            time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"            dateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error in parsing date string: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    // Parse the date and time strings from storage into a dateTime object","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    public static LocalDateTime parseStorageDateString(String dateString, String timeString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        LocalDateTime dateTime \u003d  null;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"            date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(STORAGE_DATE_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"            time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"            dateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error in parsing date string: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    // Return String representation of a dateTime in the chatbot","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(DATETIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"    // Return String representation of a dateTime in the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"    public static String dateTimeToStringStorage(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(DATETIME_STORAGE_FORMAT));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":58}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"    private String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Deadline with done status","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, String by, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Deadline with date and time","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Deadline with date and time and done status","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    public Deadline(String name, LocalDateTime dateTime, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of the duke.Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        if (by \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + DateManager.dateTimeToString(dateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of the duke.Deadline for hard disk","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    public String toStringStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"        String nameField \u003d this.getName();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        String isDoneField \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"        String deadlineField \u003d by \u003d\u003d null ? DateManager.dateTimeToStringStorage(this.dateTime) : by;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        return \"D|\" + isDoneField + \"|\" + nameField + \"|\" + deadlineField;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"    // Gets the date that the duke.Deadline is due by","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"        return this.by;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":54}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    private Tasklist tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"        tasks \u003d new Tasklist(storage.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public void start() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        Ui.greet();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"        String currStr \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        while (!currStr.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"            Parser.parseResponse(currStr, tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"            currStr \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        Ui.goodbye();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"        storage.updateTasks(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"         new Duke(\"data/list.txt\").start();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JeremyYong128":30,"-":3}},{"path":"src/main/java/duke/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class EmptyTodoException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of exception","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"        return \"Description of Todo cannot be empty.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    private String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    private String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Event","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Event with done status","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public Event(String name, String from, String to, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    // Get string representation of the duke.Event","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of the duke.Todo for hard disk","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    public String toStringStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"        String nameField \u003d this.getName();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        String isDoneField \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        String fromField \u003d this.from;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        String toField \u003d this.to;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"        return \"E|\" + isDoneField + \"|\" + nameField + \"|\" + fromField + \"|\" + toField;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    // Gets the start of the duke.Event","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        return this.from;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    // Gets the end of the duke.Event","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        return this.to;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":44}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"    // Parses the response given by the user","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    public static void parseResponse(String s, Tasklist tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"        if (s.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"            Ui.listTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"                String[] splitStr \u003d s.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"                if (splitStr.length \u003d\u003d 2 \u0026\u0026 (splitStr[0].equals(\"mark\") || splitStr[0].equals(\"unmark\"))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"                        int itemNumber \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"                        if (splitStr[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"                            tasks.markDone(itemNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"                            Ui.informTaskDone(tasks.getTask(itemNumber - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"                        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"                            tasks.markUndone(itemNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"                            Ui.informTaskUndone(tasks.getTask(itemNumber - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"                        throw new WrongInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"                } else if (splitStr.length \u003d\u003d 2 \u0026\u0026 splitStr[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"                    if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"                        System.out.println(\"No items already, what you want to delete?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"                        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"                            int itemNumber \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"                            Ui.informTaskDeleted(tasks.getTask(itemNumber - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"                            tasks.deleteItem(itemNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"                            Ui.informListSize(tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"                            throw new WrongInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"                } else if (splitStr[0].equals(\"todo\") || splitStr[0].equals(\"deadline\") || splitStr[0].equals(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"                    Task addedTask \u003d new Task(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"                    switch (splitStr[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"                        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"                            String[] todoSplit \u003d s.split(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"                            if (todoSplit.length \u003c\u003d 1 || todoSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"                                throw new EmptyTodoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"                            addedTask \u003d new Todo(todoSplit[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"                            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"                            String splitStr1 \u003d s.split(\"deadline \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"                            String[] splitStr2 \u003d splitStr1.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"                            String[] splitStr3 \u003d splitStr2[1].split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"                            LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"                            if (splitStr3.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"                                dateTime \u003d DateManager.parseDateString(splitStr3[0], splitStr3[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"                            addedTask \u003d dateTime \u003d\u003d null ? new Deadline(splitStr2[0], splitStr2[1])","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"                                    : new Deadline(splitStr2[0], dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"                            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"                        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"                            String eSplitStr1 \u003d s.split(\"event \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"                            String[] eSplitStr2 \u003d eSplitStr1.split(\" /\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"                            addedTask \u003d new Event(eSplitStr2[0], eSplitStr2[1].substring(5), eSplitStr2[2].substring(3));","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"                            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.addTask(addedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"                    Ui.informTaskAdded(addedTask, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"                    throw new WrongInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"                System.out.println(\"Error: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":77}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    private final File hardDiskFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for storage","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"        this.hardDiskFile \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    private void createFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"            File parentDir \u003d hardDiskFile.getParentFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"            hardDiskFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error when creating new file: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    // Returns an ArrayList of all tasks in the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        createFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"                    continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"                String identifier \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"                boolean done \u003d parts[1] \u003d\u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"                String name \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"JeremyYong128"},"content":"                if (identifier.equals(\"T\") \u0026\u0026 parts.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.add(new Todo(name, done));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"JeremyYong128"},"content":"                } else if (identifier.equals(\"D\") \u0026\u0026 parts.length \u003d\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"JeremyYong128"},"content":"                    LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"JeremyYong128"},"content":"                    String[] dSplitStr \u003d parts[3].split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"JeremyYong128"},"content":"                    if (dSplitStr.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"JeremyYong128"},"content":"                        dateTime \u003d DateManager.parseStorageDateString(dSplitStr[0], dSplitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"JeremyYong128"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.add(dateTime \u003d\u003d null ? new Deadline(name, parts[3], done)","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"JeremyYong128"},"content":"                            : new Deadline(name, dateTime, done));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"JeremyYong128"},"content":"                } else if (identifier.equals(\"E\") \u0026\u0026 parts.length \u003d\u003d 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"JeremyYong128"},"content":"                    tasks.add(new Event(name, parts[3], parts[4], done));","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error when reading tasks: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"JeremyYong128"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"JeremyYong128"},"content":"    // Updates the storage with the new task list","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"JeremyYong128"},"content":"    public void updateTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"JeremyYong128"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"JeremyYong128"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"JeremyYong128"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"JeremyYong128"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"JeremyYong128"},"content":"                    writer.write(todo.toStringStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"JeremyYong128"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"JeremyYong128"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"JeremyYong128"},"content":"                    writer.write(deadline.toStringStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"JeremyYong128"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"JeremyYong128"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"JeremyYong128"},"content":"                    writer.write(event.toStringStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"JeremyYong128"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"JeremyYong128"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"JeremyYong128"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"JeremyYong128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"JeremyYong128"},"content":"            System.out.println(\"Error when updating tasks: \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":93}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Task","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Task with done status","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    public Task(String name, boolean done) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    // Checks if the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        return done;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        String checkbox \u003d done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"        return checkbox + name;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    // Marks task as done","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        done \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    // Marks task as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    // Gets name of duke.Task","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    public String getName() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"        return this.name;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":43}},{"path":"src/main/java/duke/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"public class Tasklist {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for the Tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    public Tasklist(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    // Gets the ArrayList of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    // Gets the size of the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    // Gets the task at a particular index in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    // Gets the string representation of a particular item in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    public String getItemString(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        return tasks.get(i).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"    // Marks an item as done","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    public void markDone(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"        tasks.get(i).markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    // Marks an item as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"    public void markUndone(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"        tasks.get(i).markUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    // Delete an item in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"    public void deleteItem(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"        tasks.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    // Adds a task to the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"JeremyYong128"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":52}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Todo","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    // Constructor for duke.Todo with done status","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of the duke.Todo","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of the duke.Todo for hard disk","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    public String toStringStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"        String nameField \u003d this.getName();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"        String isDoneField \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"        return \"T|\" + isDoneField + \"|\" + nameField;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":25}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    // Greets the user","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"I\u0027m Jermbot. What you want?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"    // Says goodbye to the user","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"    public static void goodbye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"Good riddance.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"    // Lists out each task in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"    public static void listTasks(Tasklist tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"            System.out.print(\". \" + tasks.getItemString(i) + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JeremyYong128"},"content":"    // Notifies the user that a task has been marked as done","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"    public static void informTaskDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"Ok good job lor you finished this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JeremyYong128"},"content":"    // Notifies the user that a task has been marked as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"JeremyYong128"},"content":"    public static void informTaskUndone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"Wah why you never do this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JeremyYong128"},"content":"    // Notifies the user that a task has been deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"JeremyYong128"},"content":"    public static void informTaskDeleted(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"Ok slacker I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"JeremyYong128"},"content":"    // Notifies the user that a task has been added","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"JeremyYong128"},"content":"    public static void informTaskAdded(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"JeremyYong128"},"content":"        System.out.printf(\"Haha now you have this task to do:\\n   %s\\nIn total you have %d things to do.\\n\", task, size);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"JeremyYong128"},"content":"    // Informs the user about the number of tasks are on the list","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"JeremyYong128"},"content":"    public static void informListSize(int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"JeremyYong128"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list. Happy anot.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":49}},{"path":"src/main/java/duke/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"public class WrongInputException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"    // Gets string representation of exception","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"        return \"Wrong input format.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":8}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"    public void toStringTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"        Task unmarkedTask \u003d new Todo(\"Clean\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"        Task markedTask \u003d new Todo(\"Cook\", false);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(\"[T][X] Clean\", unmarkedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(\"[T][ ] Cook\", markedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":14}},{"path":"src/test/java/duke/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JeremyYong128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"JeremyYong128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JeremyYong128"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JeremyYong128"},"content":"public class TasklistTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JeremyYong128"},"content":"    public void taskListTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JeremyYong128"},"content":"        Tasklist tasks \u003d new Tasklist(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JeremyYong128"},"content":"        Task task \u003d new Todo(\"Cook\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"JeremyYong128"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JeremyYong128"},"content":"        Task obtainedTask \u003d tasks.getTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JeremyYong128"},"content":"        assertTrue(obtainedTask.isDone());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JeremyYong128"},"content":"        assertEquals(\"Cook\", obtainedTask.getName());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JeremyYong128"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JeremyYong128":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JeremyYong128"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"JeremyYong128"},"content":"deadline wake up /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"JeremyYong128"},"content":"event cook dinner /from 3pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JeremyYong128"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JeremyYong128":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JeremyYong128"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"JeremyYong128":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"JeremyYong128"},"content":"java -classpath ../bin JermBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"JeremyYong128":1}}]
