[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"### Chat","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"Chat is a deranged and unconventional twist on personal assistant applications. Unlike its more sober counterparts, Chat boasts the riotous and unpredictable personality of [Twitch chat](https://www.twitch.tv/), making it a one-of-a-kind platform for managing your schedule and tasks. :skull:","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"\u003e \"Sadge\" - Chat","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"What Chat does:","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"- Merges the practicality of a personal assistant with the delightful chaos of Twitch chat.","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"1. Offers a zany and motivating way to tackle daily responsibilities.","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"- [x] ~~Scares users away.~~ Ensures users never have a dull moment while staying organized.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"Here\u0027s how to launch Chat from the `main` method:","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"public class Main {","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"juzzztinsoong":13,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"    mainClass.set(\"chat/Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"    archiveBaseName \u003d \"chat\"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"juzzztinsoong":22}},{"path":"data/chat.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"T # 0 # b","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"D # 0 # s #  12:24","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"D # 0 # sdd # 2012-06-07 ","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"D # 0 # run # 2012-02-02 ","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"T # 0 # watch youtube during lunch","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"E # 0 # meme convention # 2023-09-18 12:00 # 2023-09-18 16:00","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"juzzztinsoong":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"### Chat User Guide","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"Chat is a deranged and unconventional twist on personal assistant applications. Unlike its more sober counterparts, Chat boasts the riotous and unpredictable personality of [Tw*tch chat](https://www.twitch.tv/), making it a one-of-a-kind platform for managing your schedule and tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"### Adding Tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"Chat keeps track of your tasks so you don\u0027t have to! Just enter the name and type of task you want, and Chat will remember this task forever!","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"### Storing Tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"Chat stores its tasks in a txt file, so your data will be saved each time you use chat. Don\u0027t worry about forgetting any of your tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"### Memes","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"Just type the keyword \u0027meme\u0027 to get a surprise from your favorite streamer!","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"### `todo` - Creates a todo","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"Just type:","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"`todo (task description)`","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"to add a task with no time parameters.","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"[T][ ] watch youtube during lunch","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"### `deadline` - Creates a deadline","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"Just type:","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"`todo (task description) /by (task deadline date and/or time)`","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"to add a task with a deadline.","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"For example, typing","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"deadline grind valorant /by 2023/09/18","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"gives","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"I\u0027ve added this event:","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"[D][ ] grind valorant (by: 2023-09-18)","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"### `event` - Creates an event","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"Just type:","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"`event (task description) /from (task start date and/or time) /to (task end date and/or time)`","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"to add a task with both starting and ending date/times","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"For example, typing","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"event meme convention /from 2023/09/18 12:00 /to 16:00","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"gives","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"I\u0027ve added this event:","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"[E][ ] meme convention (from: 2023-09-18 12:00 to: 2023-09-18 16:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"### `list` - List your tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"Just type `list` to get a detailed summary of each of your tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"### `find` - Find a specific task","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"Just type `task (keyword)` to find any tasks containing the specified keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"juzzztinsoong"},"content":"### `sort` - Sort your tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"juzzztinsoong"},"content":"Just type `sort (name/date/type)` to sort your tasks alphabetically, chronologically, or by type respectively.","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"### `mark` - Mark your tasks as done","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"Just type `mark (index)` to mark the task at the specified index as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"### `unmark` - Mark your tasks as not done","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"Just type `unmark (index)` to mark the task at the specified index as not done.","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"### `delete` - Delete your tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"juzzztinsoong"},"content":"Just type `delete (index)` to delete the task at the specified index.","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"### `bye` - Quit the app","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"Just type `bye` to quit the app.","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"\u003e \"Bye gamer\" - Chat","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"juzzztinsoong":88,"-":18}},{"path":"src/main/java/chat/Chat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Ui.ChatWrapper;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":" * Contains the chat application, initializes storage and returns response to GUI.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"public class Chat {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    private TaskList tasklist;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for Chat.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"     * @param filepath chat.txt filepath.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public Chat(String filepath) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"            tasklist \u003d storage.loadFromFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"            System.err.println(\"File failed to load\");","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"     * Receives and processes user input and returns output to GUI.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input entered by user.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"     * @return output from application.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"            reply \u003d c.execute(tasklist, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"            reply +\u003d e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"        return reply;","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"    public ChatWrapper getChatWrapper() {","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"        return ui.getChatWrapper();","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean hasExited() {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"        return isExit;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":64}},{"path":"src/main/java/chat/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.net.URL;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":" * A launcher class for Chat using FXML.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    public static class Main extends Application {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"        public void start(Stage stage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"            try {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"                URL url \u003d Main.class.getResource(\"/view/MainWindow.fxml\");","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"                assert url !\u003d null : \"MainWindow fxml not found\";","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"            ","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"                FXMLLoader fxmlLoader \u003d new FXMLLoader(url);","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"                AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"                Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"                MainWindow mw \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"                Chat chat \u003d new Chat(\"data/chat.txt\");","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"                mw.setChat(chat);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"                stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/defaultpepe.jpg\")));","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"                stage.setTitle(\"Tw*tch Chat\");","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"                stage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"                stage.show();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":47}},{"path":"src/main/java/chat/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.controls.DialogBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Ui.ChatWrapper;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":" * Main Window Controller for Chat.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    private Chat chat;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/linus.jpg\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"    private Image chatImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/defaultpepe.jpg\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"     * Initialize MainWindow and print starting message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"            DialogBox.getChatDialog(new ChatWrapper(\"Chat: \", chatImage, Color.LIMEGREEN), \"What\u0027s up gamers! Enter a command to get a response from your favourite streamers. Also, type \u0027meme\u0027 for something funny.\")","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"    public void setChat(Chat chat) {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"        this.chat \u003d chat;","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"        if (!chat.hasExited()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"            String response \u003d chat.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"            ChatWrapper chatWrapper \u003d chat.getChatWrapper();","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"            dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"            dialogContainer.getChildren().add(DialogBox.getChatDialog(chatWrapper, response));","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":66}},{"path":"src/main/java/chat/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * Command that causes application to exit.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    };","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"        return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"        return \"Aw goodbye.. ಠ_ಠ\";","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":25}},{"path":"src/main/java/chat/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * Abstract command class that all commands inherit from.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    public Command() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"     * Loads the tasks into the tasklist. This is done when printing to CLI is not","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     * necessary when executing a command.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"     * @param tasklist the tasklist to load.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ChatException if loading fails.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    public void load(TaskList tasklist) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"     * @param tasklist the tasklist that is being executed upon.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"     * @param storage  the storage class to use for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ChatException if execution fails.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        return \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns true only for ByeCommand, else parent implementation applies to all","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"     * child Command classes.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"     * @return true only for ByeCommand, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":44}},{"path":"src/main/java/chat/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to perform deadline operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"public class DeadlineCommand extends TaskCommand {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    private LocalTime byTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for DeadlineCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the deadline. Cannot be empty.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if the deadline is done, false otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"     * @param byDate the date to use for the deadline. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"     * @param byTime the time to use for the deadline. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public DeadlineCommand(String description, boolean isDone, LocalDate byDate, LocalTime byTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    public void load(TaskList tasklist) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        tasklist.add(description, isDone, byDate, byTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"        String deadlineString \u003d tasklist.add(description, isDone, byDate, byTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"            return String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"                \"I\u0027ve added this deadline:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"                deadlineString, tasklist.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":49}},{"path":"src/main/java/chat/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to perform task deletion operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    private int index;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        String deleteString \u003d tasklist.delete(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"            return deleteString;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":29}},{"path":"src/main/java/chat/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to perform event operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"public class EventCommand extends TaskCommand {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalTime fromTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalTime toTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for EventCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the deadline. Cannot be empty.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if the deadline is done, false otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"     * @param fromDate the date to use for the event start. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"     * @param fromTime the time to use for the event start. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"     * @param toDate the date to use for the event end. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"     * @param toTime the time to use for the event end. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    public EventCommand(String description, boolean isDone, LocalDate fromDate, LocalTime fromTime, LocalDate toDate,","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"            LocalTime toTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"    public void load(TaskList tasklist) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        tasklist.add(description, isDone, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"        String eventString \u003d tasklist.add(description, isDone, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"            return String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"                \"I\u0027ve added this event:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"                eventString, tasklist.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":56}},{"path":"src/main/java/chat/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to perform find operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    private String description;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        return tasklist.find(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":23}},{"path":"src/main/java/chat/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to perform list operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    };","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"        return tasklist.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":19}},{"path":"src/main/java/chat/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to mark tasks as done or not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for MarkDoneCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true to mark the task as done, false to unmark it.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"     * @param index the index of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    public MarkDoneCommand(boolean isDone, int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"        String doneString \u003d tasklist.setDone(isDone, index);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"            return doneString;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"juzzztinsoong":36}},{"path":"src/main/java/chat/commands/MemeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"public class MemeCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    private String[] memeList \u003d {\"Why is the Average NUS Student so Average ? I don\u0027t understand why the normal NUS students has such average tastes and interests. They listen to music like Taylor Swift, play games like Genshin Impact and wear Uniqlo Clothes. Please help me understand why this is the case. I thought everyone in univerisety would be different and quirky, wear cosplay or eleborate get-ups to classes, read post-mordern albanian meta-critiques of communist narratives and listen to pyschelic jazz music. Why isn\u0027t this the case ?\",","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"            \"memes dont stay funny for very long you know\",","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"            \"My name is Walter Hartwell White. I live at 308 Negra Arroyo Lane, Albuquerque, New Mexico, 87104. This is my confession. If you\u0027re watching this tape, I\u0027m probably dead, murdered by my brother-in-law Hank Schrader. Hank has been building a meth empire for over a year now and using me as his chemist. \",","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"            \"Please DO NOT buy the BTS meal if you don\u0027t stan them. You\u0027re preventing the actual BTS fans who have waited for months from having the BTS meal experience. Eating the sauces without understanding their significance is literally cultural appropriation and it\u0027s not okay\",","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"            \"I just downvoted your comment.\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"                \"# FAQ\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"                \"## What does this mean?\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"                \"The amount of karma (points) on your comment and Reddit account has decreased by one.\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"                \"## Why did you do this?\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"                \"There are several reasons I may deem a comment to be unworthy of positive or neutral karma. These include, but are not limited to:\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"                \"• ⁠Rudeness towards other Redditors, • ⁠Spreading incorrect information, • ⁠Sarcasm not correctly flagged with a /s.\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"                \"## Am I banned from the Reddit?\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"                \"No - not yet. But you should refrain from making comments like this in the future. Otherwise I will be forced to issue an additional downvote, which may put your commenting and posting privileges in jeopardy.\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"                \"## I don\u0027t believe my comment deserved a downvote. Can you un-downvote it?\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"                \"Sure, mistakes happen. But only in exceedingly rare circumstances will I undo a downvote. If you would like to issue an appeal, shoot me a private message explaining what I got wrong. I tend to respond to Reddit PMs within several minutes. Do note, however, that over 99.9% of downvote appeals are rejected, and yours is likely no exception.\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"                \"## How can I prevent this from happening in the future?\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"                \"\\r\\n\" + //","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"                \"Accept the downvote and move on. But learn from this mistake: your behavior will not be tolerated on Reddit.com. I will continue to issue downvotes until you improve your conduct. Remember: Reddit is privilege, not a right.\"};","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"    public MemeCommand() {        ","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"    };","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) throws ChatException {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"        int randomMemeIndex \u003d (int) (Math.random() * memeList.length);","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        return memeList[randomMemeIndex];","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"    ","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"juzzztinsoong":48}},{"path":"src/main/java/chat/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.IncorrectFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to perform sort operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    ","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    public enum sortType {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"        NAME,DATE,TYPE;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    private sortType type;","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    public SortCommand (sortType type) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList taskList, Storage storage) throws ChatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"            String tempString \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"            switch (type) {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"            case NAME:","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"                tempString \u003d taskList.sortName();","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"                storage.writeToFile(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"                return tempString;","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"            case DATE:","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"                tempString \u003d taskList.sortDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"                storage.writeToFile(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"                return tempString;","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"            case TYPE:","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"                tempString \u003d taskList.sortType();","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"                storage.writeToFile(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"                return tempString;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"                throw new IncorrectFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"            throw new ChatException(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"juzzztinsoong":48}},{"path":"src/main/java/chat/commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":" * Abstract Command class that all task handling commands inherit from.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    protected String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for TaskCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if task is done, false otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    public TaskCommand(String description, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public void load(TaskList tasklist) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"        return \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":33}},{"path":"src/main/java/chat/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * Command used to perform todo operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"public class TodoCommand extends TaskCommand {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    public TodoCommand(String description, boolean isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    public void load(TaskList tasklist) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"        tasklist.add(description, isDone);","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"        String todoString \u003d tasklist.add(description, isDone);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"            return String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"                \"I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"                todoString, tasklist.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":34}},{"path":"src/main/java/chat/controls/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.controls;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import chat.MainWindow;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import chat.utils.Ui.ChatWrapper;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":" * DialogBox Controller for Chat GUI.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"    private Label chat;","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor for DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"     * @param chatName display name for chat.","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"     * @param chatColor display name color for chat.","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"     * @param text display text for DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"     * @param img display image for DialogBox.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isChat whether the dialog box is printed by chat.","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    public DialogBox(String chatName, Color chatColor, String text, Image img, boolean isChat) {","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"                MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"        if (isChat) {","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"            super.setBackground(new Background(new BackgroundFill(Color.web(\"#333333\"), null, null)));","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"            super.setBackground(new Background(new BackgroundFill(Color.web(\"#444444\"), null, null)));","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        setLabelStyle(chat, chatName, chatColor);","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"        setLabelStyle(dialog, text, Color.WHITE);","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        ","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"        chat.setMinWidth(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"     * Helper function that sets label text and color.","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"     * @param label Label being modified.","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"     * @param text Label text.","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"     * @param color Label color.","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"    public static void setLabelStyle(Label label, String text, Color color) {","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"        label.setText(text);","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"        label.setTextFill(color);","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"juzzztinsoong"},"content":"        var db \u003d new DialogBox(\"\", Color.WHITE, text, img, false);","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"        return db;","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"    public static DialogBox getChatDialog(ChatWrapper chatWrapper, String text) {","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"        var db \u003d new DialogBox(chatWrapper.chatName, chatWrapper.chatColor, text, chatWrapper.chatImage, true);","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":99}},{"path":"src/main/java/chat/exceptions/ChatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"public class ChatException extends Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"    private String errDescription;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"    public ChatException(String errDescription) {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"        this.errDescription \u003d errDescription;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"        return \"OOPS! \" + errDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"        return \"OOPS! \" + errDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":21}},{"path":"src/main/java/chat/exceptions/IncorrectFileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.exceptions;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"public class IncorrectFileFormatException extends ChatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"    public IncorrectFileFormatException() {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"        super(\"File either has a wrong format or is out of date!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"juzzztinsoong":10}},{"path":"src/main/java/chat/exceptions/IncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"public class IncorrectFormatException extends ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"    public IncorrectFormatException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"        super(\"You used the wrong format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":10}},{"path":"src/main/java/chat/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"public class InvalidCommandException extends ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"        super(\"I don\u0027t know what you meant!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":11}},{"path":"src/main/java/chat/exceptions/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"public class InvalidNumberException extends ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"        super(\"You didn\u0027t specify the task number!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":11}},{"path":"src/main/java/chat/exceptions/NoSuchEntryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"public class NoSuchEntryException extends ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"    public NoSuchEntryException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"        super(\"There is no such entry!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":10}},{"path":"src/main/java/chat/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * A task with description, completeness, and a due date/time.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalTime byTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for Deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the deadline. Cannot be empty.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if the deadline is done, false otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"     * @param byDate the date to use for the deadline. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"     * @param byTime the time to use for the deadline. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    public Deadline(String description, boolean isDone, LocalDate byDate, LocalTime byTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a String representation of this Deadline. The format is","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"     * \"[D][StatusIcon] Description (by: Date/Time)\"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a String representation of this Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"        String byDateString \u003d byDate !\u003d null ? byDate.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        String byTimeString \u003d byTime !\u003d null ? byTime.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"[D][%s] %s (by: %s %s)\", getStatusIcon(), description, byDateString, byTimeString);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a string representation of this Deadline. The format is D # Doneness","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"     * # Description # Date/Time.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"     * Note that this is different from toString() as it is used for encoding data","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"     * in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string representation of this Deadline for storage in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        String byDateString \u003d byDate !\u003d null ? byDate.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        String byTimeString \u003d byTime !\u003d null ? byTime.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"D # %d # %s # %s %s\", getDoneInt(), description, byDateString, byTimeString);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"    public long getFirstDate() {","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"        LocalDate tempDate \u003d byDate !\u003d null ? byDate : LocalDate.of(1970,1,1);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        LocalTime tempTime \u003d byTime !\u003d null ? byTime : LocalTime.of(0,0);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"        return LocalDateTime.of(tempDate, tempTime).toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":62}},{"path":"src/main/java/chat/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" * A task that has a description, completeness, start date/time and end date/time.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalTime fromTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    protected LocalTime toTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for Event.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the deadline. Cannot be empty.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if the deadline is done, false otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"     * @param fromDate the date to use for the event start. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"     * @param fromTime the time to use for the event start. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"     * @param toDate the date to use for the event end. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"     * @param toTime the time to use for the event end. Will not be displayed if null.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    public Event(String description, boolean isDone, LocalDate fromDate, LocalTime fromTime, LocalDate toDate,","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"            LocalTime toTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a String representation of this Status. The format is","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"     * \"[E][StatusIcon] Description (from: Date/Time to: Date/Time)\"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a String representation of this Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"        String fromDateString \u003d fromDate !\u003d null ? fromDate.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        String fromTimeString \u003d fromTime !\u003d null ? fromTime.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"        String toDateString \u003d toDate !\u003d null ? toDate.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        String toTimeString \u003d toTime !\u003d null ? toTime.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"[E][%s] %s (from: %s %s to: %s %s)\", getStatusIcon(), description, fromDateString, fromTimeString, toDateString, toTimeString);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a string representation of this Event. The format is E # Doneness #","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"     * Description # Date/Time # Date/Time.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"     * Note that this is different from toString() as it is used for encoding data","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"     * in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string representation of this Event for storage in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"        String fromDateString \u003d fromDate !\u003d null ? fromDate.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        String fromTimeString \u003d fromTime !\u003d null ? fromTime.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"        String toDateString \u003d toDate !\u003d null ? toDate.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"        String toTimeString \u003d toTime !\u003d null ? toTime.toString() : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"E # %d # %s # %s %s # %s %s\", getDoneInt(), description, fromDateString, fromTimeString, toDateString, toTimeString);","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"    public long getFirstDate() {","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"        LocalDate tempDate \u003d fromDate !\u003d null ? fromDate : LocalDate.of(1970,1,1);","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"        LocalTime tempTime \u003d fromTime !\u003d null ? fromTime : LocalTime.of(0,0);","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"        return LocalDateTime.of(tempDate, tempTime).toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":73}},{"path":"src/main/java/chat/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * Abstract Task class that all Task-type objects inherit from.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns the icon to use for the status.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     * @return the icon to use for the status or blank if task is not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    protected int getDoneInt() {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"     * Sets the status of the task as done or not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if done, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"    protected void setDone(boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a string representation of this Task. The string is formatted as","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"     * \"[ ][StatusIcon] Description\"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string representation of this Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"[ ][%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a string representation of this Task. The format is # Doneness #","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"     * Description.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"     * Note that this is different from toString() as it is used for encoding data","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"     * in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string representation of this Task for storage in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"  # %d # %s\", (isDone ? 1 : 0), description);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"    public char getFirstChar() {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"        return description.charAt(0);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"    public long getFirstDate() {","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        return 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"juzzztinsoong":63}},{"path":"src/main/java/chat/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static java.util.Comparator.comparing;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.InvalidNumberException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.NoSuchEntryException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":" * Stores the list of tasks and handles all task operations.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"public class TaskList {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"     * Adds a Todo to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if todo is done, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"     * @return the string format of the newly added Todo in the list to display to","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"     *         the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public String add(String description, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        Todo todo \u003d new Todo(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        list.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        return todo.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"     * Adds a Deadline to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the deadline. Cannot be empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if the deadline is done, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"     * @param byDate the date to use for the deadline. Will not be displayed if null.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"     * @param byTime the time to use for the deadline. Will not be displayed if null.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"     * @return the string format of the newly added Deadline in the list to display","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"     *         to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"    public String add(String description, boolean isDone, LocalDate byDate, LocalTime byTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        Deadline deadline \u003d new Deadline(description, isDone, byDate, byTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"        list.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"        return deadline.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"     * Adds an Event to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"     * @param description the description of the deadline. Cannot be empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if the deadline is done, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"     * @param fromDate the date to use for the event start. Will not be displayed if null.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"     * @param fromTime the time to use for the event start. Will not be displayed if null.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"     * @param toDate the date to use for the event end. Will not be displayed if null.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"     * @param toTime the time to use for the event end. Will not be displayed if null.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"     * @return the string format of the newly added Event in the list to display to","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"     *         the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"    public String add(String description, boolean isDone, LocalDate fromDate, LocalTime fromTime, LocalDate toDate,","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"            LocalTime toTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"        Event event \u003d new Event(description, isDone, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"        list.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"        return event.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"     * Sets or unsets task as done at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true to mark the task as done, false to unmark it.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"     * @param index the index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string describing the status of the operation to display to the","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"     *         user.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ChatException if the operation is not successful or the index is","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"     *                       invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"    public String setDone(boolean isDone, int index) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"            if (index \u003c 0 || index + 1 \u003e list.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"                throw new NoSuchEntryException();","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"            } ","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"            ","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"            // Mark this task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"            if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"juzzztinsoong"},"content":"                if (list.get(index).isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"                    return \"This task is already marked as done!\\n\" + list.get(index).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"juzzztinsoong"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"                    list.get(index).setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"                    return \"This task is now marked as done!\\n\" + list.get(index).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"            } ","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"            ","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"            // Mark this task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"            if (!list.get(index).isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"                return \"This task is already marked as not done!\\n\" + list.get(index).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"                list.get(index).setDone(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"                return \"This task is now marked as not done!\\n\" + list.get(index).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"juzzztinsoong"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"juzzztinsoong"},"content":"     * Deletes the entry at the specified index. This method is called by  to","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"     * delete an entry from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"juzzztinsoong"},"content":"     * @param index index of the entry to delete.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a String with information about the operation that was performed.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ChatException if the operation was not successful or index was","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"juzzztinsoong"},"content":"     *                       invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"juzzztinsoong"},"content":"    public String delete(int index) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"juzzztinsoong"},"content":"            if (index \u003c 0 || index + 1 \u003e list.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"juzzztinsoong"},"content":"                throw new NoSuchEntryException();","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"juzzztinsoong"},"content":"            } ","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"            ","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"juzzztinsoong"},"content":"            String tempString \u003d list.get(index).toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"juzzztinsoong"},"content":"            list.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"juzzztinsoong"},"content":"            return String.format(\"I\u0027ve removed this task:\\n%s\\nNow you have %d task(s) in the list.\", tempString,","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"juzzztinsoong"},"content":"                    list.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"juzzztinsoong"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a string containing all the tasks with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string representation of the list in the form of a list of Task","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"juzzztinsoong"},"content":"     *         objects separated by new lines.","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"juzzztinsoong"},"content":"    public String find(String description) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"juzzztinsoong"},"content":"        if (!description.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"juzzztinsoong"},"content":"            String returnString \u003d new String(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"juzzztinsoong"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"juzzztinsoong"},"content":"            for (Task entry : list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"juzzztinsoong"},"content":"                if (entry.description.contains(description)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"juzzztinsoong"},"content":"                    returnString +\u003d (entry.toString() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"juzzztinsoong"},"content":"                    i++;","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"juzzztinsoong"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"juzzztinsoong"},"content":"            // Returns a string that contains the task description and a summary of the valid tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"juzzztinsoong"},"content":"            if (!returnString.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"juzzztinsoong"},"content":"                return (returnString + String.format(\"There were %d tasks containing %s.\", i, description));","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"There were no tasks containing %s.\", description);","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"juzzztinsoong"},"content":"    public String sortName() throws ChatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"juzzztinsoong"},"content":"        System.err.println(\"hi\");","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"juzzztinsoong"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"juzzztinsoong"},"content":"            throw new NoSuchEntryException();","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"juzzztinsoong"},"content":"        ArrayList\u003cTask\u003e newList \u003d list;","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"juzzztinsoong"},"content":"        newList.sort(comparing(Task::getFirstChar));","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"juzzztinsoong"},"content":"        list \u003d newList;","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"juzzztinsoong"},"content":"        return this.toString() + \"\\nTasks have been sorted by name.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"juzzztinsoong"},"content":"    public String sortDate() throws ChatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"juzzztinsoong"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"juzzztinsoong"},"content":"            throw new NoSuchEntryException();","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"juzzztinsoong"},"content":"        ArrayList\u003cTask\u003e newList \u003d list;","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"juzzztinsoong"},"content":"        newList.sort(comparing(Task::getFirstDate));","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"juzzztinsoong"},"content":"        list \u003d newList;","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"juzzztinsoong"},"content":"        return this.toString() + \"\\nTasks have been sorted by date.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"juzzztinsoong"},"content":"    public String sortType() throws ChatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"juzzztinsoong"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"juzzztinsoong"},"content":"            throw new NoSuchEntryException();","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"juzzztinsoong"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"juzzztinsoong"},"content":"        for (Task entry : list) {","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"juzzztinsoong"},"content":"            if (entry instanceof Todo) {","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"juzzztinsoong"},"content":"                newList.add(entry);","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"juzzztinsoong"},"content":"        for (Task entry : list) {","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"juzzztinsoong"},"content":"            if (entry instanceof Deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"juzzztinsoong"},"content":"                newList.add(entry);","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"juzzztinsoong"},"content":"        for (Task entry : list) {","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"juzzztinsoong"},"content":"            if (entry instanceof Event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"juzzztinsoong"},"content":"                newList.add(entry);","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"juzzztinsoong"},"content":"        list \u003d newList;","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"juzzztinsoong"},"content":"        return this.toString() + \"\\nTasks have been sorted by type.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a string representation of the list of all tasks to display to the","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"juzzztinsoong"},"content":"     * user.","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string representation of the list in the form of a list of Task","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"juzzztinsoong"},"content":"     *         objects separated by new lines.","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"juzzztinsoong"},"content":"        String returnString \u003d new String(\"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"juzzztinsoong"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"juzzztinsoong"},"content":"        for (Task entry : list) {","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"juzzztinsoong"},"content":"            returnString +\u003d (i + \".\" + entry.toString() + \"\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"juzzztinsoong"},"content":"            i++;","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"juzzztinsoong"},"content":"        returnString +\u003d String.format(\"You have %d task(s) in the list.\", i - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"juzzztinsoong"},"content":"        return returnString;","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"juzzztinsoong"},"content":"     * Removes and retreives the first item in the list to save to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"juzzztinsoong"},"content":"     * @return String containing the file","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"juzzztinsoong"},"content":"    public String[] returnList() {","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"juzzztinsoong"},"content":"        String[] tempList \u003d new String[list.size()];","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"juzzztinsoong"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":227,"author":{"gitId":"juzzztinsoong"},"content":"            tempList[i] \u003d list.get(i).toFileString();","lastModifiedDate":"2023-09-06"},{"lineNumber":228,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":229,"author":{"gitId":"juzzztinsoong"},"content":"        return tempList;","lastModifiedDate":"2023-09-06"},{"lineNumber":230,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-13"},{"lineNumber":233,"author":{"gitId":"juzzztinsoong"},"content":"        return list.size() \u003d\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":234,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":235,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":236,"author":{"gitId":"juzzztinsoong"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"juzzztinsoong"},"content":"        return list.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"juzzztinsoong":239}},{"path":"src/main/java/chat/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * A task that only has a description and completeness.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a String representation of this Todo. The format is \"[T][StatusIcon]","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"     * Description\"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a String representation of this Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"[T][%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns a string representation of this Todo. The format is T # Doneness #","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"     * Description.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"     * Note that this is different from toString() as it is used for encoding data","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"     * in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a string representation of this Todo for storage in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(\"T # %d # %s\", getDoneInt(), description);","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"juzzztinsoong":34}},{"path":"src/main/java/chat/utils/Enum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.utils;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":" * Enumerates the commands used by chat, streamlines parsing.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"public enum Enum {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    SORT(\"sort\"),","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    MEME(\"meme\");","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    private String text;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    Enum(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns the string associated with each enum to enable the enum mapping.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"     * @return the text associated with each enum.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public String getText() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        return text;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":35}},{"path":"src/main/java/chat/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.utils;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.ByeCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.DeadlineCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.DeleteCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.EventCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.FindCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.ListCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.MarkDoneCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.MemeCommand;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.SortCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.TodoCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.SortCommand.sortType;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.IncorrectFileFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.IncorrectFormatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.InvalidNumberException;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":" * Handles all command parsing capabilities used by Chat.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    public Parser() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    private static class DateTimeWrapper {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        private LocalDate date;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        private LocalTime time;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"        private DateTimeWrapper(LocalDate date, LocalTime time) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"            this.time \u003d time;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses the input and returns the command and its arguments as an array of","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"     * Strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"     * If there is only one word in the input it returns an array of the input and","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"     * an empty string.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input the command given by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"    private static String[] parseInput(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        int index \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        // Returns the input string as a list of strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"            return input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"            String[] tempString \u003d { input, \"\" };","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"            return tempString;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses file path and returns array of Strings representing each level in the","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"     * file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input path to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"    public static String[] parseFilePath(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"        int index \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"        // Returns the input string as a list of strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"            return input.split(\"/\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"            String[] tempString \u003d { input, \"\" };","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"            return tempString;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses an input into an integer. This is used to determine which element in a","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"     * list to perform an operation on.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input string to be parsed. Must be non-null and a valid integer.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"     * @return The index of the input if input is valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws InvalidNumberException if input isn\u0027t valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"    private static int parseIndex(String input) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"            return Integer.parseInt(input) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses the input and returns a DateTimeWrapper. This is a convenience method","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"     * for deadlineParser and eventParser that will try to parse the date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"     * out of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input the input to parse. Must be non-null and a valid date or time or","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"     *              both.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a DateTimeWrapper that contains the date and time of the input if","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"     *         applicable.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws IncorrectFormatException if input isn\u0027t valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"juzzztinsoong"},"content":"    private static DateTimeWrapper parseDate(String input) throws IncorrectFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"        // Input is parsed into two if it contains both a date and time component.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"juzzztinsoong"},"content":"        String[] parsedInput \u003d parseInput(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"        LocalDate date;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"        LocalTime time;","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"        String s1 \u003d parsedInput[0].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"        String s2 \u003d parsedInput[1].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"        // Matches both halves of the input to the date.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"juzzztinsoong"},"content":"        if (s1.matches(\"[0-9]{2}.[0-9]{2}.[0-9]{4}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"juzzztinsoong"},"content":"            date \u003d LocalDate.parse(s1.substring(6, 10) + \"-\" + s1.substring(3, 5) + \"-\" + s1.substring(0, 2));","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (s2.matches(\"[0-9]{2}.[0-9]{2}.[0-9]{4}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"juzzztinsoong"},"content":"            date \u003d LocalDate.parse(s2.substring(6, 10) + \"-\" + s2.substring(3, 5) + \"-\" + s2.substring(0, 2));","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (s1.matches(\"[0-9]{4}.[0-9]{2}.[0-9]{2}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"juzzztinsoong"},"content":"            date \u003d LocalDate.parse(s1.substring(0, 4) + \"-\" + s1.substring(5, 7) + \"-\" + s1.substring(8, 10));","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (s2.matches(\"[0-9]{4}.[0-9]{2}.[0-9]{2}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"juzzztinsoong"},"content":"            date \u003d LocalDate.parse(s2.substring(0, 4) + \"-\" + s2.substring(5, 7) + \"-\" + s2.substring(8, 10));","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"juzzztinsoong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"juzzztinsoong"},"content":"            date \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"juzzztinsoong"},"content":"        // Matches both halves of the input to the time.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"juzzztinsoong"},"content":"        if (s1.matches(\"[0-9]{2}.[0-9]{2}.[0-9]{2}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"juzzztinsoong"},"content":"            time \u003d LocalTime.parse(s1.substring(0, 2) + \":\" + s1.substring(3, 5) + \":\" + s1.substring(6, 8));","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (s2.matches(\"[0-9]{2}.[0-9]{2}.[0-9]{2}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"juzzztinsoong"},"content":"            time \u003d LocalTime.parse(s2.substring(0, 2) + \":\" + s2.substring(3, 5) + \":\" + s2.substring(6, 8));","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (s1.matches(\"[0-9]{2}.[0-9]{2}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"juzzztinsoong"},"content":"            time \u003d LocalTime.parse(s1.substring(0, 2) + \":\" + s1.substring(3, 5) + \":00\");","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (s2.matches(\"[0-9]{2}.[0-9]{2}\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"juzzztinsoong"},"content":"            time \u003d LocalTime.parse(s2.substring(0, 2) + \":\" + s2.substring(3, 5) + \":00\");","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"juzzztinsoong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"juzzztinsoong"},"content":"            time \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"juzzztinsoong"},"content":"        // Checks that the time and date fields are not null.","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"juzzztinsoong"},"content":"        if (time \u003d\u003d null \u0026\u0026 date \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"juzzztinsoong"},"content":"        return new DateTimeWrapper(date, time);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses a string and returns a ToDoCommand. If the string is empty an","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"juzzztinsoong"},"content":"     * IncorrectFormatException is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if task is completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a ToDoCommand that can be executed on behalf of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws IncorrectFormatException if input string is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"juzzztinsoong"},"content":"    public static TodoCommand parseTodo(String input, boolean isDone) throws IncorrectFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"juzzztinsoong"},"content":"        // Returns a new ToDoCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"juzzztinsoong"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"juzzztinsoong"},"content":"        return new TodoCommand(input, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses the input and returns a DeadlineCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input the string to parse. Must be in the format","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"juzzztinsoong"},"content":"     *              \"description isDone /by time/date/both\".","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if task is completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a DeadlineCommand that can be executed on behalf of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws IncorrectFormatException if input string has invalid components.","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"juzzztinsoong"},"content":"    public static DeadlineCommand parseDeadline(String input, boolean isDone) throws IncorrectFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"juzzztinsoong"},"content":"        int index \u003d input.indexOf(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"juzzztinsoong"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"juzzztinsoong"},"content":"        ","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"juzzztinsoong"},"content":"        // Returns a new DeadlineCommand object.","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"juzzztinsoong"},"content":"            String[] parsedInput \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"juzzztinsoong"},"content":"            String description \u003d parsedInput[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"juzzztinsoong"},"content":"            DateTimeWrapper dates \u003d parseDate(parsedInput[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"juzzztinsoong"},"content":"            LocalDate byDate \u003d dates.date;","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"juzzztinsoong"},"content":"            LocalTime byTime \u003d dates.time;","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"juzzztinsoong"},"content":"            return new DeadlineCommand(description, isDone, byDate, byTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses the input string and returns an EventCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input the string to parse. Must be in the format","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"juzzztinsoong"},"content":"     *              \"description isDone /from time/date/both /to time/date/both\".","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"juzzztinsoong"},"content":"     * @param isDone true if task is completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"juzzztinsoong"},"content":"     * @return an EventCommand that can be executed on behalf of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws IncorrectFormatException if input string has invalid components.","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"juzzztinsoong"},"content":"    public static EventCommand parseEvent(String input, boolean isDone) throws IncorrectFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"juzzztinsoong"},"content":"        int indexFrom \u003d input.indexOf(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"juzzztinsoong"},"content":"        int indexTo \u003d input.indexOf(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"juzzztinsoong"},"content":"        if (indexFrom \u003c 0 || indexTo \u003c 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"juzzztinsoong"},"content":"        // Returns a new EventCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"juzzztinsoong"},"content":"            String[] parsedInput \u003d { input.substring(0, indexFrom), input.substring(indexFrom + 7, indexTo),","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"juzzztinsoong"},"content":"                input.substring(indexTo + 5, input.length()) };","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"juzzztinsoong"},"content":"            String description \u003d parsedInput[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"juzzztinsoong"},"content":"            DateTimeWrapper fromDateTime \u003d parseDate(parsedInput[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"juzzztinsoong"},"content":"            DateTimeWrapper toDateTime \u003d parseDate(parsedInput[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"juzzztinsoong"},"content":"            LocalDate fromDate \u003d fromDateTime.date;","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"juzzztinsoong"},"content":"            LocalTime fromTime \u003d fromDateTime.time;","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"juzzztinsoong"},"content":"            LocalDate toDate \u003d toDateTime.date;","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"juzzztinsoong"},"content":"            LocalTime toTime \u003d toDateTime.time;","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"juzzztinsoong"},"content":"            // Smart date guesser for incomplete date formats e.g.","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"juzzztinsoong"},"content":"            // 1/1/2023 12:00 to 16:00 will be assumed to be 1/1/2023 12:00 to 1/1/2023 16:00.","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"juzzztinsoong"},"content":"            if (toDate \u003d\u003d null \u0026\u0026 fromDate !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"juzzztinsoong"},"content":"                toDate \u003d fromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"juzzztinsoong"},"content":"            if (toDate !\u003d null \u0026\u0026 fromDate \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"juzzztinsoong"},"content":"                fromDate \u003d toDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"juzzztinsoong"},"content":"            if (fromTime \u003d\u003d null \u0026\u0026 toTime !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"juzzztinsoong"},"content":"                fromTime \u003d toTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"juzzztinsoong"},"content":"            if (fromTime !\u003d null \u0026\u0026 toTime \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"juzzztinsoong"},"content":"                toTime \u003d fromTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"juzzztinsoong"},"content":"            return new EventCommand(description, isDone, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"juzzztinsoong"},"content":"        } ","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"juzzztinsoong"},"content":"    public static SortCommand parseSort(String input) throws IncorrectFormatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":239,"author":{"gitId":"juzzztinsoong"},"content":"        input.trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":240,"author":{"gitId":"juzzztinsoong"},"content":"        if (input.contains(\"name\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":241,"author":{"gitId":"juzzztinsoong"},"content":"            return new SortCommand(sortType.NAME);","lastModifiedDate":"2023-09-13"},{"lineNumber":242,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (input.contains(\"date\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":243,"author":{"gitId":"juzzztinsoong"},"content":"            return new SortCommand(sortType.DATE);","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"juzzztinsoong"},"content":"        } else if (input.contains(\"type\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":245,"author":{"gitId":"juzzztinsoong"},"content":"            return new SortCommand(sortType.TYPE);","lastModifiedDate":"2023-09-13"},{"lineNumber":246,"author":{"gitId":"juzzztinsoong"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":247,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":248,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":249,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":250,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":251,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses a file line and returns a Command. This is a helper method for loading","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"juzzztinsoong"},"content":"     * stored data into the tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input the input to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"juzzztinsoong"},"content":"     * @return a Command based on the input string or null if there was an error","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"juzzztinsoong"},"content":"     *         parsing the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ChatException if file line has invalid format.","lastModifiedDate":"2023-09-06"},{"lineNumber":258,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"juzzztinsoong"},"content":"    public static Command parseFileContent(String input) throws IncorrectFileFormatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"juzzztinsoong"},"content":"        String[] parsedContent \u003d input.split(\" # \");","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"juzzztinsoong"},"content":"        boolean isDone \u003d Integer.parseInt(parsedContent[1]) \u003d\u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"juzzztinsoong"},"content":"            if (parsedContent.length \u003d\u003d 3 \u0026\u0026 parsedContent[0].charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":265,"author":{"gitId":"juzzztinsoong"},"content":"                // Parse as Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":266,"author":{"gitId":"juzzztinsoong"},"content":"                return parseTodo(parsedContent[2], isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"juzzztinsoong"},"content":"            } else if (parsedContent.length \u003d\u003d 4 \u0026\u0026 parsedContent[0].charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":268,"author":{"gitId":"juzzztinsoong"},"content":"                // Parse as Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"juzzztinsoong"},"content":"                return parseDeadline(parsedContent[2] + \" /by \" + parsedContent[3], isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":270,"author":{"gitId":"juzzztinsoong"},"content":"            } else if (parsedContent.length \u003d\u003d 5 \u0026\u0026 parsedContent[0].charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":271,"author":{"gitId":"juzzztinsoong"},"content":"                // Parse as Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"juzzztinsoong"},"content":"                return parseEvent(parsedContent[2] + \" /from \" + parsedContent[3] + \" /to \" + parsedContent[4], isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":273,"author":{"gitId":"juzzztinsoong"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":274,"author":{"gitId":"juzzztinsoong"},"content":"                throw new IncorrectFileFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (IncorrectFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IncorrectFileFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":279,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":280,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":281,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":282,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses the input and returns a Command. This method is used to parse command","lastModifiedDate":"2023-09-01"},{"lineNumber":283,"author":{"gitId":"juzzztinsoong"},"content":"     * arguments that are sent to Chat.","lastModifiedDate":"2023-09-06"},{"lineNumber":284,"author":{"gitId":"juzzztinsoong"},"content":"     * @param input String that contains the command and arguments. Must be non-null","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"juzzztinsoong"},"content":"     *              and valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":286,"author":{"gitId":"juzzztinsoong"},"content":"     * @return Command parsed from the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":287,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ChatException to pass error message along to CLI.","lastModifiedDate":"2023-09-06"},{"lineNumber":288,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":289,"author":{"gitId":"juzzztinsoong"},"content":"    public static Command parse(String input) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":290,"author":{"gitId":"juzzztinsoong"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":291,"author":{"gitId":"juzzztinsoong"},"content":"        ","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"juzzztinsoong"},"content":"        String[] parsedInput \u003d parseInput(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":293,"author":{"gitId":"juzzztinsoong"},"content":"        String command \u003d parsedInput[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":294,"author":{"gitId":"juzzztinsoong"},"content":"        String args \u003d parsedInput[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":295,"author":{"gitId":"juzzztinsoong"},"content":"        Enum commandtype \u003d map(command);","lastModifiedDate":"2023-09-06"},{"lineNumber":296,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"juzzztinsoong"},"content":"        // Returns a command object for the command type.","lastModifiedDate":"2023-09-01"},{"lineNumber":298,"author":{"gitId":"juzzztinsoong"},"content":"        switch (commandtype) {","lastModifiedDate":"2023-08-31"},{"lineNumber":299,"author":{"gitId":"juzzztinsoong"},"content":"        case BYE:","lastModifiedDate":"2023-08-31"},{"lineNumber":300,"author":{"gitId":"juzzztinsoong"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":301,"author":{"gitId":"juzzztinsoong"},"content":"        case LIST:","lastModifiedDate":"2023-08-31"},{"lineNumber":302,"author":{"gitId":"juzzztinsoong"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":303,"author":{"gitId":"juzzztinsoong"},"content":"        case MARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":304,"author":{"gitId":"juzzztinsoong"},"content":"            return new MarkDoneCommand(true, parseIndex(args));","lastModifiedDate":"2023-09-01"},{"lineNumber":305,"author":{"gitId":"juzzztinsoong"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":306,"author":{"gitId":"juzzztinsoong"},"content":"            return new MarkDoneCommand(false, parseIndex(args));","lastModifiedDate":"2023-09-01"},{"lineNumber":307,"author":{"gitId":"juzzztinsoong"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":308,"author":{"gitId":"juzzztinsoong"},"content":"            return parseTodo(args, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":309,"author":{"gitId":"juzzztinsoong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":310,"author":{"gitId":"juzzztinsoong"},"content":"            return parseDeadline(args, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":311,"author":{"gitId":"juzzztinsoong"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":312,"author":{"gitId":"juzzztinsoong"},"content":"            return parseEvent(args, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":313,"author":{"gitId":"juzzztinsoong"},"content":"        case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":314,"author":{"gitId":"juzzztinsoong"},"content":"            return new DeleteCommand(parseIndex(args));","lastModifiedDate":"2023-09-01"},{"lineNumber":315,"author":{"gitId":"juzzztinsoong"},"content":"        case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":316,"author":{"gitId":"juzzztinsoong"},"content":"            return new FindCommand(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":317,"author":{"gitId":"juzzztinsoong"},"content":"        case SORT:","lastModifiedDate":"2023-09-13"},{"lineNumber":318,"author":{"gitId":"juzzztinsoong"},"content":"            return parseSort(args);","lastModifiedDate":"2023-09-13"},{"lineNumber":319,"author":{"gitId":"juzzztinsoong"},"content":"        case MEME:","lastModifiedDate":"2023-09-18"},{"lineNumber":320,"author":{"gitId":"juzzztinsoong"},"content":"            return new MemeCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":321,"author":{"gitId":"juzzztinsoong"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":322,"author":{"gitId":"juzzztinsoong"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":323,"author":{"gitId":"juzzztinsoong"},"content":"        } ","lastModifiedDate":"2023-08-31"},{"lineNumber":324,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":325,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":326,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":327,"author":{"gitId":"juzzztinsoong"},"content":"     * Maps a Chat command to an enum. This is used to determine which command","lastModifiedDate":"2023-09-06"},{"lineNumber":328,"author":{"gitId":"juzzztinsoong"},"content":"     * to run for each user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":329,"author":{"gitId":"juzzztinsoong"},"content":"     * @param command String representation of the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":330,"author":{"gitId":"juzzztinsoong"},"content":"     * @return The enum corresponding to the command or null if none is found in the","lastModifiedDate":"2023-09-01"},{"lineNumber":331,"author":{"gitId":"juzzztinsoong"},"content":"     *         enum.","lastModifiedDate":"2023-09-01"},{"lineNumber":332,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ChatException if the command is not found in the enum.","lastModifiedDate":"2023-09-06"},{"lineNumber":333,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":334,"author":{"gitId":"juzzztinsoong"},"content":"    public static Enum map(String command) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":335,"author":{"gitId":"juzzztinsoong"},"content":"        for (Enum e : Enum.values()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":336,"author":{"gitId":"juzzztinsoong"},"content":"            // Returns the command that was entered by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":337,"author":{"gitId":"juzzztinsoong"},"content":"            if (command.equals(e.getText())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":338,"author":{"gitId":"juzzztinsoong"},"content":"                return e;","lastModifiedDate":"2023-08-31"},{"lineNumber":339,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":340,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":341,"author":{"gitId":"juzzztinsoong"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":342,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":343,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":343}},{"path":"src/main/java/chat/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.utils;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"import chat.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":" * Handles all tasklist data operations such as reading and writing to file.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":" * @author juzzztinsoong","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    private Path path;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructor method for Storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"     * @param filepath chat.txt filepath.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"        String homedir \u003d new File(System.getProperty(\"user.dir\")).getPath();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        String[] splitFilepath \u003d Parser.parseFilePath(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        this.path \u003d Paths.get(homedir, splitFilepath[0], splitFilepath[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"     * Loads saved data and returns the tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"     * @return the tasklist that was loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"    public TaskList loadFromFile() throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"                List\u003cString\u003e contents \u003d Files.readAllLines(path);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"                for (String content : contents) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"                    Command c \u003d Parser.parseFileContent(content);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"                    c.load(tasklist);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"                return tasklist;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"                throw new ChatException(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"                throw new ChatException(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"            } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"                throw e;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"            throw new ChatException(\"File not found\");","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"     * Writes tasklist to file. This method is used to write a file to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"     * system. The file is created if it does not exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"     * @param tasklist the tasklist to write to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"    public void writeToFile(TaskList tasklist) throws ChatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"            // Creates a file if it doesn t exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(path, StandardCharsets.UTF_8,","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"                    StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"            // This method is used to flush the tasklist into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"            String[] tempList \u003d tasklist.returnList();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"            for (String i : tempList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"                writer.write(i + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"                writer.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"            throw new ChatException(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":86}},{"path":"src/main/java/chat/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.utils;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"public class Ui {","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"    private static final String[] nameList \u003d {\"Chat\", \"ninja\", \"xqc\", \"jerma\", \"pokimane\", \"dream\", \"fortnite\", \"moist critical\", \"quackity\"};","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"    private static final Color[] colorList \u003d {Color.LIGHTSALMON, Color.LIMEGREEN, Color.LIGHTCYAN, Color.WHITE, Color.PINK, Color.CORAL, Color.GOLDENROD};","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"    private Image[] imageList;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    private Image pepeImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    private Image ninjaImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    private Image xqcImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    private Image shroudImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    private Image pokimaneImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    private Image dreamImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    private Image fortniteImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    private Image criticalImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    private Image quackityImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    public static class ChatWrapper{","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"        public String chatName;","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"        public Image chatImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"        public Color chatColor;","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"        public ChatWrapper(String chatName, Image chatImage, Color chatColor) {","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"            this.chatName \u003d chatName;","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"            this.chatImage \u003d chatImage;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"            this.chatColor \u003d chatColor;","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    public Ui() {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        pepeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/defaultpepe.jpg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        ninjaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ninja.jpg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        xqcImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/xqc.jpg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"        shroudImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jerma.jpg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        pokimaneImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/poki.jpeg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"        dreamImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dream.jpg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"        fortniteImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/fortnite.jpg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        criticalImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/critical.jpg\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        quackityImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tate.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"        imageList \u003d new Image[] {pepeImage, ninjaImage, xqcImage, shroudImage, pokimaneImage, dreamImage, fortniteImage, criticalImage, quackityImage};","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"    public ChatWrapper getChatWrapper() {","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        int randomNameIndex \u003d (int) (Math.random() * nameList.length);","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"        int randomColorIndex \u003d (int) (Math.random() * colorList.length);","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"        String chatName \u003d nameList[randomNameIndex] + \": \";","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"        Image chatImage \u003d imageList[randomNameIndex];","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        Color chatColor \u003d colorList[randomColorIndex];","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        return new ChatWrapper(chatName, chatImage, chatColor);","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"    ","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"juzzztinsoong":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    \u003cLabel fx:id\u003d\"chat\" text\u003d\"Label\" wrapText\u003d\"false\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"30.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chat.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background: #333333;\" \u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"juzzztinsoong":19}},{"path":"src/test/java/chat/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    public void test1() {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"        tasklist.add(\"hi\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"            tasklist.delete(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"            // TODO Auto-generated catch block","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        assertEquals(tasklist.getSize(), new TaskList().getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    public void test2() {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        tasklist.add(\"hi\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"        assertEquals(tasklist.toString(), \"1.[T][X] hi\\nYou have 1 task(s) in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":30}},{"path":"src/test/java/chat/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package chat.utils;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import chat.commands.DeadlineCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.ChatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import chat.exceptions.IncorrectFormatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    public void test1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"            assertEquals(Parser.parseDeadline(\"blah /by 12/12/2012 16:00\", false),","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"                    new DeadlineCommand(null, false, LocalDate.of(2012, 12, 12), LocalTime.of(16, 0)));","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (IncorrectFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"            // TODO Auto-generated catch block","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    public void test2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"            assertEquals(Parser.map(\"delete\"), Enum.DELETE);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ChatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"            // TODO Auto-generated catch block","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"juzzztinsoong":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"todo asdkfja 25/25","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"deadline as /by 2012/06/06","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"event hi /from 10:00 /to 08:00 23/12/2023","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"mark 2","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"unmark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"find as","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"bye","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"juzzztinsoong":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"REM FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"-":20,"juzzztinsoong":1}}]
