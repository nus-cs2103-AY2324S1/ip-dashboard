[{"path":"src/main/java/Jarvis/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package Jarvis;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import command.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import services.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.JarvisException;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"public class Jarvis {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    public final static String JARVIS_LOGO \u003d \"                                                                 \\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"            \"                          .::^^^^^^::.                           \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"            \"                     .^!??????777??????7~:                       \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"            \"                  .~?J?7!~^:::::::::^^~!?JJ7:                    \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"            \"                :7YJ!~^:..:::::7???7!~:::^~7Y?^                  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"            \"              .!Y?~^^..:^^:.. :?::^~!?J?!::^^7Y?:                \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"            \"             .?Y~^^..^^.     :YP?.    .^?Y7::^^?Y~               \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"            \"            .JY^^: ^~.      :5PP5:       :JY~.~:75~              \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"            \"            ?5^^: ~^       ^5PP5:~J.       75! ~.?Y:             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"            \"           ^5?:~ :~       ^5PP5:~PPJ.       ?Y::~^57             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"            \"           ~Y~:: ^.      ~PPP5: !PPPY.      ~5! ^.J?             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"            \"           .! .  .      :JYYJ:   ~PPPY:     ^57 . ^^             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"            \"            ! ^^ ^^               ~5PPY:    !5~.~ ~:             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"            \"            ~^ ! .!.  !JJJJJJJJJJJ?5PPP5:  :YJ.^: !              \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"            \"             !.:~ .~.!5PPPPPPPPPPPP5555PY:^YJ.:~ ~:              \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"            \"             .!.:~..~!^................:~JY7.^^ ~^               \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"            \"              .~^.^^..^^:.          .:!?J7::^:.~:                \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"            \"                :~::^^:.::^^:::!777?J?7~::^::^^.                 \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"            \"                  :^^::::::::::~~~~^^::::::^^.                   \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"            \"                    .:^^:::::::::::::::^^^:                      \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"            \"                        .:::::.  :::::..                         \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"            \"                                                                 \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"            \"                                                                 \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"            \"          ^!.    ~7^    :77777!:  !!     ~7..!~  .~77777:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"            \"          Y\u0026^   7\u0026B#^   :!!!!!Y\u0026! 7\u0026Y   7\u0026Y :\u00265  G#?!7!!:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"            \"          J\u0026^  !\u0026J.G#:  ^JJJJJPB~  7\u0026? ~\u0026Y  :#5  JBYJJY?:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"            \"      :::^G#: !\u0026Y  .BB: !\u0026J^~G\u0026~    ?\u0026Y#5   :\u00265  .^~~~J\u0026J        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"            \"     .YYYYJ: :5Y.   :5? ^P~  .YY:    ?PY.   .5?  7YYYYYJ:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"            \"                                                                 \";","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"        String dataFilePath \u003d \"src/main/resources/jarvislist.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"        new Jarvis(dataFilePath).run();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"    public Jarvis(String dataFilePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"            taskList \u003d new TaskList(dataFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"            parser \u003d new Parser(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"        } catch (JarvisException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"            ui.print(e.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"        System.out.println(JARVIS_LOGO);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"        ui.greet();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"        while (!userInput.equals(\"exit\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"                parser.parseAndExecute(userInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"            } catch (JarvisException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"                ui.print(e.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"        scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"        ui.exit();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanyyyming":81}},{"path":"src/main/java/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package command;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    LIST,","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    MARK, UNMARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    TODO, DEADLINE, EVENT,","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    DELETE","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":8}},{"path":"src/main/java/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.EmptyArgumentException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.InvalidArgumentException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.InvalidCommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.JarvisException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    public void parseAndExecute(String userInput) throws JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"        String command \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"        String arguments \u003d userInput.replaceFirst(command, \"\").strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        execute(command, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"    // a helper method for the above resolve method.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    private void execute(String command, String args) throws JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"            CommandType commandType \u003d CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"            // go through commands without any arguments.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"            case LIST: {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"                taskList.show();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"            if (args.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"                throw new EmptyArgumentException(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"            // go through commands with arguments.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"            case MARK: {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"                    int taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"                    taskList.markDone(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"                    throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"            case UNMARK: {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"                    int taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"                    taskList.markUndone(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"                    throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"            case TODO: {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"                taskList.add(args, CommandType.TODO);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"            case DEADLINE: {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"                    String[] varargs \u003d args.split(\"\\\\s+/by\\\\s+\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"                    String description \u003d varargs[0], by \u003d varargs[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"                    taskList.add(description, CommandType.DEADLINE, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"                    throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"            case EVENT: {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"                    String[] varargs \u003d args.split(\"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"                    String description \u003d varargs[0], from \u003d varargs[1], to \u003d varargs[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"                    taskList.add(description, CommandType.EVENT, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"                    throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"            case DELETE: {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"                    int taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"tanyyyming"},"content":"                    taskList.delete(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"tanyyyming"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"tanyyyming"},"content":"                    throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"tanyyyming"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"tanyyyming"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"tanyyyming"},"content":"            throw new InvalidCommandException(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tanyyyming":98}},{"path":"src/main/java/services/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    private final static String HORIZONTAL_LINE \u003d \"_________________________________________________________________________\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public void exit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        String exitMessage \u003d \"Goodbye, sir.\\n\" + \"Shutting down...\";","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"        new Ui().print(exitMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    public void print(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"        String messageWithHorizontalLine \u003d HORIZONTAL_LINE + message + \"\\n\" + HORIZONTAL_LINE;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"        System.out.print(messageWithHorizontalLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    public void greet() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"        String greetMessage \u003d \"At your service, sir.\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"        print(greetMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanyyyming":20}},{"path":"src/main/java/services/bizerrors/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class EmptyArgumentException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public EmptyArgumentException(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(String.format(\"Sir, I did not catch what you say after the command (%s).\\nI beg your pardon.\", command));","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":9}},{"path":"src/main/java/services/bizerrors/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class IndexOutOfRangeException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public IndexOutOfRangeException(int index, int taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(String.format(\"Sir, your calendar does not contain this task index (%d).\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"                \"It currently has %d tasks.\", index, taskCount));","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":10}},{"path":"src/main/java/services/bizerrors/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class InvalidArgumentException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public InvalidArgumentException(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(String.format(\"Sir, please check again to ensure you provide the correct arguments for command (%s).\", command));","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":9}},{"path":"src/main/java/services/bizerrors/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class InvalidCommandException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(String.format(\"Sorry, sir. Executing this command (%s) is beyond my capabilities.\", command));","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":9}},{"path":"src/main/java/services/bizerrors/JarvisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class JarvisException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    public JarvisException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"        // add the newline for formatting of the error message","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"        super(\"\\n\"+message);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":8}},{"path":"src/main/java/services/bizerrors/ReadFromFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class ReadFromFileException extends JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    public ReadFromFileException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"        super(\"Sorry, sir. I am unable to read your tasks from file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tanyyyming":7}},{"path":"src/main/java/services/bizerrors/SaveToFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class SaveToFileException extends JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    public SaveToFileException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"        super(\"Sorry, sir. I am unable to save your tasks to file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tanyyyming":7}},{"path":"src/main/java/services/tasklist/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.InvalidArgumentException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.ReadFromFileException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.SaveToFileException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    private File dataFile;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    public Storage(String dataFilePath) throws SaveToFileException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"            File file \u003d new File(dataFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"            dataFile \u003d file;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"            throw new SaveToFileException();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"    public void save(List\u003cTask\u003e tasks) throws SaveToFileException {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"            FileWriter fileWriter \u003d new FileWriter(dataFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"                fileWriter.write(task.encode() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"            throw new SaveToFileException();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"    public List\u003cTask\u003e load() throws ReadFromFileException, InvalidArgumentException {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"                String encodedTask \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"                Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"                String[] varargs \u003d encodedTask.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"                switch (encodedTask.charAt(0)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"                    task \u003d new Todo(varargs[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"                    task \u003d new Deadline(varargs[2], varargs[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"                    task \u003d new Event(varargs[2], varargs[3], varargs[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"                default:","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"                    return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"                if (varargs[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"                    task.setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"                taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"            scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"            return taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"            throw new ReadFromFileException();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tanyyyming":76}},{"path":"src/main/java/services/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import command.CommandType;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import services.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.EmptyArgumentException;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.IndexOutOfRangeException;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.JarvisException;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Event;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Task;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Todo;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    private Storage repo;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"    private int taskCount;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"    public TaskList(String dataFilePath, Ui ui) throws JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        repo \u003d new Storage(dataFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"        taskList \u003d repo.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"        taskCount \u003d taskList.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"    public void add(String description, CommandType taskType, String... args) throws JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"        Task newTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"        // this if block is unnecessary currently (is never reached), but it may be useful in the future.","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"            throw new EmptyArgumentException(taskType.toString().toLowerCase());","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"            case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"                newTask \u003d new Todo(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"                newTask \u003d new Deadline(description, args[0]);","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"            case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"                newTask \u003d new Event(description, args[0], args[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"            default:","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"                // the program should never reach this point.","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"                throw new JarvisException(\"Default case reached.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"        taskCount++;","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        repo.save(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"        ui.print(\"added: \" + newTask + \"\\n\" + taskCount + \" more tasks to do, Sir.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"    public void delete(int taskNumber) throws JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"            throw new IndexOutOfRangeException(taskNumber, taskCount);","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"        Task deletedTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"        taskCount--;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"        repo.save(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"        ui.print(\"removed: \" + deletedTask + \"\\n\" + taskCount + \" tasks left, Sir.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"    public void markDone(int taskNumber) throws JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"            throw new IndexOutOfRangeException(taskNumber, taskCount);","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"        task.setDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"        repo.save(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"        ui.print(\"Check.\\n\\t\" + task + \"\\n\" + \"Way to go, sir.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"    public void markUndone(int taskNumber) throws JarvisException {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"            throw new IndexOutOfRangeException(taskNumber, taskCount);","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"        task.setUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"        repo.save(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"        ui.print(\"As you wish, sir.\\n\\t\" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"tanyyyming"},"content":"    public void show() {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"tanyyyming"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"tanyyyming"},"content":"            ui.print(\"Sir, there are no tasks on your calendar.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"tanyyyming"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"tanyyyming"},"content":"        String result \u003d \"Sir, there are \" + taskCount + \" tasks on your calendar:\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"tanyyyming"},"content":"        for (int i \u003d 1; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"tanyyyming"},"content":"            result +\u003d i + \". \" + taskList.get(i - 1) + \"\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"tanyyyming"},"content":"        result +\u003d taskCount + \". \" + taskList.get(taskCount - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"tanyyyming"},"content":"        ui.print(result);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":99}},{"path":"src/main/java/services/tasklist/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.InvalidArgumentException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"    public Deadline(String description, String endTime) throws InvalidArgumentException {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"            this.endTime \u003d LocalDateTime.parse(endTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"            throw new InvalidArgumentException(\"deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"    public String encode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + endTime.format(outputFormatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":31}},{"path":"src/main/java/services/tasklist/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"    public Event(String description, String startTime, String endTime) throws IllegalArgumentException {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"            this.startTime \u003d LocalDateTime.parse(startTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"            this.endTime \u003d LocalDateTime.parse(endTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"            throw new IllegalArgumentException(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"    public String encode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + startTime + \" | \" + endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"                + \" (from: \" + startTime.format(outputFormatter)","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"                + \" to: \" + endTime.format(outputFormatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":33}},{"path":"src/main/java/services/tasklist/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    protected String checkBox;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"        this.checkBox \u003d \"[ ]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"        this.checkBox \u003d \"[X]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"        this.checkBox \u003d \"[ ]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    public abstract String encode();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"        return checkBox + \" \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanyyyming":30}},{"path":"src/main/java/services/tasklist/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    public String encode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"todo task one","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"deadline task 2 /by time 1","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"event task 3 /from time 2 /to time 3","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"exit","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"REM Note that the chatbot name has changed from Duke to Jarvis.Jarvis","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"java -classpath ..\\bin Jarvis.Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanyyyming":2,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"# Note that the chatbot name has changed from Duke to Jarvis.Jarvis","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"java -classpath ../bin Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanyyyming":2,"-":37}}]
