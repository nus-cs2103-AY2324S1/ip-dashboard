[{"path":"src/main/java/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"import command.CommandResolver;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"import services.Basics;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.JarvisException;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"public class Jarvis {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    public final static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    public final static String jarvisLogo \u003d \"                                                                 \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"            \"                          .::^^^^^^::.                           \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"            \"                     .^!??????777??????7~:                       \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"            \"                  .~?J?7!~^:::::::::^^~!?JJ7:                    \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"            \"                :7YJ!~^:..:::::7???7!~:::^~7Y?^                  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"            \"              .!Y?~^^..:^^:.. :?::^~!?J?!::^^7Y?:                \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"            \"             .?Y~^^..^^.     :YP?.    .^?Y7::^^?Y~               \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"            \"            .JY^^: ^~.      :5PP5:       :JY~.~:75~              \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"            \"            ?5^^: ~^       ^5PP5:~J.       75! ~.?Y:             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"            \"           ^5?:~ :~       ^5PP5:~PPJ.       ?Y::~^57             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"            \"           ~Y~:: ^.      ~PPP5: !PPPY.      ~5! ^.J?             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"            \"           .! .  .      :JYYJ:   ~PPPY:     ^57 . ^^             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"            \"            ! ^^ ^^               ~5PPY:    !5~.~ ~:             \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"            \"            ~^ ! .!.  !JJJJJJJJJJJ?5PPP5:  :YJ.^: !              \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"            \"             !.:~ .~.!5PPPPPPPPPPPP5555PY:^YJ.:~ ~:              \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"            \"             .!.:~..~!^................:~JY7.^^ ~^               \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"            \"              .~^.^^..^^:.          .:!?J7::^:.~:                \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"            \"                :~::^^:.::^^:::!777?J?7~::^::^^.                 \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"            \"                  :^^::::::::::~~~~^^::::::^^.                   \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"            \"                    .:^^:::::::::::::::^^^:                      \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"            \"                        .:::::.  :::::..                         \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"            \"                                                                 \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"            \"                                                                 \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"            \"          ^!.    ~7^    :77777!:  !!     ~7..!~  .~77777:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"            \"          Y\u0026^   7\u0026B#^   :!!!!!Y\u0026! 7\u0026Y   7\u0026Y :\u00265  G#?!7!!:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"            \"          J\u0026^  !\u0026J.G#:  ^JJJJJPB~  7\u0026? ~\u0026Y  :#5  JBYJJY?:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"            \"      :::^G#: !\u0026Y  .BB: !\u0026J^~G\u0026~    ?\u0026Y#5   :\u00265  .^~~~J\u0026J        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"            \"     .YYYYJ: :5Y.   :5? ^P~  .YY:    ?PY.   .5?  7YYYYYJ:        \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"            \"                                                                 \";","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"        System.out.println(jarvisLogo);","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"        Basics.greet();","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"        while (!userInput.equals(\"exit\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"            String command \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"            String arguments \u003d userInput.replaceFirst(command, \"\").strip();","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"                CommandResolver.resolve(command, arguments);","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"            } catch (JarvisException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"                System.out.print(e);","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"        Basics.exit();","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanyyyming":61}},{"path":"src/main/java/command/CommandResolver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package command;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.EmptyArgumentException;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.InvalidArgumentException;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.InvalidCommandException;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.JarvisException;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"public class CommandResolver {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    public static void resolve(String command, String args) throws JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"            CommandType commandType \u003d CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"            // go through commands without any arguments.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"                case LIST: {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"                    List.show();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"                    return;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"            if (args.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"                throw new EmptyArgumentException(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"            // go through commands with arguments.","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"                case MARK: {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"                        int taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"                        List.markDone(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"                        throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"                    return;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"                case UNMARK: {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"                        int taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"                        List.markUndone(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"                        throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"                    return;","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"                case TODO: {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"                    List.add(args, CommandType.TODO);","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"                    return;","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"                case DEADLINE: {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"                        String[] varargs \u003d args.split(\"\\\\s+/by\\\\s+\");","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"                        String description \u003d varargs[0], by \u003d varargs[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"                        List.add(description, CommandType.DEADLINE, by);","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"                        throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"                    return;","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"                case EVENT: {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"                        String[] varargs \u003d args.split(\"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\");","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"                        String description \u003d varargs[0], from \u003d varargs[1], to \u003d varargs[2];","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"                        List.add(description, CommandType.EVENT, from, to);","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"                        throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"                    return;","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"                case DELETE: {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"                        int taskNumber \u003d Integer.parseInt(args);","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"                        List.delete(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"                        throw new InvalidArgumentException(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"                    return;","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"            throw new InvalidCommandException(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":84}},{"path":"src/main/java/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package command;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    LIST,","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    MARK, UNMARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    TODO, DEADLINE, EVENT,","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    DELETE","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":8}},{"path":"src/main/java/services/Basics.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Basics {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"        String greetMessage \u003d \"At your service, sir.\";","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        Format.print(greetMessage);","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    public static void exit() {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"        String exitMessage \u003d \"Goodbye, sir.\\n\" + \"Shutting down...\";","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"        Format.print(exitMessage);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    public static void echo(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"        Format.print(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanyyyming":18}},{"path":"src/main/java/services/Format.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Format {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    private final static String horizontalLine \u003d \"_________________________________________________________________________\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public static void print(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        String messageWithHorizontalLine \u003d horizontalLine + message + \"\\n\" + horizontalLine;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"        System.out.print(messageWithHorizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    public static String format(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"        String messageWithHorizontalLine \u003d horizontalLine + message + \"\\n\" + horizontalLine;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"        return messageWithHorizontalLine;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    public static String format(String formattedMessage, Object... args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"        String messageWithHorizontalLine \u003d horizontalLine + formattedMessage + \"\\n\" + horizontalLine;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"        return String.format(messageWithHorizontalLine, args);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanyyyming":20}},{"path":"src/main/java/services/bizerrors/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Format;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class EmptyArgumentException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public EmptyArgumentException(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(Format.format(\"Sir, I did not catch what you say after the command (%s).\\nI beg your pardon.\", command));","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":9}},{"path":"src/main/java/services/bizerrors/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Format;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class IndexOutOfRangeException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public IndexOutOfRangeException(int index, int taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(Format.format(\"Sir, your calendar does not contain this task index (%d).\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"                \"It currently has %d tasks.\", index, taskCount));","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":10}},{"path":"src/main/java/services/bizerrors/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Format;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class InvalidArgumentException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public InvalidArgumentException(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(Format.format(\"Sir, please check again to ensure you provide the correct arguments for command (%s).\", command));","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":9}},{"path":"src/main/java/services/bizerrors/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import services.Format;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"public class InvalidCommandException extends JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(Format.format(\"Sorry, sir. Executing this command (%s) is beyond my capabilities.\", command));","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":9}},{"path":"src/main/java/services/bizerrors/JarvisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.bizerrors;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class JarvisException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    public JarvisException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"        // add the newline for formatting of the error message","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"        super(\"\\n\"+message);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":8}},{"path":"src/main/java/services/tasklist/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import command.CommandType;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import services.Format;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.EmptyArgumentException;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.IndexOutOfRangeException;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.InvalidArgumentException;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"import services.bizerrors.JarvisException;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Event;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Task;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"import services.tasklist.tasks.Todo;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"public class List {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"    public static void add(String description, CommandType taskType, String... args) throws JarvisException {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"        Task newTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"        // this if block is unnecessary currently (is never reached), but it may be useful in the future.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"            throw new EmptyArgumentException(taskType.toString().toLowerCase());","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"            case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"                newTask \u003d new Todo(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"                newTask \u003d new Deadline(description, args[0]);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"            case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"                newTask \u003d new Event(description, args[0], args[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"            default:","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"                // the program should never reach this point.","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"                throw new JarvisException(\"Default case reached.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"        taskCount++;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"        Format.print(\"added: \" + newTask + \"\\n\" + taskCount + \" more tasks to do, Sir.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"    public static void delete(int taskNumber) throws IndexOutOfRangeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"            throw new IndexOutOfRangeException(taskNumber, taskCount);","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"        Task deletedTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"        taskCount--;","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        Format.print(\"removed: \" + deletedTask + \"\\n\" + taskCount + \" tasks left, Sir.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"    public static void markDone(int taskNumber) throws IndexOutOfRangeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"            throw new IndexOutOfRangeException(taskNumber, taskCount);","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"        task.setDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"        Format.print(\"Check.\\n\\t\" + task + \"\\n\" + \"Way to go, sir.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"    public static void markUndone(int taskNumber) throws IndexOutOfRangeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskCount) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"            throw new IndexOutOfRangeException(taskNumber, taskCount);","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"        task.setUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"        Format.print(\"As you wish, sir.\\n\\t\" + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"    public static void show() {","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"            Format.print(\"Sir, there are no tasks on your calendar.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"        String result \u003d \"Sir, there are \" + taskCount + \" tasks on your calendar:\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"        for (int i \u003d 1; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"            result +\u003d i + \". \" + taskList.get(i - 1) + \"\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"        result +\u003d taskCount + \". \" + taskList.get(taskCount - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"        Format.print(result);","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":85}},{"path":"src/main/java/services/tasklist/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    private String endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    public Deadline(String description, String endTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + endTime + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":15}},{"path":"src/main/java/services/tasklist/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    private String startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    private String endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":17}},{"path":"src/main/java/services/tasklist/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"    private String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"    private String checkBox;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"        this.checkBox \u003d \"[ ]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"        this.checkBox \u003d \"[X]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"        this.checkBox \u003d \"[ ]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"        return checkBox + \" \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanyyyming":28}},{"path":"src/main/java/services/tasklist/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package services.tasklist.tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"todo task one","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"deadline task 2 /by time 1","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"event task 3 /from time 2 /to time 3","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"exit","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanyyyming":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"REM Note that the chatbot name has changed from Duke to Jarvis","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"java -classpath ..\\bin Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanyyyming":2,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"# Note that the chatbot name has changed from Duke to Jarvis","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"java -classpath ../bin Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanyyyming":2,"-":37}}]
