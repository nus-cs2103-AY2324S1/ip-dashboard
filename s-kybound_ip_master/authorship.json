[{"path":"src/main/java/Crusader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-kybound"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"s-kybound"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"s-kybound"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"s-kybound"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"s-kybound"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"s-kybound"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"s-kybound"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"s-kybound"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"s-kybound"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"s-kybound"},"content":"public class Crusader {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"s-kybound"},"content":"    /** Logo generated from https://patorjk.com/software/taag */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"s-kybound"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"s-kybound"},"content":"              \"   _____                          _\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"s-kybound"},"content":"            + \"  / ____|                        | |\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"s-kybound"},"content":"            + \" | |     _ __ _   _ ___  __ _  __| | ___ _ __\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"s-kybound"},"content":"            + \" | |    | \u0027__| | | / __|/ _` |/ _` |/ _ \\\\ \u0027__|\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"s-kybound"},"content":"            + \" | |____| |  | |_| \\\\__ \\\\ (_| | (_| |  __/ |\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"s-kybound"},"content":"            + \"  \\\\_____|_|   \\\\__,_|___/\\\\__,_|\\\\__,_|\\\\___|_|\";","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"s-kybound"},"content":"     * A list of tasks for the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"s-kybound"},"content":"    private static final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"s-kybound"},"content":"     * The filepath used to save data.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"s-kybound"},"content":"    private static final String SAVE_FILE \u003d \"./data/crusader.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"s-kybound"},"content":"     * The date and time format used for all input in this program.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"s-kybound"},"content":"    private static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy kk\");","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"s-kybound"},"content":"     * Describes the list of tasks in the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"s-kybound"},"content":"    private static void tasksToString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"s-kybound"},"content":"        for (int x \u003d 0; x \u003c TASKS.size(); x++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"s-kybound"},"content":"            System.out.printf(\"%d. %s\\n\", x + 1, TASKS.get(x).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"s-kybound"},"content":"        addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"s-kybound"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"s-kybound"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"s-kybound"},"content":"     * @param index index of the task to be marked. 1-indexed.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"s-kybound"},"content":"    private static void mark(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"s-kybound"},"content":"        Task task \u003d TASKS.get(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"I have marked the task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"s-kybound"},"content":"        task.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"s-kybound"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"s-kybound"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"s-kybound"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"s-kybound"},"content":"     * @param index index of the task to be unmarked. 1-indexed.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"s-kybound"},"content":"    private static void unmark(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"s-kybound"},"content":"        Task task \u003d TASKS.get(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"I have unmarked the task, it is no longer done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"s-kybound"},"content":"        task.unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"s-kybound"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"s-kybound"},"content":"     * Deletes a task.","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"s-kybound"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"s-kybound"},"content":"     * @param index index of the task to be deleted. 1-indexed.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"s-kybound"},"content":"    private static void delete(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"s-kybound"},"content":"        Task task \u003d TASKS.get(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"I have deleted the following task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"s-kybound"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"s-kybound"},"content":"        TASKS.remove(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"s-kybound"},"content":"        System.out.printf(\"Now there are %d tasks in the list.\\n\", TASKS.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"s-kybound"},"content":"     * Displays the logo for the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"s-kybound"},"content":"    private static void showLogo() {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"s-kybound"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"s-kybound"},"content":"        addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"s-kybound"},"content":"     * Generates a horizontal line to divide parts of the conversation.","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"s-kybound"},"content":"    private static void addDivider() {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"s-kybound"},"content":"     * Makes the chatbot say something.","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"s-kybound"},"content":"     * Also adds a divider.","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"s-kybound"},"content":"    private static void say(String line) {","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"s-kybound"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"s-kybound"},"content":"        addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"s-kybound"},"content":"     * Greets the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"s-kybound"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"s-kybound"},"content":"        say(\"Hi, I am CRUSADER\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"s-kybound"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"s-kybound"},"content":"    private static void farewell() {","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"s-kybound"},"content":"        say(\"Bye!\\nHave a great day!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"s-kybound"},"content":"     * Parses dates and times entered.","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"s-kybound"},"content":"    private static Date parseDateTime(String dateTimeString) throws ParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"s-kybound"},"content":"        return DATE_FORMAT.parse(dateTimeString);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"s-kybound"},"content":"     * Parses the prompt to generate a new Todo Task.","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"s-kybound"},"content":"     * @param prompt The prompt entered by the user","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"s-kybound"},"content":"    private static void addTodo(String prompt) {","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"s-kybound"},"content":"        if (prompt.length() \u003c 5) {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Hmm, todo should have something inside!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"s-kybound"},"content":"        String name \u003d prompt.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"s-kybound"},"content":"        Todo t \u003d new Todo(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"Adding the task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"s-kybound"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"s-kybound"},"content":"        TASKS.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"s-kybound"},"content":"        System.out.printf(\"Now there are %d tasks in the list.\\n\", TASKS.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"s-kybound"},"content":"        addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"s-kybound"},"content":"     * Parses the prompt to generate a new Event Task.","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"s-kybound"},"content":"     * @param prompt The prompt entered by the user","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"s-kybound"},"content":"    private static void addEvent(String prompt) throws ParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"s-kybound"},"content":"        int fromPosition \u003d prompt.indexOf(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"s-kybound"},"content":"        if (fromPosition \u003c 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Hmm, an event must have /from!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"s-kybound"},"content":"        int toPosition \u003d prompt.indexOf(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"s-kybound"},"content":"        if (toPosition \u003c 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Hmm, an event must have /to!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"s-kybound"},"content":"        if (toPosition \u003c\u003d fromPosition ) {","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Hmm, /to should be in front of /from!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"s-kybound"},"content":"        if (fromPosition \u003c 7) {","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"There should be an event name!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"s-kybound"},"content":"        if (fromPosition + 6 \u003e toPosition - 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Please specify a /from parameter!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"s-kybound"},"content":"        if (toPosition + 4 \u003e prompt.trim().length()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Please specify a /to parameter!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"s-kybound"},"content":"        String name \u003d prompt.substring(6, fromPosition - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"s-kybound"},"content":"        String from \u003d prompt.substring(fromPosition + 6, toPosition - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"s-kybound"},"content":"        String to \u003d prompt.substring(toPosition + 4);","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"s-kybound"},"content":"        Event e \u003d new Event(name, parseDateTime(from), parseDateTime(to));","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"Adding the task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"s-kybound"},"content":"        System.out.println(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"s-kybound"},"content":"        TASKS.add(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"s-kybound"},"content":"        System.out.printf(\"Now there are %d tasks in the list.\\n\", TASKS.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"s-kybound"},"content":"        addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"s-kybound"},"content":"     * Parses the prompt to generate a new Deadline Task.","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"s-kybound"},"content":"     * @param prompt The prompt entered by the user","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"s-kybound"},"content":"    private static void addDeadline(String prompt) throws ParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"s-kybound"},"content":"        int byPosition \u003d prompt.indexOf(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"s-kybound"},"content":"        if (byPosition \u003c 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Hmm, a deadline must have /by!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"s-kybound"},"content":"        if (byPosition + 4 \u003e prompt.trim().length()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException(\"Please specify a /to parameter!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"s-kybound"},"content":"        String name \u003d prompt.substring(9, byPosition - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"s-kybound"},"content":"        String by \u003d prompt.substring(byPosition + 4);","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"s-kybound"},"content":"        Deadline d \u003d new Deadline(name, parseDateTime(by));","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"s-kybound"},"content":"        System.out.println(\"Adding the task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"s-kybound"},"content":"        System.out.println(d.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"s-kybound"},"content":"        TASKS.add(d);","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"s-kybound"},"content":"        System.out.printf(\"Now there are %d tasks in the list.\\n\", TASKS.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"s-kybound"},"content":"        addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"s-kybound"},"content":"     * Loads into TASKS saved tasks from a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"s-kybound"},"content":"     * @param loadPath Path of the saved file.","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"s-kybound"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"s-kybound"},"content":"    private static void loadIntoTasks(String loadPath) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"s-kybound"},"content":"        File save \u003d new File(loadPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"s-kybound"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"s-kybound"},"content":"            Scanner scanner \u003d new Scanner(save);","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"s-kybound"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"s-kybound"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"s-kybound"},"content":"                // parse the line","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"s-kybound"},"content":"                Task task \u003d parseSavedTask(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"s-kybound"},"content":"                TASKS.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"s-kybound"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"s-kybound"},"content":"            say(\"Saved data has been loaded!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"s-kybound"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"s-kybound"},"content":"            say(\"No saved data was found!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"s-kybound"},"content":"            // make the file","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"s-kybound"},"content":"            save.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"s-kybound"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"s-kybound"},"content":"            say(\"The saved data wasn\u0027t saved properly! Ignoring it...\");","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"s-kybound"},"content":"     * Parses a single task saved in the text file.","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"s-kybound"},"content":"     * @param taskString Line to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"s-kybound"},"content":"     * @return A new Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"s-kybound"},"content":"    private static Task parseSavedTask(String taskString) throws ParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"s-kybound"},"content":"        String[] components \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"s-kybound"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"s-kybound"},"content":"        switch (components[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"s-kybound"},"content":"        case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"s-kybound"},"content":"            task \u003d new Event(components[1], parseDateTime(components[3]), parseDateTime(components[4]));","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"s-kybound"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"s-kybound"},"content":"        case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"s-kybound"},"content":"            task \u003d new Todo(components[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"s-kybound"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"s-kybound"},"content":"        case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"s-kybound"},"content":"            task \u003d new Deadline(components[1], parseDateTime(components[3]));","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"s-kybound"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"s-kybound"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"s-kybound"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"s-kybound"},"content":"        if (components[2].equals(\"X\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"s-kybound"},"content":"            task.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"s-kybound"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":257,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"s-kybound"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"s-kybound"},"content":"     * Saves the Tasks in TASKS to a given file.","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"s-kybound"},"content":"     * @param savePath Path to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"s-kybound"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"s-kybound"},"content":"    private static void saveTasks(String savePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"s-kybound"},"content":"        File save \u003d new File(savePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"s-kybound"},"content":"        try (PrintWriter fileWriter \u003d new PrintWriter(save)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"s-kybound"},"content":"            for (Task task : TASKS) {","lastModifiedDate":"2023-09-01"},{"lineNumber":266,"author":{"gitId":"s-kybound"},"content":"                fileWriter.println(task.toFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"s-kybound"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":268,"author":{"gitId":"s-kybound"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"s-kybound"},"content":"            say(\"Critical error in saving the data! It wasn\u0027t saved :(\\n Error: \" + e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":271,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":273,"author":{"gitId":"s-kybound"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":274,"author":{"gitId":"s-kybound"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":275,"author":{"gitId":"s-kybound"},"content":"        boolean notEnded \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":276,"author":{"gitId":"s-kybound"},"content":"        addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"s-kybound"},"content":"        showLogo();","lastModifiedDate":"2023-08-23"},{"lineNumber":278,"author":{"gitId":"s-kybound"},"content":"        greet();","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"s-kybound"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":280,"author":{"gitId":"s-kybound"},"content":"            loadIntoTasks(SAVE_FILE);","lastModifiedDate":"2023-08-31"},{"lineNumber":281,"author":{"gitId":"s-kybound"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":282,"author":{"gitId":"s-kybound"},"content":"            say(\"ERROR: Unable to load or create file!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":283,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":284,"author":{"gitId":"s-kybound"},"content":"        while (notEnded) {","lastModifiedDate":"2023-08-24"},{"lineNumber":285,"author":{"gitId":"s-kybound"},"content":"            String currentPrompt \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":286,"author":{"gitId":"s-kybound"},"content":"            addDivider();","lastModifiedDate":"2023-08-24"},{"lineNumber":287,"author":{"gitId":"s-kybound"},"content":"            // Match the command based on the first word of the string","lastModifiedDate":"2023-08-24"},{"lineNumber":288,"author":{"gitId":"s-kybound"},"content":"            switch (currentPrompt.contains(\" \")","lastModifiedDate":"2023-08-24"},{"lineNumber":289,"author":{"gitId":"s-kybound"},"content":"                    ? currentPrompt.split(\" \")[0]","lastModifiedDate":"2023-08-24"},{"lineNumber":290,"author":{"gitId":"s-kybound"},"content":"                    : currentPrompt) {","lastModifiedDate":"2023-08-24"},{"lineNumber":291,"author":{"gitId":"s-kybound"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":292,"author":{"gitId":"s-kybound"},"content":"                notEnded \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":293,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":294,"author":{"gitId":"s-kybound"},"content":"            case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":295,"author":{"gitId":"s-kybound"},"content":"                tasksToString();","lastModifiedDate":"2023-08-24"},{"lineNumber":296,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":297,"author":{"gitId":"s-kybound"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":298,"author":{"gitId":"s-kybound"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":299,"author":{"gitId":"s-kybound"},"content":"                    int i \u003d Integer.parseInt(currentPrompt.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":300,"author":{"gitId":"s-kybound"},"content":"                    mark(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":301,"author":{"gitId":"s-kybound"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":302,"author":{"gitId":"s-kybound"},"content":"                    say(\"Hmm, there\u0027s supposed to be something in front of \\\"mark\\\"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":303,"author":{"gitId":"s-kybound"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":304,"author":{"gitId":"s-kybound"},"content":"                    say(\"Hmm, there should be a NUMBER in front of \\\"mark\\\"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":305,"author":{"gitId":"s-kybound"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":306,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":307,"author":{"gitId":"s-kybound"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":308,"author":{"gitId":"s-kybound"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":309,"author":{"gitId":"s-kybound"},"content":"                    int j \u003d Integer.parseInt(currentPrompt.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":310,"author":{"gitId":"s-kybound"},"content":"                    unmark(j);","lastModifiedDate":"2023-08-24"},{"lineNumber":311,"author":{"gitId":"s-kybound"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":312,"author":{"gitId":"s-kybound"},"content":"                    say(\"Hmm, there\u0027s supposed to be something in front of \\\"unmark\\\"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":313,"author":{"gitId":"s-kybound"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":314,"author":{"gitId":"s-kybound"},"content":"                    say(\"Hmm, there should be a NUMBER in front of \\\"unmark\\\"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":315,"author":{"gitId":"s-kybound"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":316,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":317,"author":{"gitId":"s-kybound"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":318,"author":{"gitId":"s-kybound"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":319,"author":{"gitId":"s-kybound"},"content":"                    addTodo(currentPrompt);","lastModifiedDate":"2023-08-24"},{"lineNumber":320,"author":{"gitId":"s-kybound"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":321,"author":{"gitId":"s-kybound"},"content":"                    say(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":322,"author":{"gitId":"s-kybound"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":323,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":324,"author":{"gitId":"s-kybound"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":325,"author":{"gitId":"s-kybound"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":326,"author":{"gitId":"s-kybound"},"content":"                    addEvent(currentPrompt);","lastModifiedDate":"2023-08-24"},{"lineNumber":327,"author":{"gitId":"s-kybound"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":328,"author":{"gitId":"s-kybound"},"content":"                    say(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":329,"author":{"gitId":"s-kybound"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":330,"author":{"gitId":"s-kybound"},"content":"                    say(\"Sorry, I don\u0027t quite understand the dates you gave!\\nI only understand dd/MM/yyyy HH (24-hour)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":331,"author":{"gitId":"s-kybound"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":332,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":333,"author":{"gitId":"s-kybound"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":334,"author":{"gitId":"s-kybound"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":335,"author":{"gitId":"s-kybound"},"content":"                    addDeadline(currentPrompt);","lastModifiedDate":"2023-08-24"},{"lineNumber":336,"author":{"gitId":"s-kybound"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":337,"author":{"gitId":"s-kybound"},"content":"                    say(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":338,"author":{"gitId":"s-kybound"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":339,"author":{"gitId":"s-kybound"},"content":"                    say(\"Sorry, I don\u0027t quite understand the dates you gave!\\nI only understand dd/MM/yyyy HH (24-hour)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":340,"author":{"gitId":"s-kybound"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":341,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":342,"author":{"gitId":"s-kybound"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":343,"author":{"gitId":"s-kybound"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":344,"author":{"gitId":"s-kybound"},"content":"                    int k \u003d Integer.parseInt(currentPrompt.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":345,"author":{"gitId":"s-kybound"},"content":"                    delete(k);","lastModifiedDate":"2023-08-24"},{"lineNumber":346,"author":{"gitId":"s-kybound"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":347,"author":{"gitId":"s-kybound"},"content":"                    say(\"Hmm, there\u0027s supposed to be something in front of \\\"delete\\\"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":348,"author":{"gitId":"s-kybound"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":349,"author":{"gitId":"s-kybound"},"content":"                    say(\"Hmm, there should be a NUMBER in front of \\\"delete\\\"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":350,"author":{"gitId":"s-kybound"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":351,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":352,"author":{"gitId":"s-kybound"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":353,"author":{"gitId":"s-kybound"},"content":"                say(\"Sorry, but I\u0027m not sure what that is...\");","lastModifiedDate":"2023-08-24"},{"lineNumber":354,"author":{"gitId":"s-kybound"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":355,"author":{"gitId":"s-kybound"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":356,"author":{"gitId":"s-kybound"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":357,"author":{"gitId":"s-kybound"},"content":"        saveTasks(SAVE_FILE);","lastModifiedDate":"2023-08-31"},{"lineNumber":358,"author":{"gitId":"s-kybound"},"content":"        farewell();","lastModifiedDate":"2023-08-24"},{"lineNumber":359,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":360,"author":{"gitId":"s-kybound"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"s-kybound":360}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-kybound"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"s-kybound"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"s-kybound"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"s-kybound"},"content":"    private final Date by;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"s-kybound"},"content":"    private final SimpleDateFormat presentationFormat \u003d new SimpleDateFormat(\"MMM dd yyyy kk\");","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"s-kybound"},"content":"    private final SimpleDateFormat saveFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy kk\");","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"s-kybound"},"content":"    public Deadline(String name, Date by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"s-kybound"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"s-kybound"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"s-kybound"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"s-kybound"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"s-kybound"},"content":"        return String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"s-kybound"},"content":"                \"[D]%s (by: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"s-kybound"},"content":"                super.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"s-kybound"},"content":"                presentationFormat.format(this.by));","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"s-kybound"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"s-kybound"},"content":"    public String toFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"s-kybound"},"content":"        return String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"s-kybound"},"content":"                \"D|%s|%s|%s\",","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"s-kybound"},"content":"                super.getName(),","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"s-kybound"},"content":"                super.isDone() ? \"X\" : \" \",","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"s-kybound"},"content":"                saveFormat.format(this.by));","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"s-kybound"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s-kybound":31}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-kybound"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"s-kybound"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"s-kybound"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"s-kybound"},"content":"    private final Date from;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"s-kybound"},"content":"    private final Date to;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"s-kybound"},"content":"    private final SimpleDateFormat presentationFormat \u003d new SimpleDateFormat(\"MMM dd yyyy kk\");","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"s-kybound"},"content":"    private final SimpleDateFormat saveFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy kk\");","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"s-kybound"},"content":"    public Event(String name, Date from, Date to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"s-kybound"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"s-kybound"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"s-kybound"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"s-kybound"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"s-kybound"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"s-kybound"},"content":"        return String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"s-kybound"},"content":"                \"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"s-kybound"},"content":"                super.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"s-kybound"},"content":"                presentationFormat.format(this.from),","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"s-kybound"},"content":"                presentationFormat.format(this.to));","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"s-kybound"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"s-kybound"},"content":"    public String toFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"s-kybound"},"content":"        return String.format(","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"s-kybound"},"content":"                \"E|%s|%s|%s|%s\",","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"s-kybound"},"content":"                super.getName(),","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"s-kybound"},"content":"                super.isDone() ? \"X\" : \" \",","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"s-kybound"},"content":"                saveFormat.format(this.from),","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"s-kybound"},"content":"                saveFormat.format(this.to));","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"s-kybound"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s-kybound":35}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-kybound"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"s-kybound"},"content":" * A task to do in the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"s-kybound"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"s-kybound"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"s-kybound"},"content":"    /** Name of the task */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"s-kybound"},"content":"    private final String name;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"s-kybound"},"content":"    /** The completion status of the task */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"s-kybound"},"content":"    private boolean doneness;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"s-kybound"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"s-kybound"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"s-kybound"},"content":"        doneness \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"s-kybound"},"content":"    public String getName() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"s-kybound"},"content":"        return name;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"s-kybound"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"s-kybound"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"s-kybound"},"content":"        return String.format(\"[%s] %s\", isDone() ? \"X\" : \" \", name);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"s-kybound"},"content":"    public abstract String toFormat();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"s-kybound"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"s-kybound"},"content":"        return doneness;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"s-kybound"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"s-kybound"},"content":"        doneness \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"s-kybound"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"s-kybound"},"content":"        doneness \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"s-kybound"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s-kybound":38}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-kybound"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"s-kybound"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"s-kybound"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"s-kybound"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"s-kybound"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"s-kybound"},"content":"        return String.format(\"[T]%s\",super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"s-kybound"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"s-kybound"},"content":"    public String toFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"s-kybound"},"content":"        return String.format(\"T|%s|%s\", super.getName(), super.isDone() ? \"X\" : \" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"s-kybound"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"s-kybound"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s-kybound":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"s-kybound"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"s-kybound"},"content":"todo buy water","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"s-kybound"},"content":"event drink the water /from now /to later","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"s-kybound"},"content":"deadline drink water /by tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"s-kybound"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"s-kybound"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"s-kybound"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"s-kybound"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"s-kybound"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"s-kybound"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"s-kybound"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"s-kybound"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s-kybound":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"s-kybound"},"content":"java -classpath ..\\bin Crusader \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"s-kybound":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"s-kybound"},"content":"java -classpath ../bin Crusader \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"s-kybound":1,"-":37}}]
