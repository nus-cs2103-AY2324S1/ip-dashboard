[{"path":"src/main/java/DeterministicParrot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"import java.util.*;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"class DeterministicParrotException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"    public DeterministicParrotException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"@FunctionalInterface","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"interface CheckedConsumer\u003cT\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"    void accept(T t) throws DeterministicParrotException;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"public class DeterministicParrot {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"    private class Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"        private String name;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"        private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"        Task(String description){","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"            this.name \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"        public String getName(){","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"            return this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"        public boolean getIsDone(){","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"            return this.isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        public void markAsDone(){","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"        public void markAsUndone(){","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        public String toString(){","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"            return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"    private class ToDo extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"        ToDo(String s){","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"            super(s);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        public String toString(){","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"            return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"    private class Deadline extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"        private String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"        Deadline(String s, String by){","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"            super(s);","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"            this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        public String toString(){","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"    private class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"        private String timeStart;","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"        private String timeEnd;","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"        Event(String name, String timeStart, String timeEnd){","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"            super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"            this.timeStart \u003d timeStart;","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"            this.timeEnd \u003d timeEnd;","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"        public String toString(){","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.timeStart, this.timeEnd);","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"conradsoon"},"content":"    //init by setting input and output","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"    private Scanner s;","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"    private PrintWriter pw;","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"    private Map\u003cString, CheckedConsumer\u003cString[]\u003e\u003e commandHandlers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"    DeterministicParrot(){","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"        this.list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"conradsoon"},"content":"        s \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"conradsoon"},"content":"        pw \u003d new PrintWriter(System.out, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"conradsoon"},"content":"        this.initCommandHandlers();","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"conradsoon"},"content":"    DeterministicParrot(Scanner s, PrintWriter pw){","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"conradsoon"},"content":"        this.list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"        this.s \u003d s;","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"        this.pw \u003d pw;","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"conradsoon"},"content":"        this.initCommandHandlers();","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"conradsoon"},"content":"    private void initCommandHandlers() {","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"list\", args -\u003e printList());","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"bye\", args -\u003e bye());","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"mark\", args -\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"            markAsDone(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"unmark\", args -\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"conradsoon"},"content":"            markAsUndone(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"todo\", args -\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"conradsoon"},"content":"            addToDo(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"deadline\", args -\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"conradsoon"},"content":"            addDeadline(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"event\", args -\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"conradsoon"},"content":"            addEvent(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"conradsoon"},"content":"        commandHandlers.put(\"delete\", args -\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"conradsoon"},"content":"            deleteTask(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"conradsoon"},"content":"    private void printDash() {","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"conradsoon"},"content":"     *  Hello! I\u0027m [YOUR CHATBOT NAME]","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"conradsoon"},"content":"     *  What can I do for you?","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"conradsoon"},"content":"    private void greet() {","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"conradsoon"},"content":"        printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Hello! I\u0027m DeterministicParrot\");","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" +\"What can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"conradsoon"},"content":"        printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"conradsoon"},"content":"    private void echo(String s) {","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"conradsoon"},"content":"        printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + s);","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"conradsoon"},"content":"        printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"conradsoon"},"content":"    private void bye() {","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"conradsoon"},"content":"        printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"conradsoon"},"content":"        printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"conradsoon"},"content":"    private void printList(){","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"conradsoon"},"content":"        for(int i \u003d 0; i \u003c this.list.size(); i++){","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"conradsoon"},"content":"            this.pw.println(\"     \" + (i+1) + \". \" + this.list.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"conradsoon"},"content":"    private void addToList(String s){","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"conradsoon"},"content":"        //create task","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"conradsoon"},"content":"        Task t \u003d new Task(s);","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"conradsoon"},"content":"        this.list.add(t);","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"    \" + \"added: \" + s);","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"conradsoon"},"content":"    private void markAsDone(String args[]) throws DeterministicParrotException {","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"conradsoon"},"content":"        if(args.length \u003c 2){","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Please provide a task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"conradsoon"},"content":"        int i;","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"conradsoon"},"content":"            i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"conradsoon"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"conradsoon"},"content":"        if (i \u003c\u003d 0 || i \u003e list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Invalid task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"conradsoon"},"content":"        this.list.get(i-1).markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"    \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"       \" + this.list.get(i-1));","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"conradsoon"},"content":"    private void markAsUndone(String toks[]) throws DeterministicParrotException {","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"conradsoon"},"content":"        if(toks.length \u003c 2){","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Please provide a task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":175,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"conradsoon"},"content":"        int i;","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"conradsoon"},"content":"            i \u003d Integer.parseInt(toks[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":179,"author":{"gitId":"conradsoon"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"conradsoon"},"content":"        if (i \u003c\u003d 0 || i \u003e list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":183,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Invalid task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":184,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"conradsoon"},"content":"        this.list.get(i-1).markAsUndone();","lastModifiedDate":"2023-08-21"},{"lineNumber":186,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"    \" + \"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":187,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"       \" + this.list.get(i-1));","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":189,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":190,"author":{"gitId":"conradsoon"},"content":"    private void addToDo(String[] args) throws DeterministicParrotException {","lastModifiedDate":"2023-08-21"},{"lineNumber":191,"author":{"gitId":"conradsoon"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":192,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":193,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":194,"author":{"gitId":"conradsoon"},"content":"        String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":195,"author":{"gitId":"conradsoon"},"content":"        ToDo t \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-08-21"},{"lineNumber":196,"author":{"gitId":"conradsoon"},"content":"        this.list.add(t);","lastModifiedDate":"2023-08-21"},{"lineNumber":197,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"      \" + t);","lastModifiedDate":"2023-08-21"},{"lineNumber":199,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":200,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":201,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":202,"author":{"gitId":"conradsoon"},"content":"    private void addDeadline(String[] args) throws DeterministicParrotException {","lastModifiedDate":"2023-08-21"},{"lineNumber":203,"author":{"gitId":"conradsoon"},"content":"        int byIndex \u003d Arrays.asList(args).indexOf(\"/by\");","lastModifiedDate":"2023-08-21"},{"lineNumber":204,"author":{"gitId":"conradsoon"},"content":"        if (byIndex \u003d\u003d -1 || byIndex \u003d\u003d args.length - 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":205,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Invalid deadline format. Use /by to specify deadline time.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":206,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":207,"author":{"gitId":"conradsoon"},"content":"        String taskName \u003d String.join(\" \", Arrays.copyOfRange(args, 1, byIndex));","lastModifiedDate":"2023-08-21"},{"lineNumber":208,"author":{"gitId":"conradsoon"},"content":"        String deadline \u003d String.join(\" \", Arrays.copyOfRange(args, byIndex + 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":209,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":210,"author":{"gitId":"conradsoon"},"content":"        Deadline t \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2023-08-21"},{"lineNumber":211,"author":{"gitId":"conradsoon"},"content":"        this.list.add(t);","lastModifiedDate":"2023-08-21"},{"lineNumber":212,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":213,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"      \" + t);","lastModifiedDate":"2023-08-21"},{"lineNumber":214,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":215,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":216,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":217,"author":{"gitId":"conradsoon"},"content":"    private void addEvent(String[] args) throws DeterministicParrotException {","lastModifiedDate":"2023-08-21"},{"lineNumber":218,"author":{"gitId":"conradsoon"},"content":"        int fromIndex \u003d Arrays.asList(args).indexOf(\"/from\");","lastModifiedDate":"2023-08-21"},{"lineNumber":219,"author":{"gitId":"conradsoon"},"content":"        int toIndex \u003d Arrays.asList(args).indexOf(\"/to\");","lastModifiedDate":"2023-08-21"},{"lineNumber":220,"author":{"gitId":"conradsoon"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || toIndex \u003c\u003d fromIndex || fromIndex \u003d\u003d args.length - 1 || toIndex \u003d\u003d args.length - 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":221,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Invalid event format. Use /from and /to to specify event time.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":222,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":223,"author":{"gitId":"conradsoon"},"content":"        String eventName \u003d String.join(\" \", Arrays.copyOfRange(args, 1, fromIndex));","lastModifiedDate":"2023-08-21"},{"lineNumber":224,"author":{"gitId":"conradsoon"},"content":"        String startTime \u003d String.join(\" \", Arrays.copyOfRange(args, fromIndex + 1, toIndex));","lastModifiedDate":"2023-08-21"},{"lineNumber":225,"author":{"gitId":"conradsoon"},"content":"        String endTime \u003d String.join(\" \", Arrays.copyOfRange(args, toIndex + 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":226,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":227,"author":{"gitId":"conradsoon"},"content":"        Event t \u003d new Event(eventName, startTime, endTime);","lastModifiedDate":"2023-08-21"},{"lineNumber":228,"author":{"gitId":"conradsoon"},"content":"        this.list.add(t);","lastModifiedDate":"2023-08-21"},{"lineNumber":229,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"    \" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":230,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"       \" + t);","lastModifiedDate":"2023-08-21"},{"lineNumber":231,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":232,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":233,"author":{"gitId":"conradsoon"},"content":"    private void deleteTask(String args[]) throws DeterministicParrotException {","lastModifiedDate":"2023-08-21"},{"lineNumber":234,"author":{"gitId":"conradsoon"},"content":"        if(args.length \u003c 2){","lastModifiedDate":"2023-08-21"},{"lineNumber":235,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Please provide a task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":237,"author":{"gitId":"conradsoon"},"content":"        int i;","lastModifiedDate":"2023-08-21"},{"lineNumber":238,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":239,"author":{"gitId":"conradsoon"},"content":"            i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":240,"author":{"gitId":"conradsoon"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":241,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":242,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":243,"author":{"gitId":"conradsoon"},"content":"        if (i \u003c\u003d 0 || i \u003e list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":244,"author":{"gitId":"conradsoon"},"content":"            throw new DeterministicParrotException(\"Invalid task number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":245,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":246,"author":{"gitId":"conradsoon"},"content":"        Task t \u003d this.list.remove(i-1);","lastModifiedDate":"2023-08-21"},{"lineNumber":247,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"    \" + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":248,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"       \" + t);","lastModifiedDate":"2023-08-21"},{"lineNumber":249,"author":{"gitId":"conradsoon"},"content":"        this.pw.println(\"     \" + \"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":250,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":251,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":252,"author":{"gitId":"conradsoon"},"content":"    private void handleCommand(String input){","lastModifiedDate":"2023-08-21"},{"lineNumber":253,"author":{"gitId":"conradsoon"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":254,"author":{"gitId":"conradsoon"},"content":"        CheckedConsumer\u003cString[]\u003e cmdHandler \u003d this.commandHandlers.get(tokens[0]);","lastModifiedDate":"2023-08-21"},{"lineNumber":255,"author":{"gitId":"conradsoon"},"content":"        this.printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":256,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":257,"author":{"gitId":"conradsoon"},"content":"            if (cmdHandler !\u003d null) {","lastModifiedDate":"2023-08-21"},{"lineNumber":258,"author":{"gitId":"conradsoon"},"content":"                cmdHandler.accept(tokens);","lastModifiedDate":"2023-08-21"},{"lineNumber":259,"author":{"gitId":"conradsoon"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":260,"author":{"gitId":"conradsoon"},"content":"                throw new DeterministicParrotException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":261,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":262,"author":{"gitId":"conradsoon"},"content":"        } catch (DeterministicParrotException de) {","lastModifiedDate":"2023-08-21"},{"lineNumber":263,"author":{"gitId":"conradsoon"},"content":"            this.pw.println(\"     \" + de.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":264,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":265,"author":{"gitId":"conradsoon"},"content":"        finally{","lastModifiedDate":"2023-08-21"},{"lineNumber":266,"author":{"gitId":"conradsoon"},"content":"            this.printDash();","lastModifiedDate":"2023-08-21"},{"lineNumber":267,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":268,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":269,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":270,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":271,"author":{"gitId":"conradsoon"},"content":"    private void poll() {","lastModifiedDate":"2023-08-21"},{"lineNumber":272,"author":{"gitId":"conradsoon"},"content":"        this.greet();","lastModifiedDate":"2023-08-21"},{"lineNumber":273,"author":{"gitId":"conradsoon"},"content":"        while (true) {","lastModifiedDate":"2023-08-21"},{"lineNumber":274,"author":{"gitId":"conradsoon"},"content":"            String input \u003d this.s.nextLine().trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":275,"author":{"gitId":"conradsoon"},"content":"            if (input.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":276,"author":{"gitId":"conradsoon"},"content":"                continue; // Skip empty input","lastModifiedDate":"2023-08-21"},{"lineNumber":277,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":278,"author":{"gitId":"conradsoon"},"content":"            if(input.equals(\"bye\")){","lastModifiedDate":"2023-08-21"},{"lineNumber":279,"author":{"gitId":"conradsoon"},"content":"                bye();","lastModifiedDate":"2023-08-21"},{"lineNumber":280,"author":{"gitId":"conradsoon"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":281,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":282,"author":{"gitId":"conradsoon"},"content":"            handleCommand(input);","lastModifiedDate":"2023-08-21"},{"lineNumber":283,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":284,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":285,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":286,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":287,"author":{"gitId":"conradsoon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":288,"author":{"gitId":"conradsoon"},"content":"        DeterministicParrot parrot \u003d new DeterministicParrot();","lastModifiedDate":"2023-08-21"},{"lineNumber":289,"author":{"gitId":"conradsoon"},"content":"        parrot.poll();","lastModifiedDate":"2023-08-21"},{"lineNumber":290,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":291,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"conradsoon":291}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"conradsoon":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"#!/usr/bin/env zsh","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"java -classpath ../bin DeterministicParrot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"conradsoon":2,"-":36}}]
