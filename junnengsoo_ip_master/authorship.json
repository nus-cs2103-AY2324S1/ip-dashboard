[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"T | 0 | test","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"D | 0 | test | 2023-12-06","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"E | 0 | test | 2023-10-06 | 2023-11-06","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"junnengsoo":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"import Task.Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"import Task.Deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import Task.Event;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import Task.Todo;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import Exception.UnknownCommandException;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import Exception.EmptyDescriptionException;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    private static final String DATA_PATH \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    private static final String FILE_PATH \u003d DATA_PATH + \"/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    // Save tasks to file","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    public static void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"            if (!Files.exists(Paths.get(DATA_PATH))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"                Files.createDirectories(Paths.get(DATA_PATH));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"                lines.add(task.toFileFormat());","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"            Files.write(Paths.get(FILE_PATH), lines);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"            System.out.println(\"Error while saving tasks to file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    // Load tasks from file","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    public static ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"            if (Files.exists(Paths.get(FILE_PATH))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(FILE_PATH));","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"                for (String line : lines) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"                    tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"            System.out.println(\"Error while loading tasks from file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        } catch (Exception e) {  // Handling corrupted data format","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"            System.out.println(\"Corrupted data file. Starting with an empty task list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"    public static void filterInput(String[] words) throws UnknownCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"        // Only allows commands that are listed below","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand2Words \u003d command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\") ||","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"                command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand1Word \u003d command.equals(\"bye\") || command.equals(\"list\") || command.equals(\"help\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"        if (!validCommand2Words \u0026\u0026 !validCommand1Word) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        } else if (validCommand2Words \u0026\u0026 words.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"        String logo \u003d \"\u003e. \u003c\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"        String name \u003d \"your father\";","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"        String line \u003d \"_________________________\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(logo +","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"                line +","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"                \"Hello! I\u0027m \" + name + \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"                line);","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"        String input;","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d loadFromFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"        int taskIndex \u003d tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"            input \u003d scanner.nextLine().toLowerCase();","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"            String[] words \u003d input.split(\" \", 2); // splits into the command and the rest","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"                filterInput(words);","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"            } catch (UnknownCommandException | EmptyDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line + e.getMessage() + \"\\n\" + line);","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"                continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"junnengsoo"},"content":"            } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"junnengsoo"},"content":"                Task removedTask \u003d tasks.remove(index); // Removes and retrieves the task from the list","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"                taskIndex--;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line +","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"junnengsoo"},"content":"                        \"Noted. I\u0027ve removed this task:\\n  \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"junnengsoo"},"content":"                        removedTask +","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"junnengsoo"},"content":"                        \"\\nNow you have \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"junnengsoo"},"content":"                        tasks.size() +","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"junnengsoo"},"content":"                        \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"junnengsoo"},"content":"                        line);","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"junnengsoo"},"content":"            } else if (input.equals(\"help\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line + \"\\nCommands:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"junnengsoo"},"content":"                        \"- To add a todo: \u0027todo [description]\u0027\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"junnengsoo"},"content":"                        \"- To add a deadline: \u0027deadline [description] /by [date in format yyyy-MM-dd]\u0027\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"junnengsoo"},"content":"                        \"- To add an event: \u0027event [description] /from [start date in format yyyy-MM-dd] /to \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"junnengsoo"},"content":"                        \"[end date in format yyyy-MM-dd]\u0027\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"junnengsoo"},"content":"                        line);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"junnengsoo"},"content":"            } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"junnengsoo"},"content":"                Task newTask \u003d new Todo(words[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"junnengsoo"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"junnengsoo"},"content":"                taskIndex++;","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line + \"Got it. I\u0027ve added this task:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"junnengsoo"},"content":"                        newTask +","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"junnengsoo"},"content":"                        \"\\nNow you have \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"junnengsoo"},"content":"                        taskIndex +","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"junnengsoo"},"content":"                        \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"junnengsoo"},"content":"                        line);","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"junnengsoo"},"content":"            } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"junnengsoo"},"content":"                String[] parts \u003d words[1].split(\" /by \");","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"junnengsoo"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"junnengsoo"},"content":"                    System.out.println(line + \"Error: Please use the format \u0027deadline \u003ctask description\u003e \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"junnengsoo"},"content":"                            \"/by yyyy-MM-dd\u0027\\n\" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"junnengsoo"},"content":"                    continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"junnengsoo"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"junnengsoo"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"junnengsoo"},"content":"                    LocalDate.parse(parts[1]); // This will throw an exception if the date format is invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"junnengsoo"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"junnengsoo"},"content":"                    System.out.println(line + \"Error: Please enter the date in the format \u0027yyyy-MM-dd\u0027.\\n\" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"junnengsoo"},"content":"                    continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"junnengsoo"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"junnengsoo"},"content":"                Task newTask \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"junnengsoo"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"junnengsoo"},"content":"                taskIndex++;","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line +","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"junnengsoo"},"content":"                        \"Got it. I\u0027ve added this task:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"junnengsoo"},"content":"                        newTask +","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"junnengsoo"},"content":"                        \"\\nNow you have \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"junnengsoo"},"content":"                        taskIndex +","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"junnengsoo"},"content":"                        \" tasks in the list.\\n\" + line);","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"junnengsoo"},"content":"            } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"junnengsoo"},"content":"                String[] parts \u003d words[1].split(\" /from \"); // second part will consist the timings","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"junnengsoo"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"junnengsoo"},"content":"                    System.out.println(line + \"Error: Please use the format \u0027event \u003cevent description\u003e /from yyyy-MM-dd \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"junnengsoo"},"content":"                            \"/to yyyy-MM-dd\u0027\\n\" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"junnengsoo"},"content":"                    continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"junnengsoo"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"junnengsoo"},"content":"                String[] times \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"junnengsoo"},"content":"                if (times.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"junnengsoo"},"content":"                    System.out.println(line + \"Error: Please use the format \u0027event \u003cevent description\u003e /from yyyy-MM-dd \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"junnengsoo"},"content":"                            \"/to yyyy-MM-dd\u0027\\n\" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"junnengsoo"},"content":"                    continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"junnengsoo"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"junnengsoo"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"junnengsoo"},"content":"                    LocalDate.parse(times[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"junnengsoo"},"content":"                    LocalDate.parse(times[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"junnengsoo"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"junnengsoo"},"content":"                    System.out.println(line + \"Error: Please enter the dates in the format \u0027yyyy-MM-dd\u0027.\\n\" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"junnengsoo"},"content":"                    continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"junnengsoo"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"junnengsoo"},"content":"                Task newTask \u003d new Event(parts[0], times[0], times[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"junnengsoo"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"junnengsoo"},"content":"                taskIndex++;","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line +","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"junnengsoo"},"content":"                        \"Got it. I\u0027ve added this task:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"junnengsoo"},"content":"                        newTask +","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"junnengsoo"},"content":"                        \"\\nNow you have \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"junnengsoo"},"content":"                        taskIndex +","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"junnengsoo"},"content":"                        \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"junnengsoo"},"content":"                        line);","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"junnengsoo"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line + \"\\nHere are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"junnengsoo"},"content":"                for (int i \u003d 0; i \u003c taskIndex; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"junnengsoo"},"content":"                    System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"junnengsoo"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"junnengsoo"},"content":"            } else if (words[0].equals(\"mark\") \u0026\u0026 words.length \u003e 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"junnengsoo"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1; // string -\u003e int","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"junnengsoo"},"content":"                Task taskToMark \u003d tasks.get(index); // Get the task from the list","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"junnengsoo"},"content":"                taskToMark.markDone(); // Mark the task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"junnengsoo"},"content":"                tasks.set(index, taskToMark); // Update the task in the list","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line + \"\\nNice! I\u0027ve marked this task as done:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"junnengsoo"},"content":"                        taskToMark +","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"junnengsoo"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"junnengsoo"},"content":"                        line);","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"junnengsoo"},"content":"            } else if (words[0].equals(\"unmark\") \u0026\u0026 words.length \u003e 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"junnengsoo"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1; // string -\u003e int","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"junnengsoo"},"content":"                Task taskToUnmark \u003d tasks.get(index); // Get the task from the list","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"junnengsoo"},"content":"                taskToUnmark.unmarkDone(); // Mark the task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"junnengsoo"},"content":"                tasks.set(index, taskToUnmark); // Update the task in the list","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"junnengsoo"},"content":"                System.out.println(line +","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"junnengsoo"},"content":"                        \"\\nOK, I\u0027ve marked this task as not done yet:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"junnengsoo"},"content":"                        taskToUnmark +","lastModifiedDate":"2023-08-23"},{"lineNumber":206,"author":{"gitId":"junnengsoo"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":207,"author":{"gitId":"junnengsoo"},"content":"                        line);","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"junnengsoo"},"content":"            saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(line +","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"junnengsoo"},"content":"                \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"junnengsoo"},"content":"                line);","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"junnengsoo"},"content":"        scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junnengsoo":213,"-":4}},{"path":"src/main/java/Exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package Exception;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"        super(\"Type something in the description you dumb dumb, uwu.. \u003e\u003c\");","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":7}},{"path":"src/main/java/Exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package Exception;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"        super(\"What gibberish are you saying man?!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":7}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"        return \"D | \" + super.toFileFormat() + \" | \" + dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"            deadline.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        return \"[D][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (by: \" + dueDate.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"                \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":36}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        this.start \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        this.end \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        return \"E | \" + super.toFileFormat() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"            event.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        return \"[E][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (from: \" + start.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"                \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":37}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false; // Initially, the task is not done","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"        return (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"                return Todo.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"                return Deadline.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"                return Event.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":51}},{"path":"src/main/java/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import Task.Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        return \"T | \" + super.toFileFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"        Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"            todo.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        return \"[T][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"hello","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"todo homework","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"s@ECHO OFF","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junnengsoo":1,"-":20}}]
