[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"plugins {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"repositories {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"dependencies {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"test {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"application {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"shadowJar {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"run{","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":58}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"D | 0 | test | 2023-12-06","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"E | 0 | test | 2023-10-06 | 2023-11-06","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"T | 1 | test","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"T | 0 | event","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"T | 0 | 1","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"T | 0 | 2","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"T | 0 | homework","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"T | 0 | 1","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"junnengsoo":8}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":" * Represents the Duke chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to a chat bot that can process user input and respond accordingly.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    private static final String DATA_PATH \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"    private static final String FILE_PATH \u003d DATA_PATH + \"/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    private final Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error loading the tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e loadedTasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"            loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"            loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"            throw new IOException(\"Error loading tasks from storage.\", e);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d new TaskList(loadedTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"    public String deleteTask(String taskIndex) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"        Task removedTask \u003d tasks.removeTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"        String response \u003d \"Noted. I\u0027ve removed this task:\\n  \" + removedTask +","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"                \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"     * Adds a todo task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"    public String addTodo(String task) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Todo(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n  \" + newTask +","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"                \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"     * Adds a deadline task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"junnengsoo"},"content":"    public String addDeadline(String task) throws DateTimeParseException, IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d task.split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"junnengsoo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"junnengsoo"},"content":"            return \"Please use the format \u0027deadline \u003ctask description\u003e /by yyyy-MM-dd\u0027\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(parts[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"junnengsoo"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n  \" + newTask +","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"junnengsoo"},"content":"                \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"junnengsoo"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"junnengsoo"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"junnengsoo"},"content":"    public String addEvent(String task) throws DateTimeParseException, IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d task.split(\" /from \"); // second part will consist the timings","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"junnengsoo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"junnengsoo"},"content":"            return \"Please use the format \u0027event \u003cevent description\u003e /from yyyy-MM-dd \"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"junnengsoo"},"content":"                    + \"/to yyyy-MM-dd\u0027\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"junnengsoo"},"content":"        String[] times \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"junnengsoo"},"content":"        if (times.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"junnengsoo"},"content":"            return \"Please use the format \u0027event \u003cevent description\u003e /from yyyy-MM-dd \"","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"junnengsoo"},"content":"                    + \"/to yyyy-MM-dd\u0027\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"junnengsoo"},"content":"        // Throws exception if invalid format","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(times[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(times[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Event(parts[0], times[0], times[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"junnengsoo"},"content":"        response.append(\"Got it. I\u0027ve added this task:\\n  \").append(newTask)","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"junnengsoo"},"content":"                .append(\"\\nNow you have \").append(tasks.getSize()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"junnengsoo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"junnengsoo"},"content":"     * Lists all the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"junnengsoo"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"junnengsoo"},"content":"        response.append(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"junnengsoo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"junnengsoo"},"content":"            response.append((i + 1)).append(\".\").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"junnengsoo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"junnengsoo"},"content":"     * @param task The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"junnengsoo"},"content":"    public String markTaskDone(String task) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(task) - 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"junnengsoo"},"content":"        Task taskMarked \u003d tasks.markDone(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"junnengsoo"},"content":"        String response \u003d \"\\nNice! I\u0027ve marked this task as done:\\n  \" +","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"junnengsoo"},"content":"                taskMarked + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"junnengsoo"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"junnengsoo"},"content":"     * @param task The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"junnengsoo"},"content":"    public String unmarkTaskDone(String task) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(task) - 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"junnengsoo"},"content":"        Task taskUnmarked \u003d tasks.unmarkDone(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"junnengsoo"},"content":"        String response \u003d \"\\nOK, I\u0027ve marked this task as not done yet:\\n  \" +","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"junnengsoo"},"content":"                taskUnmarked + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"junnengsoo"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"junnengsoo"},"content":"     * Finds and lists all the tasks that match the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"junnengsoo"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"junnengsoo"},"content":"    public String findAndListTasks(String keyword) {","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder dukeResponse \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"junnengsoo"},"content":"        if (matchedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"junnengsoo"},"content":"            dukeResponse.append(\"No tasks found with the keyword: \").append(keyword).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"junnengsoo"},"content":"            return dukeResponse.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"junnengsoo"},"content":"        dukeResponse.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"junnengsoo"},"content":"        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"junnengsoo"},"content":"            dukeResponse.append(i + 1).append(\".\").append(matchedTasks.get(i));","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"junnengsoo"},"content":"        return dukeResponse.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"junnengsoo"},"content":"     * Processes the user input and returns the response.","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"junnengsoo"},"content":"    public String processInput(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"junnengsoo"},"content":"            String[] words \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"junnengsoo"},"content":"            switch (words[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"junnengsoo"},"content":"                case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"junnengsoo"},"content":"                    return \"SHUTDOWN\";","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"junnengsoo"},"content":"                case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"junnengsoo"},"content":"                    response.append(deleteTask(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"junnengsoo"},"content":"                case \"help\":","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"junnengsoo"},"content":"                    response.append(\"\\nCommands:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To add a todo: \u0027todo [description]\u0027\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To add a deadline: \u0027deadline [description] /by [date in format yyyy-MM-dd]\u0027\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To add an event: \u0027event [description] /from [start date in format yyyy-MM-dd] /to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"junnengsoo"},"content":"                            + \"[end date in format yyyy-MM-dd]\u0027\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"junnengsoo"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"junnengsoo"},"content":"                    response.append(addTodo(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"junnengsoo"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"junnengsoo"},"content":"                    response.append(addDeadline(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"junnengsoo"},"content":"                case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"junnengsoo"},"content":"                    response.append(addEvent(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"junnengsoo"},"content":"                case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"junnengsoo"},"content":"                    response.append(listTasks());","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"junnengsoo"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"junnengsoo"},"content":"                    response.append(markTaskDone(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"junnengsoo"},"content":"                case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":266,"author":{"gitId":"junnengsoo"},"content":"                    response.append(unmarkTaskDone(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":268,"author":{"gitId":"junnengsoo"},"content":"                case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"junnengsoo"},"content":"                    response.append(findAndListTasks(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":271,"author":{"gitId":"junnengsoo"},"content":"                default:","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"junnengsoo"},"content":"                    response.append(\"Sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":274,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":275,"author":{"gitId":"junnengsoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"junnengsoo"},"content":"            response.append(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"junnengsoo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":281,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":282,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":283,"author":{"gitId":"junnengsoo"},"content":"     * Starts the chat bot.","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"junnengsoo"},"content":"     * @param stage The stage to start the chat bot on.","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":287,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"junnengsoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"junnengsoo"},"content":"        this.primaryStage \u003d stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":291,"author":{"gitId":"junnengsoo"},"content":"        // Step 1. Setting up required components","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"junnengsoo"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"junnengsoo"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"junnengsoo"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":296,"author":{"gitId":"junnengsoo"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"junnengsoo"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"junnengsoo"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"junnengsoo"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"junnengsoo"},"content":"        // Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"junnengsoo"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"junnengsoo"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"junnengsoo"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"junnengsoo"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"junnengsoo"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"junnengsoo"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"junnengsoo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"junnengsoo"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"junnengsoo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"junnengsoo"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"junnengsoo"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"junnengsoo"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"junnengsoo"},"content":"        // This ensures the ScrollPane is stretched to fit its parent, but leaves space for the input and send button below.","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setTopAnchor(scrollPane, 0.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setRightAnchor(scrollPane, 0.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setLeftAnchor(scrollPane, 0.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setBottomAnchor(scrollPane, 40.0); // Assuming the height for userInput and sendButton combined is around 40 pixels","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"junnengsoo"},"content":"        // This keeps the userInput and sendButton anchored to the bottom of the window.","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setBottomAnchor(sendButton, 10.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setRightAnchor(sendButton, 10.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setLeftAnchor(userInput, 10.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"junnengsoo"},"content":"        AnchorPane.setBottomAnchor(userInput, 10.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"junnengsoo"},"content":"        // Step 3. Add functionality to handle user input","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"junnengsoo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput(userInput, dialogContainer));","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"junnengsoo"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput(userInput, dialogContainer));","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"junnengsoo"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"junnengsoo"},"content":"        stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":338,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":339,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"junnengsoo"},"content":"     * Handles the user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"junnengsoo"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"junnengsoo"},"content":"     * @param dialogContainer The dialog container.","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"junnengsoo"},"content":"    private void handleUserInput(TextField userInput, VBox dialogContainer) {","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"junnengsoo"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"junnengsoo"},"content":"        String response \u003d processInput(userInput.getText());","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"junnengsoo"},"content":"        if (\"SHUTDOWN\".equals(response)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"junnengsoo"},"content":"            Label byeMessage \u003d new Label(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"junnengsoo"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(byeMessage));","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"junnengsoo"},"content":"            // Introduce a delay of 2 seconds (or any duration you prefer)","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"junnengsoo"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"junnengsoo"},"content":"            delay.setOnFinished(event -\u003e primaryStage.close());","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"junnengsoo"},"content":"            delay.play();","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"junnengsoo"},"content":"            return;","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"junnengsoo"},"content":"        Label dukeText \u003d new Label(response);","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"junnengsoo"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userText), DialogBox.getDukeDialog(dukeText));","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"junnengsoo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"junnengsoo"},"content":"     * Represents a dialog box.","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"junnengsoo"},"content":"     * A \u003ccode\u003eDialogBox\u003c/code\u003e object corresponds to a dialog box that contains a label.","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"junnengsoo"},"content":"    public static class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"junnengsoo"},"content":"        // Set a consistent minimum width for the text boxes","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"junnengsoo"},"content":"        private static final double MIN_WIDTH \u003d 250.0;","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"junnengsoo"},"content":"        private DialogBox(Label l, Pos alignment) {","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"junnengsoo"},"content":"            l.setWrapText(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"junnengsoo"},"content":"            // Set the text alignment within the HBox","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"junnengsoo"},"content":"            l.setAlignment(alignment);","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"junnengsoo"},"content":"            // Set a consistent minimum width for the text","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"junnengsoo"},"content":"            l.setMinWidth(MIN_WIDTH);","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"junnengsoo"},"content":"            // Make the label stretch to the maximum width available","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"junnengsoo"},"content":"            l.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"junnengsoo"},"content":"            // Make the HBox (DialogBox) stretch its children to maximum width","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"junnengsoo"},"content":"            HBox.setHgrow(l, Priority.ALWAYS); // Add this line to stretch the Label","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"junnengsoo"},"content":"            this.getChildren().addAll(l);","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"junnengsoo"},"content":"            // Setting padding and a border for the text for better visualization","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"junnengsoo"},"content":"            l.setPadding(new Insets(10));","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"junnengsoo"},"content":"            l.setBorder(new Border(new BorderStroke(Color.GRAY,","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"junnengsoo"},"content":"                    BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT)));","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":396,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"junnengsoo"},"content":"        /**","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"junnengsoo"},"content":"         * Returns a dialog box containing the user\u0027s text.","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"junnengsoo"},"content":"         *","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"junnengsoo"},"content":"         * @param l The user\u0027s text.","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"junnengsoo"},"content":"         * @return A dialog box containing the user\u0027s text.","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"junnengsoo"},"content":"         */","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"junnengsoo"},"content":"        public static DialogBox getUserDialog(Label l) {","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"junnengsoo"},"content":"            // Set alignment of the user\u0027s text to the right","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"junnengsoo"},"content":"            return new DialogBox(l, Pos.CENTER_RIGHT);","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":408,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"junnengsoo"},"content":"        /**","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"junnengsoo"},"content":"         * Returns a dialog box containing Duke\u0027s text.","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"junnengsoo"},"content":"         *","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"junnengsoo"},"content":"         * @param l Duke\u0027s text.","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"junnengsoo"},"content":"         * @return A dialog box containing Duke\u0027s text.","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"junnengsoo"},"content":"         */","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"junnengsoo"},"content":"        public static DialogBox getDukeDialog(Label l) {","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"junnengsoo"},"content":"            // Set alignment of Duke\u0027s text to the left","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"junnengsoo"},"content":"            return new DialogBox(l, Pos.CENTER_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"junnengsoo"},"content":"     * Starts the chat bot.","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"junnengsoo"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"junnengsoo"},"content":"        launch(args);","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":429,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junnengsoo":426,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents the parser of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e object corresponds to the parser of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"     * Parses the user input into the command and the rest of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     * @return The command and the rest of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * @throws UnknownCommandException If the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @throws EmptyDescriptionException If the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public static String[] parseCommand(String input) throws UnknownCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        String[] words \u003d input.split(\" \", 2); // splits into the command and the rest","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand2Words \u003d command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\") ||","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"                command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\")","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"                || command.equals(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand1Word \u003d command.equals(\"bye\") || command.equals(\"list\") || command.equals(\"help\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"        if (!validCommand2Words \u0026\u0026 !validCommand1Word) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"        } else if (validCommand2Words \u0026\u0026 words.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        return words;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":35}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":" * Represents the storage of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to the storage of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     * @param filePath The path of the file to store the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"            lines.add(task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        Files.write(Paths.get(filePath), lines);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error loading the tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        if (Files.exists(Paths.get(filePath))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"            for (String line : lines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"                tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":53}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" * Represents the user interface of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eUi\u003c/code\u003e object corresponds to the user interface of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"     * @return The next line of input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"        printMessage(errorMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":41}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents the exception when the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e object corresponds to the exception when the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"        /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"         * Constructs a \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"         */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        super(\"Type something in the description you dumb dumb, uwu.. \u003e\u003c\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":14}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents the exception when the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eUnknownCommandException\u003c/code\u003e object corresponds to the exception when the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eUnknownCommandException\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        super(\"What gibberish are you saying man?!\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":14}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a deadline task that has a description and a due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @param dueDate The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"     * Converts a deadline task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * @return The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        return \"D | \" + super.toFileFormat() + \" | \" + dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"     * Converts a deadline task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"     * @return The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"        Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"            deadline.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"        return \"[D][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (by: \" + dueDate.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"                \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":57}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to an event task that has a description and a start date and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * @param start The start date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * @param end The end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        this.start \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        this.end \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Converts an event task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * @return The start date and end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        return \"E | \" + super.toFileFormat() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     * Converts an event task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"     * @return The start date and end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"            event.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"        return \"[E][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (from: \" + start.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"                \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":59}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false; // Initially, the task is not done","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"     * @return The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     * Converts a task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        return (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"     * Converts a task from file format depending on what kind of task it is.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"                return Todo.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"                return Deadline.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"                return Event.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":81}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" * Represents the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object with an empty list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object with a selected list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     * Removes a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"     * Gets the size of the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"     * @return The size of the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    public Task markDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    public Task unmarkDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     * Gets a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"     * Returns an ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"     * @return An ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"        return matchedTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":106}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * Converts a todo task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        return \"T | \" + super.toFileFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * Converts a todo task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"            todo.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        return \"[T][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":46}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    // We will not modify the Task class as it is simple and does not have any side effects","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public void addTask_taskAddedToList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public void removeTask_taskRemovedFromList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public void markDone_taskMarkedAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        taskList.markDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        assertTrue(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone_taskUnmarked() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        taskList.markDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        taskList.unmarkDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        assertFalse(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    public void getTask_retrievesCorrectTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    public void removeTask_emptyList_throwsException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.removeTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    public void getTask_invalidIndex_throwsException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.getTask(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":69}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public void markDone_mark(){","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone_unmark(){","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    public void toFileFormat_notDone_correctFormat(){","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(\"0 | Sleep\", task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    public void toFileFormat_done_correctFormat(){","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(\"1 | Sleep\", task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"hello","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"s@ECHO OFF","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junnengsoo":1,"-":20}}]
