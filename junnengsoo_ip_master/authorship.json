[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"plugins {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"repositories {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"javafx {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"dependencies {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"test {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"application {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"shadowJar {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"run{","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":62}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"T | 0 | homework","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"D | 0 | birthday | 2023-10-06","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"junnengsoo":2}},{"path":"data/trivia.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"TRIVIA | hi | hi","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"junnengsoo":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"# Father Chat Bot User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"## Introduction","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"Father is a chat bot designed to assist you with your daily tasks and also trivia. This guide will provide you with a comprehensive overview on how to utilize the Duke chat bot effectively.","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"## Table of Contents","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"1. [Setup](#setup)","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"2. [Features](#features)","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    * [Adding a Todo Task](#adding-a-todo-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    * [Adding a Deadline Task](#adding-a-deadline-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    * [Adding an Event Task](#adding-an-event-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    * [Deleting a Task](#deleting-a-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    * [Listing All Tasks](#listing-all-tasks)","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    * [Marking a Task as Done](#marking-a-task-as-done)","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    * [Unmarking a Task](#unmarking-a-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    * [Searching for Tasks](#searching-for-tasks)","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    * [Trivia Features](#trivia-features)","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"3. [Command Summary](#father-command-summary)","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"4. [Error Handling](#error-handling)","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"## Setup","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"### Prerequisites","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"- **Java Development Kit (JDK)**: Ensure you have the JDK installed on your system.","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"### Setup Instructions","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"1. Download the release JAR file.","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"2. Open a terminal and navigate to the directory containing the JAR file.","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"3. Run the JAR file with the command `java -jar duke.jar`.","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"When Father is started, it will automatically load tasks and trivia from these files with a GUI interface.","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"### Adding a Todo Task","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"Command: `todo [description]`","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"`todo read book`","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"### Adding a Deadline Task","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"Command: `deadline [description] /by [date in format yyyy-MM-dd]`","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"`deadline return book /by 2020-02-20`","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"### Adding an Event Task","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"Command: `event [description] /from [start date in format yyyy-MM-dd] /to [end date in format yyyy-MM-dd]`","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"`event project meeting /from 2020-02-20 /to 2020-02-21`","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"### Deleting a Task","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"Command: `delete [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"`delete 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"### Listing All Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"Command: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"### Marking a Task as Done","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"Command: `done [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"`done 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"### Unmarking a Task","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"Command: `undone [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"`undone 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"### Searching for Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"Command: `find [keyword]`","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"`find book`","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"### Trivia Features","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"* **Adding a Trivia:** `addtrivia [question] /answer [answer]`","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"junnengsoo"},"content":"* **Listing all Trivia:** `listtrivia`","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"junnengsoo"},"content":"* **Testing a Trivia:** `testtrivia [trivia index] [your answer]`","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"junnengsoo"},"content":"Examples:","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"junnengsoo"},"content":"`addtrivia What is the capital of Singapore? /answer Singapore`","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"junnengsoo"},"content":"`testtrivia 1 Singapore`","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"junnengsoo"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"junnengsoo"},"content":"## Father Command Summary","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"junnengsoo"},"content":"### Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"junnengsoo"},"content":"| Feature                    | Command                                               | Example                                                 |","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"junnengsoo"},"content":"|----------------------------|-------------------------------------------------------|---------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"junnengsoo"},"content":"| **Adding a Todo Task**     | `todo [description]`                                  | `todo read book`                                        |","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"junnengsoo"},"content":"| **Adding a Deadline Task** | `deadline [description] /by [date in yyyy-MM-dd]`      | `deadline return book /by 2020-02-20`                   |","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"junnengsoo"},"content":"| **Adding an Event Task**   | `event [description] /from [start date in yyyy-MM-dd] /to [end date in yyyy-MM-dd]` | `event project meeting /from 2020-02-20 /to 2020-02-21` |","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"junnengsoo"},"content":"| **Deleting a Task**        | `delete [task index]`                                 | `delete 1`                                              |","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"junnengsoo"},"content":"| **Listing All Tasks**      | `list`                                                | `list`                                                  |","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"junnengsoo"},"content":"| **Marking a Task as Done** | `done [task index]`                                   | `done 1`                                                |","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"junnengsoo"},"content":"| **Unmarking a Task**       | `undone [task index]`                                 | `undone 1`                                              |","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"junnengsoo"},"content":"| **Searching for Tasks**    | `find [keyword]`                                      | `find book`                                             |","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"junnengsoo"},"content":"### Trivia","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"junnengsoo"},"content":"| Feature                 | Command                                               | Example                                                         |","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"junnengsoo"},"content":"|-------------------------|-------------------------------------------------------|-----------------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"junnengsoo"},"content":"| **Adding a Trivia**     | `addtrivia [question] /answer [answer]`               | `addtrivia What is the capital of Singapore? /answer Singapore` |","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"junnengsoo"},"content":"| **Listing all Trivia**  | `listtrivia`                                          | `listtrivia`                                                    |","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"junnengsoo"},"content":"| **Testing a Trivia**    | `testtrivia [trivia index] [your answer]`             | `testtrivia 1 Singapore`                                        |","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"junnengsoo"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"junnengsoo"},"content":"## Error Handling","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"junnengsoo"},"content":"Duke has built-in error checks and will inform you if:","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"junnengsoo"},"content":"* The date format is invalid","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"junnengsoo"},"content":"* The provided task index is out of bounds","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"junnengsoo"},"content":"* The task or trivia format is incorrect","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"junnengsoo"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"junnengsoo"},"content":"## Conclusion","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"junnengsoo"},"content":"With Duke, managing tasks and trivia is a breeze! Do note to follow the command formats and ensure your input is correct to have a smooth experience. Enjoy your journey with Duke!","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"junnengsoo":128,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import duke.trivia.Trivia;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import duke.trivia.TriviaList;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":" * Represents the Duke chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"public class Duke {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    private static final String DATA_PATH \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    private static final String DUKE_FILE_PATH \u003d DATA_PATH + \"/duke.txt\";","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    private static final String TRIVIA_FILE_PATH \u003d DATA_PATH + \"/trivia.txt\";","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    private final Storage storage \u003d new Storage(DUKE_FILE_PATH, TRIVIA_FILE_PATH);","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    private final TriviaList triviaList;","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Creates a Duke chat bot.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public Duke() {","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e loadedTasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTrivia\u003e loadedTrivia;","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"            loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"            loadedTrivia \u003d storage.loadTrivia();","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"            loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"            loadedTrivia \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d new TaskList(loadedTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        this.triviaList \u003d new TriviaList(loadedTrivia);","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    public String deleteTask(String taskIndex) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getSize() : \"Invalid task index!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"        Task removedTask \u003d tasks.removeTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        return generateTaskRemovedMessage(removedTask);","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"     * Generates the message to be displayed when a task is removed.","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"     * @param task The task that is removed.","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"     * @return The message to be displayed when a task is removed.","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    private String generateTaskRemovedMessage(Task task) {","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"                task, tasks.getSize());","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"     * Adds a todo task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"    public String addTodo(String task) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"        assert task !\u003d null \u0026\u0026 !task.trim().isEmpty() : \"Task description cannot be empty or null!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Todo(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"        return generateTaskAddedMessage(newTask);","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"     * Generates the message to be displayed when a task is added.","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"     * @param task The task that is added.","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"     * @return The message to be displayed when a task is added.","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"    private String generateTaskAddedMessage(Task task) {","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"                task, tasks.getSize());","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"     * Adds a deadline task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"junnengsoo"},"content":"    public String addDeadline(String task) throws IllegalArgumentException, DateTimeParseException, IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"junnengsoo"},"content":"        assert task !\u003d null \u0026\u0026 !task.trim().isEmpty() : \"Task description cannot be empty or null!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d task.split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"junnengsoo"},"content":"        guardForValidDeadlineFormat(parts);","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"junnengsoo"},"content":"        return generateTaskAddedMessage(newTask);","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"junnengsoo"},"content":"     * Guards for a valid deadline format.","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"junnengsoo"},"content":"     * @param parts The parts of the deadline task.","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"junnengsoo"},"content":"     * @throws IllegalArgumentException If the deadline format is invalid.","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"junnengsoo"},"content":"    private void guardForValidDeadlineFormat(String[] parts) throws IllegalArgumentException, DateTimeParseException{","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"junnengsoo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"junnengsoo"},"content":"            throw new IllegalArgumentException(\"Please use the format \u0027deadline \u003ctask description\u003e /by yyyy-MM-dd\u0027\");","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(parts[1]); // Validates the date","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"junnengsoo"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"junnengsoo"},"content":"    public String addEvent(String task) throws IllegalArgumentException, DateTimeParseException, IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"junnengsoo"},"content":"        assert task !\u003d null \u0026\u0026 !task.trim().isEmpty() : \"Task description cannot be empty or null!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d validateEventFormat(task);","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"junnengsoo"},"content":"        return generateTaskAddedMessage(newTask);","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":153,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":154,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":155,"author":{"gitId":"junnengsoo"},"content":"     * Validates the event format.","lastModifiedDate":"2023-09-15"},{"lineNumber":156,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":157,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2023-09-15"},{"lineNumber":158,"author":{"gitId":"junnengsoo"},"content":"     * @throws IllegalArgumentException If the event format is invalid.","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-15"},{"lineNumber":160,"author":{"gitId":"junnengsoo"},"content":"     * @return The parts of the event task.","lastModifiedDate":"2023-09-15"},{"lineNumber":161,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":162,"author":{"gitId":"junnengsoo"},"content":"    private String[] validateEventFormat(String task) throws IllegalArgumentException, DateTimeParseException{","lastModifiedDate":"2023-09-15"},{"lineNumber":163,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d task.split(\" /from \"); // second part will consist of the timings","lastModifiedDate":"2023-09-15"},{"lineNumber":164,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"junnengsoo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"junnengsoo"},"content":"            throw new IllegalArgumentException(\"Please use the format \u0027event \u003cevent description\u003e \" +","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"junnengsoo"},"content":"                    \"/from yyyy-MM-dd /to yyyy-MM-dd\u0027\");","lastModifiedDate":"2023-09-15"},{"lineNumber":168,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"junnengsoo"},"content":"        String[] times \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"junnengsoo"},"content":"        if (times.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"junnengsoo"},"content":"            throw new IllegalArgumentException(\"Please use the format \u0027event \u003cevent description\u003e \" +","lastModifiedDate":"2023-09-15"},{"lineNumber":173,"author":{"gitId":"junnengsoo"},"content":"                    \"/from yyyy-MM-dd /to yyyy-MM-dd\u0027\");","lastModifiedDate":"2023-09-15"},{"lineNumber":174,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"junnengsoo"},"content":"        // Validates the date formats","lastModifiedDate":"2023-09-15"},{"lineNumber":177,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(times[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(times[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"junnengsoo"},"content":"        return new String[] {parts[0], times[0], times[1]};","lastModifiedDate":"2023-09-15"},{"lineNumber":181,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"junnengsoo"},"content":"     * Lists all the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"junnengsoo"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":190,"author":{"gitId":"junnengsoo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"junnengsoo"},"content":"            response.append(i + 1).append(\".\").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":192,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"junnengsoo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"junnengsoo"},"content":"     * @param task The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"junnengsoo"},"content":"    public String markTaskDone(String task) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"junnengsoo"},"content":"        return modifyTaskStatus(task, true);","lastModifiedDate":"2023-09-15"},{"lineNumber":205,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"junnengsoo"},"content":"     * @param task The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"junnengsoo"},"content":"    public String unmarkTaskDone(String task) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"junnengsoo"},"content":"        return modifyTaskStatus(task, false);","lastModifiedDate":"2023-09-15"},{"lineNumber":216,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":217,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":218,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":219,"author":{"gitId":"junnengsoo"},"content":"     * Modifies the status of a task.","lastModifiedDate":"2023-09-15"},{"lineNumber":220,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":221,"author":{"gitId":"junnengsoo"},"content":"     * @param task The index of the task to be modified.","lastModifiedDate":"2023-09-15"},{"lineNumber":222,"author":{"gitId":"junnengsoo"},"content":"     * @param markAsDone Whether to mark the task as done or not done.","lastModifiedDate":"2023-09-15"},{"lineNumber":223,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-15"},{"lineNumber":224,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":225,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":226,"author":{"gitId":"junnengsoo"},"content":"    private String modifyTaskStatus(String task, boolean markAsDone) throws IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":227,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(task) - 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"junnengsoo"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getSize() : \"Invalid task index for unmark task!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":229,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":230,"author":{"gitId":"junnengsoo"},"content":"        Task modifiedTask \u003d markAsDone ? tasks.markDone(index) : tasks.unmarkDone(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":231,"author":{"gitId":"junnengsoo"},"content":"        String statusMessage \u003d markAsDone ? \"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2023-09-15"},{"lineNumber":232,"author":{"gitId":"junnengsoo"},"content":"                : \"OK, I\u0027ve marked this task as not done yet:\\n  \";","lastModifiedDate":"2023-09-15"},{"lineNumber":233,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":234,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"junnengsoo"},"content":"        return statusMessage + modifiedTask + \"\\n\";","lastModifiedDate":"2023-09-15"},{"lineNumber":236,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":237,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"junnengsoo"},"content":"     * Finds and lists all the tasks that match the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"junnengsoo"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"junnengsoo"},"content":"    public String findAndListTasks(String keyword) {","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"junnengsoo"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.trim().isEmpty() : \"Search keyword cannot be empty or null!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":246,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-15"},{"lineNumber":247,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":248,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"junnengsoo"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":250,"author":{"gitId":"junnengsoo"},"content":"            response.append(\"No tasks found with the keyword: \").append(keyword).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":251,"author":{"gitId":"junnengsoo"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":252,"author":{"gitId":"junnengsoo"},"content":"            response.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":253,"author":{"gitId":"junnengsoo"},"content":"            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"junnengsoo"},"content":"                response.append(i + 1).append(\".\").append(matchedTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":255,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":257,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":258,"author":{"gitId":"junnengsoo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":259,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":262,"author":{"gitId":"junnengsoo"},"content":"     * Parses the trivia index from the user input.","lastModifiedDate":"2023-09-15"},{"lineNumber":263,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":264,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-15"},{"lineNumber":265,"author":{"gitId":"junnengsoo"},"content":"     * @return The trivia index.","lastModifiedDate":"2023-09-15"},{"lineNumber":266,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":267,"author":{"gitId":"junnengsoo"},"content":"    private int parseTriviaIndex(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":268,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":269,"author":{"gitId":"junnengsoo"},"content":"            return Integer.parseInt(input) - 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":270,"author":{"gitId":"junnengsoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":271,"author":{"gitId":"junnengsoo"},"content":"            throw new IllegalArgumentException(\"Please provide a valid trivia index.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":272,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":273,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":274,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":275,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":276,"author":{"gitId":"junnengsoo"},"content":"     * Adds a trivia to the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":277,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":278,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-15"},{"lineNumber":279,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the trivia to the file.","lastModifiedDate":"2023-09-15"},{"lineNumber":280,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":281,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":282,"author":{"gitId":"junnengsoo"},"content":"    public String addTrivia(String input) throws IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":283,"author":{"gitId":"junnengsoo"},"content":"        String[] triviaWords \u003d input.split(\" /answer \");","lastModifiedDate":"2023-09-15"},{"lineNumber":284,"author":{"gitId":"junnengsoo"},"content":"        if (triviaWords.length \u003c 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":285,"author":{"gitId":"junnengsoo"},"content":"            return \"Invalid trivia format. Use \u0027addtrivia \u003cquestion\u003e /answer \u003canswer\u003e\u0027\";","lastModifiedDate":"2023-09-15"},{"lineNumber":286,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":287,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":288,"author":{"gitId":"junnengsoo"},"content":"        String question \u003d triviaWords[0].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":289,"author":{"gitId":"junnengsoo"},"content":"        String answer \u003d triviaWords[1].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":290,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":291,"author":{"gitId":"junnengsoo"},"content":"        if (question.isEmpty() || answer.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":292,"author":{"gitId":"junnengsoo"},"content":"            return \"Question or answer cannot be empty!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":293,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":294,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":295,"author":{"gitId":"junnengsoo"},"content":"        Trivia trivia \u003d new Trivia(question, answer);","lastModifiedDate":"2023-09-15"},{"lineNumber":296,"author":{"gitId":"junnengsoo"},"content":"        triviaList.addTrivia(trivia);","lastModifiedDate":"2023-09-15"},{"lineNumber":297,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":298,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTrivia(triviaList.getTrivias());","lastModifiedDate":"2023-09-15"},{"lineNumber":299,"author":{"gitId":"junnengsoo"},"content":"        return \"Trivia added!\\n\" + trivia;","lastModifiedDate":"2023-09-15"},{"lineNumber":300,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":301,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":302,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":303,"author":{"gitId":"junnengsoo"},"content":"     * Lists all the trivia in the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":304,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":305,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":306,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":307,"author":{"gitId":"junnengsoo"},"content":"    public String listAllTrivia() {","lastModifiedDate":"2023-09-15"},{"lineNumber":308,"author":{"gitId":"junnengsoo"},"content":"        if (triviaList.getTrivias().isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":309,"author":{"gitId":"junnengsoo"},"content":"            return \"There are no trivia in your list.\";","lastModifiedDate":"2023-09-15"},{"lineNumber":310,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":311,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":312,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the trivia in your list:\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":313,"author":{"gitId":"junnengsoo"},"content":"        for (int i \u003d 0; i \u003c triviaList.getSize(); i++) {","lastModifiedDate":"2023-09-15"},{"lineNumber":314,"author":{"gitId":"junnengsoo"},"content":"            response.append(i + 1).append(\". \").append(triviaList.getTrivia(i).getQuestion()).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":315,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":316,"author":{"gitId":"junnengsoo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":317,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":318,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":319,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":320,"author":{"gitId":"junnengsoo"},"content":"     * Tests a trivia.","lastModifiedDate":"2023-09-15"},{"lineNumber":321,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":322,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-15"},{"lineNumber":323,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":324,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":325,"author":{"gitId":"junnengsoo"},"content":"    public String testTrivia(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":326,"author":{"gitId":"junnengsoo"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":327,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":328,"author":{"gitId":"junnengsoo"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":329,"author":{"gitId":"junnengsoo"},"content":"            return \"Please provide an answer to test. Use \u0027testtrivia [trivia index] [your answer]\u0027.\";","lastModifiedDate":"2023-09-15"},{"lineNumber":330,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":331,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":332,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d parseTriviaIndex(words[0]);","lastModifiedDate":"2023-09-15"},{"lineNumber":333,"author":{"gitId":"junnengsoo"},"content":"        String userAnswer \u003d words[1].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":334,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":335,"author":{"gitId":"junnengsoo"},"content":"        Trivia trivia \u003d triviaList.getTrivia(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":336,"author":{"gitId":"junnengsoo"},"content":"        if (trivia.checkAnswer(userAnswer)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":337,"author":{"gitId":"junnengsoo"},"content":"            return \"Correct! The answer is: \" + trivia.getAnswer();","lastModifiedDate":"2023-09-15"},{"lineNumber":338,"author":{"gitId":"junnengsoo"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":339,"author":{"gitId":"junnengsoo"},"content":"            return \"Incorrect. The correct answer is: \" + trivia.getAnswer();","lastModifiedDate":"2023-09-15"},{"lineNumber":340,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":341,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":342,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":343,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":344,"author":{"gitId":"junnengsoo"},"content":"     * Processes the user input and returns the response.","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":347,"author":{"gitId":"junnengsoo"},"content":"     * @return The response to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":349,"author":{"gitId":"junnengsoo"},"content":"    public String processInput(String input) {","lastModifiedDate":"2023-09-22"},{"lineNumber":350,"author":{"gitId":"junnengsoo"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"junnengsoo"},"content":"            String[] words \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":354,"author":{"gitId":"junnengsoo"},"content":"            switch (words[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":355,"author":{"gitId":"junnengsoo"},"content":"                case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":356,"author":{"gitId":"junnengsoo"},"content":"                    response.append(deleteTask(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":358,"author":{"gitId":"junnengsoo"},"content":"                case \"help\":","lastModifiedDate":"2023-09-01"},{"lineNumber":359,"author":{"gitId":"junnengsoo"},"content":"                    response.append(\"\\nCommands:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To add a todo: \u0027todo [description]\u0027\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":361,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To add a deadline: \u0027deadline [description] /by [date in format yyyy-MM-dd]\u0027\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":362,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To add an event: \u0027event [description] /from [start date in format yyyy-MM-dd] /to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":363,"author":{"gitId":"junnengsoo"},"content":"                            + \"[end date in format yyyy-MM-dd]\u0027\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":364,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To add trivia: \u0027addtrivia [question] /answer [answer]\u0027\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":365,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To list all trivia: \u0027listtrivia\u0027\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":366,"author":{"gitId":"junnengsoo"},"content":"                            + \"- To test a trivia: \u0027testtrivia [trivia index] [your answer]\u0027\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":367,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":368,"author":{"gitId":"junnengsoo"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":369,"author":{"gitId":"junnengsoo"},"content":"                    response.append(addTodo(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":371,"author":{"gitId":"junnengsoo"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":372,"author":{"gitId":"junnengsoo"},"content":"                    response.append(addDeadline(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":374,"author":{"gitId":"junnengsoo"},"content":"                case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":375,"author":{"gitId":"junnengsoo"},"content":"                    response.append(addEvent(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":377,"author":{"gitId":"junnengsoo"},"content":"                case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":378,"author":{"gitId":"junnengsoo"},"content":"                    response.append(listTasks());","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":380,"author":{"gitId":"junnengsoo"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":381,"author":{"gitId":"junnengsoo"},"content":"                    response.append(markTaskDone(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":383,"author":{"gitId":"junnengsoo"},"content":"                case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":384,"author":{"gitId":"junnengsoo"},"content":"                    response.append(unmarkTaskDone(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":386,"author":{"gitId":"junnengsoo"},"content":"                case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":387,"author":{"gitId":"junnengsoo"},"content":"                    response.append(findAndListTasks(words[1]));","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":389,"author":{"gitId":"junnengsoo"},"content":"                case \"addtrivia\":","lastModifiedDate":"2023-09-15"},{"lineNumber":390,"author":{"gitId":"junnengsoo"},"content":"                    response.append(addTrivia(words[1]));","lastModifiedDate":"2023-09-15"},{"lineNumber":391,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-15"},{"lineNumber":392,"author":{"gitId":"junnengsoo"},"content":"                case \"listtrivia\":","lastModifiedDate":"2023-09-15"},{"lineNumber":393,"author":{"gitId":"junnengsoo"},"content":"                    response.append(listAllTrivia());","lastModifiedDate":"2023-09-15"},{"lineNumber":394,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-15"},{"lineNumber":395,"author":{"gitId":"junnengsoo"},"content":"                case \"testtrivia\":","lastModifiedDate":"2023-09-15"},{"lineNumber":396,"author":{"gitId":"junnengsoo"},"content":"                    response.append(testTrivia(words[1]));","lastModifiedDate":"2023-09-15"},{"lineNumber":397,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-15"},{"lineNumber":398,"author":{"gitId":"junnengsoo"},"content":"                default:","lastModifiedDate":"2023-09-01"},{"lineNumber":399,"author":{"gitId":"junnengsoo"},"content":"                    response.append(\"Sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"junnengsoo"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":401,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":402,"author":{"gitId":"junnengsoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"junnengsoo"},"content":"            response.append(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"junnengsoo"},"content":"        return response.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junnengsoo":407,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"public class Launcher {","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"     * Launches the application.","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"junnengsoo":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import duke.controller.MainWindowController;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":" * Main class for Duke.","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"            fxmlLoader.\u003cMainWindowController\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"            stage.show();","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"junnengsoo":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents the parser of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e object corresponds to the parser of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"     * Parses the user input into the command and the rest of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     * @return The command and the rest of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * @throws UnknownCommandException If the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @throws EmptyDescriptionException If the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public static String[] parseCommand(String input) throws UnknownCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        String[] words \u003d input.split(\" \", 2); // splits into the command and the rest","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand2Words \u003d command.equals(\"todo\") || command.equals(\"deadline\")","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"                || command.equals(\"event\") || command.equals(\"mark\") || command.equals(\"unmark\")","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"                || command.equals(\"delete\") || command.equals(\"find\") || command.equals(\"addtrivia\")","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"                || command.equals(\"testtrivia\"); // added trivia commands","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand1Word \u003d command.equals(\"bye\") || command.equals(\"list\")","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"                || command.equals(\"help\") || command.equals(\"listtrivia\"); // added trivia command","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"        if (!validCommand2Words \u0026\u0026 !validCommand1Word) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        } else if (validCommand2Words \u0026\u0026 words.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        return words;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":38}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import duke.trivia.Trivia;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    private String taskFilePath;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    private String triviaFilePath;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public Storage(String taskFilePath, String triviaFilePath) {","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        this.taskFilePath \u003d taskFilePath;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        this.triviaFilePath \u003d triviaFilePath;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        saveToFile(tasks, taskFilePath, Task::toFileFormat);","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    public void saveTrivia(ArrayList\u003cTrivia\u003e trivia) throws IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"        saveToFile(trivia, triviaFilePath, Trivia::toFileFormat);","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        return loadFromFile(taskFilePath, Task::fromFileFormat);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTrivia\u003e loadTrivia() throws IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"        return loadFromFile(triviaFilePath, Trivia::fromFileFormat);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    private \u003cT\u003e void saveToFile(ArrayList\u003cT\u003e items, String filePath, Function\u003cT, String\u003e toFileFormatFunc) throws IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        for (T item : items) {","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"            lines.add(toFileFormatFunc.apply(item));","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        Files.write(Paths.get(filePath), lines);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    private \u003cT\u003e ArrayList\u003cT\u003e loadFromFile(String filePath, Function\u003cString, T\u003e fromFileFormatFunc) throws IOException {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cT\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"            for (String line : lines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"                items.add(fromFileFormatFunc.apply(line));","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"        return items;","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":58}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" * Represents the user interface of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eUi\u003c/code\u003e object corresponds to the user interface of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     * Prints an error message.","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        printMessage(errorMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":32}},{"path":"src/main/java/duke/controller/DialogBoxController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.controller;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"public class DialogBoxController extends HBox {","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * Constructor for DialogBoxController.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     * @param text Text to be displayed.","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    private DialogBoxController(String text, Image img) {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindowController.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    private void flip() {","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"     * Returns a DialogBoxController object representing the user\u0027s dialog box.","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"     * @param text Text to be displayed.","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"     * @return DialogBoxController object representing the user\u0027s dialog box.","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    public static DialogBoxController getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"        return new DialogBoxController(text, img);","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"     * Returns a DialogBoxController object representing Duke\u0027s dialog box.","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"     * @param text Text to be displayed.","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"     * @return DialogBoxController object representing Duke\u0027s dialog box.","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"    public static DialogBoxController getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"        var db \u003d new DialogBoxController(text, img);","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"        db.flip();","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"        return db;","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"junnengsoo":78}},{"path":"src/main/java/duke/controller/MainWindowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.controller;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"public class MainWindowController extends AnchorPane {","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     * Sets the Duke object for the MainWindowController.","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     * @param d Duke object.","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    @FXML","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        String response \u003d duke.processInput(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"                DialogBoxController.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"                DialogBoxController.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"        );","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"junnengsoo":57}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents the exception when the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e object corresponds to the exception when the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"        /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"         * Constructs a \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"         */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        super(\"Type something in the description you dumb dumb, uwu.. \u003e\u003c\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":14}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents the exception when the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eUnknownCommandException\u003c/code\u003e object corresponds to the exception when the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eUnknownCommandException\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        super(\"What gibberish are you saying man?!\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":14}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a deadline task that has a description and a due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @param dueDate The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"     * Converts a deadline task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * @return The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        return \"D | \" + super.toFileFormat() + \" | \" + dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"     * Converts a deadline task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"     * @return The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"        Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"            deadline.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"        return \"[D][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (by: \" + dueDate.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"                \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":57}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to an event task that has a description and a start date and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * @param start The start date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * @param end The end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        this.start \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        this.end \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Converts an event task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * @return The start date and end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        return \"E | \" + super.toFileFormat() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     * Converts an event task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"     * @return The start date and end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"            event.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"        return \"[E][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (from: \" + start.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"                \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":59}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false; // Initially, the task is not done","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"     * @return The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     * Converts a task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        return (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"     * Converts a task from file format depending on what kind of task it is.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"                return Todo.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"                return Deadline.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"                return Event.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":81}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" * Represents the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object with an empty list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object with a selected list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     * Removes a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"     * Gets the size of the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"     * @return The size of the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    public Task markDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    public Task unmarkDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     * Gets a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"     * Returns an ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"     * @return An ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"        return matchedTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":106}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * Converts a todo task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        return \"T | \" + super.toFileFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * Converts a todo task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"            todo.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        return \"[T][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":46}},{"path":"src/main/java/duke/trivia/Trivia.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.trivia;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"public class Trivia {","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    private String question;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"    private String answer;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTrivia\u003c/code\u003e object.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * @param question The question of the trivia.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     * @param answer The answer of the trivia.","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public Trivia(String question, String answer) {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        this.question \u003d question;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    public String getQuestion() {","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"        return question;","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public String getAnswer() {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        return answer;","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    public boolean checkAnswer(String userAnswer) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        return this.answer.equalsIgnoreCase(userAnswer.trim());","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        return \"TRIVIA | \" + getQuestion() + \" | \" + getAnswer();","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"     * Converts a trivia from file format.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"     * @param line The file format of the trivia.","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     * @return A Trivia object.","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    public static Trivia fromFileFormat(String line) {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        if (parts.length !\u003d 3 || !parts[0].equals(\"TRIVIA\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"            return null; // Return null or throw an exception if the format is incorrect","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        return new Trivia(parts[1], parts[2]);","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"        return \"Question: \" + question + \"\\nAnswer: \" + answer;","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"junnengsoo":50}},{"path":"src/main/java/duke/trivia/TriviaList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.trivia;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"public class TriviaList {","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"    private final ArrayList\u003cTrivia\u003e trivias;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTriviaList\u003c/code\u003e object with an empty list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public TriviaList() {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        this.trivias \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTriviaList\u003c/code\u003e object with a selected list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * @param trivias The list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    public TriviaList(ArrayList\u003cTrivia\u003e trivias) {","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        this.trivias \u003d trivias;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"     * Adds a trivia to the list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"     * @param trivia The trivia to be added.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    public void addTrivia(Trivia trivia) {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"        trivias.add(trivia);","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"     * Removes a trivia from the list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the trivia to be removed.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"     * @return The trivia that is removed.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    public Trivia removeTrivia(int index) {","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"        return trivias.remove(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     * Gets the size of the list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"     * @return The size of the list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        return trivias.size();","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     * Gets a trivia from the list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the trivia to be retrieved.","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"     * @return The trivia that is retrieved.","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"    public Trivia getTrivia(int index) {","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"        return trivias.get(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"     * Returns an ArrayList of trivias that match the keyword.","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"     * @return An ArrayList of trivias that match the keyword.","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTrivia\u003e findTrivias(String keyword) {","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTrivia\u003e matchedTrivias \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"        for (Trivia trivia : trivias) {","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"            if (trivia.getQuestion().contains(keyword)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"                matchedTrivias.add(trivia);","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"        return matchedTrivias;","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"     * Gets the list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     * @return The list of trivias.","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTrivia\u003e getTrivias() {","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"        return trivias;","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"junnengsoo":80}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"junnengsoo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindowController\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"junnengsoo":18}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    // We will not modify the Task class as it is simple and does not have any side effects","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public void addTask_taskAddedToList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public void removeTask_taskRemovedFromList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public void markDone_taskMarkedAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        taskList.markDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        assertTrue(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone_taskUnmarked() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        taskList.markDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        taskList.unmarkDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        assertFalse(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    public void getTask_retrievesCorrectTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    public void removeTask_emptyList_throwsException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.removeTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    public void getTask_invalidIndex_throwsException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.getTask(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":69}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public void markDone_mark(){","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone_unmark(){","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    public void toFileFormat_notDone_correctFormat(){","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(\"0 | Sleep\", task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    public void toFileFormat_done_correctFormat(){","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(\"1 | Sleep\", task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"hello","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"s@ECHO OFF","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junnengsoo":1,"-":20}}]
