[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"plugins {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"repositories {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"dependencies {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"test {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"application {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"shadowJar {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"run{","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"T | 0 | test","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"D | 0 | test | 2023-12-06","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"E | 0 | test | 2023-10-06 | 2023-11-06","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"T | 0 | run","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"T | 1 | test","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":" * Represents the Duke chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to a chat bot that can process user input and respond accordingly.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    private static final String DATA_PATH \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    private static final String FILE_PATH \u003d DATA_PATH + \"/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    private final Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    private static final String LINE \u003d \"_________________________\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error loading the tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    Duke() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"    public void deleteTask(String taskIndex) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        Task removedTask \u003d tasks.removeTask(index); // Removes and retrieves the task from the list","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"                + \"Noted. I\u0027ve removed this task:\\n  \" + removedTask","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"                + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"     * Adds a todo task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    public void addTodo(String task) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Todo(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"                + \"Got it. I\u0027ve added this task:\\n  \" + newTask","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"                + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"     * Adds a deadline task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"    public void addDeadline(String task) throws DateTimeParseException, IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d task.split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"            System.out.println(LINE + \"Please use the format \u0027deadline \u003ctask description\u003e \"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"                    + \"/by yyyy-MM-dd\u0027\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(parts[1]); // This will throw an exception if the date format is invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"                + \"Got it. I\u0027ve added this task:\\n  \" + newTask","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"                + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"    public void addEvent(String task) throws DateTimeParseException, IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d task.split(\" /from \"); // second part will consist the timings","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"            System.out.println(LINE + \"Please use the format \u0027event \u003cevent description\u003e /from yyyy-MM-dd \"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"                    + \"/to yyyy-MM-dd\u0027\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"        String[] times \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"junnengsoo"},"content":"        if (times.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"            System.out.println(LINE + \"Please use the format \u0027event \u003cevent description\u003e /from yyyy-MM-dd \"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"junnengsoo"},"content":"                    + \"/to yyyy-MM-dd\u0027\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"junnengsoo"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"junnengsoo"},"content":"        // Throws exception if invalid format","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(times[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"junnengsoo"},"content":"        LocalDate.parse(times[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"junnengsoo"},"content":"        Task newTask \u003d new Event(parts[0], times[0], times[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"junnengsoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE +","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"junnengsoo"},"content":"                \"Got it. I\u0027ve added this task:\\n  \" + newTask","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"junnengsoo"},"content":"                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"junnengsoo"},"content":"                + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"junnengsoo"},"content":"     * Lists all the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"junnengsoo"},"content":"    public void listTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"junnengsoo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"junnengsoo"},"content":"            System.out.println((i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"junnengsoo"},"content":"     * @param task The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"junnengsoo"},"content":"    public void markTaskDone(String task) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(task) - 1; // string -\u003e int","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"junnengsoo"},"content":"        Task taskMarked \u003d tasks.markDone(index); // Update the task in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE + \"\\nNice! I\u0027ve marked this task as done:\\n  \" + taskMarked + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"junnengsoo"},"content":"                + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"junnengsoo"},"content":"     * @param task The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkTaskDone(String task) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"junnengsoo"},"content":"        int index \u003d Integer.parseInt(task) - 1; // string -\u003e int","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"junnengsoo"},"content":"        Task taskUnmarked \u003d tasks.unmarkDone(index); // Update the task in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"junnengsoo"},"content":"                + \"\\nOK, I\u0027ve marked this task as not done yet:\\n  \" + taskUnmarked + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"junnengsoo"},"content":"                + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"junnengsoo"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"junnengsoo"},"content":"     * Finds and lists all tasks that contain the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"junnengsoo"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"junnengsoo"},"content":"    public void findAndListTasks(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"junnengsoo"},"content":"        if (matchedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"junnengsoo"},"content":"            System.out.println(LINE + \"No tasks found with the keyword: \" + keyword + \"\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"junnengsoo"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"junnengsoo"},"content":"        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"junnengsoo"},"content":"            System.out.println((i + 1) + \".\" + matchedTasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"junnengsoo"},"content":"  ","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"junnengsoo"},"content":"     * Processes the user input and responds accordingly.","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"junnengsoo"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if the program should continue running, \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"junnengsoo"},"content":"     * @throws EmptyDescriptionException If the user input is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"junnengsoo"},"content":"     * @throws UnknownCommandException If the user input is not recognized.","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"junnengsoo"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"junnengsoo"},"content":"    public boolean processInput(String input) ","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"junnengsoo"},"content":"            throws EmptyDescriptionException, UnknownCommandException, DateTimeParseException, IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"junnengsoo"},"content":"        String[] words \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"junnengsoo"},"content":"        switch (words[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"junnengsoo"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"junnengsoo"},"content":"            ui.printMessage(LINE + \"Bye. Hope to see you again soon!\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"junnengsoo"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"junnengsoo"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"junnengsoo"},"content":"            deleteTask(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"junnengsoo"},"content":"        case \"help\":","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"junnengsoo"},"content":"            ui.printMessage(LINE + \"\\nCommands:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"junnengsoo"},"content":"                    + \"- To add a todo: \u0027todo [description]\u0027\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"junnengsoo"},"content":"                    + \"- To add a deadline: \u0027deadline [description] /by [date in format yyyy-MM-dd]\u0027\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"junnengsoo"},"content":"                    + \"- To add an event: \u0027event [description] /from [start date in format yyyy-MM-dd] /to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"junnengsoo"},"content":"                    + \"[end date in format yyyy-MM-dd]\u0027\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"junnengsoo"},"content":"                    + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"junnengsoo"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"junnengsoo"},"content":"            addTodo(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"junnengsoo"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"junnengsoo"},"content":"            addDeadline(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"junnengsoo"},"content":"        case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"junnengsoo"},"content":"            addEvent(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"junnengsoo"},"content":"        case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"junnengsoo"},"content":"            listTasks();","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"junnengsoo"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"junnengsoo"},"content":"            markTaskDone(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"junnengsoo"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"junnengsoo"},"content":"            unmarkTaskDone(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"junnengsoo"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"junnengsoo"},"content":"            findAndListTasks(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"junnengsoo"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"junnengsoo"},"content":"            // Handle any other cases or errors","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"junnengsoo"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"junnengsoo"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":232,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":233,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"junnengsoo"},"content":"     * Runs the Duke chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"junnengsoo"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"junnengsoo"},"content":"        String logo \u003d \"\u003e. \u003c\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"junnengsoo"},"content":"        String name \u003d \"your father\";","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(logo","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"junnengsoo"},"content":"                + LINE","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"junnengsoo"},"content":"                + \"Hello! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"junnengsoo"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"junnengsoo"},"content":"                + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"junnengsoo"},"content":"        Duke duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"junnengsoo"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"junnengsoo"},"content":"            duke \u003d new Duke();","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"junnengsoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"junnengsoo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"junnengsoo"},"content":"            return; // Exit the program if there\u0027s an IOException when initializing Duke","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"junnengsoo"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"junnengsoo"},"content":"        while (isRunning) {","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"junnengsoo"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":258,"author":{"gitId":"junnengsoo"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"junnengsoo"},"content":"                isRunning \u003d duke.processInput(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"junnengsoo"},"content":"            } catch (UnknownCommandException | EmptyDescriptionException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"junnengsoo"},"content":"                ui.showError(LINE + e.getMessage() + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"junnengsoo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"junnengsoo"},"content":"                ui.showError(LINE + \"Please enter the date in the format \u0027yyyy-MM-dd\u0027.\\n\" + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"junnengsoo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"junnengsoo"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":266,"author":{"gitId":"junnengsoo"},"content":"                isRunning \u003d false;  // Stop the loop if there\u0027s an IOException","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":268,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junnengsoo":266,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents the parser of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e object corresponds to the parser of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"     * Parses the user input into the command and the rest of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     * @return The command and the rest of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * @throws UnknownCommandException If the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @throws EmptyDescriptionException If the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public static String[] parseCommand(String input) throws UnknownCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        String[] words \u003d input.split(\" \", 2); // splits into the command and the rest","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand2Words \u003d command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\") ||","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"                command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\")","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"                || command.equals(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        boolean validCommand1Word \u003d command.equals(\"bye\") || command.equals(\"list\") || command.equals(\"help\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"        if (!validCommand2Words \u0026\u0026 !validCommand1Word) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"        } else if (validCommand2Words \u0026\u0026 words.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        return words;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":35}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":" * Represents the storage of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to the storage of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     * @param filePath The path of the file to store the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"            lines.add(task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        Files.write(Paths.get(filePath), lines);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     * @throws IOException If there is an error loading the tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        if (Files.exists(Paths.get(filePath))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"            for (String line : lines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"                tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":53}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" * Represents the user interface of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eUi\u003c/code\u003e object corresponds to the user interface of the chat bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"     * @return The next line of input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"        printMessage(errorMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":40}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents the exception when the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e object corresponds to the exception when the description of the command is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"        /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"         * Constructs a \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"         */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        super(\"Type something in the description you dumb dumb, uwu.. \u003e\u003c\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":14}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents the exception when the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eUnknownCommandException\u003c/code\u003e object corresponds to the exception when the command is not recognised.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eUnknownCommandException\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        super(\"What gibberish are you saying man?!\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":14}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a deadline task that has a description and a due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @param dueDate The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"     * Converts a deadline task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * @return The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        return \"D | \" + super.toFileFormat() + \" | \" + dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"     * Converts a deadline task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"     * @return The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"        Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"            deadline.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"        return \"[D][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (by: \" + dueDate.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"                \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":57}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to an event task that has a description and a start date and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * @param start The start date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * @param end The end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        this.start \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        this.end \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Converts an event task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * @return The start date and end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        return \"E | \" + super.toFileFormat() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     * Converts an event task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"     * @return The start date and end date of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"            event.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"        return \"[E][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription() + \" (from: \" + start.format(formatter) +","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"                \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":59}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false; // Initially, the task is not done","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"     * @return The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     * Converts a task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        return (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"     * Converts a task from file format depending on what kind of task it is.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"                return Todo.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"                return Deadline.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"                return Event.fromFileFormat(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":81}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" * Represents the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object with an empty list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object with a selected list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"     * Removes a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"     * Gets the size of the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"     * @return The size of the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    public Task markDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    public Task unmarkDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"junnengsoo"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"junnengsoo"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junnengsoo"},"content":"     * Gets a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junnengsoo"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"junnengsoo"},"content":"     * @return The task that is retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junnengsoo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junnengsoo"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junnengsoo"},"content":"     * Returns an ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junnengsoo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"junnengsoo"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"junnengsoo"},"content":"     * @return An ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junnengsoo"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"junnengsoo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"junnengsoo"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"junnengsoo"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"junnengsoo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"junnengsoo"},"content":"        return matchedTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"junnengsoo"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"junnengsoo"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"junnengsoo"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"junnengsoo"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":106}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"     * Converts a todo task to file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        return \"T | \" + super.toFileFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"     * Converts a todo task from file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"            todo.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"     * Returns the string representation of a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"     * @return The string representation of a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        return \"[T][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"junnengsoo":46}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"    // We will not modify the Task class as it is simple and does not have any side effects","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public void addTask_taskAddedToList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"    public void removeTask_taskRemovedFromList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    public void markDone_taskMarkedAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        taskList.markDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        assertTrue(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone_taskUnmarked() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junnengsoo"},"content":"        taskList.markDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junnengsoo"},"content":"        taskList.unmarkDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junnengsoo"},"content":"        assertFalse(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junnengsoo"},"content":"    public void getTask_retrievesCorrectTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junnengsoo"},"content":"    public void removeTask_emptyList_throwsException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junnengsoo"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.removeTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junnengsoo"},"content":"    public void getTask_invalidIndex_throwsException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junnengsoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junnengsoo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junnengsoo"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.getTask(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":69}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"package duke.tasks;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junnengsoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junnengsoo"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junnengsoo"},"content":"    public void markDone_mark(){","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junnengsoo"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junnengsoo"},"content":"    public void unmarkDone_unmark(){","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junnengsoo"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junnengsoo"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junnengsoo"},"content":"    public void toFileFormat_notDone_correctFormat(){","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(\"0 | Sleep\", task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junnengsoo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junnengsoo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junnengsoo"},"content":"    public void toFileFormat_done_correctFormat(){","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junnengsoo"},"content":"        Task task \u003d new Task(\"Sleep\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junnengsoo"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junnengsoo"},"content":"        assertEquals(\"1 | Sleep\", task.toFileFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junnengsoo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junnengsoo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junnengsoo":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"hello","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"junnengsoo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"junnengsoo"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"junnengsoo":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"junnengsoo"},"content":"s@ECHO OFF","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junnengsoo":1,"-":20}}]
