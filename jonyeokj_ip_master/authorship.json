[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"plugins {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"repositories {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"dependencies {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"test {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    testLogging {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        showExceptions true","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        showCauses true","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"application {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    mainClass.set(\"martin.gui.Launcher\")","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"shadowJar {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    archiveFileName \u003d \u0027martin.jar\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"    archiveBaseName \u003d \"martin\"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"javafx {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"sourceSets {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"    main {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        java {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"        resources {","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"            srcDirs \u003d [\u0027src/main/resources\u0027]","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"run {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":74}},{"path":"data/martin.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"E | 0 | Test | 01/01/2023 1500 | 01/01/2023 1800","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"E | 1 | Exam | 01/01/2023 1700 | 01/02/2023 0000","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"D | 1 | Homework | 08/01/2023 1500","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"D | 0 | Party | 01/02/2023 1800","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"0 | Read a Book","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jonyeokj":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"# Martin Chatbot User Guide","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"1. [Date - Find tasks by date](#date---find-tasks-by-date)","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"2. [Deadline - Create a deadline task](#deadline---create-a-deadline-task)","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"3. [Event - Create an event task](#event---create-an-event-task)","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"4. [Todo - Create a todo task](#todo---create-a-todo-task)","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"5. [Delete - Remove a task from the list](#delete---remove-a-task-from-the-list)","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"6. [Find - Search for tasks by keyword](#find---search-for-tasks-by-keyword)","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"7. [List - Display all tasks](#list---display-all-tasks)","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"8. [Mark - Mark a task as done](#mark---mark-a-task-as-done)","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"9. [Unmark - Unmark a task as done](#unmark---unmark-a-task-as-done)","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"10. [Snooze - Delay a task](#snooze---delay-a-task)","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"11. [Sort - Sort tasks chronologically](#sort---sort-tasks-chronologically)","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"## Usage","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"### `date` - Find tasks by date","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"Given a specific date, it displays all tasks (deadlines or events) associated with that date.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"`date d/M/yyyy`","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"`Tasks on [date]`","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"A list of all deadlines or events for the given date is shown. If there are no tasks on the provided date, the output will display \"No tasks on this date.\"","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"**Notes:**","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"- Use the format \u0027d/M/yyyy\u0027 for the date.","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"- The list will display tasks on the date or events spanning the date.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"Tasks on 1 1 2023:","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"[D][] Homework (by: Jan 01 2023 2359)","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"[E][] Test (from: Jan 01 2023 1500 to: Jan 01 2023 1700)","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"### `deadline` - Create a deadline task","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"Create a new deadline task and add it to the list. Deadlines have a description and a specific due date-time.","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"\\`deadline [description] /by d/M/yyyy HHmm\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"A confirmation message indicating that the deadline has been added.","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"[D][] Homework (by: Jan 01 2023 2359)","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"Now you have [total tasks] tasks in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"### `event` - Create an event task","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"Create a new event task and add it to the list. Events have a description and a start and end date-time.","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"\\`event [description] /from d/M/yyyy HHmm /to d/M/yyyy HHmm\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"A confirmation message indicating that the event has been added.","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"[E][] Meeting (from: Jan 01 2023 1500 to: Jan 01 2023 1700)","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"Now you have [total tasks] tasks in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"### `todo` - Create a todo task","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"Create a new todo task and add it to the list. Todos only have a description.","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"\\`todo [description]\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"A confirmation message indicating that the todo task has been added.","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"[T][] Read a book","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"Now you have [total tasks] tasks in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"### `delete` - Remove a task from the list","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"Delete a task based on its index in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"\\`delete [index]\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"A confirmation message indicating that the task has been removed.","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"**Notes:**","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"- Provide an integer index for the task\u0027s position in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"- Index starts from 1 (e.g., `delete 1` for the first task).","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"- Invalid or out-of-range indices will result in an error message.","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"[T][] Read a book","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"Now you have [remaining tasks] tasks in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"### `find` - Search for tasks by keyword","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"Search for tasks that contain a specified keyword in their descriptions.","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"\\`find [keyword]\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"A list of tasks whose descriptions contain the specified keyword is displayed.","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"**Notes:**","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"- Matches tasks with the keyword as a substring in their description.","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"[T][] CS lecture","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"[D][] Submit CS assignment (by: Mar 01 2023 2359)","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"### `list` - Display all tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"Shows a list of all tasks currently in storage.","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"jonyeokj"},"content":"\\`list\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"jonyeokj"},"content":"A comprehensive list of all your tasks is displayed.","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"jonyeokj"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"jonyeokj"},"content":"[T][] Read a book","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"jonyeokj"},"content":"[D][] CS2103T ip submission (by: Sep 17 2023 2359)","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"jonyeokj"},"content":"[E][] Team meeting (from: Sep 20 2023 1500 to: Sep 20 2023 1700)","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":183,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":184,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"jonyeokj"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"jonyeokj"},"content":"Marks a task at the specified index as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":192,"author":{"gitId":"jonyeokj"},"content":"\\`mark [index]\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"jonyeokj"},"content":"The specified task is marked as done and a confirmation message is displayed.","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"jonyeokj"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"jonyeokj"},"content":"[T][X] Read a book","lastModifiedDate":"2023-09-19"},{"lineNumber":203,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":204,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":205,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"jonyeokj"},"content":"### `unmark` - Unmark a task as done","lastModifiedDate":"2023-09-19"},{"lineNumber":208,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":209,"author":{"gitId":"jonyeokj"},"content":"Unmarks a task at the specified index, setting it back to its incomplete state.","lastModifiedDate":"2023-09-19"},{"lineNumber":210,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":211,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":212,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":213,"author":{"gitId":"jonyeokj"},"content":"\\`unmark [index]\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"jonyeokj"},"content":"The specified task is unmarked as done and a confirmation message is displayed.","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"jonyeokj"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"jonyeokj"},"content":"[T][] Read a book","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":225,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"jonyeokj"},"content":"### `snooze` - Delay a task","lastModifiedDate":"2023-09-19"},{"lineNumber":228,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":229,"author":{"gitId":"jonyeokj"},"content":"Snoozes a task at the specified index by a given number of minutes.","lastModifiedDate":"2023-09-19"},{"lineNumber":230,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":231,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":232,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":233,"author":{"gitId":"jonyeokj"},"content":"\\`snooze [index] [minutes]\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":234,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"jonyeokj"},"content":"The specified task\u0027s deadline or event time is delayed by the given number of minutes, and a confirmation message is shown.","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"jonyeokj"},"content":"**Notes:**","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"jonyeokj"},"content":"- Todos do not support snoozing, so ensure you pick tasks that can be snoozed.","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":242,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":243,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":244,"author":{"gitId":"jonyeokj"},"content":"Got it. I\u0027ve snoozed the task:","lastModifiedDate":"2023-09-19"},{"lineNumber":245,"author":{"gitId":"jonyeokj"},"content":"[D][] Homework (by: Jan 02 2023 0019)","lastModifiedDate":"2023-09-19"},{"lineNumber":246,"author":{"gitId":"jonyeokj"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":247,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":248,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":249,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"jonyeokj"},"content":"### `sort` - Sort tasks chronologically","lastModifiedDate":"2023-09-19"},{"lineNumber":251,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":252,"author":{"gitId":"jonyeokj"},"content":"Sorts the tasks in the list chronologically, where deadlines are sorted by their due dates, events are sorted by their start dates, and tasks without dates (like ToDos) are placed at the end.","lastModifiedDate":"2023-09-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":254,"author":{"gitId":"jonyeokj"},"content":"**Example of usage:**","lastModifiedDate":"2023-09-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":256,"author":{"gitId":"jonyeokj"},"content":"\\`sort\\`","lastModifiedDate":"2023-09-19"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":258,"author":{"gitId":"jonyeokj"},"content":"**Expected outcome:**","lastModifiedDate":"2023-09-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":260,"author":{"gitId":"jonyeokj"},"content":"The tasks in the list will be rearranged in a chronological order based on their associated dates and times. A confirmation message will be displayed.","lastModifiedDate":"2023-09-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":262,"author":{"gitId":"jonyeokj"},"content":"**Notes:**","lastModifiedDate":"2023-09-19"},{"lineNumber":263,"author":{"gitId":"jonyeokj"},"content":"- Tasks without associated dates (e.g., Todo tasks) will be placed at the end of the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":264,"author":{"gitId":"jonyeokj"},"content":"- If the task list is empty, a notification will be given.","lastModifiedDate":"2023-09-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":266,"author":{"gitId":"jonyeokj"},"content":"**Example output:**","lastModifiedDate":"2023-09-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":269,"author":{"gitId":"jonyeokj"},"content":"Tasks have been sorted!","lastModifiedDate":"2023-09-19"},{"lineNumber":270,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"jonyeokj":246,"-":24}},{"path":"src/main/java/martin/Martin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.parser.Parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"public class Martin {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    public Martin(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"            tasks \u003d new TaskList(storage.loadFromFile());","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"        } finally {","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"            parser \u003d new Parser(tasks);","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"            assert tasks !\u003d null : \"Tasks should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"            assert parser !\u003d null : \"Parser should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"     * Processes the given input and returns a response.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * @param input User\u0027s input string.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @return Response message.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        assert input !\u003d null : \"Input to getResponse should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            Command cmd \u003d parser.parse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            assert cmd !\u003d null : \"Parsed command should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"            return cmd.execute(); ","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jonyeokj":48}},{"path":"src/main/java/martin/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private String filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks the list of tasks to save.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException if there\u0027s any issue with writing to the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public void saveToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"            lines.add(task.toFileFormat());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"            Files.createFile(path);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        Files.write(path, lines, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"     * @return a list of tasks loaded from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException if there\u0027s any issue with reading from the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"     * @throws IllegalArgumentException if there\u0027s a format issue with the data.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws IOException, IllegalArgumentException {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"            for (String line : lines) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"                if (line.trim().isEmpty()) ","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"                tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":63}},{"path":"src/main/java/martin/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"public interface Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"     * Executes the specific command.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    String execute() throws MartinException;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":10}},{"path":"src/main/java/martin/commands/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Event;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that shows Tasks on the specified date.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"public class DateCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * Creates a Date Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public DateCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * Executes the command, returning a formatted string of tasks for the given date.","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * @return A string representation of tasks for the given date.","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        LocalDate date \u003d parseDate(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        return formatTasksForDate(date);","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     * Parses the date from the given command.","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"     * @return LocalDate The parsed date.","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"     * @throws InvalidDateFormatException When the date format is incorrect.","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    private LocalDate parseDate(String input) throws InvalidDateFormatException {","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d input.split(\" \", 2);  // Splits into two parts","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidDateFormatException(\"Invalid date format. The command is missing a date.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        String dateStr \u003d parts[1].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"            return LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidDateFormatException(\"Invalid date format. Please use the format \u0027d/M/yyyy\u0027.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"     * Formats the tasks for the given date.","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"     * @param date The date for which tasks should be formatted.","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"     * @return A string representation of tasks for the given date.","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    private String formatTasksForDate(LocalDate date) {","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"        response.append(\"Tasks on \").append(date.format(DateTimeFormatter.ofPattern(\"M d yyyy\"))).append(\":\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"        // Get tasks for the date","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"        String tasksOnDate \u003d tasks.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"            .filter(task -\u003e ","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"                (task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().toLocalDate().equals(date)) ||","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"                (task instanceof Event \u0026\u0026 ","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"                !date.isBefore(((Event) task).getFrom().toLocalDate()) \u0026\u0026 ","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"                !date.isAfter(((Event) task).getTo().toLocalDate()))","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"            )","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"            .map(task -\u003e task.toString())","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"            .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"        if (tasksOnDate.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"            response.append(\"No tasks on this date.\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"            response.append(tasksOnDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"        return response.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":99}},{"path":"src/main/java/martin/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that handles the addition of Deadline tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * Creates a Deadline Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public DeadlineCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @return A confirmation message indicating that the Deadline task has been added.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @throws EmptyTaskDescriptionException If the description of the deadline or its date is missing.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        if (input.length() \u003c\u003d 8) {","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a deadline or its date cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        return \"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":50}},{"path":"src/main/java/martin/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that handles the deletion of tasks from the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"     * Creates a Delete Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    public DeleteCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"     * Deletes the task at the specified index provided by the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * @return A confirmation message of the deleted task.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @throws InvalidTaskNumberException If the specified task number is invalid or out of range.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s any other error executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Task number out of range.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            Task removedTask \u003d tasks.remove(taskNo - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            return \"Noted. I\u0027ve removed this task:\\n       \" + removedTask + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":50}},{"path":"src/main/java/martin/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that handles the addition of events to the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * Creates an Event Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public EventCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * @return A confirmation message indicating that the event has been added.","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     * @throws EmptyTaskDescriptionException If the event description or its time is empty.","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s any other error executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! The command is missing the time details. Please specify the event starting time using /from.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! The command is missing the ending time. Please specify the event ending time using /to.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        if (parts[0].trim().isEmpty() || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of an event or its time cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(timeParts[0].trim(), formatter);","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(timeParts[1].trim(), formatter);","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"            if (from.isAfter(to) || from.isEqual(to)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"                throw new MartinException(\"☹ OOPS!!! The start time of the event must be earlier than the end time.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"            tasks.add(new Event(parts[0].trim(), from, to));","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"            return \"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! The time of the event is in an invalid format. Please use the format d/M/yyyy HHmm.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":77}},{"path":"src/main/java/martin/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.NoTaskFoundException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that searches and lists tasks that contain a given keyword.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"     * Creates a Find Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    public FindCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"     * Finds tasks that match the given keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * @return A formatted string listing all the tasks that match the keyword.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * @throws NoTaskFoundException If no tasks match the keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws NoTaskFoundException {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        String keyword \u003d input.substring(5);","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            throw new NoTaskFoundException(\"No tasks found that match the keyword: \" + keyword);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        result.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"            result.append((i + 1) + \".\" + matchingTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        return result.toString().trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":55}},{"path":"src/main/java/martin/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that lists all the tasks from the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"     * Creates a List Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    public ListCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * Lists all tasks currently in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     * @return A string representation of the list of all tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public String execute() {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"            return \"The task list is currently empty!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"            result.append((i + 1) + \". \" + tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        return result.toString().trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":42}},{"path":"src/main/java/martin/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.TaskAlreadyDoneException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that to mark a task at a specified index.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * Creates a Mark Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public MarkCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @return String A message indicating the task has been marked as done or an error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @throws InvalidTaskNumberException If an invalid task number is given.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     * @throws TaskAlreadyDoneException If the task to be marked is already marked as done.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s any other error executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            Task task \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"                throw new TaskAlreadyDoneException(\"Task \\\"\" + task.getDescription() + \"\\\" is already done.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n       \" + task;","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":56}},{"path":"src/main/java/martin/commands/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.time.Duration;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that handles the snoozing of tasks in the task list.","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"public class SnoozeCommand implements Command {","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private String input; ","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"     * Creates a SnoozeCommand.","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    public SnoozeCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"     * Snoozes a task by the specified duration.","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * @return A confirmation message indicating that the task has been snoozed.","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! Incorrect format for snooze command.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        int durationMinutes;","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            taskIndex \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"            durationMinutes \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! Invalid task index or snooze duration.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! The task index is out of range.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        Task task \u003d tasks.get(taskIndex - 1); // Adjust for 0-based indexing","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"            task.snooze(Duration.ofMinutes(durationMinutes));","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"            return \"Got it. I\u0027ve snoozed the task:\\n       \" + task;","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        } catch (UnsupportedOperationException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! This task cannot be snoozed.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"jonyeokj":64}},{"path":"src/main/java/martin/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Deadline;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Event;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that sorts the tasks in the task list.","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"public class SortCommand implements Command {","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * Creates a SortCommand.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public SortCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Retrieves the LocalDateTime associated with the task.","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @param task The task to inspect.","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @return The LocalDateTime associated with the task.","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    private LocalDateTime getDateFromTask(Task task) {","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"            return ((Deadline) task).getBy();","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            return ((Event) task).getFrom();","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        return LocalDateTime.MAX; // Default, for tasks without a date","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"     * Sorts the tasks by date and time.","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     * @return A confirmation message indicating that the tasks have been sorted.","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"            return \"☹ OOPS!!! The task list is empty.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        Comparator\u003cTask\u003e taskComparator \u003d Comparator.comparing(this::getDateFromTask);","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        Collections.sort(tasks, taskComparator);","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        return \"Tasks have been sorted!\";","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"jonyeokj":61}},{"path":"src/main/java/martin/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * Adds a new Todo task to the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * Creates a Todo Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public TodoCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @return A string indicating the task has been added or an error message.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @throws EmptyTaskDescription If no task description is given in the input.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s any other error executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        if (input.length() \u003c\u003d 4) {","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        return \"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":50}},{"path":"src/main/java/martin/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.TaskNotDoneException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * Represents a command that to unmark a task at a specified index.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private String input;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * Creates an Unmark Command.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * @param input The user command input.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public UnmarkCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Unmarks the task at the specified index, implying that it is not done.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @return A string indicating the task has been marked as done or an error message.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @throws InvalidTaskNumberException If an invalid task number is given.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     * @throws TaskNotDoneException If the task to be unmarked is already marked as not done.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException If there\u0027s any other error executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            Task task \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"                throw new TaskNotDoneException(\"Task \\\"\" + task.getDescription() + \"\\\" is not done yet.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n       \" + task;","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":56}},{"path":"src/main/java/martin/exceptions/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when a task lacks a description.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class EmptyTaskDescriptionException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public EmptyTaskDescriptionException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when command is invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class InvalidCommandException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when a date is formatted wrongly. ","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class InvalidDateFormatException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public InvalidDateFormatException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when the given task number is invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class InvalidTaskNumberException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/MartinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception that is raised when running Martin chatbot.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class MartinException extends Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public MartinException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/NoTaskFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when no task is found.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class NoTaskFoundException extends MartinException {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public NoTaskFoundException(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when a marked task is marked again.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class TaskAlreadyDoneException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public TaskAlreadyDoneException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/TaskNotDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when an unmarked task is unmarked again.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"public class TaskNotDoneException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    public TaskNotDoneException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":13}},{"path":"src/main/java/martin/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":" * Represents a dialog box in the GUI for Martin. It can represent either user input or Martin\u0027s response.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    private Label text;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * Creates a dialog box with specified label and image view.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     * @param l The label containing text for the dialog.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * @param iv The image view displaying the avatar for the dialog.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    private DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        text.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        HBox.setMargin(text, new Insets(20));","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        HBox.setMargin(displayPicture, new Insets(10));","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        Circle circleClip \u003d new Circle(25, 25, 25);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        displayPicture.setClip(circleClip);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"     * Returns a dialog box for the user with the given text and image.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     * @param text The text to be displayed in the user dialog box.","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"     * @param img The image to be displayed as the user\u0027s avatar.","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"     * @return A dialog box representing the user\u0027s input.","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        var db \u003d new DialogBox(new Label(text), new ImageView(img));","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        db.setStyle(\"-fx-background-color: #E1F5FE; -fx-background-radius: 5; -fx-margin: 5px;\");","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        db.getChildren().setAll(db.displayPicture, db.text);","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"     * Returns a dialog box for Martin with the given text and image.","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"     * @param text The text to be displayed in Martin\u0027s dialog box.","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"     * @param img The image to be displayed as Martin\u0027s avatar.","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"     * @return A dialog box representing Martin\u0027s response.","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"    public static DialogBox getMartinDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"        var db \u003d new DialogBox(new Label(text), new ImageView(img));","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"        db.setStyle(\"-fx-background-color: #FFECB3; -fx-background-radius: 5; -fx-margin: 5px;\");","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jonyeokj":77}},{"path":"src/main/java/martin/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        Application.launch(MainWindow.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.DialogPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"import martin.Martin;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"public class MainWindow extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    private Martin martin \u003d new Martin(\"data/martin.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    Image martinImage \u003d new Image(getClass().getResourceAsStream(\"/images/martin.png\"), 50, 50, true, true);","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    Image hikaruImage \u003d new Image(getClass().getResourceAsStream(\"/images/hikaru.png\"), 50, 50, true, true);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    /*","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"     * Launch the GUI.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        launch(args);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        assert userInput !\u003d null : \"UserInput TextField should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        assert sendButton !\u003d null : \"SendButton should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"        stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        stage.setResizable(true);","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setBottomAnchor(scrollPane, 40.0); // reserve space for userInput and sendButton","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setLeftAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setRightAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setRightAnchor(userInput, 60.0); // reserve space for the button","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0); ","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer.setPadding(new Insets(10));","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"            try {","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"                handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"                showErrorDialog(\"An error occurred while processing your input. Please try again.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"            try {","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"                handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"                showErrorDialog(\"An error occurred while processing your input. Please try again.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"        // Display a welcome message when the app starts","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"                DialogBox.getMartinDialog(\"Hello! I\u0027m Martin. How can I assist you today?\", martinImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"     * Processes user input and displays both user\u0027s text and Martin\u0027s reply.","lastModifiedDate":"2023-09-17"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException If there is an error during input/output operation.","lastModifiedDate":"2023-09-17"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"        assert input !\u003d null : \"User input should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"            showErrorDialog(\"Input cannot be empty.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"            return;","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"jonyeokj"},"content":"        assert response !\u003d null : \"Response from Martin should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"                DialogBox.getUserDialog(input, hikaruImage),","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"                DialogBox.getMartinDialog(response, martinImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"        // Introduce a small delay using PauseTransition","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.millis(100)); // 100ms delay","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"        pause.setOnFinished(event -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"        pause.play();","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"     * Executes the getResponse method in Martin using the provided input.","lastModifiedDate":"2023-09-17"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"     * @param input The input string to get a response for.","lastModifiedDate":"2023-09-17"},{"lineNumber":166,"author":{"gitId":"jonyeokj"},"content":"     * @return The response from Martin for the given input.","lastModifiedDate":"2023-09-17"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException If there is an error during input/output operation.","lastModifiedDate":"2023-09-17"},{"lineNumber":168,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"jonyeokj"},"content":"    private String getResponse(String input) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"jonyeokj"},"content":"        return martin.getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"jonyeokj"},"content":"    * Displays an error dialog with a specified error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"jonyeokj"},"content":"    *","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"jonyeokj"},"content":"    * @param errorMessage The specific error message to be shown in the dialog.","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"jonyeokj"},"content":"    private void showErrorDialog(String errorMessage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"jonyeokj"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.ERROR);","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"jonyeokj"},"content":"        alert.setTitle(\"Error\");","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"jonyeokj"},"content":"        alert.setHeaderText(\"Something went wrong!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"        alert.setContentText(errorMessage);","lastModifiedDate":"2023-09-10"},{"lineNumber":183,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":184,"author":{"gitId":"jonyeokj"},"content":"        // Modify the padding of the DialogPane\u0027s content","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"jonyeokj"},"content":"        DialogPane dialogPane \u003d alert.getDialogPane();","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"jonyeokj"},"content":"        dialogPane.setContentText(errorMessage);  // Set content text again to refresh the layout","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"jonyeokj"},"content":"        // Retrieve the content and modify its appearance","lastModifiedDate":"2023-09-19"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"        if (dialogPane.getContent() instanceof Label) {","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"jonyeokj"},"content":"            Label contentLabel \u003d (Label) dialogPane.getContent();","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":192,"author":{"gitId":"jonyeokj"},"content":"            // Adjust padding","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"            contentLabel.setPadding(new Insets(15));","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"jonyeokj"},"content":"            // Change background color to light red","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"jonyeokj"},"content":"            contentLabel.setBackground(new Background(new BackgroundFill(Color.LIGHTCORAL, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"jonyeokj"},"content":"        alert.showAndWait();","lastModifiedDate":"2023-09-10"},{"lineNumber":200,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":201,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jonyeokj":201}},{"path":"src/main/java/martin/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.SnoozeCommand;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.SortCommand;","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.TodoCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.UnmarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.DateCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.DeadlineCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.EventCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.FindCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * Parses the user input and returns the appropriate Command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     * @param input The entire string of the user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException When the command is invalid or there\u0027s an error.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     * @return Command The appropriate command to be executed.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    public Command parse(String input) throws MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        switch (command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"            case \"list\":","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"                return new ListCommand(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"                return new DeleteCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"                return new MarkCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"                return new UnmarkCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"                return new TodoCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"                return new DeadlineCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"            case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"                return new EventCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"            case \"date\":","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"                return new DateCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"            case \"find\":","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"                return new FindCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"            case \"snooze\":","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"                return new SnoozeCommand(input, tasks);","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"            case \"sort\":","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"                return new SortCommand(tasks);","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidCommandException(\"Unknown command: \" + input);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":74}},{"path":"src/main/java/martin/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.time.Duration;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    public Deadline(String description, String by) throws MartinException {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"            throw new MartinException(\"☹ OOPS!!! The deadline time component is missing. Expected format: d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        return by;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    public void snooze(Duration duration) {","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        this.by \u003d this.by.plus(duration);","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":45}},{"path":"src/main/java/martin/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.time.Duration;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        return from;","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        return to;","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    public void snooze(Duration duration) {","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        this.from \u003d this.from.plus(duration);","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        this.to \u003d this.to.plus(duration);","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + from.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")) + \" | \" + to.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":40}},{"path":"src/main/java/martin/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.time.Duration;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        return description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     *   ","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * @param keyword The keyword to check against the task\u0027s description.","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     * @return true if the task\u0027s description contains the keyword, otherwise false.","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"     * Snoozes or postpones the task by the given duration.","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"     * @param duration The amount of time to snooze or postpone the task.","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"     * @throws UnsupportedOperationException if the task type does not support snoozing.","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    public void snooze(Duration duration) {","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        throw new UnsupportedOperationException(\"This task type cannot be snoozed.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"     * Converts the task to its corresponding file format representation.","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"     * @return A string representation of the task suitable for file storage.","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"     * Converts a file format string back to a Task.","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"     * @param fileFormatString String representation from file.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"     * @return A new Task instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"    public static Task fromFileFormat(String fileFormatString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d fileFormatString.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"        switch (type) {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"            case \"D\": // Deadline tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"                if (parts.length !\u003d 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"                    throw new IllegalArgumentException(\"Invalid Deadline format in file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"                boolean isDoneDeadline \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"                String descriptionDeadline \u003d parts[2];","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"                Deadline deadline \u003d new Deadline(descriptionDeadline, by);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"                if (isDoneDeadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"                return deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"            case \"E\":","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"                if (parts.length !\u003d 5) {","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"                    throw new IllegalArgumentException(\"Invalid Event format in file.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"                boolean isDoneEvent \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"                String descriptionEvent \u003d parts[2];","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(parts[4], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"                Event event \u003d new Event(descriptionEvent, from, to);","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"                if (isDoneEvent) {","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"                    event.markAsDone();","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"                return event;","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"                if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"                    throw new IllegalArgumentException(\"Invalid task format in file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"                boolean isDone \u003d \"1\".equals(parts[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"                String description \u003d parts[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"                Task task \u003d new Task(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"                return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":128}},{"path":"src/main/java/martin/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":19}},{"path":"src/main/java/martin/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/test/java/martin/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private DeleteCommand command;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        list.getTasks().add(new Task(\"Sample Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    public void execute_deleteTask_taskRemoved() throws MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        command \u003d new DeleteCommand(\"delete 1\", list.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        command.execute();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(0, list.getTasks().size());","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        command \u003d new DeleteCommand(\"delete 3\", list.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(InvalidTaskNumberException.class, () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            command.execute();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        });","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":35}},{"path":"src/test/java/martin/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private TodoCommand command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    public void execute_addTask_taskAdded() throws MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"        command \u003d new TodoCommand(\"todo Sample task\", list.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        command.execute();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(1, list.getTasks().size());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(list.getTasks().get(0) instanceof Task);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":26}}]
