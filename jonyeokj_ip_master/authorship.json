[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"plugins {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"repositories {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"dependencies {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"test {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    testLogging {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        showExceptions true","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        showCauses true","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"application {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    mainClass.set(\"martin.Martin\")","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"shadowJar {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    archiveFileName \u003d \u0027martin.jar\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"    archiveBaseName \u003d \"martin\"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"javafx {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"sourceSets {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"    main {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        java {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"        resources {","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"            srcDirs \u003d [\u0027src/main/resources\u0027]","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"run {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":74}},{"path":"data/martin.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"1 | test","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"D | 0 | return book | 02/12/2019 1800","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"0 | lol","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":3}},{"path":"src/main/java/martin/Martin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.parser.Parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"public class Martin {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    public Martin(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"            tasks \u003d new TaskList(storage.loadFromFile());","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"            parser \u003d new Parser(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        assert tasks !\u003d null : \"Tasks should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        assert parser !\u003d null : \"Parser should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"     * Processes the given input and returns a response.","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * @param input User\u0027s input string.","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * @return Response message.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        assert input !\u003d null : \"Input to getResponse should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"            Command cmd \u003d parser.parse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            assert cmd !\u003d null : \"Parsed command should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            return cmd.execute(); ","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jonyeokj":47}},{"path":"src/main/java/martin/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private String filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * @param tasks the list of tasks to save.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException if there\u0027s any issue with writing to the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public void saveToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"            lines.add(task.toFileFormat());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"            Files.createFile(path);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        Files.write(path, lines, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"     * @return a list of tasks loaded from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException if there\u0027s any issue with reading from the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"     * @throws IllegalArgumentException if there\u0027s a format issue with the data.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws IOException, IllegalArgumentException {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"            for (String line : lines) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"                if (line.trim().isEmpty()) ","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"                tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":63}},{"path":"src/main/java/martin/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"public interface Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"     * Executes the specific command.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    String execute() throws MartinException;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":10}},{"path":"src/main/java/martin/commands/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class DateCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private String dateStr;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    public DateCommand(String dateStr, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"        this.dateStr \u003d dateStr;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    * Returns a String of the tasks that are scheduled on a specific date.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    * @return String A formatted string containing the tasks on the specified date.","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        LocalDate date;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"            date \u003d LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidDateFormatException(\"Invalid date format. Please use the format \u0027d/M/yyyy\u0027.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        response.append(\"Tasks on \").append(date.format(DateTimeFormatter.ofPattern(\"M d yyyy\"))).append(\":\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        boolean hasTasks \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"                if (d.getBy().toLocalDate().equals(date)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"                    response.append((count + 1)).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"                    hasTasks \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"            count++;","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        if (!hasTasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"            response.append(\"No tasks on this date.\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        return response.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":60}},{"path":"src/main/java/martin/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public DeadlineCommand(String command, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    * Adds a new Deadline task to the task list and returns a confirmation message.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    * @return String A confirmation message of the added Deadline task.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    **/","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        if (command.length() \u003c\u003d 8) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d command.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a deadline or its date cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        return \"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":38}},{"path":"src/main/java/martin/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    public DeleteCommand(String command, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    * Deletes the task at the specified index provided by the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    * @return String A confirmation message of the deleted task.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Task number out of range.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            Task removedTask \u003d tasks.remove(taskNo - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"            return \"Noted. I\u0027ve removed this task:\\n       \" + removedTask + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":38}},{"path":"src/main/java/martin/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public EventCommand(String command, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    * Adds a new Event task to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    * @return String A confirmation message of the added event.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d command.substring(6).split(\" /from \");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || timeParts.length \u003c 2 || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of an event or its time cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Event(parts[0], timeParts[0], timeParts[1]));","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        return \"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":39}},{"path":"src/main/java/martin/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    public FindCommand(String command, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    * Finds tasks that match the given keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    * @return String The list of matching tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    public String execute() {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        String keyword \u003d command.substring(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        result.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            result.append((i + 1) + \".\" + matchingTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        return result.toString().trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jonyeokj":40}},{"path":"src/main/java/martin/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    public ListCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    * Lists all tasks currently in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    * @return String The list of all tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    public String execute() {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"            result.append((i + 1) + \". \" + tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        return result.toString().trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":29}},{"path":"src/main/java/martin/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.TaskAlreadyDoneException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public MarkCommand(String command, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    * Marks the task at the specified index as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    * @return String A message indicating the task has been marked as done or an error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            Task task \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"                throw new TaskAlreadyDoneException(\"Task \\\"\" + task.getDescription() + \"\\\" is already done.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n       \" + task;","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":43}},{"path":"src/main/java/martin/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public TodoCommand(String command, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    * Adds a new ToDo task to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    * @return String A message indicating the task has been added or an error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        if (command.length() \u003c\u003d 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        return \"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":38}},{"path":"src/main/java/martin/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.TaskNotDoneException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public UnmarkCommand(String command, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    * Unmarks the task at the specified index, marking it as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    * @return String A message indicating the task has been unmarked or an error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public String execute() throws MartinException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            Task task \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"                throw new TaskNotDoneException(\"Task \\\"\" + task.getDescription() + \"\\\" is not done yet.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n       \" + task;","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":43}},{"path":"src/main/java/martin/exceptions/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when a task lacks a description.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class EmptyTaskDescriptionException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public EmptyTaskDescriptionException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when command is invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class InvalidCommandException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when a date is formatted wrongly. ","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class InvalidDateFormatException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public InvalidDateFormatException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when the given task number is invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class InvalidTaskNumberException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/MartinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception that is raised when running Martin chatbot.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class MartinException extends Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public MartinException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when a marked task is marked again.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class TaskAlreadyDoneException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public TaskAlreadyDoneException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/exceptions/TaskNotDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":" * Represents an exception when an unmarked task is unmarked again.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * ","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" * @param message Error message to be printed out.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"public class TaskNotDoneException extends MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    public TaskNotDoneException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":13}},{"path":"src/main/java/martin/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * Represents a dialog box in the GUI for Martin. It can represent either user input or Martin\u0027s response.","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private Label text;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * Creates a dialog box with specified label and image view.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * @param l The label containing text for the dialog.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * @param iv The image view displaying the avatar for the dialog.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    private DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        text.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * Returns a dialog box for the user with the given text and image.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"     * @param text The text to be displayed in the user dialog box.","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"     * @param img The image to be displayed as the user\u0027s avatar.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"     * @return A dialog box representing the user\u0027s input.","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        var db \u003d new DialogBox(new Label(text), new ImageView(img));","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        db.getChildren().setAll(db.displayPicture, db.text);","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"     * Returns a dialog box for Martin with the given text and image.","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"     * @param text The text to be displayed in Martin\u0027s dialog box.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"     * @param img The image to be displayed as Martin\u0027s avatar.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"     * @return A dialog box representing Martin\u0027s response.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    public static DialogBox getMartinDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        var db \u003d new DialogBox(new Label(text), new ImageView(img));","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jonyeokj":63}},{"path":"src/main/java/martin/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        Application.launch(MainWindow.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/main/java/martin/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import martin.Martin;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"public class MainWindow extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    private Martin martin \u003d new Martin(\"data/martin.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    Image martinImage \u003d new Image(getClass().getResourceAsStream(\"/images/martin.png\"), 50, 50, true, true);","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    Image hikaruImage \u003d new Image(getClass().getResourceAsStream(\"/images/hikaru.png\"), 50, 50, true, true);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    /*","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * Launch the GUI.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        launch(args);","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        assert userInput !\u003d null : \"UserInput TextField should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        assert sendButton !\u003d null : \"SendButton should be initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"            try {","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"                handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"                showErrorDialog(\"An error occurred while processing your input. Please try again.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"            try {","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"                handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"                showErrorDialog(\"An error occurred while processing your input. Please try again.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"        // Display a welcome message when the app starts","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"                DialogBox.getMartinDialog(\"Hello! I\u0027m Martin. How can I assist you today?\", martinImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"     * Input processing of user, and displaying of the user\u0027s text and Martin\u0027s reply.","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"        assert input !\u003d null : \"User input should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"            showErrorDialog(\"Input cannot be empty.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"            return;","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"        assert response !\u003d null : \"Response from Martin should not be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"                DialogBox.getUserDialog(input, hikaruImage),","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"                DialogBox.getMartinDialog(response, martinImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"     * Execute getResponse in Martin based on the given input.","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"    private String getResponse(String input) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"        return martin.getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"    * Displays an error dialog with a specified error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"    *","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"    * @param errorMessage The specific error message to be shown in the dialog.","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"    */","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"    private void showErrorDialog(String errorMessage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.ERROR);","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"        alert.setTitle(\"Error\");","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"        alert.setHeaderText(\"Something went wrong!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"        alert.setContentText(errorMessage);","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"        alert.showAndWait();","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jonyeokj":162}},{"path":"src/main/java/martin/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.TodoCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.UnmarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.DateCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.DeadlineCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.EventCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import martin.commands.FindCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * Parses the user input and returns the appropriate Command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * @param input The entire string of the user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     * @throws MartinException When the command is invalid or there\u0027s an error.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * @return Command The appropriate command to be executed.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    public Command parse(String input) throws MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        switch (command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"            case \"list\":","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"                return new ListCommand(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"                return new DeleteCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"                return new MarkCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"                return new UnmarkCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"                return new TodoCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"                return new DeadlineCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"            case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"                return new EventCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"            case \"date\":","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"                return new DateCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"            case \"find\":","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"                return new FindCommand(input, tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidCommandException(\"Unknown command: \" + input);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":69}},{"path":"src/main/java/martin/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"        return by;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":32}},{"path":"src/main/java/martin/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"        return \"[E][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":17}},{"path":"src/main/java/martin/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        return description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     * Convert the task to its file format representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     * @return String representation of task for file storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"     * Convert a file format string back to a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"     * ","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     * @param fileFormatString String representation from file.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"     * @return A new Task instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    public static Task fromFileFormat(String fileFormatString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d fileFormatString.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        switch (type) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"            case \"D\": // Deadline tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"                if (parts.length !\u003d 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"                    throw new IllegalArgumentException(\"Invalid Deadline format in file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"                boolean isDoneDeadline \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"                String descriptionDeadline \u003d parts[2];","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"                Deadline deadline \u003d new Deadline(descriptionDeadline, by);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"                if (isDoneDeadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"                return deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"                if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"                    throw new IllegalArgumentException(\"Invalid task format in file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"                boolean isDone \u003d \"1\".equals(parts[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"                String description \u003d parts[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"                Task task \u003d new Task(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"                return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":94}},{"path":"src/main/java/martin/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":19}},{"path":"src/main/java/martin/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":12}},{"path":"src/test/java/martin/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    private DeleteCommand command;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        list.getTasks().add(new Task(\"Sample Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    public void execute_deleteTask_taskRemoved() throws MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        command \u003d new DeleteCommand(\"delete 1\", list.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        command.execute();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(0, list.getTasks().size());","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        command \u003d new DeleteCommand(\"delete 3\", list.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(InvalidTaskNumberException.class, () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            command.execute();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        });","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":35}},{"path":"src/test/java/martin/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package martin.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import martin.exceptions.MartinException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import martin.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import martin.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    private TodoCommand command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    public void execute_addTask_taskAdded() throws MartinException {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"        command \u003d new TodoCommand(\"todo Sample task\", list.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        command.execute();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(1, list.getTasks().size());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(list.getTasks().get(0) instanceof Task);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jonyeokj":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"java -classpath ..\\bin Martin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonyeokj":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"java -classpath ../bin Martin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonyeokj":1,"-":37}}]
