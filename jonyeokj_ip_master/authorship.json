[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        return \"[D][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        return \"[E][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":15}},{"path":"src/main/java/Martin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import exceptions.*;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"public class Martin {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"    public static void main(String[] args) throws InvalidCommandException, EmptyTaskDescriptionException {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        printMessage(\"Hello! I\u0027m Martin\\n     What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"                    printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"                } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"                    printTasks();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"                    deleteTask(input);","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"                    markTask(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"                    unmarkTask(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"                    addTodo(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"                    addDeadline(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"                    addEvent(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"                    throw new InvalidCommandException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"                printMessage(e.getMessage());","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    private static void printMessage(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            System.out.println(\"     \" + message);","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"    private static void printTasks() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            System.out.println(\"     \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    private static void deleteTask(String command) throws InvalidTaskNumberException {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"            Task removedTask \u003d tasks.remove(taskNo - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"            printMessage(\"Noted. I\u0027ve removed this task:\\n       \" + removedTask + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"    private static void markTask(String command) throws InvalidTaskNumberException, TaskAlreadyDoneException {","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"            ","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"            Task task \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"                throw new TaskAlreadyDoneException(\"Task \\\"\" + task.getDescription() + \"\\\" is already done.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"            printMessage(\"Nice! I\u0027ve marked this task as done:\\n       \" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"            printMessage(e.getMessage());","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"    private static void unmarkTask(String command) throws InvalidTaskNumberException, TaskNotDoneException{","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"            int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"            if (taskNo \u003c\u003d 0 || taskNo \u003e tasks.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"                throw new InvalidTaskNumberException(\"Invalid task number.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"            Task task \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"                throw new TaskNotDoneException(\"Task \\\"\" + task.getDescription() + \"\\\" is not done yet.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"            printMessage(\"OK, I\u0027ve marked this task as not done yet:\\n       \" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"            printMessage(e.getMessage());","lastModifiedDate":"2023-08-25"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"    ","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"    private static void addTodo(String command) throws EmptyTaskDescriptionException {","lastModifiedDate":"2023-08-25"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"        if (command.length() \u003c\u003d 4) {","lastModifiedDate":"2023-08-25"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"        ","lastModifiedDate":"2023-08-25"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"        printMessage(\"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"    private static void addDeadline(String command) throws EmptyTaskDescriptionException {","lastModifiedDate":"2023-08-25"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d command.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"â˜¹ OOPS!!! The description of a deadline or its date cannot be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"        printMessage(\"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"    private static void addEvent(String command) throws EmptyTaskDescriptionException {","lastModifiedDate":"2023-08-25"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"        String[] parts \u003d command.substring(6).split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || timeParts.length \u003c 2 || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"            throw new EmptyTaskDescriptionException(\"â˜¹ OOPS!!! The description of an event or its time cannot be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        tasks.add(new Event(parts[0], timeParts[0], timeParts[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"        printMessage(\"Got it. I\u0027ve added this task:\\n       \" + tasks.get(tasks.size() - 1) + \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":142}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        return description;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jonyeokj":10}},{"path":"src/main/java/exceptions/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class EmptyTaskDescriptionException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public EmptyTaskDescriptionException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"jonyeokj":7}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"jonyeokj":7}},{"path":"src/main/java/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"jonyeokj":7}},{"path":"src/main/java/exceptions/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class TaskAlreadyDoneException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public TaskAlreadyDoneException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"jonyeokj":7}},{"path":"src/main/java/exceptions/TaskNotDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"public class TaskNotDoneException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"    public TaskNotDoneException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"jonyeokj":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"java -classpath ..\\bin Martin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonyeokj":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"java -classpath ../bin Martin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonyeokj":1,"-":37}}]
