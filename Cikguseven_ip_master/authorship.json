[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cikguseven"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Cikguseven"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Cikguseven"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Cikguseven"},"content":" * Deadline task that contains description of task and deadline.","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Cikguseven"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Cikguseven"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Cikguseven"},"content":"  private final LocalDateTime deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Cikguseven"},"content":"   * Public constructor for deadline.","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Cikguseven"},"content":"   * @param description Details of deadline.","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Cikguseven"},"content":"   * @param deadline Deadline of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Cikguseven"},"content":"  public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Cikguseven"},"content":"    super(description, \"D\");","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Cikguseven"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Cikguseven"},"content":"   * Detailed string representation of deadline.","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Cikguseven"},"content":"   * @return Information of deadline.","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Cikguseven"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Cikguseven"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Cikguseven"},"content":"    return super.toString() + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"Cikguseven"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Cikguseven":28}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cikguseven"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cikguseven"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cikguseven"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Cikguseven"},"content":" * Event task that contains description of event,","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Cikguseven"},"content":" * as well as start and end date/time.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Cikguseven"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Cikguseven"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"Cikguseven"},"content":"  private final LocalDateTime start;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Cikguseven"},"content":"  private final LocalDateTime end;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Cikguseven"},"content":"   * Public constructor for event.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Cikguseven"},"content":"   * @param description Details of event.","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Cikguseven"},"content":"   * @param start Start date/time of event.","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Cikguseven"},"content":"   * @param end End date/time of event.","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Cikguseven"},"content":"  public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Cikguseven"},"content":"    super(description, \"E\");","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Cikguseven"},"content":"    this.start \u003d start;","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Cikguseven"},"content":"    this.end \u003d end;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Cikguseven"},"content":"   * Detailed string representation of event.","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Cikguseven"},"content":"   * @return Information of event.","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"Cikguseven"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"Cikguseven"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"Cikguseven"},"content":"    return super.toString() +","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Cikguseven"},"content":"            \" (from: \" + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) +","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Cikguseven"},"content":"            \" to: \" + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"Cikguseven"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Cikguseven":34}},{"path":"src/main/java/Oscar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cikguseven"},"content":"import java.io.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Cikguseven"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Cikguseven"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Cikguseven"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Cikguseven"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Cikguseven"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Cikguseven"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Cikguseven"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"Cikguseven"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Cikguseven"},"content":" * Chatbot named Oscar that can respond to user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Cikguseven"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Cikguseven"},"content":"public class Oscar {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Cikguseven"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Cikguseven"},"content":"    static final String FILE_DIRECTORY \u003d \"./data\";","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Cikguseven"},"content":"    static final String FILE_LOCATION \u003d FILE_DIRECTORY + \"/tasklist\";","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cikguseven"},"content":"    static final DateTimeFormatter DTFORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Cikguseven"},"content":"    enum Commands {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Cikguseven"},"content":"        BYE,","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Cikguseven"},"content":"        LIST,","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Cikguseven"},"content":"        MARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Cikguseven"},"content":"        UNMARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Cikguseven"},"content":"        DELETE,","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Cikguseven"},"content":"        TODO,","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Cikguseven"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Cikguseven"},"content":"        EVENT","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Cikguseven"},"content":"     * Initialises Oscar from a local saved file.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Cikguseven"},"content":"     * Solution adapted by \u003ca href\u003d\"https://howtodoinjava.com/java/collections/arraylist/","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cikguseven"},"content":"     * serialize-deserialize-arraylist/\"\u003e...\u003c/a\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cikguseven"},"content":"    private static void init() throws OscarException {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cikguseven"},"content":"        File savedFile \u003d new File(FILE_LOCATION);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Cikguseven"},"content":"        if (savedFile.exists() \u0026\u0026 !savedFile.isDirectory()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Cikguseven"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Cikguseven"},"content":"                FileInputStream fileInputStream \u003d new FileInputStream(savedFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Cikguseven"},"content":"                ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Cikguseven"},"content":"                taskList \u003d (ArrayList\u003cTask\u003e) objectInputStream.readObject();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Cikguseven"},"content":"                System.out.println(\"Oscar has successfully loaded the saved task list.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Cikguseven"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Cikguseven"},"content":"                throw new OscarException(\"Sorry! There is an error loading the saved task list.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Cikguseven"},"content":"            } catch (ClassNotFoundException c) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Cikguseven"},"content":"                throw new OscarException(\"Sorry! Class cannot be found.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Cikguseven"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Cikguseven"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! Oscar cannot find a save task list to load.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Cikguseven"},"content":"     * Saves the current taskList to a text file after executing a command.","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Cikguseven"},"content":"     * Solution adapted by \u003ca href\u003d\"https://howtodoinjava.com/java/collections/arraylist/","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Cikguseven"},"content":"     * serialize-deserialize-arraylist/\"\u003e...\u003c/a\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Cikguseven"},"content":"     * @throws OscarException Unable to serialise taskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Cikguseven"},"content":"    private static void save() throws OscarException {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Cikguseven"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Cikguseven"},"content":"            Files.createDirectories(Paths.get(FILE_DIRECTORY));","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Cikguseven"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(FILE_LOCATION);","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Cikguseven"},"content":"            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Cikguseven"},"content":"            objectOutputStream.writeObject(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(\"Oscar has saved your task list!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Cikguseven"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! File is not found.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Cikguseven"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! There is an issue with input or output.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Cikguseven"},"content":"     * Displays message to greet user.","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"Cikguseven"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"Hello! This is Oscar, your friendly chatbot :)\");","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"What can Oscar do for you?\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"Cikguseven"},"content":"     * Displays message when terminating Duke.","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"Cikguseven"},"content":"    private static void bye() {","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"Goodbye for now. \" +","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"Cikguseven"},"content":"                \"Oscar hopes to see you again soon!\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"Cikguseven"},"content":"     * Lists stored tasks in chronological order of addition.","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"Cikguseven"},"content":"    private static void list() {","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"Cikguseven"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"Cikguseven"},"content":"            Task currentTask \u003d taskList.get(i - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(i + \".\" + currentTask.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"Cikguseven"},"content":"        System.out.println();","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"Cikguseven"},"content":"     * Displays the number of tasks stored in Oscar.","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"Cikguseven"},"content":"    private static void listCount() {","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"Cikguseven"},"content":"        int listSize \u003d taskList.size();","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"Cikguseven"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(\"You have no tasks in the list. Add some now!\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"Cikguseven"},"content":"        } else if (listSize \u003d\u003d 1) {","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(\"You have 1 task in the list.\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"Cikguseven"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(\"You now have \" + listSize + \" tasks in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"Cikguseven"},"content":"     * Marks a task as done using the task number.","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"Cikguseven"},"content":"     * @param index Number of task to be marked as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"Cikguseven"},"content":"     * @throws OscarException Failure of task number validation.","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"Cikguseven"},"content":"    private static void mark(String index) throws OscarException {","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"Cikguseven"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-20"},{"lineNumber":122,"author":{"gitId":"Cikguseven"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"Cikguseven"},"content":"            taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"Cikguseven"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"Cikguseven"},"content":"                    \"Please enter the number of the task to be marked as done.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":128,"author":{"gitId":"Cikguseven"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"Cikguseven"},"content":"                    \"Task numbers must be natural numbers.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"Cikguseven"},"content":"        } else if (taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"Cikguseven"},"content":"                    \"Task number is too large.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":136,"author":{"gitId":"Cikguseven"},"content":"        Task currentTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"Cikguseven"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"Nice! Oscar has marked this task as done:\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(currentTask + \"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"Cikguseven"},"content":"     * Marks a task as not done using the task number.","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"Cikguseven"},"content":"     * @param index Number of task to be marked as not done.","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"Cikguseven"},"content":"     * @throws OscarException Failure of task number validation.","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"Cikguseven"},"content":"    private static void unmark(String index) throws OscarException {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"Cikguseven"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-20"},{"lineNumber":149,"author":{"gitId":"Cikguseven"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"Cikguseven"},"content":"            taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"Cikguseven"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! Please enter the order \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"Cikguseven"},"content":"                    \"of the task to be marked as not done.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":155,"author":{"gitId":"Cikguseven"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":156,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"Cikguseven"},"content":"                    \"Task numbers must be natural numbers.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":159,"author":{"gitId":"Cikguseven"},"content":"        } else if (taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":160,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"Cikguseven"},"content":"                    \"Task number is too large.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":163,"author":{"gitId":"Cikguseven"},"content":"        Task currentTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-20"},{"lineNumber":164,"author":{"gitId":"Cikguseven"},"content":"        currentTask.markAsNotDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":165,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"Oscar has marked this task as not done yet:\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":166,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(currentTask + \"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":167,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":168,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":169,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":170,"author":{"gitId":"Cikguseven"},"content":"     * Deletes a task using the task number.","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"Cikguseven"},"content":"     * @param index Number of task to be deleted.","lastModifiedDate":"2023-08-20"},{"lineNumber":172,"author":{"gitId":"Cikguseven"},"content":"     * @throws OscarException Failure of task number validation.","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":174,"author":{"gitId":"Cikguseven"},"content":"    private static void delete(String index) throws OscarException {","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"Cikguseven"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-20"},{"lineNumber":176,"author":{"gitId":"Cikguseven"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":177,"author":{"gitId":"Cikguseven"},"content":"            taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":178,"author":{"gitId":"Cikguseven"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2023-08-20"},{"lineNumber":179,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! Please enter the order \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"Cikguseven"},"content":"                    \"of the task to be deleted.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":182,"author":{"gitId":"Cikguseven"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":183,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"Cikguseven"},"content":"                    \"Task numbers must be natural numbers.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":186,"author":{"gitId":"Cikguseven"},"content":"        } else if (taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":187,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"Cikguseven"},"content":"                    \"Task number is too large.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":189,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":190,"author":{"gitId":"Cikguseven"},"content":"        Task removedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2023-08-20"},{"lineNumber":191,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"Oscar has removed this task:\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":192,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(removedTask + \"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":193,"author":{"gitId":"Cikguseven"},"content":"        listCount();","lastModifiedDate":"2023-08-20"},{"lineNumber":194,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":195,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":196,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":197,"author":{"gitId":"Cikguseven"},"content":"     * Creates a new todo task and save it to the collection.","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"Cikguseven"},"content":"     * @param description Details of todo task.","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"Cikguseven"},"content":"     * @throws OscarException Todo missing description.","lastModifiedDate":"2023-08-27"},{"lineNumber":200,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":201,"author":{"gitId":"Cikguseven"},"content":"    private static void todo(String description) throws OscarException {","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"Cikguseven"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"Cikguseven"},"content":"                    \"The description of a todo task cannot be empty.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":205,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":206,"author":{"gitId":"Cikguseven"},"content":"        Task newTodo \u003d new Todo(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":207,"author":{"gitId":"Cikguseven"},"content":"        taskList.add(newTodo);","lastModifiedDate":"2023-08-20"},{"lineNumber":208,"author":{"gitId":"Cikguseven"},"content":"        System.out.println(\"Oscar has added:\\n\" + newTodo + \"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":209,"author":{"gitId":"Cikguseven"},"content":"        listCount();","lastModifiedDate":"2023-08-20"},{"lineNumber":210,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":211,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":213,"author":{"gitId":"Cikguseven"},"content":"     * Creates a new deadline task and save it to the collection.","lastModifiedDate":"2023-08-28"},{"lineNumber":214,"author":{"gitId":"Cikguseven"},"content":"     * @param details Information about the details and deadline of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":215,"author":{"gitId":"Cikguseven"},"content":"     * @throws OscarException Deadline missing details.","lastModifiedDate":"2023-08-27"},{"lineNumber":216,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":217,"author":{"gitId":"Cikguseven"},"content":"    private static void deadline(String details) throws OscarException {","lastModifiedDate":"2023-08-28"},{"lineNumber":218,"author":{"gitId":"Cikguseven"},"content":"        if (!details.contains(\" /by \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":219,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":220,"author":{"gitId":"Cikguseven"},"content":"                    \"The deadline task is not formatted correctly.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"Cikguseven"},"content":"                    \"Please use the format: \u0027deadline \u003ctask\u003e /by yyyy-MM-dd HHmm\u0027.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":223,"author":{"gitId":"Cikguseven"},"content":"        String[] detailsSplit \u003d details.split(\" /by \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":224,"author":{"gitId":"Cikguseven"},"content":"        String description \u003d detailsSplit[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":225,"author":{"gitId":"Cikguseven"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":227,"author":{"gitId":"Cikguseven"},"content":"                    \"The description of a deadline task cannot be empty.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":228,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":229,"author":{"gitId":"Cikguseven"},"content":"        String deadline \u003d detailsSplit[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"Cikguseven"},"content":"        if (!deadline.contains(\" \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! Please enter a valid date and time in this format: \u00272019-10-15 1800\u0027.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"Cikguseven"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"Cikguseven"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline, DTFORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"Cikguseven"},"content":"            Task newDeadline \u003d new Deadline(description, deadlineDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"Cikguseven"},"content":"            taskList.add(newDeadline);","lastModifiedDate":"2023-08-20"},{"lineNumber":237,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(\"Oscar has added:\\n\" + newDeadline + \"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":238,"author":{"gitId":"Cikguseven"},"content":"            listCount();","lastModifiedDate":"2023-08-20"},{"lineNumber":239,"author":{"gitId":"Cikguseven"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! Please enter a valid date and time in this format: \u00272019-10-15 1800\u0027.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":243,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":244,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":245,"author":{"gitId":"Cikguseven"},"content":"     * Creates a new event task and save it to the collection.","lastModifiedDate":"2023-08-28"},{"lineNumber":246,"author":{"gitId":"Cikguseven"},"content":"     * @param details Information about the details, as well as start and end","lastModifiedDate":"2023-08-20"},{"lineNumber":247,"author":{"gitId":"Cikguseven"},"content":"     *                date/time of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":248,"author":{"gitId":"Cikguseven"},"content":"     * @throws OscarException Event missing details.","lastModifiedDate":"2023-08-27"},{"lineNumber":249,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":250,"author":{"gitId":"Cikguseven"},"content":"    private static void event(String details) throws OscarException {","lastModifiedDate":"2023-08-28"},{"lineNumber":251,"author":{"gitId":"Cikguseven"},"content":"        if (!details.contains(\" /from \") || !details.contains(\" /to \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":252,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"Cikguseven"},"content":"                    \"The event task is not formatted correctly.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"Cikguseven"},"content":"                    \"Please use the format: \u0027event \u003ctask\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\u0027.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":256,"author":{"gitId":"Cikguseven"},"content":"        String[] split \u003d details.split(\" /from | /to \");","lastModifiedDate":"2023-08-20"},{"lineNumber":257,"author":{"gitId":"Cikguseven"},"content":"        String description \u003d split[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":258,"author":{"gitId":"Cikguseven"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":259,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":260,"author":{"gitId":"Cikguseven"},"content":"                    \"The description of an event task cannot be empty.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":261,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":262,"author":{"gitId":"Cikguseven"},"content":"        String start \u003d split[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":263,"author":{"gitId":"Cikguseven"},"content":"        if (start.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":265,"author":{"gitId":"Cikguseven"},"content":"                    \"The start date and time of an event task cannot be empty.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":267,"author":{"gitId":"Cikguseven"},"content":"        String end \u003d split[2];","lastModifiedDate":"2023-08-20"},{"lineNumber":268,"author":{"gitId":"Cikguseven"},"content":"        if (end.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":269,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":270,"author":{"gitId":"Cikguseven"},"content":"                    \"The end date and time of an event task cannot be empty.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"Cikguseven"},"content":"        if (!start.contains(\" \") || !end.contains(\" \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! Please enter a valid date and time in this format: \u00272019-10-15 1800\u0027.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":275,"author":{"gitId":"Cikguseven"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"Cikguseven"},"content":"            LocalDateTime startDateTime \u003d LocalDateTime.parse(start, DTFORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":277,"author":{"gitId":"Cikguseven"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime.parse(end, DTFORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"Cikguseven"},"content":"            if (endDateTime.isBefore(startDateTime)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"Cikguseven"},"content":"                throw new OscarException(\"Sorry! End date and time must be after start date and time.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"Cikguseven"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":281,"author":{"gitId":"Cikguseven"},"content":"            Task newEvent \u003d new Event(description, startDateTime, endDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":282,"author":{"gitId":"Cikguseven"},"content":"            taskList.add(newEvent);","lastModifiedDate":"2023-08-20"},{"lineNumber":283,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(\"Oscar has added:\\n\" + newEvent + \"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":284,"author":{"gitId":"Cikguseven"},"content":"            listCount();","lastModifiedDate":"2023-08-20"},{"lineNumber":285,"author":{"gitId":"Cikguseven"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"Cikguseven"},"content":"            throw new OscarException(\"Sorry! Please enter a valid date and time in this format: \u00272019-10-15 1800\u0027.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"Cikguseven"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":289,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":290,"author":{"gitId":"Cikguseven"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":291,"author":{"gitId":"Cikguseven"},"content":"     * Programme flow to run Oscar.","lastModifiedDate":"2023-08-28"},{"lineNumber":292,"author":{"gitId":"Cikguseven"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":293,"author":{"gitId":"Cikguseven"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":294,"author":{"gitId":"Cikguseven"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":295,"author":{"gitId":"Cikguseven"},"content":"        boolean running \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":296,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":297,"author":{"gitId":"Cikguseven"},"content":"        greet();","lastModifiedDate":"2023-08-20"},{"lineNumber":298,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":299,"author":{"gitId":"Cikguseven"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":300,"author":{"gitId":"Cikguseven"},"content":"            init();","lastModifiedDate":"2023-08-28"},{"lineNumber":301,"author":{"gitId":"Cikguseven"},"content":"        } catch (OscarException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":302,"author":{"gitId":"Cikguseven"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":303,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":304,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":305,"author":{"gitId":"Cikguseven"},"content":"        while (running) {","lastModifiedDate":"2023-08-20"},{"lineNumber":306,"author":{"gitId":"Cikguseven"},"content":"            // Obtain command and details entered by user to determine the next","lastModifiedDate":"2023-08-20"},{"lineNumber":307,"author":{"gitId":"Cikguseven"},"content":"            // course of action","lastModifiedDate":"2023-08-20"},{"lineNumber":308,"author":{"gitId":"Cikguseven"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":309,"author":{"gitId":"Cikguseven"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":310,"author":{"gitId":"Cikguseven"},"content":"                String[] split \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-20"},{"lineNumber":311,"author":{"gitId":"Cikguseven"},"content":"                String command \u003d split[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":312,"author":{"gitId":"Cikguseven"},"content":"                Commands c;","lastModifiedDate":"2023-08-24"},{"lineNumber":313,"author":{"gitId":"Cikguseven"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":314,"author":{"gitId":"Cikguseven"},"content":"                    c \u003d Commands.valueOf(split[0].toUpperCase());","lastModifiedDate":"2023-08-24"},{"lineNumber":315,"author":{"gitId":"Cikguseven"},"content":"                    String details \u003d userInput.length() \u003e command.length() ? split[1] : \"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":316,"author":{"gitId":"Cikguseven"},"content":"                    switch (c) {","lastModifiedDate":"2023-08-24"},{"lineNumber":317,"author":{"gitId":"Cikguseven"},"content":"                    // Exit programme if user enters \"bye\" command","lastModifiedDate":"2023-08-19"},{"lineNumber":318,"author":{"gitId":"Cikguseven"},"content":"                    case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":319,"author":{"gitId":"Cikguseven"},"content":"                        bye();","lastModifiedDate":"2023-08-20"},{"lineNumber":320,"author":{"gitId":"Cikguseven"},"content":"                        running \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":321,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":322,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":323,"author":{"gitId":"Cikguseven"},"content":"                    // Display text stored by user in chronological order if","lastModifiedDate":"2023-08-19"},{"lineNumber":324,"author":{"gitId":"Cikguseven"},"content":"                    // user enters \"list\" command","lastModifiedDate":"2023-08-19"},{"lineNumber":325,"author":{"gitId":"Cikguseven"},"content":"                    case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":326,"author":{"gitId":"Cikguseven"},"content":"                        list();","lastModifiedDate":"2023-08-20"},{"lineNumber":327,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":328,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":329,"author":{"gitId":"Cikguseven"},"content":"                    // Mark task as done if user enters \"mark\" command","lastModifiedDate":"2023-08-20"},{"lineNumber":330,"author":{"gitId":"Cikguseven"},"content":"                    case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":331,"author":{"gitId":"Cikguseven"},"content":"                        mark(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":332,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":333,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":334,"author":{"gitId":"Cikguseven"},"content":"                    // Mark task as not done if user enters \"unmark\" command","lastModifiedDate":"2023-08-20"},{"lineNumber":335,"author":{"gitId":"Cikguseven"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":336,"author":{"gitId":"Cikguseven"},"content":"                        unmark(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":337,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":338,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":339,"author":{"gitId":"Cikguseven"},"content":"                    // Delete a task if user enters \"delete\" command","lastModifiedDate":"2023-08-20"},{"lineNumber":340,"author":{"gitId":"Cikguseven"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":341,"author":{"gitId":"Cikguseven"},"content":"                        delete(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":342,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":343,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":344,"author":{"gitId":"Cikguseven"},"content":"                    // Create a new todo task if user enters \"todo\" command","lastModifiedDate":"2023-08-20"},{"lineNumber":345,"author":{"gitId":"Cikguseven"},"content":"                    case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":346,"author":{"gitId":"Cikguseven"},"content":"                        todo(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":347,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":348,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":349,"author":{"gitId":"Cikguseven"},"content":"                    // Create a new deadline task if user enters \"deadline\" command","lastModifiedDate":"2023-08-20"},{"lineNumber":350,"author":{"gitId":"Cikguseven"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":351,"author":{"gitId":"Cikguseven"},"content":"                        deadline(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":352,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":353,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":354,"author":{"gitId":"Cikguseven"},"content":"                    // Create a new event task if user enters \"event\" command","lastModifiedDate":"2023-08-20"},{"lineNumber":355,"author":{"gitId":"Cikguseven"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":356,"author":{"gitId":"Cikguseven"},"content":"                        event(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":357,"author":{"gitId":"Cikguseven"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":358,"author":{"gitId":"Cikguseven"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":359,"author":{"gitId":"Cikguseven"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":360,"author":{"gitId":"Cikguseven"},"content":"                        // Default response for unknown commands","lastModifiedDate":"2023-08-20"},{"lineNumber":361,"author":{"gitId":"Cikguseven"},"content":"                        throw new OscarException(\"Sorry! Oscar does not recognise this command\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":362,"author":{"gitId":"Cikguseven"},"content":"                } finally {","lastModifiedDate":"2023-08-28"},{"lineNumber":363,"author":{"gitId":"Cikguseven"},"content":"                    save();","lastModifiedDate":"2023-08-28"},{"lineNumber":364,"author":{"gitId":"Cikguseven"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":365,"author":{"gitId":"Cikguseven"},"content":"            } catch (OscarException e){","lastModifiedDate":"2023-08-27"},{"lineNumber":366,"author":{"gitId":"Cikguseven"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":367,"author":{"gitId":"Cikguseven"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":368,"author":{"gitId":"Cikguseven"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":369,"author":{"gitId":"Cikguseven"},"content":"        scanner.close();","lastModifiedDate":"2023-08-20"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Cikguseven":369,"-":2}},{"path":"src/main/java/OscarException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cikguseven"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"Cikguseven"},"content":" * Class to handle checked exceptions due to incorrect user input","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Cikguseven"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Cikguseven"},"content":"public class OscarException extends Exception{","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Cikguseven"},"content":"  public OscarException(String errorMessage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Cikguseven"},"content":"    super(errorMessage);","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Cikguseven"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Cikguseven":8}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cikguseven"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Cikguseven"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Cikguseven"},"content":" * Task superclass that supports todo, deadline and event tasks.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Cikguseven"},"content":" * Taken from hint.","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Cikguseven"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Cikguseven"},"content":"abstract public class Task implements Serializable {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Cikguseven"},"content":"  private final String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"Cikguseven"},"content":"  private final String type;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Cikguseven"},"content":"  private boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Cikguseven"},"content":"   * Public constructor that is invoked by subclasses when creating task.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Cikguseven"},"content":"  public Task(String description, String type) {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Cikguseven"},"content":"    this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Cikguseven"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Cikguseven"},"content":"    this.type \u003d type;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Cikguseven"},"content":"   * Checks if task is done and indicates \"X\" for done and blank otherwise.","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"Cikguseven"},"content":"   * @return Indicator of task completion.","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Cikguseven"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Cikguseven"},"content":"    return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"Cikguseven"},"content":"   * Mark a task as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"Cikguseven"},"content":"  public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"Cikguseven"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"Cikguseven"},"content":"   * Mark a task as not done.","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"Cikguseven"},"content":"  public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"Cikguseven"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"Cikguseven"},"content":"   * Detailed string representation of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"Cikguseven"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"Cikguseven"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"Cikguseven"},"content":"    return \"[\" + this.type + \"][\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"Cikguseven"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Cikguseven":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cikguseven"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"Cikguseven"},"content":" * Todo task that contains description of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Cikguseven"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Cikguseven"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Cikguseven"},"content":"   * Public constructor of todo.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Cikguseven"},"content":"   * @param description Details of todo.","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"Cikguseven"},"content":"  public Todo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Cikguseven"},"content":"    super(description, \"T\");","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Cikguseven"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Cikguseven"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Cikguseven"},"content":"   * Detailed string representation of todo.","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Cikguseven"},"content":"   * @return Information of todo.","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Cikguseven"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Cikguseven"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Cikguseven"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Cikguseven"},"content":"    return  super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Cikguseven"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Cikguseven"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Cikguseven":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cikguseven"},"content":"todo read book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"Cikguseven"},"content":"todo join cca","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Cikguseven"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Cikguseven"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Cikguseven"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Cikguseven"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Cikguseven"},"content":"list","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Cikguseven":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Cikguseven"},"content":"java -classpath ..\\bin Oscar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cikguseven":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Cikguseven"},"content":"java -classpath ../bin Oscar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cikguseven":1,"-":37}}]
