[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"# MYBOT Pro","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen [source](https://dansilvestre.com/productivity-quotes/)","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"MYBOT Pro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"- text-based","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"- easy to learn","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"- ~FAST~ SUPER FAST to use","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"All you need to do is,","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"1. download it from [here](https://nus-cs2103-ay2324s1.github.io/website/admin/ip-w4.html).","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"1. double-click it.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"1. add your tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"1. let it manage your tasks for you üñãÔ∏è","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"And it is **FREE!**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"Features:","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"- [X] Creating tasks (todo, deadlines, event)","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"- [X] Removing tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"- [X] Storing tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"- [X] Marking/Unmarking tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"- [X] Removing tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"- [X] Finding tasks","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        new Duke(\"src/main/MYBOT.txt\").run();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mingyu-wan":26,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"    id \u0027org.jetbrains.kotlin.jvm\u0027 version \u00271.9.10\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"compileKotlin {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"    kotlinOptions {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"        jvmTarget \u003d \"1.8\"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"compileTestKotlin {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"    kotlinOptions {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"        jvmTarget \u003d \"1.8\"","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":28,"-":41}},{"path":"src/main/MYBOT.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"T|N|sleep","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"T|N|eat","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"import duke.commands.Commands;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import duke.utilities.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":" * The main class for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":" * Duke is a task management application that allows users to manage tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    private Commands command;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Duke instance with the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"     * Initializes the user interface, task lists, commands and parser.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"        storage \u003d new Storage(\"src/main/MYBOT.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"            tasks \u003d new TaskList(storage.loadTaskFromFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"        } catch (NullPointerException e){","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"            ui.printFileError();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"            new File(\"src/main/MYBOT.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"        command \u003d new Commands(ui,storage,tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"        parser \u003d new Parser(ui, storage, tasks, command);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"     * Runs the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"     * Displays a greeting message, processes user commands from the command-line input","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"     * and provides responses accordingly. The loop until user commands bye.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"        ui.showGreeting();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"        while(true){","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"            if(input.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"                ui.closeGreeting();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"                parser.analyseInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"     * converts the output of run from a system outprint to a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"     * @param input","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"     * @return","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // @@author tjch-o-reused","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // reused from iP with minor modifications","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        PrintStream originalOutput \u003d System.out;","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        parser.analyseInput(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        System.setOut(originalOutput);","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return output.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The main entry point of the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Creates a new instance of Duke with a specified file path and runs the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param args","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"mingyu-wan":75,"-":22}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":33}},{"path":"src/main/java/duke/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.commands;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import duke.utilities.MYBotExceptions;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":" * The Commands class provides methods for executing various commands tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":" * It handles adding tasks, listing tasks, marking tasks as done, umarking","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":" * and removing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":" * It interacts with the UI, task list and storage component.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"public class Commands {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"    private TaskList task_List;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Commands instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"     * @param ui The UI component for displaying messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"     * @param storage The storage component for loading and saving task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_List The task list containing existing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"    public Commands(Ui ui, Storage storage, TaskList task_List) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        this.task_List \u003d task_List;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"     * Adds a Todo task to the task list and saves it to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"     * @param input The description of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"    public void addTodoTask(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Todo(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"        generalAddTasks(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"     * Adds a Deadline task to the task list and saves it to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"     * @param input The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"    public void addDeadlineTask(String input, String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Deadline(input, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"        generalAddTasks(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"     * Adds an Event task to the task list and saves it to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"     * @param input The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"     * @param from The start time of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"     * @param to The end time of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"    public void addEventTask(String input, String from, String to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Event(input, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"        generalAddTasks(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"     * Adds a task to the task list, saves it to storage and prints tasks details.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"    public void generalAddTasks(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"        task_List.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"        storage.saveTasksToFile(task_List);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"        ui.printAddTask(task, task_List.getTask_Count());","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_List The task list containing tasks to be listed.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"    public void listTasks(TaskList task_List){","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"        List\u003cTask\u003e tasks \u003d task_List.getTask_List();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"        int taskCount \u003d task_List.getTask_Count();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"        ui.printTaskList(tasks, taskCount);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"     * Marks a task as done in the task list and saves it to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_number The index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"mingyu-wan"},"content":"    public void markTasks(int task_number) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"mingyu-wan"},"content":"            if (task_number \u003e 0 \u0026\u0026 task_List.getTask(task_number) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"mingyu-wan"},"content":"                Task taskTobeMarked \u003d task_List.getTask(task_number);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"mingyu-wan"},"content":"                taskTobeMarked.setTaskDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"mingyu-wan"},"content":"                storage.saveTasksToFile(task_List);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"mingyu-wan"},"content":"                ui.printMarkTask(taskTobeMarked);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"mingyu-wan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"mingyu-wan"},"content":"                throw new MYBotExceptions.NoSuchTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"mingyu-wan"},"content":"        } catch (MYBotExceptions e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"mingyu-wan"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"mingyu-wan"},"content":"     * Unmarks a task as not sone in task list and saves it to storage","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_number The index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"mingyu-wan"},"content":"    public void unmarkTasks(int task_number){","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"mingyu-wan"},"content":"            if (task_number \u003e 0 \u0026\u0026 task_List.getTask(task_number) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"mingyu-wan"},"content":"                Task taskTobeMarked \u003d task_List.getTask(task_number);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"mingyu-wan"},"content":"                taskTobeMarked.undoTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"mingyu-wan"},"content":"                storage.saveTasksToFile(task_List);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"mingyu-wan"},"content":"                ui.printUnmarkTask(taskTobeMarked);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"mingyu-wan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"mingyu-wan"},"content":"                throw new MYBotExceptions.NoSuchTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"mingyu-wan"},"content":"        } catch (MYBotExceptions e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"mingyu-wan"},"content":"     * Removes a task from the task list and saves the updated list to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_number The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"mingyu-wan"},"content":"    public void removeTasks(int task_number) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"mingyu-wan"},"content":"            if (task_number \u003e\u003d 0 \u0026\u0026 task_number \u003c\u003d task_List.getTask_Count()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"mingyu-wan"},"content":"                Task taskToBeRemoved \u003d task_List.getTask(task_number);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"mingyu-wan"},"content":"                task_List.removeTask(task_number);","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"mingyu-wan"},"content":"                storage.saveTasksToFile(task_List);","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"mingyu-wan"},"content":"                ui.printRemoveTasks(taskToBeRemoved, task_List);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"mingyu-wan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"mingyu-wan"},"content":"                throw new MYBotExceptions.InvalidTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"mingyu-wan"},"content":"        } catch (MYBotExceptions e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"mingyu-wan"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"mingyu-wan"},"content":"     * Find and prints tasks that match the specified keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"mingyu-wan"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"mingyu-wan"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"mingyu-wan"},"content":"        List\u003cTask\u003e matchingTasks \u003d task_List.findMatchingTasks(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"mingyu-wan"},"content":"        ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyu-wan":159}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":" * The Deadline class represents a task without a specific deadline or time.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":" * It inherits from the Task class and provides methods to create and display a Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    private LocalDate date;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    private LocalTime time;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    private DayOfWeek day;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"     * @param by The deadline of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        if (by.contains(\",\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"            String [] splitBy \u003d by.split(\",\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"            date \u003d super.convertStringToDate(splitBy[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"            day \u003d super.convertStringToDay(splitBy[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"            if (splitBy.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"                time \u003d super.convertStringToTime(splitBy[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"            date \u003d super.convertStringToDate(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Deadline task when reloading tasks from storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"     * @param by The deadline of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"     * @param status A string indicating the status of the task (\"Y\" for done, \"N\" for not done).","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"    public Deadline(String description, String by, String status) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"        if (by.contains(\",\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"            String [] splitBy \u003d by.split(\", \");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"            date \u003d super.convertStringToDate(splitBy[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"            day \u003d super.convertStringToDay(splitBy[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"            if (splitBy.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"                time \u003d super.convertStringToTime(splitBy[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"            date \u003d super.convertStringToDate(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"        if(status.contains(\"Y\")){","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"            super.taskStatusFromFile(true);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"            super.taskStatusFromFile(false);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation to be displayed to users.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"        String date \u003d dateToString(this.date);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"        String day \u003d dayToString(this.day);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"        String time \u003d timeToString(this.time);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + date + day + time + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"    public String toFileString(){","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"        String date \u003d dateToString(this.date);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"        String day \u003d dayToString(this.day);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"        String time \u003d timeToString(this.time);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"        return \"D\" + super.toFileString() + \"|\" + date + day + time;","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyu-wan":93}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":" * The Event class represents a task without a specific deadline or time.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":" * It inherits from the Task class and provides methods to create and display an Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"    private LocalDate fromDate, toDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"    private LocalTime fromTime, toTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    private DayOfWeek fromDay, toDay;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs an Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"     * @param from The start time of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"     * @param to The end time of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"        if (from.contains(\",\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"            String [] splitFrom \u003d from.split(\",\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"            fromDate \u003d super.convertStringToDate(splitFrom[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"            fromDay \u003d super.convertStringToDay(splitFrom[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"            if (splitFrom.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"                fromTime \u003d super.convertStringToTime(splitFrom[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"            fromDate \u003d super.convertStringToDate(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"        if (to.contains(\",\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"            String [] splitTo \u003d to.split(\",\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"            toDate \u003d super.convertStringToDate(splitTo[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"            toDay \u003d super.convertStringToDay(splitTo[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"            if (splitTo.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"                toTime \u003d super.convertStringToTime(splitTo[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"            toDate \u003d super.convertStringToDate(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs an Event task when reloading tasks from storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"     * @param from The start time of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"     * @param to The end time of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"     * @param status A string indicating the status of the task (\"Y\" for done, \"N\" for not done).","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"    public Event(String description, String from, String to, String status) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"        if (from.contains(\",\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"            String [] splitFrom \u003d from.split(\", \");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"            fromDate \u003d super.convertStringToDate(splitFrom[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"            fromDay \u003d super.convertStringToDay(splitFrom[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"            if (splitFrom.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"                fromTime \u003d super.convertStringToTime(splitFrom[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"            fromDate \u003d super.convertStringToDate(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"        if (to.contains(\",\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"            String [] splitTo \u003d to.split(\", \");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"            toDate \u003d super.convertStringToDate(splitTo[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"            toDay \u003d super.convertStringToDay(splitTo[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"            if (splitTo.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"                toTime \u003d super.convertStringToTime(splitTo[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"            toDate \u003d super.convertStringToDate(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"        if(status.equals(\"Y\")){","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"            super.taskStatusFromFile(true);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"            super.taskStatusFromFile(false);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation to be displayed to users.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"mingyu-wan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"mingyu-wan"},"content":"        String fromDate \u003d dateToString(this.fromDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"mingyu-wan"},"content":"        String toDate \u003d dateToString(this.toDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"mingyu-wan"},"content":"        String fromDay \u003d dayToString(this.fromDay);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"mingyu-wan"},"content":"        String toDay \u003d dayToString(this.toDay);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"mingyu-wan"},"content":"        String fromTime \u003d timeToString(this.fromTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"mingyu-wan"},"content":"        String toTime \u003d timeToString(this.toTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"mingyu-wan"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + fromDate + fromDay + fromTime + \" to:\" + toDate + toDay + toTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"mingyu-wan"},"content":"    public String toFileString(){","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"mingyu-wan"},"content":"        String fromDate \u003d dateToString(this.fromDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"mingyu-wan"},"content":"        String toDate \u003d dateToString(this.toDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"mingyu-wan"},"content":"        String fromDay \u003d dayToString(this.fromDay);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"mingyu-wan"},"content":"        String toDay \u003d dayToString(this.toDay);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"mingyu-wan"},"content":"        String fromTime \u003d timeToString(this.fromTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"mingyu-wan"},"content":"        String toTime \u003d timeToString(this.toTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"mingyu-wan"},"content":"        return \"E\" + super.toFileString() + \"|\" + fromDate + fromDay + fromTime + \"|\" + toDate + toDay + toTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyu-wan":125}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":" * The Task class represents a task with a description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":" * It provides methods for managing task details, status and conversions.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATTERS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    private static final List\u003cDateTimeFormatter\u003e DAY_FORMATTERS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"    private static final List\u003cDateTimeFormatter\u003e TIME_FORMATTERS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    static {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"yyyy/MM/d\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"yyyy-MM-d\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"d-MM-yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"d.MM.yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"yyyy.MM.d\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"d.MM.yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"        DATE_FORMATTERS.add(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"        DAY_FORMATTERS.add(DateTimeFormatter.ofPattern(\"E\", Locale.ENGLISH));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"        DAY_FORMATTERS.add(DateTimeFormatter.ofPattern(\"EEEE\", Locale.ENGLISH));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"        TIME_FORMATTERS.add(DateTimeFormatter.ofPattern(\"hmma\",Locale.ENGLISH));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"        TIME_FORMATTERS.add(DateTimeFormatter.ofPattern(\"ha\",Locale.ENGLISH));","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"        TIME_FORMATTERS.add(DateTimeFormatter.ofPattern(\"h.mma\",Locale.ENGLISH));","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"    public String getStatus() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"  ","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"   public String getStatusFromFile(){","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"        return (isDone ? \"Y\" : \"N\");","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"    public String getDescription(){","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"        return description;","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"    public void setTaskDone(){","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"     * Retrieves tasks status from file.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"    public void taskStatusFromFile(boolean status){","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"        isDone \u003d status;","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"     * Marks task\u0027s completion status as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"    public void undoTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"     * Converts a string representation to a LocalDate object.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"     * @param date The date string to be converted.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"     * @return The converted LocalDate object","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"    public LocalDate convertStringToDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"mingyu-wan"},"content":"            for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"mingyu-wan"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"mingyu-wan"},"content":"                    return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"mingyu-wan"},"content":"                } catch (Exception ignored) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"mingyu-wan"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Unrecognised date format: \" + date +","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"mingyu-wan"},"content":"                \"\\nPlease key in date in format D/MM/YYYY\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"mingyu-wan"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"mingyu-wan"},"content":"     * Converts a string representation to a DayOfWeek object.","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"mingyu-wan"},"content":"     * @param day The day string to be converted.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"mingyu-wan"},"content":"     * @return The converted DayOfWeek object.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"mingyu-wan"},"content":"    public DayOfWeek convertStringToDay(String day) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"mingyu-wan"},"content":"        for (DateTimeFormatter formatter : DAY_FORMATTERS) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"mingyu-wan"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"mingyu-wan"},"content":"                return DayOfWeek.from(formatter.parse(day));","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"mingyu-wan"},"content":"            } catch (Exception ignored) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Unrecognised day format: \" + day +","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"mingyu-wan"},"content":"                \"\\nPlease key in day in format Mon OR Monday \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"mingyu-wan"},"content":"                \"\\nThe task has been stored without a dueday, remove task and key in correct format to make changes \\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"mingyu-wan"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"mingyu-wan"},"content":"     * Converts a string representation to a LocalTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"mingyu-wan"},"content":"     * @param time The time string to be converted.","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"mingyu-wan"},"content":"     * @return The converted LocalTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"mingyu-wan"},"content":"    public LocalTime convertStringToTime(String time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"mingyu-wan"},"content":"        for (DateTimeFormatter formatter : TIME_FORMATTERS) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"mingyu-wan"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"mingyu-wan"},"content":"                return LocalTime.parse(time, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"mingyu-wan"},"content":"            } catch (Exception ignored) {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Unrecognised time format: \" + time +","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"mingyu-wan"},"content":"                \"\\nPlease key in time in format Hr.MinAM/PM \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"mingyu-wan"},"content":"                \"\\nThe task has been stored without a due time, remove task and key in correct format to make changes \\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"mingyu-wan"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"mingyu-wan"},"content":"     * Converts a LocalDate object to a formatted date string.","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"mingyu-wan"},"content":"     * @param date The LocalDate object to be converted.","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"mingyu-wan"},"content":"     * @return The converted date String.","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"mingyu-wan"},"content":"    public String dateToString(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"mingyu-wan"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"mingyu-wan"},"content":"     * Converts a DayToWeek object to a formatted day string.","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"mingyu-wan"},"content":"     * @param day The DayToWeek object to be converted.","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"mingyu-wan"},"content":"     * @return The converted day String.","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"mingyu-wan"},"content":"    public String dayToString(DayOfWeek day) {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"mingyu-wan"},"content":"        if(day!\u003dnull) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"mingyu-wan"},"content":"            return \", \" + day.name().substring(0,1) + day.name().substring(1).toLowerCase() ;","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"mingyu-wan"},"content":"            return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"mingyu-wan"},"content":"     * Converts a LocalTime object to a formatted day string.","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"mingyu-wan"},"content":"     * @param time The LocalTime object to be converted.","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"mingyu-wan"},"content":"     * @return The converted time String.","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"mingyu-wan"},"content":"    public String timeToString(LocalTime time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"mingyu-wan"},"content":"        if(time!\u003dnull) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"mingyu-wan"},"content":"            return \", \" + time.format(DateTimeFormatter.ofPattern(\"h.mma\")).toUpperCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"mingyu-wan"},"content":"            return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation to be displayed to users.","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"mingyu-wan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"mingyu-wan"},"content":"        return \" [\" + getStatus() + \"] \" + getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"mingyu-wan"},"content":"    public String toFileString(){","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"mingyu-wan"},"content":"        return \"|\" + getStatusFromFile() + \"|\" + getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyu-wan":199}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":" * The TaskList class manages a list of tasks and provides methods to interact.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":" * It can add, retrieve, remove tasks and keep track of the task count.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"    private List\u003cTask\u003e task_List;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"    private int task_Count;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    public TaskList(){","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"        task_List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"        task_Count \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"     * Construct a TaskList if there are existing tasks in folder","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"     * @param existingTasks The existing list of tasks that was saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"    public TaskList(List\u003cTask\u003e existingTasks){","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        task_List \u003d new ArrayList\u003c\u003e(existingTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"        task_Count \u003d task_List.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"     * Increments the task count by 1 each time .","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"     * @param task The task to be addded.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    public void addTask(Task task){","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"        task_List.add(task_Count, task);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"        task_Count++;","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"    public List\u003cTask\u003e getTask_List(){","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"        return task_List;","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"    public int getTask_Count(){","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"        return task_List.size();","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"    public Task getTask(int task_number){","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"        return task_List.get(task_number - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"     * Removes a task from the TaskList based on its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_number The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"    public void removeTask(int task_number) {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"        if (task_number \u003e\u003d 0 \u0026\u0026 task_number \u003c\u003d task_List.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"            task_List.remove(task_number - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"     * Find the tasks that contains the keyword and put them in a List\u003c/Task\u003e.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"     * @param keyword Find tasks that contains this keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"     * @return A list of tasks that match the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"    public List\u003cTask\u003e findMatchingTasks(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"        for (Task task : task_List) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"            if(task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"        return matchingTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyu-wan":85}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":" * The Todo class represents a task without a specific deadline or time.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":" * It inherits from the Task class and provides methods to create and display a Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Todo task when reloading tasks from storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"     * @param status A string indicating the status of the task (\"Y\" for done, \"N\" for not done).","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    public Todo(String description, String status) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"        if(status.contains(\"Y\")){","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"            super.taskStatusFromFile(true);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"            super.taskStatusFromFile(false);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation to be displayed to users.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"     * Converts the task to a formatted string representation for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"    public String toFileString(){","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"        return \"T\" + super.toFileString() ;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"mingyu-wan":52}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MYBOT1.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MYBOT2.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":54}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import duke.utilities.MYBotExceptions;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":" * The UI class provides methods for displaying messages and interacting with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":" * It handles printing various messages for various contexts.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    private final static String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"     * Prints a horizontal line","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"    public void printLine(){","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"     * Prints greeting message when the application starts.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"    public void showGreeting(){","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Hello! I\u0027m MYBOT:)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"(if you are entering a deadline/event time please enter in the format date,day,time)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"     * Prints exit message when the application is exited.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"    public void closeGreeting(){","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(LINE + \"\\nBye. Hope to see you again soon!\\n\" + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"     * Prints an exception message.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"     * @param e The customed exception to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"    public void printException(MYBotExceptions e){","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(LINE + \"\\n\" + e.getMessage() + \"\\n\" + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"     * Prints the tasks entered in order.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"     * @param taskCount The number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"    public void printTaskList(List\u003cTask\u003e tasks, int taskCount){","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(LINE + \"\\nHere are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++){","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println((i+1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"     * Prints a message indicating a task has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"     * @param taskCount The total number of tasks after new task is added.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"    public void printAddTask(Task task, int taskCount){","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(LINE + \"\\nI\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"     * Prints a message indicating a task has been completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"     * @param task The task that has been marked as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"    public void printMarkTask(Task task){","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(LINE + \"\\nGood job completing! I\u0027ve marked these task as done:):\");","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(task.toString() + \"\\n\" + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"     * Prints a message indicating a task has been marked as not completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"     * @param task The task that has been marked as not completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"    public void printUnmarkTask(Task task){","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(LINE + \"\\nOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(task.toString() + \"\\n\" + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"mingyu-wan"},"content":"     * Prints a message indicating a task has been removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"mingyu-wan"},"content":"     * @param task The task that has been removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_List The updated task list after task is removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"mingyu-wan"},"content":"    public void printRemoveTasks(Task task, TaskList task_List) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Now you have \" + task_List.getTask_Count() + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"mingyu-wan"},"content":"     * Prints a message notifying users a file to store their tasks has been created.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"mingyu-wan"},"content":"    public void printFileError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"MYBOT has created a file MYBOT.txt to record your tasks\");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"mingyu-wan"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"mingyu-wan"},"content":"     * Prints the list of tasks that matches user\u0027s input.","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"mingyu-wan"},"content":"     * @param matchingTasks The List of matching tasks found.","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"mingyu-wan"},"content":"    public void printMatchingTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"mingyu-wan"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"mingyu-wan"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"mingyu-wan"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyu-wan":131}},{"path":"src/main/java/duke/utilities/MYBotExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.utilities;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"public class MYBotExceptions extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"    public MYBotExceptions(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"    public static class EmptyDetailsException extends MYBotExceptions {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"        public EmptyDetailsException(String description, String taskType) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"            super(\"‚òπ OOPS! The \" + description + \" of the \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"    public static class InvalidInputException extends MYBotExceptions {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"        public InvalidInputException(String description, String taskType) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"            super(\"‚òπ OOPS! The \" + description + \" must have a \" + taskType + \".\");","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"    public static class UnknownCommandException extends MYBotExceptions {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"        public UnknownCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"            super(\"‚òπ OOPS! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"    public static class InvalidTaskException extends MYBotExceptions {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"        public InvalidTaskException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"            super(\"‚òπ OOPS! This is an invalid task :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"    public static class NoSuchTaskException extends MYBotExceptions {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"        public NoSuchTaskException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"            super(\"‚òπ Oops! Task not found:(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"mingyu-wan":37}},{"path":"src/main/java/duke/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.utilities;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.commands.Commands;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":" * The Parser class handles the analysis of user inputs and triggers commands accordingly.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":" * It interprets user commands and interacts with the UI, storage, tasks and commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"    private Commands command;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Parser instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"     * @param ui The UI component for displaying messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"     * @param storage The storage component for loading and saving task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"     * @param tasks The task list containing existing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"     * @param command The commands component for executing actions on tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"    public Parser(Ui ui, Storage storage, TaskList tasks, Commands command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"     * Analyzes the user input and triggers the appropriate actions.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"     * Analyze inputs based on what inputs begin with.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"     * If input is related to creating a new task, call next analyzer.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"     * If input is related to modifying existing task, call relevant commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"     * If is none of the above, throw MYBotExceptions accordingly.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"     * @param input The user input to be analysed","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"    public void analyseInput(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"                command.listTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"            } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"                int task_index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"                command.markTasks(task_index);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"            } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"                int task_index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"                command.unmarkTasks(task_index);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"                int task_index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"                command.removeTasks(task_index);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"            } else if(input.startsWith(\"find \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"                String keyword \u003d input.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"                command.findTasks(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"            } else if (input.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"                throw new MYBotExceptions.UnknownCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"            } else if (!input.startsWith(\"todo \") \u0026\u0026 !input.startsWith(\"deadline \") \u0026\u0026 !input.startsWith(\"event \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"                throw new MYBotExceptions.InvalidTaskException();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"                analyseAddTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"        } catch (MYBotExceptions e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"     * Analyzes an input that is related to creating a new Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"     * Determines type of task according to what inputs begin with.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"     * Checks if details of tasks keyed in based on format.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"     * Calls respective commands if input is keyed in correct format,","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"     * or else throw an exception to tell users what\u0027s wrong.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"     * @param input The details of the Task","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"    public void analyseAddTaskInput(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"            if(command \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"                throw new NullPointerException();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"            if (input.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"                String description \u003d input.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"                if (!description.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"                    command.addTodoTask(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.EmptyDetailsException(\"description\", \"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"mingyu-wan"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"mingyu-wan"},"content":"                if(!input.contains(\" /by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.InvalidInputException(\"deadline\", \"duedate\");","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"mingyu-wan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"mingyu-wan"},"content":"                String description \u003d input.substring(9, input.indexOf(\" /by \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"mingyu-wan"},"content":"                String by \u003d (input.substring(input.indexOf(\" /by \") + 4)).substring(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"mingyu-wan"},"content":"                if (description.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.EmptyDetailsException(\"description\", \"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"mingyu-wan"},"content":"                } else if (by.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.EmptyDetailsException(\"duedate\", \"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"mingyu-wan"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"mingyu-wan"},"content":"                    command.addDeadlineTask(description, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"mingyu-wan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"mingyu-wan"},"content":"            } else if ((input.startsWith(\"event \"))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"mingyu-wan"},"content":"                if(!input.contains(\" /from\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.InvalidInputException(\"event\", \"start time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"mingyu-wan"},"content":"                } else if (!input.contains(\" /to\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.InvalidInputException(\"event\", \"end time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"mingyu-wan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"mingyu-wan"},"content":"                String description \u003d input.substring(6, input.indexOf(\" /from \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"mingyu-wan"},"content":"                String from \u003d (input.substring(input.indexOf(\" /from \") + 6, input.indexOf(\" /to\"))).substring(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"mingyu-wan"},"content":"                String to \u003d (input.substring(input.indexOf(\" /to \") + 4)).substring(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"mingyu-wan"},"content":"                if (description.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.EmptyDetailsException(\"description\", \"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"mingyu-wan"},"content":"                } else if (from.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.EmptyDetailsException(\"start time\", \"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"mingyu-wan"},"content":"                } else if (to.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"mingyu-wan"},"content":"                    throw new MYBotExceptions.EmptyDetailsException(\"end time\", \"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"mingyu-wan"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"mingyu-wan"},"content":"                    command.addEventTask(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"mingyu-wan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"mingyu-wan"},"content":"        } catch (MYBotExceptions e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"mingyu-wan"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"mingyu-wan"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyu-wan":139}},{"path":"src/main/java/duke/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.utilities;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":" * The Storage class handles saving and loading tasks from a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":" * It provides methods to save, reload, and load tasks from a specified file.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"     * Saves the tasks from the TaskList to the file specified in the constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_List The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"    public void saveTasksToFile(TaskList task_List) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"        clearTasksInFile(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"            List\u003cTask\u003e taskList \u003d task_List.getTask_List();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"     * Reloads the tasks from a list and updates the file specified in the constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"     * @param task_List A list of tasks to reload.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"    public void reloadTasksToFile(List\u003cTask\u003e task_List) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"        clearTasksInFile(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"            for (Task task : task_List) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"     * Loads tasks from the file specified in the constructor and returns them as a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"    public List\u003cTask\u003e loadTaskFromFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"            String inputLines;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"            List\u003cTask\u003e task_List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"            while((inputLines \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"                String [] taskSplit \u003d inputLines.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"                String taskType \u003d taskSplit[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"                String status \u003d taskSplit[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"                String taskDescription \u003d taskSplit[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"                    task_List.add(new Todo(taskDescription, status));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"                    String by \u003d taskSplit[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"                    task_List.add(new Deadline(taskDescription, by, status));","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"                    String from \u003d taskSplit[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"                    String to \u003d  taskSplit[4];","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"                    task_List.add(new Event(taskDescription, from, to, status));","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"            reloadTasksToFile(task_List);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"            return task_List;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println(\"The file to store your tasks entered cannot be accessed.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"mingyu-wan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"mingyu-wan"},"content":"     * Clears the content of the specified file.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"mingyu-wan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"mingyu-wan"},"content":"     * @param filePath The path to the file to be cleared.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"mingyu-wan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"mingyu-wan"},"content":"    public void clearTasksInFile(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"mingyu-wan"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"mingyu-wan"},"content":"            writer.write(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"mingyu-wan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"mingyu-wan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"mingyu-wan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyu-wan":108}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"mingyu-wan":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    void addTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Todo(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(1, taskList.getTask_Count());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"    void getTaskListTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        Task task2 \u003d new Deadline(\"eat\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"        Task task3 \u003d new Event(\"drink\", \"18.09.2023\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"        List\u003cTask\u003e tasks\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"        tasks.add(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"        tasks.add(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"        tasks.add(task3);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(tasks, taskList.getTask_List());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"    void getTaskCountTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"        Task task2 \u003d new Deadline(\"eat\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"        Task task3 \u003d new Event(\"drink\", \"18.09.2023\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(3, taskList.getTask_Count());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"    void getTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"        Task task2 \u003d new Deadline(\"eat\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"        Task task3 \u003d new Event(\"drink\", \"18.09.2023\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(task1, taskList.getTask(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(task2, taskList.getTask(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(task3, taskList.getTask(3));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"    void removeTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"        Task task2 \u003d new Deadline(\"eat\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"        Task task3 \u003d new Event(\"drink\", \"18.09.2023\",\"18.09.2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"        taskList.removeTask(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(2,taskList.getTask_Count());","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(task2, taskList.getTask(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(task3, taskList.getTask(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyu-wan":83}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"        Deadline deadline \u003d new Deadline(\"sleep\", \"2020.09.18\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\"[D] [ ] sleep (by:18 Sep 2020)\",deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"    void toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"        Deadline deadline \u003d new Deadline(\"eat\", \"2020-09-18\", \"Y\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\"D|Y|eat|18 Sep 2020\",deadline.toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyu-wan":20}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"import java.util.Date;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"mingyu-wan"},"content":"class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"mingyu-wan"},"content":"    void taskDoneTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"mingyu-wan"},"content":"        task.setTaskDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\"X\",task.getStatus());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"mingyu-wan"},"content":"    void taskStatusFromFileTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"mingyu-wan"},"content":"        task.taskStatusFromFile(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\"X\",task.getStatus());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"mingyu-wan"},"content":"    void undoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"mingyu-wan"},"content":"        task.setTaskDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"mingyu-wan"},"content":"        task.undoTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\" \",task.getStatus());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"mingyu-wan"},"content":"    void convertStringToDateTest1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"mingyu-wan"},"content":"        LocalDate date \u003d LocalDate.of(2020, 9, 18);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(date,task.convertStringToDate(\"2020.09.18\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"mingyu-wan"},"content":"    void convertStringToDateTest2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"mingyu-wan"},"content":"        LocalDate date \u003d LocalDate.of(2020, 12, 12);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(date,task.convertStringToDate(\"2020/12/12\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"mingyu-wan"},"content":"    void convertStringToDay1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(DayOfWeek.TUESDAY,task.convertStringToDay(\"Tue\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"mingyu-wan"},"content":"    void convertStringToDay2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(DayOfWeek.FRIDAY,task.convertStringToDay(\"Friday\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"mingyu-wan"},"content":"    void convertStringToTime1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"mingyu-wan"},"content":"        LocalTime time\u003d LocalTime.of(4,30);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(time,task.convertStringToTime(\"430AM\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"mingyu-wan"},"content":"    void convertStringToTime2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"mingyu-wan"},"content":"        LocalTime time \u003d LocalTime.of(16, 00);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(time,task.convertStringToTime(\"4PM\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"mingyu-wan"},"content":"    void dateToStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"mingyu-wan"},"content":"        LocalDate date \u003d LocalDate.of(2020, 12, 12);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\"12 Dec 2020\", task.dateToString(date));","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"mingyu-wan"},"content":"    void dayToStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"mingyu-wan"},"content":"        DayOfWeek day \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\", Monday\",task.dayToString(day));","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"mingyu-wan"},"content":"    void timeToStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"mingyu-wan"},"content":"        LocalTime time \u003d LocalTime.of(16,00);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\", 4.00PM\",task.timeToString(time));","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"mingyu-wan"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"mingyu-wan"},"content":"        task.setTaskDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\" [X] sleep\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"mingyu-wan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"mingyu-wan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"mingyu-wan"},"content":"    void toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"mingyu-wan"},"content":"        Task task \u003d new Task(\"sleep\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"mingyu-wan"},"content":"        assertEquals(\"|N|sleep\", task.toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"mingyu-wan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"mingyu-wan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"mingyu-wan":112}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mingyu-wan"},"content":"event meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"mingyu-wan"},"content":"todo CS2103","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"mingyu-wan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"mingyu-wan"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"mingyu-wan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"mingyu-wan"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"mingyu-wan"},"content":"deadline essay /by 3pm 26/7","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"mingyu-wan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"mingyu-wan"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"mingyu-wan"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"mingyu-wan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"mingyu-wan"},"content":"delete7","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"mingyu-wan"},"content":"deadline read","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"mingyu-wan"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"mingyu-wan":14}}]
