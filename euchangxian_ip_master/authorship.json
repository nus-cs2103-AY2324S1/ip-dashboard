[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    version \u003d \u002717\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":12,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"euchangxian":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.service.CliParserService;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import duke.service.CommandFactory;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import duke.service.OutputService;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"import duke.service.StorageService;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"import duke.service.TaskFactory;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":" * Duke is responsible for task management, and exposes various methods to manipulate the Task List.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    private final String botName;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    private final UiService uiService;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"    private final CliParserService cliParserService;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"     * No-args constructor for Duke. Sets up the various services.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"        this.botName \u003d \"Changoose\";","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"        OutputService outputService \u003d new OutputService();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"        this.uiService \u003d new UiService(outputService);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        TaskFactory taskFactory \u003d new TaskFactory();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"        CommandFactory commandFactory \u003d new CommandFactory(taskFactory, this, uiService);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"        this.cliParserService \u003d new CliParserService(uiService, commandFactory);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"     * Initializes the StorageService and attempts to load the stored tasks into taskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the greet message, and any additional info about the initialization of the","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"     *         StorageService.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"    public String initStorage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"            StorageService storageService \u003d new StorageService();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"            List\u003cString\u003e displayText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"            if (storageService.wasFileCorrupted()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"                displayText.add(uiService.storageFileCorruptedMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"            taskList.loadFromStorage(storageService);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"            displayText.add(uiService.greetMessage(getBotName()));","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatGenericMessage(displayText);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatStorageInitializationFailure();","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"     * Returns the result of parsing and executing the input.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"     * @param input The given input to be parsed and executed.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the result of executing the parsed input.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"        return cliParserService.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"     * Returns the name of the Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"     * @return the name of the Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"    public String getBotName() {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"        return botName;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"     * Adds a new task to the internal task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while saving to storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"    public void addTask(Task task) throws DukeStorageException {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"     * Deletes a task based on its index in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"     * @return An optional containing the deleted task, empty if the index was invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while updating storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"    public Optional\u003cTask\u003e deleteTask(int index) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"        return taskList.deleteTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"     * Marks a task as completed based on its index.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"     * @return An optional containing the marked task, empty if the index was invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while updating storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"    public Optional\u003cTask\u003e markTask(int index) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"        return taskList.markTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"euchangxian"},"content":"     * Unmarks a task, indicating it\u0027s not completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"euchangxian"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"euchangxian"},"content":"     * @return An optional containing the unmarked task, empty if the index was invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while updating storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"euchangxian"},"content":"    public Optional\u003cTask\u003e unmarkTask(int index) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"euchangxian"},"content":"        return taskList.unmarkTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"euchangxian"},"content":"    public List\u003cTask\u003e searchTasks(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"euchangxian"},"content":"        return taskList.searchTasks(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"euchangxian"},"content":"     * Retrieves the list of tasks currently managed by Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"euchangxian"},"content":"     * @return A list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"euchangxian"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"euchangxian"},"content":"        return taskList.getTaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"euchangxian"},"content":"     * Returns the total number of tasks currently managed by Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"euchangxian"},"content":"     * @return Number of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"euchangxian"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"euchangxian"},"content":"        return taskList.getNumberOfTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"euchangxian":141,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"euchangxian":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" * The Main class serves as the primary entry point for the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":" * process for the application\u0027s Command-Line Interface (CLI).","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    private Duke changooseBot;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * The main entry point for all JavaFX applications.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     * The start method is called after the init method has returned,","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     * and after the system is ready for the application to begin running.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"     * NOTE: This method is called on the JavaFX Application Thread.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     *                     the application scene can be set.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     *                     Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     *                     primary stages.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"            VBox rootLayout \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"            Scene scene \u003d new Scene(rootLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"            MainWindow mainWindowController \u003d fxmlLoader.getController();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"            changooseBot \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"            mainWindowController.setDuke(changooseBot);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"            String startUpMessage \u003d changooseBot.initStorage();","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"            mainWindowController.addMessageFromDuke(startUpMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"euchangxian":49}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"     * Creates one dialog box that echoes a message from Duke, and then appends it to the dialog container.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     * @param message The message to be displayed by Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"    public void addMessageFromDuke(String message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"            DialogBox.getDukeDialog(message, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"euchangxian":63}},{"path":"src/main/java/duke/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.exception.TaskParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.exception.TimeUtilException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import duke.service.TaskFactory;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":" * Represents a command to add a task in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"    private final String taskType;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    private final List\u003cString\u003e argsList;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    private final TaskFactory taskFactory;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     * Constructs an AddTaskCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot    The main Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     * @param uiService  The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     * @param taskType   The type of the task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"     * @param argsList   The arguments required to create the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     * @param taskFactory The factory to create tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"    public AddTaskCommand(Duke dukeBot, UiService uiService,","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"                          String taskType, List\u003cString\u003e argsList, TaskFactory taskFactory) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"        super(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        this.argsList \u003d argsList;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"        this.taskFactory \u003d taskFactory;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"     * Executes the command to add a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the status of the task addition.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"     *         It either confirms the task addition or details any errors encountered.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"    public String execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"            Task task \u003d taskFactory.createTask(taskType, argsList);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"            dukeBot.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatAddTask(task, dukeBot.getNumberOfTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"        } catch (TaskParseException | TimeUtilException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatGenericMessage(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatStorageAddFailure();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":56}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":" * Represents an abstract command that can be executed in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":" * All commands that are intended to be executed in Duke should extend this class.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    protected Duke dukeBot;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"    protected UiService uiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     * Constructs a Command with the given Duke instance and UI service.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot   The main Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     * @param uiService The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    protected Command(Duke dukeBot, UiService uiService) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"        this.dukeBot \u003d dukeBot;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        this.uiService \u003d uiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     * @return a String describing the output of the Command.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"    public abstract String execute();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"     * Indicates if the command should cause the program to exit.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"     * @return False by default; should be overridden by commands that cause program exit.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":42}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" * Represents a command to delete a task from the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"    private final int taskId;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     * Constructs a DeleteTaskCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot   The main Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     * @param uiService The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     * @param taskId    The ID of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    public DeleteTaskCommand(Duke dukeBot, UiService uiService, int taskId) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        super(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     * Executes the command to delete a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the status of the task deletion.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     *         It either confirms the task deletion or details any errors encountered.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"    public String execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"            Optional\u003cTask\u003e optionalTask \u003d dukeBot.deleteTask(taskId - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"            return optionalTask.map(task -\u003e uiService.formatDeleteTask(task, dukeBot.getNumberOfTasks()))","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"                    .orElseGet(() -\u003e uiService.formatInvalidTaskIndexProvided(taskId, dukeBot.getNumberOfTasks()));","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatStorageDeleteFailure();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":44}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":" * Represents a command to exit the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"     * Constructs an ExitCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot   The main Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"     * @param uiService The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"    public ExitCommand(Duke dukeBot, UiService uiService) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"        super(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     * Executes the command to exit Duke, although the actual exit mechanism","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"     * is handled outside this class.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     * @return A String literal \"EXIT\".","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    public String execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"        // will be handled outside of this class.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"        return \"EXIT\";","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"     * Indicates that this command causes the program to exit.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"     * @return True.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":42}},{"path":"src/main/java/duke/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":" * Represents a Command to find tasks based on the provided keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"     * Constructs a FindTaskCommand","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot The Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * @param uiService The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     * @param keyword The keyword to look for in the taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    public FindTaskCommand(Duke dukeBot, UiService uiService, String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"        super(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     * Executes the command to find tasks based on the provided keyword.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the tasks that matched the keyword. If no tasks matched,","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     *         it returns a string indicating that no tasks were found.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    public String execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"        List\u003cTask\u003e matchedTasks \u003d dukeBot.searchTasks(keyword.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"        return uiService.formatFoundTasks(matchedTasks, keyword);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":38}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":" * Represents a command to list all tasks in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot   The main Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"     * @param uiService The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"    public ListCommand(Duke dukeBot, UiService uiService) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"        super(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the tasks in the task list, prefixed by their index.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     *         If there are no tasks, it returns a string indicating that there are no","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     *         tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    public String execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"        return uiService.formatTaskList(dukeBot.getTaskList());","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":32}},{"path":"src/main/java/duke/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" * Represents a command to mark a task as completed in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"    private final int taskId;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     * Constructs a MarkTaskCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot   The main Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     * @param uiService The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     * @param taskId    The ID of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    public MarkTaskCommand(Duke dukeBot, UiService uiService, int taskId) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        super(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     * Executes the command to mark a task as completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the task that was marked as complete.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    public String execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"            Optional\u003cTask\u003e optionalTask \u003d dukeBot.markTask(taskId - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"            return optionalTask.map(task -\u003e uiService.formatMarkTask(task))","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"                .orElseGet(() -\u003e uiService.formatInvalidTaskIndexProvided(taskId, dukeBot.getNumberOfTasks()));","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatStorageMarkFailure();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":43}},{"path":"src/main/java/duke/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.service.UiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" * Represents a command to unmark a task as completed in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"    private final int taskId;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     * Constructs an UnmarkTaskCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot   The main Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     * @param uiService The UI service for interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     * @param taskId    The ID of the task to be unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    public UnmarkTaskCommand(Duke dukeBot, UiService uiService, int taskId) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        super(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     * Executes the command to unmark a task as completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     * @return A string that represents the task that was unmarked.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    public String execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"            Optional\u003cTask\u003e optionalTask \u003d dukeBot.unmarkTask(taskId - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"            return optionalTask.map(task -\u003e uiService.formatUnmarkTask(task))","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"                .orElseGet(() -\u003e uiService.formatInvalidTaskIndexProvided(taskId, dukeBot.getNumberOfTasks()));","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatStorageUnmarkFailure();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":43}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents the general exception related to Duke operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"        super(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":10}},{"path":"src/main/java/duke/exception/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents an exception thrown when there\u0027s a storage related issue in Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class DukeStorageException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    public DukeStorageException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"euchangxian":10}},{"path":"src/main/java/duke/exception/FileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents an exception thrown when a file is found to be corrupted in Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class FileCorruptedException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    public FileCorruptedException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"euchangxian":10}},{"path":"src/main/java/duke/exception/InvalidCommandInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents an exception thrown when there\u0027s an invalid command input in Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class InvalidCommandInputException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    public InvalidCommandInputException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":10}},{"path":"src/main/java/duke/exception/TaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents an exception thrown when there\u0027s an error in parsing a task in Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class TaskParseException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    public TaskParseException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"        super(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":10}},{"path":"src/main/java/duke/exception/TimeUtilException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents an exception thrown when there\u0027s an error related to time utility functions in Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class TimeUtilException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    public TimeUtilException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"        super(String.format(\"%s %s\", \"[TimeUtil]\", message));","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"euchangxian":10}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents an exception thrown when an unknown command is encountered in Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":10}},{"path":"src/main/java/duke/service/CliParserService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.exception.InvalidCommandInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" * Provides functionality to parse and execute commands from the command line interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":" * This service is responsible for continuously reading commands from the CLI, parsing them into","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":" * their respective components, and then executing the associated commands using a {@link CommandFactory}.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"public class CliParserService {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    private final UiService uiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    private final CommandFactory commandFactory;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     * Constructs a new instance of the CLI parser service.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"     * @param uiService       The UI service to use for interactions with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     * @param commandFactory  The command factory to use for creating command objects.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    public CliParserService(UiService uiService, CommandFactory commandFactory) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"        this.uiService \u003d uiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"        this.commandFactory \u003d commandFactory;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"     * Reads and executes commands from the command line interface continuously.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"     * This method will parse the given input into command components, create the associated {@link Command} objects","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"     * using the {@link CommandFactory}, and then execute the commands.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"     * @param input The input to be parsed.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"     * @return The String returned from executing the commands.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    public String parse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"        ParseResult parseResult \u003d parseCommandAndArguments(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"        String commandType \u003d parseResult.getCommandType();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e arguments \u003d parseResult.getArguments();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"            Command command \u003d commandFactory.createCommand(commandType, arguments);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"            if (command.isExit()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"                return uiService.formatBye();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"            return command.execute();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"        } catch (UnknownCommandException | InvalidCommandInputException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"            return uiService.formatGenericMessage(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"     * Parses a command line into its main command and associated arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"     * @param line The command line to parse.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"     * @return A {@link ParseResult} object containing the parsed command and its arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"    public ParseResult parseCommandAndArguments(String line) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"        String trimmedLine \u003d line.trim();","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e arguments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"        // Split the command and its primary argument","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"        String[] splitBySpace \u003d trimmedLine.split(\" \", 2);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"        String commandType \u003d splitBySpace[0].toLowerCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"        // If there\u0027s more than just the command, handle the arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"        if (splitBySpace.length \u003e 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"            // primaryArg refers to either task name, or the task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"            String primaryArg \u003d splitBySpace[1].split(\"/\")[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"            arguments.add(primaryArg);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"            // Split the rest by slashes","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"            String[] splitBySlash \u003d splitBySpace[1].split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"            for (int i \u003d 1; i \u003c splitBySlash.length; ++i) { // Start at 1 to skip the task name","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"                arguments.add(splitBySlash[i].trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"        return new ParseResult(commandType, arguments);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"     * Represents the result of parsing a command line into its main command and arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"    public static final class ParseResult {","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"        private final String commandType;","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"        private final List\u003cString\u003e arguments;","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"         * Constructs a new parse result.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"         *","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"         * @param commandType The parsed command type.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"         * @param arguments   The list of parsed arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"        ParseResult(String commandType, List\u003cString\u003e arguments) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"            this.commandType \u003d commandType;","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"            this.arguments \u003d arguments;","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"         * Retrieves the parsed command type.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"         *","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"         * @return The command type as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"        public String getCommandType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"            return commandType;","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"euchangxian"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"euchangxian"},"content":"         * Retrieves the list of parsed arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"euchangxian"},"content":"         *","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"euchangxian"},"content":"         * @return A list of arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"euchangxian"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"euchangxian"},"content":"        public List\u003cString\u003e getArguments() {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"euchangxian"},"content":"            return arguments;","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":122}},{"path":"src/main/java/duke/service/CommandFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.commands.AddTaskCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.commands.DeleteTaskCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import duke.commands.FindTaskCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"import duke.commands.MarkTaskCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"import duke.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"import duke.exception.InvalidCommandInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":" * A factory class responsible for producing commands based on user inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":" * This class interprets the user\u0027s command and its associated arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":" * to generate the correct {@link Command} object that corresponds to the user\u0027s request.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"public class CommandFactory {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    private TaskFactory taskFactory;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    private Duke dukeBot;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    private UiService uiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     * Initializes a new instance of CommandFactory.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     * @param taskFactory The factory responsible for creating tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"     * @param dukeBot     The main Duke bot instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"     * @param uiService   The UI service instance for user interactions.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"    public CommandFactory(TaskFactory taskFactory, Duke dukeBot, UiService uiService) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"        this.taskFactory \u003d taskFactory;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"        this.dukeBot \u003d dukeBot;","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"        this.uiService \u003d uiService;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"     * Creates a {@link Command} object based on the provided command and its arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"     * @param command The main user command as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"     * @param args    A list of arguments associated with the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"     * @return The corresponding {@link Command} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"     * @throws UnknownCommandException     If the provided command string does not match any known command.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"     * @throws InvalidCommandInputException If the command input is invalid or incomplete.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"    public Command createCommand(String command, List\u003cString\u003e args)","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"            throws UnknownCommandException, InvalidCommandInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"        switch (command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"            return new ExitCommand(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"        case \"list\":","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"            return new ListCommand(dukeBot, uiService);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"            checkValidTaskNumberArgument(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"            int markId \u003d Integer.parseInt(args.get(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"            return new MarkTaskCommand(dukeBot, uiService, markId);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"            checkValidTaskNumberArgument(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"            int unmarkId \u003d Integer.parseInt(args.get(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"            return new UnmarkTaskCommand(dukeBot, uiService, unmarkId);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"            checkValidTaskNumberArgument(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"            int deleteId \u003d Integer.parseInt(args.get(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"            return new DeleteTaskCommand(dukeBot, uiService, deleteId);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"        case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"            if (args.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"                throw new InvalidCommandInputException(\"Provide a keyword for find command! :\u003c\");","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"            return new FindTaskCommand(dukeBot, uiService, args.get(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"        case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"            return new AddTaskCommand(dukeBot, uiService, command, args, taskFactory);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"            throw new UnknownCommandException(String.format(\"Command: %s not recognized! :\u003c\", command));","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"     * Checks if the provided string is numeric.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"     * @param str The string to check.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"     * @return {@code true} if the string is numeric, otherwise {@code false}.","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"    private boolean isNumeric(String str) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"     * Validates that the given arguments list contains a numeric value as its first item.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"     * @param argsList The list of arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"     * @throws InvalidCommandInputException If the list is empty or the first item is not numeric.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"    private void checkValidTaskNumberArgument(List\u003cString\u003e argsList) throws InvalidCommandInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"        if (argsList.isEmpty() || !isNumeric(argsList.get(0))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"            throw new InvalidCommandInputException(\"A numeric argument should be provided.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":110}},{"path":"src/main/java/duke/service/OutputService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":" * Handles the display of information to the user with standardized formatting.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" * The OutputService ensures consistent display formats, particularly with the use","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":" * of indentation and dividers for enhanced readability.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"public class OutputService {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"    private static final int indentLength \u003d 4;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    private final String divider \u003d appendNewLine(","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"        indentLeft(String.format(\"%40s\", \"\").replace(\" \", \"-\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     * Echos the provided input string to the user without a prefix.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"     * @param input The string to be displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    public String echo(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"        return echo(input, \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     * Echos the provided input string to the user with the specified prefix.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"     * @param input  The string to be displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"     * @param prefix A prefix to be added before the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"    public String echo(String input, String prefix) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"        return echo(List.of(prefix + input));","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     * Echos a list of strings to the user with standardized formatting.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"     * @param inputs The list of strings to be displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"    public String echo(List\u003cString\u003e inputs) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"        sb.append(divider);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"        inputs.stream().map(this::indentLeft)","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"            .map(this::appendNewLine)","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"            .forEach(sb::append);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"        sb.append(divider);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"     * Adds a standardized indentation to the beginning of each line of the given string.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"     * @param input The string that requires indentation.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"     * @return The input string with the standardized indentation applied.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"    public String indentLeft(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"        String indent \u003d String.format(\"%\" + indentLength + \"s\", \"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"        String[] lines \u003d input.split(System.lineSeparator()); // handle Unix and Windows new lines.","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"            lines[i] \u003d indent + lines[i];","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"        return String.join(System.lineSeparator(), lines);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"     * Appends to the front of each task in a list of tasks to the user with task numbers.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"     * @param taskList The list of tasks to be formatted.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"    public List\u003cString\u003e formatTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"        return Stream.iterate(0, i -\u003e i + 1)","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"            .limit(taskList.size())","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"            .map(i -\u003e String.format(\"%s. %s\", i + 1, taskList.get(i))) // taskList is 0-indexed. display is 1-indexed.","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"    private String appendNewLine(String line) {","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"        return String.format(\"%s%n\", line);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":85}},{"path":"src/main/java/duke/service/StorageService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"import duke.exception.FileCorruptedException;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":" * Manages the storage and retrieval of {@link Task} objects from a local file.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":" * This service class provides an abstraction for the storage operations. It manages the tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":" * in the local storage and offers functionalities such as loading, saving, and deleting tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"public class StorageService {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    public static final String PATH_NAME \u003d \"./data\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    public static final String FILE_NAME \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    private final File directory;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"    private final File tasksStorageFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    private boolean wasFileCorrupted;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     * Initializes a new StorageService, ensuring the existence of the storage directory and file.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If there\u0027s any issue creating or accessing the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"    public StorageService() throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"        this.directory \u003d new File(PATH_NAME);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"        this.tasksStorageFile \u003d new File(FILE_NAME);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"        this.wasFileCorrupted \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"        initDirectory();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"        initFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"     * Checks if the storage file was corrupted during the last operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"     * @return {@code true} if the file was corrupted, otherwise {@code false}.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"    public boolean wasFileCorrupted() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"        return wasFileCorrupted;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"     * @return A list of {@link Task} objects loaded from the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"            return getTasks(tasksStorageFile);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"            wasFileCorrupted \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"            return new ArrayList\u003c\u003e(); // return an empty list if file is corrupted","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"     * Saves a single task to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"     * @param task The task to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If there\u0027s an error during the save operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"    public void saveTask(Task task) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"        List\u003cTask\u003e tasks \u003d loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"        writeTasksToFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"     * Saves a list of tasks to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If there\u0027s an error during the save operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"    public void saveTasks(List\u003cTask\u003e taskList) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"        writeTasksToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"     * Deletes a task from the storage based on its index.","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"     * @param index The index of the task in the storage list.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If there\u0027s an error during the deletion operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"    public void deleteTask(int index) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"        List\u003cTask\u003e tasks \u003d loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"            writeTasksToFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"     * Deletes a specified task from the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If there\u0027s an error during the deletion operation.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"    public void deleteTask(Task task) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"        List\u003cTask\u003e tasks \u003d loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"euchangxian"},"content":"        tasks.remove(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"euchangxian"},"content":"        writeTasksToFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"euchangxian"},"content":"    // Helper methods below","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"euchangxian"},"content":"    private void writeTasksToFile(List\u003cTask\u003e tasks) throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"euchangxian"},"content":"            FileOutputStream fos \u003d new FileOutputStream(FILE_NAME);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"euchangxian"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"euchangxian"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"euchangxian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"euchangxian"},"content":"            throw new DukeStorageException(String.format(\"Failed to write tasks to file!%nError: %s\", e.getMessage()));","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"euchangxian"},"content":"    private List\u003cTask\u003e getTasks(File file) throws FileCorruptedException {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"euchangxian"},"content":"        if (!file.exists() || file.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"euchangxian"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"euchangxian"},"content":"        try (FileInputStream fis \u003d new FileInputStream(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"euchangxian"},"content":"             ObjectInputStream ois \u003d new ObjectInputStream(fis)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"euchangxian"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"euchangxian"},"content":"            List\u003cTask\u003e storedTaskList \u003d (List\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"euchangxian"},"content":"            return storedTaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"euchangxian"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"euchangxian"},"content":"            throw new FileCorruptedException(String.format(\"Failed to load tasks!%nError: %s\", e.getMessage()));","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"euchangxian"},"content":"    private void initDirectory() throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"euchangxian"},"content":"            Files.createDirectories(directory.toPath());","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"euchangxian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"euchangxian"},"content":"            throw new DukeStorageException(String.format(\"Failed to create/load directory at %s\", PATH_NAME));","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"euchangxian"},"content":"    private void initFile() throws DukeStorageException {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"euchangxian"},"content":"        if (!tasksStorageFile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"euchangxian"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"euchangxian"},"content":"                Files.createFile(tasksStorageFile.toPath());","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"euchangxian"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"euchangxian"},"content":"                throw new DukeStorageException(String.format(\"Failed to create/load %s file\", FILE_NAME));","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"euchangxian":158}},{"path":"src/main/java/duke/service/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.exception.TaskParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import duke.exception.TimeUtilException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.TaskType;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"import duke.util.TimeUtil;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":" * Factory class responsible for creating Task objects based on their type and given arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":" * This class provides an abstraction over the task creation process. It receives a task type and","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":" * a list of arguments, then produces the corresponding task instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"public class TaskFactory {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     * Creates a task instance based on the provided task type and arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"     * @param taskType The type of task to be created. It should match one of the enum values in {@code TaskType}.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     * @param argsList The list of arguments required for the task. The first item is always the task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     *                 Further items depend on the task type (e.g., due date for deadlines, start and","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     *                 end times for events).","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     * @return The created Task object.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     * @throws TaskParseException If there\u0027s an error in the task\u0027s format or arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"     * @throws TimeUtilException  If there\u0027s an error in parsing the date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"    public Task createTask(String taskType, List\u003cString\u003e argsList)","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"            throws TaskParseException, TimeUtilException {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"        if (argsList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"            throw new TaskParseException(\"usage: TaskType(todo | deadline | event) \"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"                    + \"TaskName \"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"                    + \"[/StartDate] [/EndDate]\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"        String taskName \u003d argsList.remove(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        // Convert the provided taskType string to the TaskType enum.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"        TaskType typeEnum;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"            typeEnum \u003d TaskType.valueOf(taskType.toUpperCase());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"            throw new TaskParseException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"        switch (typeEnum) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"        case TODO:","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"            if (!argsList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"                throw new TaskParseException(\"Error: Todo tasks should not have arguments\");","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"            return new TodoTask(taskName);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"            if (argsList.size() !\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"                throw new TaskParseException(\"Usage: deadline taskName /by 10 May 2023\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"            // Ensuring the deadline time is prefixed with \"by \".","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"            if (!argsList.get(0).startsWith(\"by \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"                throw new TaskParseException(\"Error: Deadline tasks must have an end date prefixed with \u0027/by\u0027.\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"            // Parsing the end date without the \"by \" prefix.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"            LocalDateTime endDeadlineDate \u003d TimeUtil.parseDateTimeString(","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"                    argsList.get(0).substring(3).trim()","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"            );","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"            return new DeadlineTask(taskName, endDeadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"        case EVENT:","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"            if (argsList.size() !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"                throw new TaskParseException(\"Usage: event taskName /from 10 May 2023 /to 20 May 2023\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"            // Ensuring the start and end dates are prefixed correctly for event tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"            if (!argsList.get(0).startsWith(\"from \") || !argsList.get(1).startsWith(\"to \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"                throw new TaskParseException(\"Error: Event tasks must have a start date prefixed with \u0027/from\u0027 \"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"                        + \"and an end date prefixed with \u0027/to\u0027.\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"            // Parsing the start date without the \"from \" prefix and the end date without the \"to \" prefix.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"            LocalDateTime startEventDate \u003d TimeUtil.parseDateTimeString(","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"                    argsList.get(0).substring(5).trim()","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"            );","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"            LocalDateTime endEventDate \u003d TimeUtil.parseDateTimeString(","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"                    argsList.get(1).substring(3).trim()","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"            );","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"            if (startEventDate.isAfter(endEventDate)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"                throw new TaskParseException(\"Error: Start date of the event cannot be after the end date\");","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"            return new EventTask(taskName, startEventDate, endEventDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"            throw new TaskParseException(\"Unhandled task type: \" + taskType);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":100}},{"path":"src/main/java/duke/service/UiService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":" * Provides a set of methods for displaying user interface messages and task information.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":" * This service acts as an intermediate between the logic and the actual output service. It simplifies","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" * the process of generating structured messages for different operations within the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"public class UiService {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    private final OutputService outputService;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * Creates a new UiService instance with a specified OutputService.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     * @param outputService The service to handle actual output operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    public UiService(OutputService outputService) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        this.outputService \u003d outputService;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     * Displays a greeting message with the given bot\u0027s name.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     * @param botName Name of the bot.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     * @return A String containing the greeting message.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    public String greetMessage(String botName) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        return String.format(\"Hello! I\u0027m %s%nWhat can I do for you?\", botName);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"     * Displays a farewell message.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the farewell message.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    public String formatBye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"     * Displays a generic message to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"     * @return The message to be displayed, formatted by OutputService.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"    public String formatGenericMessage(String message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(message);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"     * Displays a generic message to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"     * @param messages The List of messages to be displayed.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"     * @return The messages to be displayed, formatted by OutputService.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"    public String formatGenericMessage(List\u003cString\u003e messages) {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(messages);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"     * Warns the user that the task storage file has been corrupted.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the warning message about the corrupted task storage file.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"    public String storageFileCorruptedMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"        return \"Warning: The existing tasks file was corrupted and has been reset.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"     * Warns the user about a failure in initializing the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the warning message about the failed storage initialization.","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"    public String formatStorageInitializationFailure() {","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(\"Warning: Error initializing storage. \"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"                + \"Any changes made during this session will not be saved!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"     * Warns the user about a failure in adding a task to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the warning message about the failed addition of the task to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"    public String formatStorageAddFailure() {","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(\"Failed to add task to storage! :\u003c\");","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"     * Warns the user about a failure in deleting a task from the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the warning message about the failed deletion of the task from storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"    public String formatStorageDeleteFailure() {","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(\"Failed to delete task from storage! :\u003c\");","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"     * Warns the user about a failure in marking a task and saving changes to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the warning message about the failed saving of the marked task to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"    public String formatStorageMarkFailure() {","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(\"Failed to save marked task to storage! :\u003c\");","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"euchangxian"},"content":"     * Warns the user about a failure in un-marking a task and saving changes to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing the warning message about the failed saving of the unmarked task to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"euchangxian"},"content":"    public String formatStorageUnmarkFailure() {","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(\"Failed to save unmarked task to storage! :\u003c\");","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"euchangxian"},"content":"     * Prints the tasks in the taskList, prefixed by their index.","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"euchangxian"},"content":"     * @param taskList the taskList containing the tasks to be formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"euchangxian"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"euchangxian"},"content":"    public String formatTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(outputService.formatTaskList(taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"euchangxian"},"content":"     * Notifies the user when a task is successfully added to the taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"euchangxian"},"content":"     * @param task the task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"euchangxian"},"content":"     * @param taskListSize the current size of the taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"euchangxian"},"content":"     * @return A string indicating the status of the task list after adding a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"euchangxian"},"content":"    public String formatAddTask(Task task, int taskListSize) {","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e displayText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"euchangxian"},"content":"        displayText.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"euchangxian"},"content":"        displayText.add(outputService.indentLeft(task.toString()));","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"euchangxian"},"content":"        displayText.add(String.format(\"Now you have %s %s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"euchangxian"},"content":"                taskListSize,","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"euchangxian"},"content":"                taskListSize \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(displayText);","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"euchangxian"},"content":"     * Notifies the user when a task is successfully deleted from the taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"euchangxian"},"content":"     * @param task the task that was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"euchangxian"},"content":"     * @param taskListSize the current size of the taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"euchangxian"},"content":"     * @return A string indicating the status of the task list after deleting a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"euchangxian"},"content":"    public String formatDeleteTask(Task task, int taskListSize) {","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e displayText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"euchangxian"},"content":"        displayText.add(\"Noted. I have removed this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"euchangxian"},"content":"        displayText.add(outputService.indentLeft(task.toString()));","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"euchangxian"},"content":"        displayText.add(String.format(\"Now you have %s %s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"euchangxian"},"content":"                taskListSize,","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"euchangxian"},"content":"                taskListSize \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(displayText);","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"euchangxian"},"content":"     * Notifies the user when a task is successfully marked in the taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"euchangxian"},"content":"     * @param task the task that was marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"euchangxian"},"content":"     * @return A string indicating the status of the task after marking it.","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"euchangxian"},"content":"    public String formatMarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e displayText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"euchangxian"},"content":"        displayText.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"euchangxian"},"content":"        displayText.add(outputService.indentLeft(task.toString()));","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(displayText);","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"euchangxian"},"content":"     * Notifies the user when a task is successfully unmarked from the taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"euchangxian"},"content":"     * @param task the task that was unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"euchangxian"},"content":"     * @return A string indicating the status of the task after unmarking it.","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"euchangxian"},"content":"    public String formatUnmarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":185,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e displayText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"euchangxian"},"content":"        displayText.add(\"OK, I\u0027ve unmarked this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"euchangxian"},"content":"        displayText.add(outputService.indentLeft(task.toString()));","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(displayText);","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"euchangxian"},"content":"     * Notifies the user about an invalid task index provided.","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"euchangxian"},"content":"     * @param taskId       The invalid task ID.","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"euchangxian"},"content":"     * @param taskListSize The current size of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"euchangxian"},"content":"     * @return A string message indicating the invalidity of the task index.","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"euchangxian"},"content":"    public String formatInvalidTaskIndexProvided(int taskId, int taskListSize) {","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"euchangxian"},"content":"        if (taskListSize \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"euchangxian"},"content":"            return outputService.echo(\"There are no tasks left!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":201,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(String.format(\"Invalid Task index: %s provided.%n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"euchangxian"},"content":"                + \"Specify a number between %s - %s\", taskId, 1, taskListSize + 1));","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":207,"author":{"gitId":"euchangxian"},"content":"     * Notifies the user about the tasks that contains the given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":208,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":209,"author":{"gitId":"euchangxian"},"content":"     * @param matchedTasks the list of tasks that matches the given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"euchangxian"},"content":"     * @param keyword the keyword to match the tasks against.","lastModifiedDate":"2023-09-03"},{"lineNumber":211,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the list of tasks that matches the given keyword. If no tasks are found,","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"euchangxian"},"content":"     *         return a string indicating that there are no tasks that matches the keyword.","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":214,"author":{"gitId":"euchangxian"},"content":"    public String formatFoundTasks(List\u003cTask\u003e matchedTasks, String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"euchangxian"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"euchangxian"},"content":"            return outputService.echo(String.format(\"No tasks contains the keyword: %s! :\u003c\", keyword));","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e displayText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"euchangxian"},"content":"        String taskWord \u003d matchedTasks.size() \u003d\u003d 1","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"euchangxian"},"content":"            ? \"task\"","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"euchangxian"},"content":"            : \"tasks\";","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"euchangxian"},"content":"        displayText.add(String.format(\"Found %s matching %s in your list!\", matchedTasks.size(), taskWord));","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"euchangxian"},"content":"        displayText.addAll(outputService.formatTaskList(matchedTasks));","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"euchangxian"},"content":"        return outputService.echo(displayText);","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":226}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.util.TimeUtil;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":" * Represents a task with a deadline in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"     * Constructs a DeadlineTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     * @param endDate  The deadline of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    public DeadlineTask(String taskName, LocalDateTime endDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"        super(taskName, TaskType.DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     * Retrieves the end date of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"     * @return The end date of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"        return this.endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"     * @return A string detailing the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"        String formattedEndDate \u003d TimeUtil.formatLocalDateTime(endDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), formattedEndDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":43}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import duke.util.TimeUtil;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"     * Constructs an EventTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     * @param taskName  The name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"     * @param endDate   The end date of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"    public EventTask(String taskName, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"        super(taskName, TaskType.EVENT);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     * @return A string detailing the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        String formattedStartDate \u003d TimeUtil.formatLocalDateTime(startDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"        String formattedEndDate \u003d TimeUtil.formatLocalDateTime(endDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(), formattedStartDate, formattedEndDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":38}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":" * Represents a general task in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    private String taskName;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"    private TaskType taskType;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"     * Constructs a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     * @param taskType The type of the task (e.g., TODO, DEADLINE).","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    public Task(String taskName, TaskType taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"        return this.taskName;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"        String taskStatus \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"        return String.format(\"[%s]%s %s\", taskType.getTaskType(), taskStatus, taskName);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":46}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import duke.service.StorageService;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":" * Represents a list of tasks that supports various task management operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":" * Integrates with a storage service to ensure persistence of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"    private StorageService storageService;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"     * Constructs a new TaskList instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"     * Loads the stored tasks from the storageService into the taskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"     * @param storageService the given storageService.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"    public void loadFromStorage(StorageService storageService) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"        this.storageService \u003d storageService;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(storageService.loadTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"     * Adds a new task to the list and updates the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"     * @return True if the task was added successfully, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while saving to storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"    public boolean addTask(Task task) throws DukeStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"        assert task !\u003d null : \"task should not be null!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"        storageService.saveTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        return this.taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"     * Deletes a task based on its index in the list and updates the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"     * @return An optional containing the deleted task, empty if the index was invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while updating storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"    public Optional\u003cTask\u003e deleteTask(int index) throws DukeStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"        storageService.deleteTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"        Task removedTask \u003d taskList.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"        assert removedTask !\u003d null : \"There should not have been null tasks in the list!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"        return Optional.of(removedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"     * Marks a task as completed based on its index and updates the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"     * @return An optional containing the marked task, empty if the index was invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while updating storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"    public Optional\u003cTask\u003e markTask(int index) throws DukeStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"        assert task !\u003d null : \"There should not have been null tasks in the list!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"        storageService.saveTasks(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"        return Optional.of(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"     * Unmarks a task as completed based on its index and updates the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"     * @return An optional containing the unmarked task, empty if the index was invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"     * @throws DukeStorageException If an error occurs while updating storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"    public Optional\u003cTask\u003e unmarkTask(int index) throws DukeStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"        assert task !\u003d null : \"There should not have been null tasks in the list!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"        storageService.saveTasks(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"        return Optional.of(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"     * Returns a List of tasks in the taskList with taskName that matches the given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"     * @param keyword the keyword to match in the taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"     * @return the list of tasks that contains the keyword in their taskName.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"    public List\u003cTask\u003e searchTasks(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"        return taskList.stream()","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"            .filter(task -\u003e task.getTaskName().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"euchangxian"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"euchangxian"},"content":"     * Retrieves the list of tasks currently managed.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"euchangxian"},"content":"     * @return A list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"euchangxian"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"euchangxian"},"content":"        return taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"euchangxian"},"content":"     * Returns the total number of tasks currently managed.","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"euchangxian"},"content":"     * @return Number of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"euchangxian"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"euchangxian"},"content":"        return taskList.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":132}},{"path":"src/main/java/duke/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Enumerates the different types of tasks available in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"    TODO(\"T\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"    EVENT(\"E\");","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"    private final String taskType;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"     * Constructs a TaskType enumeration.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"     * @param taskType The type of the task (e.g., \"T\" for TO-DO).","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    TaskType(String taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"     * Retrieves the type of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"     * @return A string representing the type.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"        return taskType;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":30}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":" * Represents a \u0027To-Do\u0027 task in the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"     * Constructs a TodoTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    public TodoTask(String taskName) {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"        super(taskName, TaskType.TODO);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":16}},{"path":"src/main/java/duke/util/TimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import duke.exception.TimeUtilException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":" * Provides utility functions to handle and format time-related inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":" * This utility class provides multiple date and time formats for parsing,","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":" * which can be helpful in accommodating various user inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"public class TimeUtil {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"    private static final DateTimeFormatter[] DATE_TIME_FORMATTERS \u003d {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"        DateTimeFormatter.ofPattern(\"yyyyMMdd HHmm\")","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"    };","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    private static final DateTimeFormatter[] DATE_ONLY_FORMATTERS \u003d {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"        DateTimeFormatter.ISO_LOCAL_DATE,","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"        DateTimeFormatter.BASIC_ISO_DATE,","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"        DateTimeFormatter.ofPattern(\"d MMM yyyy\", Locale.ENGLISH),","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"        DateTimeFormatter.ofPattern(\"d MMMM yyyy\", Locale.ENGLISH)","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"    };","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    // Private constructor to prevent instantiation","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"    private TimeUtil() {}","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"     * Parses the provided date-time string to a LocalDateTime object.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"     * The function tries various date-time patterns to find a match.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"     * If none of the patterns match, it throws a TimeUtilException.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"     * @param input The date-time string to parse.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"     * @throws TimeUtilException If the input string cannot be parsed.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"    public static LocalDateTime parseDateTimeString(String input) throws TimeUtilException {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"        LocalDateTime dateTime \u003d handleSpecialStrings(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"            return dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"        for (DateTimeFormatter formatter : DATE_TIME_FORMATTERS) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"                // try next formatter","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"        for (DateTimeFormatter formatter : DATE_ONLY_FORMATTERS) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(input, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"                return LocalDateTime.of(parsedDate, LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"                // try next formatter","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"        throw new TimeUtilException(getHelpMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"     * Formats a LocalDateTime object to a human-readable string.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"     * @param localDate The LocalDateTime object to format.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"     * @return A string representation of the LocalDateTime object.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"    public static String formatLocalDateTime(LocalDateTime localDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"        return localDate.format(DISPLAY_FORMATTER);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"     * Returns a help message explaining valid date formats.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"     * @return A string containing a list of valid date formats.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"        return \"Invalid date format! Please use one of the following formats:\"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- yyyy-MM-dd HHmm (e.g. 2023-05-28 1800)\"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- yyyyMMdd HHmm (e.g. 2023-05-28 1800)\"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- yyyy-MM-dd (e.g. 2023-05-28)\"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- yyyymmdd (e.g. 20230528)\"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- d MMM yyyy (e.g. 1 Jan 2023)\"","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- d MMMM yyyy (e.g. 1 January 2023)\"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"            + \"\\nOr use special terms like:\"","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- today\"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- tomorrow\"","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- monday (for the next Monday)\"","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- tuesday (for the next Tuesday)\"","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"            + \"\\n- ... (similarly for other days of the week)\";","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"     * Handles special string inputs, converting them to LocalDateTime.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"     * The function currently supports \u0027today\u0027 and \u0027tomorrow\u0027 as special strings.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"     * @param input The special string input.","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"     * @return A LocalDateTime representation of the input, or null if the input is not special.","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"euchangxian"},"content":"    private static LocalDateTime handleSpecialStrings(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"euchangxian"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"euchangxian"},"content":"        case \"today\":","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"euchangxian"},"content":"            return LocalDateTime.now().withHour(23).withMinute(59);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"euchangxian"},"content":"        case \"tomorrow\":","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"euchangxian"},"content":"            return LocalDateTime.now().plusDays(1).withHour(23).withMinute(59);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"euchangxian"},"content":"        case \"monday\":","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"euchangxian"},"content":"        case \"tuesday\":","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"euchangxian"},"content":"        case \"wednesday\":","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"euchangxian"},"content":"        case \"thursday\":","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"euchangxian"},"content":"        case \"friday\":","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"euchangxian"},"content":"        case \"saturday\":","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"euchangxian"},"content":"        case \"sunday\":","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"euchangxian"},"content":"            return getNextDayOfWeek(DayOfWeek.valueOf(input.toUpperCase()));","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"euchangxian"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"euchangxian"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"euchangxian"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"euchangxian"},"content":"     * Returns the LocalDateTime of the next occurrence of the specified day of the week.","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"euchangxian"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"euchangxian"},"content":"     * This method calculates the number of days between the current day and the desired day of the week.","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"euchangxian"},"content":"     * If the desired day is the same as the current day, it returns the date of the next week\u0027s occurrence.","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"euchangxian"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"euchangxian"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"euchangxian"},"content":"     * @param desiredDay The desired day of the week as a DayOfWeek enum value.","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"euchangxian"},"content":"     * @return A LocalDateTime representing the next occurrence of the desired day, with the time set to 23:59.","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"euchangxian"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"euchangxian"},"content":"    private static LocalDateTime getNextDayOfWeek(DayOfWeek desiredDay) {","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"euchangxian"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"euchangxian"},"content":"        int daysUntilDesired \u003d desiredDay.getValue() - now.getDayOfWeek().getValue();","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"euchangxian"},"content":"        if (daysUntilDesired \u003c\u003d 0) { // if today is the desired day or a later day in the week","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"euchangxian"},"content":"            daysUntilDesired +\u003d 7; // get the next occurrence of the desired day","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"euchangxian"},"content":"        return now.plusDays(daysUntilDesired).withHour(23).withMinute(59);","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"euchangxian":149}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"euchangxian":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"\u003cVBox prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"      fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"    \u003cScrollPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"                prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"euchangxian":25}},{"path":"src/test/java/duke/service/CliParserServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import duke.service.CliParserService.ParseResult;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"public class CliParserServiceTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withValidTodoInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"todo some task\"; // \"some task\" should be in a single string.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(\"todo\", List.of(\"some task\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withValidDeadlineInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"deadline some task /by some date\";","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"                \"deadline\",","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"                List.of(\"some task\", \"by some date\")","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withValidEventInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"event some task /from some date /to another date\";","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"                \"event\",","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"                List.of(\"some task\", \"from some date\", \"to another date\")","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withExtraSpaces_shouldExtractCommandType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"  mark    some    weird input :\u003e  \";","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"                \"mark\",","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"                List.of(\"some    weird input :\u003e\")","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withNoArguments() {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"list\";","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"                \"list\",","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"                List.of()","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withExtraSlashes() {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"event some event /from today /to tomorrow /extra spaces\";","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"                \"event\",","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"                List.of(\"some event\", \"from today\", \"to tomorrow\", \"extra spaces\")","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withOnlySlashes() {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"/from today /to tomorrow\";","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"euchangxian"},"content":"                \"/from\",","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"euchangxian"},"content":"                List.of(\"today\", \"to tomorrow\")","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withInconsistentCases() {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"DeaDLine SoME deADLine /by tODAy\";","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"euchangxian"},"content":"                \"deadline\",","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"euchangxian"},"content":"                List.of(\"SoME deADLine\", \"by tODAy\")","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"euchangxian"},"content":"    public void testParseCommandAndArguments_withSpecialCharacters() {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"euchangxian"},"content":"        CliParserService cliParserService \u003d new CliParserService(null, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"euchangxian"},"content":"        // \"some task\" should be in a single string, by some date should be in a single string..","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"euchangxian"},"content":"        String addTodoInput \u003d \"todo task@#!$%^\u0026*()\";","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"euchangxian"},"content":"        ParseResult expected \u003d new CliParserService.ParseResult(","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"euchangxian"},"content":"                \"todo\",","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"euchangxian"},"content":"                List.of(\"task@#!$%^\u0026*()\")","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"euchangxian"},"content":"        ParseResult actual \u003d cliParserService.parseCommandAndArguments(addTodoInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getCommandType(), actual.getCommandType());","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected.getArguments(), actual.getArguments());","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":151}},{"path":"src/test/java/duke/service/OutputServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.service;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"public class OutputServiceTest {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"    public void testFormatTaskList_appendsCorrectIndex() {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"        OutputService outputService \u003d new OutputService();","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"        List\u003cTask\u003e taskList \u003d List.of(","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"            new TodoTask(\"Task 1\"),","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"            new TodoTask(\"Task 2\"),","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"            new TodoTask(\"Task 3\")","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e expected \u003d List.of(","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"            String.format(\"1. %s\", taskList.get(0)),","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"            String.format(\"2. %s\", taskList.get(1)),","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"            String.format(\"3. %s\", taskList.get(2))","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e actual \u003d outputService.formatTaskList(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"euchangxian":32}},{"path":"src/test/java/duke/util/TimeUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"package duke.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"euchangxian"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"euchangxian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"euchangxian"},"content":"import duke.exception.TimeUtilException;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"euchangxian"},"content":"public class TimeUtilTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"euchangxian"},"content":"    public void testParseDateTimeString_withDateTimeInputs() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e dateTimeInputs \u003d List.of(","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"euchangxian"},"content":"                \"2023-09-28 1800\",","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"euchangxian"},"content":"                \"20230928 1800\"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"euchangxian"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 9, 28, 18, 0);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"euchangxian"},"content":"        for (String input : dateTimeInputs) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"euchangxian"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"euchangxian"},"content":"                LocalDateTime actual \u003d TimeUtil.parseDateTimeString(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"euchangxian"},"content":"                assertEquals(expected, actual);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"euchangxian"},"content":"            } catch (TimeUtilException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"euchangxian"},"content":"                fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"euchangxian"},"content":"    public void testParseDateTimeString_withDateOnlyInputs() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"euchangxian"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e dateOnlyInputs \u003d List.of(","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"euchangxian"},"content":"                \"2023-09-28\",","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"euchangxian"},"content":"                \"20230928\",","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"euchangxian"},"content":"                \"28 September 2023\",","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"euchangxian"},"content":"                \"28 Sep 2023\"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"euchangxian"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 9, 28, now.getHour(), now.getMinute());","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"euchangxian"},"content":"        for (String input : dateOnlyInputs) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"euchangxian"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"euchangxian"},"content":"                LocalDateTime actual \u003d TimeUtil.parseDateTimeString(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"euchangxian"},"content":"                assertTrue(isWithinOneMinuteOfExpected(expected, actual));","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"euchangxian"},"content":"            } catch (TimeUtilException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"euchangxian"},"content":"                fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"euchangxian"},"content":"    public void testParseDateTimeString_withSpecialInputs() {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e specialInputs \u003d List.of(\"today\", \"tomorrow\");","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"euchangxian"},"content":"        List\u003cLocalDateTime\u003e expected \u003d List.of(","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"euchangxian"},"content":"                LocalDateTime.now().withHour(23).withMinute(59),","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"euchangxian"},"content":"                LocalDateTime.now().plusDays(1).withHour(23).withMinute(59)","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"euchangxian"},"content":"        for (int i \u003d 0; i \u003c specialInputs.size(); ++i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"euchangxian"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"euchangxian"},"content":"                LocalDateTime actual \u003d TimeUtil.parseDateTimeString(specialInputs.get(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"euchangxian"},"content":"                assertTrue(isWithinOneMinuteOfExpected(expected.get(i), actual));","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"euchangxian"},"content":"            } catch (TimeUtilException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"euchangxian"},"content":"                fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"euchangxian"},"content":"    public void testParseDateTimeString_withDaysOfWeekInputs() {","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e daysOfWeekInputs \u003d List.of(\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\",","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"euchangxian"},"content":"            \"saturday\", \"sunday\");","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"euchangxian"},"content":"        for (String input : daysOfWeekInputs) {","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"euchangxian"},"content":"            try {","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"euchangxian"},"content":"                LocalDateTime actual \u003d TimeUtil.parseDateTimeString(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"euchangxian"},"content":"                DayOfWeek expectedDay \u003d DayOfWeek.valueOf(input.toUpperCase());","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"euchangxian"},"content":"                assertEquals(expectedDay, actual.getDayOfWeek());","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"euchangxian"},"content":"            } catch (TimeUtilException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"euchangxian"},"content":"                fail();","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"euchangxian"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"euchangxian"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"euchangxian"},"content":"    public void testParseDateTimeString_withInvalidInputs() {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"euchangxian"},"content":"        List\u003cString\u003e invalidInputs \u003d List.of(","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"euchangxian"},"content":"                \"\", // empty","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"euchangxian"},"content":"                \"abc\", // non-numeric","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"euchangxian"},"content":"                \"2023-13-25\", // invalid month","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"euchangxian"},"content":"                \"2023-09-32\", // invalid day","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"euchangxian"},"content":"                \"2021-02-29\", // 29 Feb on a non-leap year.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"euchangxian"},"content":"                \"2023090\", // incomplete string","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"euchangxian"},"content":"                \"15 Febrary 2023\" // mispelt month","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"euchangxian"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"euchangxian"},"content":"        for (String input : invalidInputs) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"euchangxian"},"content":"            assertThrows(TimeUtilException.class, () -\u003e TimeUtil.parseDateTimeString(input));","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"euchangxian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"euchangxian"},"content":"    private boolean isWithinOneMinuteOfExpected(LocalDateTime expected, LocalDateTime actual) {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"euchangxian"},"content":"        LocalDateTime oneMinuteAgo \u003d expected.minusMinutes(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"euchangxian"},"content":"        LocalDateTime oneMinuteFromNow \u003d expected.plusMinutes(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"euchangxian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"euchangxian"},"content":"        return actual.isAfter(oneMinuteAgo) \u0026\u0026 actual.isBefore(oneMinuteFromNow);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"euchangxian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"euchangxian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"euchangxian":109}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"euchangxian"},"content":"todo master rizz","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"euchangxian"},"content":"deadline get baddies /tomorrow","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"euchangxian"},"content":"event club! /today /tomorrow","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"euchangxian"},"content":"mark 1","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"euchangxian"},"content":"mark 2","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"euchangxian"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"euchangxian"},"content":"unmark 2","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"euchangxian"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"euchangxian"},"content":"bye","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"euchangxian":9}}]
