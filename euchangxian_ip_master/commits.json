{"authorDailyContributionsMap":{"euchangxian":[{"date":"2023-08-24","commitResults":[{"hash":"4b0f9731aad74b8c37317707bed6663e66d6804a","isMergeCommit":false,"messageTitle":"Rename chatbot to Changoose and add dividers","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"4d0555f398fc94ef4cafdac1b894a19d811fa996","isMergeCommit":false,"messageTitle":"Add Duke::startParse and Duke::echo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"6cb6190c3033c7b8049fda6559d21d761c90e464","isMergeCommit":false,"messageTitle":"Replace usage of System.out.println with echo()","messageBody":"This reduces repeated code.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}}]},{"date":"2023-08-27","commitResults":[{"hash":"dc4d576002a4e249da34fadffd6c4595be94d52f","isMergeCommit":false,"messageTitle":"Add indentLeft() and indent echo\u0027s output","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"8fc0b5c0d035d423e02ad71356ee0be829c5a42c","isMergeCommit":false,"messageTitle":"Add botName and scanner as Duke instance variables","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"19b3d6d84d9af91aad528e641f804f01c7937ca8","isMergeCommit":false,"messageTitle":"Add getter for Duke botName","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"8a29887e4ca8a9fd585b46198a817ab6074f3438","isMergeCommit":false,"messageTitle":"Change startParse() and echo() to instance methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"81011597647b91ce06acd3448ceb5f4f0f0b6c6e","isMergeCommit":false,"messageTitle":"Add taskList field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"6acaa3f495a41c0f954c3b382167dd34fd66380c","isMergeCommit":false,"messageTitle":"Update startParse() to add input into taskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"a7c17e381404706a77aac66cfa08bc3d4c640ed5","isMergeCommit":false,"messageTitle":"Update echo() output text","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"d85ffb31afd0c864c832683348b1ecf709052394","isMergeCommit":false,"messageTitle":"Update echo() to take in a prefix","messageBody":"This is done by adding an overloaded echo() method to maintain the\nfunctionality of existing code.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"7647a568427a1ce5d5f6229e8e7a05c9ed3ffe1e","isMergeCommit":false,"messageTitle":"Add printTasks() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"5122a407c617d2459c54b8a82c0d35b58bf6ad75","isMergeCommit":false,"messageTitle":"Add line breaks in between methods","messageBody":"For improved readablity\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"4e7bd855eb372ec353fa52e42e2ea201e0ca5358","isMergeCommit":false,"messageTitle":"Update echo() to handle a list of strings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"da290a212e55d6e0997e304d7c7ced4d9f3b824d","isMergeCommit":false,"messageTitle":"Fix printing of dividers between every task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"87fd0f161d15ae170efdf232d057bfc45e55336c","isMergeCommit":false,"messageTitle":"Add switch case to handle list command","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"2071d570f150460fd2ecd66a3b20369aa8eec4d7","isMergeCommit":false,"messageTitle":"Add Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"d60dcc2146d15835f9b156dbdb80394c77f0f409","isMergeCommit":false,"messageTitle":"Update fields and methods to use Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"82ce6a119c2d1273e8721e41d64e13a042d054a9","isMergeCommit":false,"messageTitle":"Remove useless scanner field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"a882d8980f8d5a80bbf1d07e2b09c4377476f726","isMergeCommit":false,"messageTitle":"Add markTask() and unmarkTask()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":1}}},{"hash":"c78a6b4bc6de05d0d2a9d3ecfc465f47c0f799be","isMergeCommit":false,"messageTitle":"Add cases for mark and unmark","messageBody":"Update startParse() to first split by spaces to handle commands with\nmultiple words, like mark x or unmark x, where x is the index of the\ncommand.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"6804017b079a9ef35a754250868bf3901eec115b","isMergeCommit":false,"messageTitle":"Add getters for taskName and isDone in Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"28ee5f59a77fe46c097cb63ebe824a9c4644ef59","isMergeCommit":false,"messageTitle":"Extract print methods to OutputService","messageBody":"This is to prevent Duke class from getting too bloated.\n","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":47}}},{"hash":"814e1e1357bab6c1437784393ee82d50268a9523","isMergeCommit":false,"messageTitle":"Remove Duke field in OutputService","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":11}}},{"hash":"4623a32b7630542fb3797aff0a4303e5e80010bc","isMergeCommit":false,"messageTitle":"Change entry point of program to CliParserService","messageBody":"This is to prevent bloating of Duke class\n","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":56}}},{"hash":"cc457e32b0fe6c606a5e8b26ea51750e27a2b85c","isMergeCommit":false,"messageTitle":"Add custom Exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"612ae9a9afb48bae59c0f0ae487a179301a853c9","isMergeCommit":false,"messageTitle":"Add TaskType enum","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"7a2e15b7f80c3550d91ad3ecc9829aef7b1e4ecb","isMergeCommit":false,"messageTitle":"Add variants of Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":2}}},{"hash":"c4bd9225cbe9f91ac5a92a2dfd293b054affa8cc","isMergeCommit":false,"messageTitle":"Add cases for variants of Task","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":11}}},{"hash":"98972ec1fc9c95a504c1bc7c3da59aeabfdd268d","isMergeCommit":false,"messageTitle":"Move main method back to Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}},{"hash":"54dba6856c7d4316a0dc345a5a0f2e4e93789375","isMergeCommit":false,"messageTitle":"Update text-ui-test test case","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0}}},{"hash":"d3d7e5dc40fd24f5b43a62c73513d35b7c18040b","isMergeCommit":false,"messageTitle":"Personalize error messages","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"01e88b34c8ebd42ba453e3ec8371b2069e98006e","isMergeCommit":false,"messageTitle":"Add delete functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}}]},{"date":"2023-08-28","commitResults":[{"hash":"c27798705e213ee48e428398cb73494b99ed1755","isMergeCommit":false,"messageTitle":"Add getNumberOfTasks()","messageBody":"Also removed usage of `this` where relevant to maintain consistency.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"987d9422ab5e409ce9b258d2ddda62b6369caa8d","isMergeCommit":false,"messageTitle":"Change Task to abstract class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"20db7ec82f93c5bbe92820e06743996754d842e6","isMergeCommit":false,"messageTitle":"Change certain Duke methods to return an Optional","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":42}}},{"hash":"e72c0b9d224fdefa67434568134a1ff685a85530","isMergeCommit":false,"messageTitle":"Add handleDelete()","messageBody":"This is to handle the printing of extra information for the delete\ncommand.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":11}}},{"hash":"ff58386f9574dfe500b5fa1553174d52d48abc32","isMergeCommit":false,"messageTitle":"Refactor createTask()","messageBody":"Move printing of error message to CliParserService\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":8}}},{"hash":"aab8095ad848681b7be16fe19ca1a3ad887a319d","isMergeCommit":false,"messageTitle":"Fix dependency injection","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":9}}}]},{"date":"2023-08-31","commitResults":[{"hash":"736608e9ee987dbda6bd40086261d8db4f476be7","isMergeCommit":false,"messageTitle":"Change DukeException to a Checked Exception","messageBody":"Update method signature of relevant methods.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"58ece4e869927d44b6140d15a1eb865709ce6d13","isMergeCommit":false,"messageTitle":"Update display message when there are no tasks left","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"461913cf99bb4aa8e1be371661f11c9b8b228e88","isMergeCommit":false,"messageTitle":"Implement Serializable interface for Task","messageBody":"This allows object persistence for Task by making it serializable.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"73574252f47204bc2bb8cc2338de6b5934ecfc96","isMergeCommit":false,"messageTitle":"Change DukeException to a Checked Exception","messageBody":"Update method signature of relevant methods.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"90a9d62a5711372c04d64e65f9119f6af8d9693a","isMergeCommit":false,"messageTitle":"Add FileCorruptedException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"6f4deae12f792adbbad21537d9f7e0bf57976258","isMergeCommit":false,"messageTitle":"Add StorageService class","messageBody":"This class handles the read/write to files for object persistence,\nspecifically taskList.\n","fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":0}}},{"hash":"3bb72351701b76ff4a603a468c4c27a7d2ee29d7","isMergeCommit":false,"messageTitle":"Update StorageService thrown exceptions","messageBody":"StorageService now throws DukeStorageException instead of DukeException\nfor more specificity and different erorr handling.\n","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":64}}},{"hash":"4df571b2e56cd67aa1a05735d6e736c6fbf1e055","isMergeCommit":false,"messageTitle":"Remove caching of taskList","messageBody":"The added complexity is not worth it for the increase in performance,\nbecause the assumption was that the taskList would contain at most 100\nTasks only.\n","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":66}}},{"hash":"ecafb5bb5a8dfb61278bffd6ab4bf9ac16654be6","isMergeCommit":false,"messageTitle":"Fix taskList not loading from storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":8}}},{"hash":"64f6c6a092ca65d8b3b09b0b5108c8bc91ef5675","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027 Add Tasks List persistence ability to Duke.","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2023-09-01","commitResults":[{"hash":"543c90edda40fa00dd8828c0cc3dda42d13952e8","isMergeCommit":false,"messageTitle":"Rework parseTaskCommand() and createTask()","messageBody":"deadline commands must have an end date as argument, prefixed with \u0027by\u0027,\nwhile event commands must have a start date prefixed with \u0027from\u0027, end\ndate prefixed with \u0027to\u0027 as arguments.\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":21}}},{"hash":"b02026cc97a4555007941069752058e8039262ee","isMergeCommit":false,"messageTitle":"Add TimeUtilException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"84e404b4d8994be45083e4e40e9cbec605fba0e8","isMergeCommit":false,"messageTitle":"Add TimeUtil class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"a3c1d94db8333fae4f93e44a1844d8181ba329b2","isMergeCommit":false,"messageTitle":"Update Tasks to take in LocalDate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":11}}}]},{"date":"2023-09-02","commitResults":[{"hash":"98aeb3d21034db00748fcc7f7ab992174a8c8963","isMergeCommit":false,"messageTitle":"Update LocalDateTime display format","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"cd71218a135e3852f153bfd2fb29f0ccf69d89b7","isMergeCommit":false,"messageTitle":"Improve error message for invalid date inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":2}}},{"hash":"28fe2e26d5fbbd7800189915ab3c7da0d7cceb7d","isMergeCommit":false,"messageTitle":"Fix TimeUtil::parseDateTimeString","messageBody":"Fix parseDateTimeString() wrongly parsing yyyy-mm-dd, or inputs\ncontaining Date only, as invalid inputs.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}},{"hash":"9e7beb171a7441b45bcaf545e7010f92038b548a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"Update Duke to parse date inputs.\n","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"eba9ed264840be6f378e747f0e6da4acd94d207a","isMergeCommit":false,"messageTitle":"Add UiService class.","messageBody":"This class is responsible for the printing of messages to the console\noutput, and uses OutputService to handle the formatting and indentation\nof Strings.\n","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":0}}},{"hash":"dc2ac5bb376cbfe4b204c69342fda7e513ad9f79","isMergeCommit":false,"messageTitle":"Replace usage of OutputService to UiService","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":64}}},{"hash":"245be67ad089478f270e399a29eb595162671a37","isMergeCommit":false,"messageTitle":"Add TaskList class","messageBody":"Operations on the TaskList like add, delete, mark etc will be handled by\nTaskList.\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":29}}},{"hash":"bd76b79bb4417c4c83d8d585f45a90cf879a420b","isMergeCommit":false,"messageTitle":"Move Task and related subclasses to package tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":2}}},{"hash":"690a5eb90f0c8e899292dbdd9781bee0aafbc635","isMergeCommit":false,"messageTitle":"Update parsing of special strings into dates","messageBody":"\"today\" and \"tomorrow\" both return the end of their respective days.\nDisplay formatting is updated to display minutes too.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"3a2a64be450a831b6ac129bcc4818794747931be","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"Abstract methods and responsibilities into separate classes for\nseparation of concern.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"bda2ff29e909d0e7887284ed102e7ce5dbdda608","isMergeCommit":false,"messageTitle":"Separate classes into respective packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":44}}},{"hash":"31592e96217b822c626a40f215ab08fa37933f93","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"This is to provide a logical grouping for different classes and their\nresponsibilities, improving readability.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"354828732e83a535e7040922e6f87e93664068bf","isMergeCommit":false,"messageTitle":"Fix wrong display strings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":9}}},{"hash":"3fffbefded2c9891a3e6f5824f849ea65dde9040","isMergeCommit":false,"messageTitle":"Remove support for yyyy MM date formats","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"3f07d63b4eb250c7c615db789d904213cfad9e2f","isMergeCommit":false,"messageTitle":"Add more specific Exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"ebdbb39e35fe4eb5be93b2b6b078a20c2fdaba7b","isMergeCommit":false,"messageTitle":"Add abstract Command and subclasses","messageBody":"Abstracts logic of inputs into individual Commands subclasses.\n","fileTypesAndContributionMap":{"java":{"insertions":187,"deletions":1}}},{"hash":"3119228801fc8b9db855baf473ac9a76a4d8ced6","isMergeCommit":false,"messageTitle":"Update parsing logic to support Command Pattern","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":115,"deletions":66}}},{"hash":"69ded70e9fbbcfd05e99e9b101271d21bf463817","isMergeCommit":false,"messageTitle":"Remove unused fields and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":78}}},{"hash":"3372a29e58d6a7ee0c69291a1c034cfb2b7f2ffa","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 into branch-A-Gradle","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"1457f3a68eef1f96d46e762a104ce8677f80393f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"Add Gradle support to Duke project.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"ef8d5fc8cac2e32278c7b51906bd5c3b7a6b44f4","isMergeCommit":false,"messageTitle":"Add TimeUtil tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":0}}},{"hash":"ea799b38088dd0a9625728776d1b51f3e2d8fca7","isMergeCommit":false,"messageTitle":"Extract out parsing of input to its own method","messageBody":"This is to allow for a more straightforward unit testing of\nCliParserService.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":18}}},{"hash":"8c67cdc721fa25edf2583badd642d062030826f2","isMergeCommit":false,"messageTitle":"Move responsiblity of trimming input","messageBody":"Move from parse() to parseCommandAndArguments(). This is to allow for\nbetter unit testing as well\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"b3962bbbc1ce3ec415535a7ea8138dc8734576f6","isMergeCommit":false,"messageTitle":"Convert parsed commandType to lower case","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"30f3268d864711947c06c060188cd538022686f6","isMergeCommit":false,"messageTitle":"Add CliParserServiceTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":150,"deletions":0}}},{"hash":"d90de50c5f9e477651e4f80feb0dd06657c13bd2","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"Add JUnit tests for CliParserService and TimeUtil, as these are critical\nservice/util classes.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"78de08920f9b762a74cffde358860441832c9044","isMergeCommit":false,"messageTitle":"Add JavaDocs to methods and classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":618,"deletions":38}}},{"hash":"65374d2c5574c096d1831c3bbe4ad536f53eb349","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"Adds JavaDocs to classes and methods. This improves maintainability.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"b65918e0a1b9969746d8f714f5f753718a70c365","isMergeCommit":false,"messageTitle":"Add checkstyle to Gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1}}},{"hash":"50b44b058e2d2f9a35e03d4c796770a440f52f98","isMergeCommit":false,"messageTitle":"Reformat code based on checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"6949e33493b26e68c9872254f8ee3a07677b6a0f","isMergeCommit":false,"messageTitle":"Fix checkstyle violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":171,"deletions":148}}},{"hash":"1abc3bcd04fac793c0a145d921e1b1b518ae67e2","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"Implement checkstyle and fix checkstyle violations.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"bc6cae40ac1093579c03649fc7832cf53f1edecd","isMergeCommit":false,"messageTitle":"Add printFoundTasks in UiService","messageBody":"Refactor printTask in OutputService to formatTaskList for increased\nflexibility.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5}}},{"hash":"670cd85bc1663796cc45f4fbfd439586892d4645","isMergeCommit":false,"messageTitle":"Add find command","messageBody":"find searches the taskList for taskNames containing the given keyword,\nthen prints the matching tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":0}}},{"hash":"0c5578c4e0309dfc7ca4950b7f164f0deae47d93","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"Add find command which allows users to search for tasks based on a\nkeyword.\n","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2023-09-03","commitResults":[{"hash":"61ae94ee739168c438dbb20ba417d31fb447c43e","isMergeCommit":false,"messageTitle":"Add JavaDocs for methods invoked by find command","messageBody":"Fixes CheckStyle violations\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}}]},{"date":"2023-09-05","commitResults":[{"hash":"3c89a10cf73097817197310f0ddf328a39869695","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"55ea565354c1c23695dc5db56f5010ec7bb9c89a","isMergeCommit":false,"messageTitle":"Extract main method from Duke to Main class","messageBody":"This is in preparation to integrate JavaFX with Duke, preventing the\nDuke class from becoming too bloated.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":58,"deletions":27}}}]},{"date":"2023-09-06","commitResults":[{"hash":"877ec1035f852cf22bbff596b442e5d90ae0aa32","isMergeCommit":false,"messageTitle":"Refactor Duke class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":52}}},{"hash":"f0ad6c2fa7360418e8c00fcdbd529b5538909430","isMergeCommit":false,"messageTitle":"Add JavaFX GUI","messageBody":"Refactor existing classes, mainly changing the return type of UiService\nto return a String which is displayed in the GUI window.\n","fileTypesAndContributionMap":{"gradle":{"insertions":8,"deletions":2},"fxml":{"insertions":42,"deletions":0},"java":{"insertions":349,"deletions":124}}},{"hash":"2ab685383950a7db9db8d3d0ce00fb9c45a6ad70","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"Add a GUI to Duke.\n","tags":["Level-10"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"euchangxian":{"java":2196,"md":0,"fxml":42,"sh":0,"bat":0,"gradle":12,"txt":9}},"authorContributionVariance":{"euchangxian":280663.9},"authorDisplayNameMap":{"euchangxian":"CS2103T-F08-3 EU C..XIAN"}}
