[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Badatprogrammiing":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Badatprogrammiing":16,"-":41}},{"path":"data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001f123\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f1\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fabc\u001f","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fxdd\u001f","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Badatprogrammiing":20}},{"path":"src/main/java/duke/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" * Functional interface for an action that takes in a TaskList and Storage object and returns nothing.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"public interface Action {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  public void execute(TaskList taskList, Storage storage, Pane vbox) throws WrongIndexException, EmptyBodyException, InvalidDateException;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":12}},{"path":"src/main/java/duke/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" * Parses the command given by the user and returns a corresponding action.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"public class CommandParser {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a parser to parse input commands","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  public CommandParser() {}","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  private TimeParser parser \u003d new TimeParser();","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"  private Task createTodoTask(String[] words) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"    for (int i \u003d 1; i \u003c words.length; i +\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"      taskName.append(words[i]).append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    return new ToDoTask(taskName.toString().stripTrailing());","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"  private Task createEventTask(String[] words) throws InvalidDateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder startDate \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder endDate \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"    int i \u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"    while (i \u003c words.length \u0026\u0026 !words[i].equals(\"/from\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"      taskName.append(words[i]).append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"      i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"    i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    while (i \u003c words.length \u0026\u0026 !words[i].equals(\"/to\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"      startDate.append(words[i]).append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"      i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"    i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"    while (i \u003c words.length) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"      endDate.append(words[i]).append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"      i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"    return new EventTask(taskName.toString().stripTrailing(),","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"            parser.parseTime(startDate.toString().trim()), parser.parseTime(endDate.toString().trim()));","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"  private Task createDeadlineTask(String[] words) throws InvalidDateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder endDate \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"    int i \u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"    while (i \u003c words.length \u0026\u0026 !words[i].equals(\"/by\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"      taskName.append(words[i]).append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"      i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"    i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"    while (i \u003c words.length) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"      endDate.append(words[i]).append(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"      i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"    return new DeadlineTask(taskName.toString().stripTrailing(), parser.parseTime(endDate.toString().trim()));","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"  private Task createTask(String[] words) throws EmptyBodyException, InvalidDateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"    if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"      throw new EmptyBodyException();","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"    if (words[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"      return this.createTodoTask(words);","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"      return this.createEventTask(words);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"    } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"      return this.createDeadlineTask(words);","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Badatprogrammiing"},"content":"   *  Checks the first word of the input string and returns an Action.","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param command input given by the user","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return action an action to be executed depending on the first word of command","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Badatprogrammiing"},"content":"   * @throws DukeException if input string is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"  public Action parseCommand(String command, Image dukeImage) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"    String[] words \u003d command.trim().split(\"\\\\s\");","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"    if (words[0].equals(\"bye\") \u0026\u0026 words.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"      return (taskList, storage, pane) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"Badatprogrammiing"},"content":"      };","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Badatprogrammiing"},"content":"    } else if (words[0].equals(\"list\") \u0026\u0026 words.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"Badatprogrammiing"},"content":"      return (taskList, Storage, vBox) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Badatprogrammiing"},"content":"        taskList.listTasks(vBox, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"      };","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"Badatprogrammiing"},"content":"    } else if (words[0].equals(\"delete\") \u0026\u0026 words.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"Badatprogrammiing"},"content":"      return (taskList, storage, pane) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"Badatprogrammiing"},"content":"        taskList.deleteTask(words[1], pane, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"Badatprogrammiing"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"Badatprogrammiing"},"content":"      };","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"Badatprogrammiing"},"content":"    } else if (words[0].equals(\"mark\") \u0026\u0026 words.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"Badatprogrammiing"},"content":"      return (taskList, storage, pane) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Badatprogrammiing"},"content":"        taskList.markTask(words[1], pane, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Badatprogrammiing"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"Badatprogrammiing"},"content":"      };","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"Badatprogrammiing"},"content":"    } else if (words[0].equals(\"unmark\") \u0026\u0026 words.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"Badatprogrammiing"},"content":"      return (taskList, storage, pane) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"Badatprogrammiing"},"content":"        taskList.unmarkedTask(words[1], pane, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"Badatprogrammiing"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"Badatprogrammiing"},"content":"      };","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"Badatprogrammiing"},"content":"    } else if ((words[0].equals(\"deadline\") || words[0].equals(\"todo\") || words[0].equals(\"event\"))) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"Badatprogrammiing"},"content":"      return (taskList, storage, pane) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"Badatprogrammiing"},"content":"        taskList.addTask(this.createTask(words), pane, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"Badatprogrammiing"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"Badatprogrammiing"},"content":"      };","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"Badatprogrammiing"},"content":"    } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"Badatprogrammiing"},"content":"      String expr \u003d command.trim().substring(4).trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Badatprogrammiing"},"content":"      return (taskList, storage, pane) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"Badatprogrammiing"},"content":"        taskList.findTasks(expr, pane, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"      };","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"Badatprogrammiing"},"content":"    } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"Badatprogrammiing"},"content":"      throw new InvalidCommandException();","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":128}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" * A subclass of Task that has an end date.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"  private LocalDate endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"  private DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  private DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param endDate the end date of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"  public DeadlineTask(String taskName, LocalDate endDate) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    super(taskName);","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param endDate the end date of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param isCompleted the status of completion","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"  public DeadlineTask(String taskName, LocalDate endDate, boolean isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    super(taskName, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"   * Returns the current state of the task in String for saving purposes.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return the current state of the task in String for saving purposes","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"  @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"  public String saveData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"    char delimiter \u003d 31;","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"    String isCompleted \u003d isCompleted() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    return \"deadline\" + delimiter + isCompleted + delimiter + taskName()","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"            + delimiter + this.endDate.format(this.saveFormatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"   * Returns a string representation of the object.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return a string representation of the object","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + endDate.format(displayFormatter) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":60}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"  private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"  private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"  private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"      FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"      fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"      fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"      fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"      e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"    displayPicture.setImage(img);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"   * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"  private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"    Collections.reverse(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    getChildren().setAll(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"    setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"  public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"    return new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"  public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"    var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"    db.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"    return db;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Badatprogrammiing":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" * A bot that allows creation, deletion of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" * It also can mark and unmarked tasks as completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    private Storage storage \u003d new Storage(\"./data/Duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    private CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    private TaskList taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"    public void greet(Pane pane, Image dukeImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"        ui.greet(pane, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    public void addResponse(String input, Pane pane, Image dukeImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"            Action action \u003d parser.parseCommand(input, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"            action.execute(taskList, storage, pane);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"            pane.getChildren().add(DialogBox.getDukeDialog(e.toString(), dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Badatprogrammiing":34,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * A superclass exception where all other duke exceptions derived from.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"  private String msg;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new exception with the error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param msg the error message that will be displayed","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"  DukeException(String msg) {","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    super(msg);","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    this.msg \u003d msg;","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"   *  Returns a string representation of the object.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return a string representation of the object","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    return msg;","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":29}},{"path":"src/main/java/duke/EmptyBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Exception when the user does not give a tasks description.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public class EmptyBodyException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates an EmptyBodyException error.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  EmptyBodyException() {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    super(\"OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":15}},{"path":"src/main/java/duke/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" * A subclass of Task that has a start and end date.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  private LocalDate startDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"  private LocalDate  endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"  private DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  private DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new Event Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param startDate the start date of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param endDate the end date of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"  public EventTask(String taskName, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    super(taskName);","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    this.startDate \u003d startDate;","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new Event Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param startDate the start date of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param endDate the end date of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param isCompleted the completion status of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"  public EventTask(String taskName, LocalDate startDate, LocalDate endDate, boolean isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    super(taskName, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"    this.startDate \u003d startDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"   * Returns the current state of the task in String for saving purposes.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return the current state of the task in String for saving purposes","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"  @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"  public String saveData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"    char delimiter \u003d 31;","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"    String isCompleted \u003d isCompleted() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"    return \"event\" + delimiter + isCompleted + delimiter + taskName() + delimiter","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"            + this.startDate.format(this.saveFormatter) + delimiter + this.endDate.format(this.saveFormatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"   *  Returns a string representation of the object.","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return a string representation of the object","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + startDate.format(this.displayFormatter) + \" to: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"            + endDate.format(this.displayFormatter) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":65}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Exception to handle invalid user input.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates an InvalidCommandException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  InvalidCommandException() {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":15}},{"path":"src/main/java/duke/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Exception when user inputs an invalid date format.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates an InvalidDate Exception","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"  public InvalidDateException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"    super(\"Invalid date format, enter the dates using: /from dd/MM/yyyy /to dd/MM/yyyy or /by dd/MM/yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Badatprogrammiing":13}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"public class Launcher{","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"    Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Badatprogrammiing":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"  private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"  @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"      FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"      fxmlLoader.setRoot(new AnchorPane());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"      AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"      Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"      Font.loadFont(getClass().getResourceAsStream(\"/styles/RobotoMono.ttf\"), 16);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"      scene.getStylesheets().add(Main.class.getResource(\"/styles/application.css\").toExternalForm());","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"      stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"      stage.setResizable(false);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"      stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"      stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"      e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Badatprogrammiing":39}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"  private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"  private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"  private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"  private Button sendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"  private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"  private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"  private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"  public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"    scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    duke.greet(dialogContainer, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"   * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"  @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"  private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"    String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"    // Add User command","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"    dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"    // Add Duke command","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"    duke.addResponse(input, dialogContainer, dukeImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"    //Clear input","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Badatprogrammiing":50}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":" * A class that loads and save to an external .txt file specified by the path name.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  private String filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a storage that reads and writes from the file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param filePath the location to read and write data","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    this.filePath \u003d filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"  private TimeParser parser \u003d new TimeParser();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"   *  Writes the current state of the task lists into a .txt file","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param tasks a list for tasks to be loaded into","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"  public void saveFile(TaskList tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"      FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"      for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"        fw.write(task.saveData() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"      }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"      fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"      System.out.println(\"     File not found, unable to save\");","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"   * Gets the local save .txt file and read it line by line,","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"   * parsing the lines into a task and adding that to the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return a list that has tasks parsed from a local .txt file","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"  public LinkedList\u003cTask\u003e loadFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"      LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"      File f \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"      f.getParentFile().mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"      f.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"      Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"      while (scanner.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"        String s \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"        char delimiter \u003d 31;","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"        String[] taskData \u003d s.split(String.valueOf(delimiter), -1);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"        boolean isComplete \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"          case \"event\":","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"            tasks.add((new EventTask(taskData[2], parser.parseTime(taskData[3]),","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"                    parser.parseTime(taskData[4]), isComplete)));","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"          case \"todo\":","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"            tasks.add(new ToDoTask(taskData[2], isComplete));","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"          default:","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"            tasks.add(new DeadlineTask(taskData[2], parser.parseTime(taskData[3]), isComplete));","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"      }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"      return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (IOException | InvalidDateException e2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"      File f \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"      System.out.println(f.getAbsolutePath());","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"      System.out.println(\"     Unable to load/find file, using an empty task list\");","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"      return new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":82}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents a task that only contains a start date.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"  private String taskName;","lastModifiedDate":"2023-08-18"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"  private boolean isCompleted;","lastModifiedDate":"2023-08-18"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new Task with the given task name.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  public Task(String taskName) {","lastModifiedDate":"2023-08-18"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    this.taskName \u003d taskName;","lastModifiedDate":"2023-08-18"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-18"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new Task with the given task name.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param isCompleted the completion status of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"  public Task(String taskName, boolean isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    this.taskName \u003d taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"  public abstract String saveData();","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"   * Marks the task as completed","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"  public void markCompleted() {","lastModifiedDate":"2023-08-18"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    this.isCompleted \u003d true;","lastModifiedDate":"2023-08-18"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-18"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"   * Marks the task as not completed","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"  public void markNotCompleted() {","lastModifiedDate":"2023-08-18"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"    this.isCompleted \u003d false;","lastModifiedDate":"2023-08-18"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-18"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"   * Returns the current completion status","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return the current completion status","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"  protected boolean isCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"    return this.isCompleted;","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"  protected String taskName() {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"    return this.taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"   * Returns a string representation of the object.","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return a string representation of the object","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"  public String toString() {","lastModifiedDate":"2023-08-18"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"    if (isCompleted) {","lastModifiedDate":"2023-08-18"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"      return \"[X] \" + taskName;","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"    } else {","lastModifiedDate":"2023-08-18"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"      return \"[ ] \" + taskName;","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-18"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-18"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-18"}],"authorContributionMap":{"Badatprogrammiing":72}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents a list of tasks, and supports methods like add, delete, mark, unmarked.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  private LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new TaskList with the given list.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param tasks the tasks to be created","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  public TaskList(LinkedList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"  public LinkedList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    return this.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"   * List the current state of the tasks list","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"  public void listTasks(Pane pane, Image dukeImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    int i \u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder displayMsg \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"      displayMsg.append(\"    \").append(i).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"      i +\u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"    pane.getChildren().add(DialogBox.getDukeDialog(displayMsg.toString(), dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"   * Adds the task to the list","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param task the task to be added","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"  public void addTask(Task task, Pane pane, Image dukeImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"    String displayMsg \u003d String.format(\"Got it. I\u0027ve added this task:\\n\"+","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"            \"    %s\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"            \"Now you have %s tasks in the list.\", task.toString(), tasks.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"    pane.getChildren().add(DialogBox.getDukeDialog(displayMsg, dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"   * Deletes the task at the specified position","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param index position of task to be deleted","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"   * @throws WrongIndexException when index is out of bounds, or too big to parse","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"  public void deleteTask(String index, Pane pane, Image dukeImage) throws WrongIndexException {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"      String regex \u003d \"\\\\d+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"      if (!index.matches(regex) || Integer.parseInt(index, 10) - 1 \u003c 0","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"              || Integer.parseInt(index, 10) - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"        throw new WrongIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"      }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"      int i \u003d Integer.parseInt(index, 10) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"      Task task \u003d tasks.remove(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"      String displayMsg \u003d String.format(\"Noted. I\u0027ve removed this task:\\n \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"              \"    %s\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"              \"Now you have %s tasks in the list.\", task.toString(), tasks.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"      pane.getChildren().add(DialogBox.getDukeDialog(displayMsg, dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"      throw new WrongIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"   * Marks the task as completed at the specified position","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param index the position of the tasks to be mark completed","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Badatprogrammiing"},"content":"   * @throws WrongIndexException when index is out of bounds, or too big to parse","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Badatprogrammiing"},"content":"  public void markTask(String index, Pane pane, Image dukeImage) throws WrongIndexException {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"Badatprogrammiing"},"content":"      String regex \u003d \"\\\\d+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"      if (!index.matches(regex) || Integer.parseInt(index, 10) - 1 \u003c 0","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"              || Integer.parseInt(index, 10) - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"        throw new WrongIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"      }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"      int i \u003d Integer.parseInt(index, 10) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"Badatprogrammiing"},"content":"      Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"Badatprogrammiing"},"content":"      task.markCompleted();","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"Badatprogrammiing"},"content":"      String displayMsg \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Badatprogrammiing"},"content":"              \"    %s\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"      pane.getChildren().add(DialogBox.getDukeDialog(displayMsg, dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"Badatprogrammiing"},"content":"      throw new WrongIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"Badatprogrammiing"},"content":"   * Unmarked the task as completed at the specified position.","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param index the position of the tasks to be unmarked","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"Badatprogrammiing"},"content":"   * @throws WrongIndexException when index is out of bounds, or too big to parse","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"Badatprogrammiing"},"content":"  public void unmarkedTask(String index, Pane pane, Image dukeImage) throws WrongIndexException {","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"Badatprogrammiing"},"content":"      String regex \u003d \"\\\\d+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"Badatprogrammiing"},"content":"      if (!index.matches(regex) || Integer.parseInt(index, 10) - 1 \u003c 0","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"Badatprogrammiing"},"content":"              || Integer.parseInt(index, 10) - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"Badatprogrammiing"},"content":"        throw new WrongIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"Badatprogrammiing"},"content":"      }","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"Badatprogrammiing"},"content":"      int i \u003d Integer.parseInt(index, 10) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"Badatprogrammiing"},"content":"      Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"Badatprogrammiing"},"content":"      task.markNotCompleted();","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"Badatprogrammiing"},"content":"      String displayMsg \u003d String.format(\"OK, I\u0027ve marked this task as not done yet:\\n \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"Badatprogrammiing"},"content":"              \"    %s\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"      pane.getChildren().add(DialogBox.getDukeDialog(displayMsg, dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"Badatprogrammiing"},"content":"      throw new WrongIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Badatprogrammiing"},"content":"   * Finds all the tasking matching the expression","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param expr the expression to match","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return true if there is a match, false otherwise","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Badatprogrammiing"},"content":"  public boolean findTasks(String expr, Pane pane, Image dukeImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"Badatprogrammiing"},"content":"    StringBuilder displayMsg \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"Badatprogrammiing"},"content":"    if (expr.equals(\"\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"Badatprogrammiing"},"content":"      return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"Badatprogrammiing"},"content":"    boolean match \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"Badatprogrammiing"},"content":"    int i \u003d 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"Badatprogrammiing"},"content":"    Pattern p \u003d Pattern.compile(expr);","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"Badatprogrammiing"},"content":"    for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"Badatprogrammiing"},"content":"      Matcher m \u003d p.matcher(task.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"Badatprogrammiing"},"content":"      if (m.find()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"Badatprogrammiing"},"content":"        displayMsg.append(\"    \").append(i).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"Badatprogrammiing"},"content":"        match \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"Badatprogrammiing"},"content":"      }","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"Badatprogrammiing"},"content":"      i +\u003d 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"Badatprogrammiing"},"content":"    pane.getChildren().add(DialogBox.getDukeDialog(displayMsg.toString(), dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"Badatprogrammiing"},"content":"    return match;","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":155}},{"path":"src/main/java/duke/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" * A parser to parse a String into a LocalDate object.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"public class TimeParser {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a new parser to parse String into LocalDate objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  public TimeParser() {}","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"   * Parse a string into a LocalDate object","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param s string to be parsed","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return LocalDate","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"   * @throws InvalidDateException when String is not in dd/MM/yyyy","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"  public LocalDate parseTime(String s) throws InvalidDateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    try {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"      DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy]\");","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"      return LocalDate.parse(s, formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"      throw new InvalidDateException();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":31}},{"path":"src/main/java/duke/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents a task that only has a task name.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public class ToDoTask  extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a TodoTask with the given task name.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"  public ToDoTask(String taskName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    super(taskName);","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a TodoTask with the given task name.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param taskName the name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"   * @param isCompleted the completion status of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"  public ToDoTask(String taskName, boolean isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    super(taskName, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"   * Returns the current state of the task in String for saving purposes.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return the current state of the task in String for saving purposes","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"  @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"  public String saveData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    char delimiter \u003d 31;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"    String isCompleted \u003d isCompleted() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    return \"todo\" + delimiter + isCompleted + delimiter + taskName() + delimiter;","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"   * Returns a string representation of the object.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"   *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"   * @return a string representation of the object","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":46}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" * Responsible for the miscellaneous console outputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"public class UI {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a UI object that prints out miscellaneous statements.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"  public UI() {}","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"   * Greets the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  public void greet(Pane pane, Image dukeImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    pane.getChildren().add(DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\", dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"   * Says bye to the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"  public void bye(Pane pane, Image dukeImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    pane.getChildren().add(DialogBox.getDukeDialog(\"Bye. Hope to see you again soon!\", dukeImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":31}},{"path":"src/main/java/duke/WrongIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Occurs when index is out of bounds or too big for a task operation.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public class WrongIndexException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"  /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"   * Creates a WrongIndexException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"   */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  WrongIndexException() {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    super(\"    Enter a valid index\");","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":14}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"  styleClass\u003d\"dialog-box\" maxWidth\u003d\"1.7976931348623157E308\"  type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Badatprogrammiing":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"900.0\" prefWidth\u003d\"1600.0\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"845.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"1500.0\" AnchorPane.bottomAnchor\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"1510.0\" layoutY\u003d\"845.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-1.0\" layoutY\u003d\"1.0\" prefHeight\u003d\"835.0\" prefWidth\u003d\"1600\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"-1.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"837.0\" prefWidth\u003d\"1580.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Badatprogrammiing":16}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"  public void loadFile_validFilePathNotEmpty_allFilesLoaded() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    Storage storage \u003d new Storage(\"./src/test/java/duke/StorageTest3Tasks.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    LinkedList\u003cTask\u003e loadedTaskLists \u003d storage.loadFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"    assertEquals(loadedTaskLists.get(0).toString(), \"[T][ ] task\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    assertEquals(loadedTaskLists.get(1).toString(), \"[E][ ] task    task (from: 11 Apr 2000 to: 11 Apr 1999)\");","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    assertEquals(loadedTaskLists.get(2).toString(), \"[D][X] task (by: 11 Apr 2001)\");","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"  void loadFile_validFilePathEmpty_emptyList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    Storage storage \u003d new Storage(\"./src/test/java/duke/StorageTestEmpty.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    LinkedList\u003cTask\u003e loadedTaskLists \u003d storage.loadFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    assertEquals(loadedTaskLists.size(), 0);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":26}},{"path":"src/test/java/duke/StorageTest3Tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001ftask\u001f","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"event\u001f0\u001ftask    task\u001f11/04/2000\u001f11/04/1999","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"deadline\u001f1\u001ftask\u001f11/04/2001","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":3}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"  public void markTask_validIndex_taskMarkCompleted() throws WrongIndexException {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    TaskList taskList \u003d new TaskList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    Task t \u003d new ToDoTask(\"name1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    taskList.addTask(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"    taskList.markTask(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    assertTrue(t.isCompleted());","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"  public void markTask_leftOutOfBounds_exceptionThrown() throws WrongIndexException {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    WrongIndexException e \u003d assertThrows(WrongIndexException.class, () -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"      TaskList taskList \u003d new TaskList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"      Task t \u003d new ToDoTask(\"name1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"      taskList.addTask(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"      taskList.markTask(\"0\");","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    });","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    assertEquals( \"    Enter a valid index\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"  public void markTask_rightOutOfBounds_exceptionThrown() throws WrongIndexException {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    WrongIndexException e \u003d assertThrows(WrongIndexException.class, () -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"      TaskList taskList \u003d new TaskList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"      Task t \u003d new ToDoTask(\"name1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"      taskList.addTask(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"      taskList.markTask(\"2\");","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    });","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    assertEquals( \"    Enter a valid index\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"  public void markTask_largeInteger_exceptionThrown() throws WrongIndexException {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"    WrongIndexException e \u003d assertThrows(WrongIndexException.class, () -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"      TaskList taskList \u003d new TaskList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"      taskList.markTask(\"2000000000000000000000000000000000000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    });","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"    assertEquals( \"    Enter a valid index\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"  void findTask_emptyString_false() {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"    Task t \u003d new ToDoTask(\"name1 name2\");","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"    LinkedList\u003cTask\u003e lists \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"    lists.add(t);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"    TaskList taskList \u003d new TaskList(lists);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"    assertFalse(taskList.findTasks(\"\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"  @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"  void findTask_validString_true() {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"    Task t \u003d new ToDoTask(\"name1 name2\");","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"    LinkedList\u003cTask\u003e lists \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"    lists.add(t);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"    TaskList taskList \u003d new TaskList(lists);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"    assertTrue(taskList.findTasks(\"name1 \"));","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"  }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Badatprogrammiing":70}},{"path":"text-ui-test/data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"todo\u001f0\u001fborrow book\u001f","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Badatprogrammiing":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"todo borrow book","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"deadline return book /by 11/04/2000","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"event project meeting /from 11/04/2000 /to 11/04/2000","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"mark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"unmark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"deadline","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"todo","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"event","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"blah","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"unmark 5000000000000","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"mark -5000000000000","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"mark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"delete 5000000000","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"delete -500000000","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"delete 10","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"delete 2","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"delete 2","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"Badatprogrammiing":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"if exist data\\Duke.txt del data\\Duke.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"javac -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Badatprogrammiing":3,"-":19}}]
