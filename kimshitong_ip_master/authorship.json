[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"//    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"//    archiveClassifier \u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"kimshitong":22}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"T;help;false;null","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"# KimDuke User Guide","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"### Creating, Listing and Deleting Tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"Variety of tasks like todo, event, deadline are supported","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"### DateTime Supported","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"Accepts DateTime Format, Convert into Readable Format.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"### Tag Supports","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"Supports to add or remove tag to the tasks for categorising purpose","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"### 1. `todo` - Create ToDo Task","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"Register new toDo task into current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"`todo [task]`","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"`todo Study CS2103T Chapter 2`","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"[T][] Study CS2103T Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"Now you have 2 tasks in the list.\"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful :","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"OOPS!!! The description of a ToDo cannot be empty.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"### 2. `deadline` - Create Deadline Task","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"Register new Deadline task with deadline  into current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"`deadline [task] /by [dd/mm/yyyy HHmm]`","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"`deadline CS2103T iP deadline /by 20/09/2023 2359`","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"[D][] CS2103 iP deadline (by: 13:00 Sep 21 2023)","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"Now you have 2 tasks in the list.\"","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful :","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"OOPS!!! The argument for the deadline is invalid!","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"Please use this format instead : deadline [task] /by [dd/mm/yyyy HHmm]","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"### 3. `event` - Create Event Task","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"Register new Event task with fromDate and toDate into current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"`event [task] /from [dd/mm/yyyy HHmm] /to [dd/mm/yyyy HHmm]`","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"`event CS2102 Exam /from 21/09/2023 1300 /to 21/09/2023 1500`","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"[E][] CS2102 Exam (from: 13:00 Sep 21 2023 to: 15:00 Sep 21 2023)","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"Now you have 2 tasks in the list.\"","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful :","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"OOPS!!! The argument for the event is invalid! ","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"Please use this format instead : event [task] /from [dd/mm/yyyy HHmm] /to [dd/mm/yyyy HHmm]","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"### 4. `list` - List Tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"List all existing tasks in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"Here is your upcoming tasks (total : 2):","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"1. [T][] CS2101 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"2. [T][] CS2103 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"### 5. `remove` - Remove Tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"Remove specific tasks according to the index (start from 1 based on list) in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"`remove [index]`","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"`remove 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"[T][] CS2101 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"OOPS!!! Invalid Index!","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"### 6. `find` - Find Tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"Find tasks according to the keyword (contains) in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"`find [keyword]`","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"`find Chapter`","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"1. [T][] CS2101 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"2. [T][] CS2103 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"### 7. `mark` - Mark Task as Done","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"Mark specific tasks according to the index (start from 1 based on list) in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"`mark [index]`","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"`mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"[T][/] CS2101 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"OOPS!!! Invalid Index!","lastModifiedDate":"2023-09-21"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"### 8. `unmark` - Mark Task as Done","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"Mark specific tasks according to the index (start from 1 based on list) in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"`unmark [index]`","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"`unmark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"[T][] CS2101 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":214,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"OOPS!!! Invalid Index!","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"kimshitong"},"content":"### 9. `addTag` - Add Tag to Task","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"kimshitong"},"content":"Add Tag to Task according to the index (start from 1 based on list) in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":224,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":225,"author":{"gitId":"kimshitong"},"content":"`addTag [index] [tagName]`","lastModifiedDate":"2023-09-21"},{"lineNumber":226,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":230,"author":{"gitId":"kimshitong"},"content":"`addTag 1 study`","lastModifiedDate":"2023-09-21"},{"lineNumber":231,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":232,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":233,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":234,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":235,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":236,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":237,"author":{"gitId":"kimshitong"},"content":"Tag study has been setup on CS2101 Chapter 2!","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"kimshitong"},"content":"[T][]#study CS2101 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":243,"author":{"gitId":"kimshitong"},"content":"OOPS!!! The argument for the addTag is invalid! \\n Please use this format instead : addTag [taskIndex] [tagName]","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"kimshitong"},"content":"### 10. `removeTag` - Remove Tag from Task","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"kimshitong"},"content":"Remove Tag from Task according to the index (start from 1 based on list) in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":249,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":251,"author":{"gitId":"kimshitong"},"content":"`removeTag [index]`","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":253,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":255,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"kimshitong"},"content":"`removeTag 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":257,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":258,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":259,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":260,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":261,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":262,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":263,"author":{"gitId":"kimshitong"},"content":"Tag is successfully being removed","lastModifiedDate":"2023-09-21"},{"lineNumber":264,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":265,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful","lastModifiedDate":"2023-09-21"},{"lineNumber":266,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":267,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":268,"author":{"gitId":"kimshitong"},"content":"OOPS!!! The argument for the removeTag is invalid!","lastModifiedDate":"2023-09-21"},{"lineNumber":269,"author":{"gitId":"kimshitong"},"content":"Please use this format instead : removeTag [taskIndex] [tagName]","lastModifiedDate":"2023-09-21"},{"lineNumber":270,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":271,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":272,"author":{"gitId":"kimshitong"},"content":"### 11. `listTag` - Remove Tag to Task","lastModifiedDate":"2023-09-21"},{"lineNumber":273,"author":{"gitId":"kimshitong"},"content":"List Tag based on tagName in the current database.","lastModifiedDate":"2023-09-21"},{"lineNumber":274,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":275,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":276,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":277,"author":{"gitId":"kimshitong"},"content":"`listTag [tagName]`","lastModifiedDate":"2023-09-21"},{"lineNumber":278,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":279,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":280,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":281,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":282,"author":{"gitId":"kimshitong"},"content":"`listTag study`","lastModifiedDate":"2023-09-21"},{"lineNumber":283,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":284,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":285,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":286,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":287,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":288,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":289,"author":{"gitId":"kimshitong"},"content":"Here are the matching tasks according to your tag ( study ) in your list:","lastModifiedDate":"2023-09-21"},{"lineNumber":290,"author":{"gitId":"kimshitong"},"content":"1. [T][]#study CS2101 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":291,"author":{"gitId":"kimshitong"},"content":"2. [T][]#study CS2103 Chapter 2","lastModifiedDate":"2023-09-21"},{"lineNumber":292,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":293,"author":{"gitId":"kimshitong"},"content":"* Unsuccessful","lastModifiedDate":"2023-09-21"},{"lineNumber":294,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":295,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":296,"author":{"gitId":"kimshitong"},"content":"OOPS!!! The argument for the listTag is invalid or your tag is invalid! ","lastModifiedDate":"2023-09-21"},{"lineNumber":297,"author":{"gitId":"kimshitong"},"content":"Please use this format instead : listTag [tagName]\"","lastModifiedDate":"2023-09-21"},{"lineNumber":298,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":299,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":300,"author":{"gitId":"kimshitong"},"content":"### 12. `save` - Save Tasks in File Database","lastModifiedDate":"2023-09-21"},{"lineNumber":301,"author":{"gitId":"kimshitong"},"content":"Update and Save current database into the file database.","lastModifiedDate":"2023-09-21"},{"lineNumber":302,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":303,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":304,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":305,"author":{"gitId":"kimshitong"},"content":"`save`","lastModifiedDate":"2023-09-21"},{"lineNumber":306,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":307,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":308,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":309,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":310,"author":{"gitId":"kimshitong"},"content":"`save`","lastModifiedDate":"2023-09-21"},{"lineNumber":311,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":312,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":313,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":314,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":315,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":316,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":317,"author":{"gitId":"kimshitong"},"content":"Task Data is successfully saved into File Database","lastModifiedDate":"2023-09-21"},{"lineNumber":318,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":319,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":320,"author":{"gitId":"kimshitong"},"content":"### 13. `clear` - Clear Tasks in File Database","lastModifiedDate":"2023-09-21"},{"lineNumber":321,"author":{"gitId":"kimshitong"},"content":"Clear tasks into the file database.","lastModifiedDate":"2023-09-21"},{"lineNumber":322,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":323,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":324,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":325,"author":{"gitId":"kimshitong"},"content":"`clear`","lastModifiedDate":"2023-09-21"},{"lineNumber":326,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":327,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":328,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":329,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":330,"author":{"gitId":"kimshitong"},"content":"`clear`","lastModifiedDate":"2023-09-21"},{"lineNumber":331,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":332,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":333,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":334,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":335,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":336,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":337,"author":{"gitId":"kimshitong"},"content":"All Tasks is successfully cleared, use command \"save\" to update changes in File Database","lastModifiedDate":"2023-09-21"},{"lineNumber":338,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":339,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":340,"author":{"gitId":"kimshitong"},"content":"### 14. `help` - User Guide Website","lastModifiedDate":"2023-09-21"},{"lineNumber":341,"author":{"gitId":"kimshitong"},"content":"Retrieve Helpful User Guide Website.","lastModifiedDate":"2023-09-21"},{"lineNumber":342,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":343,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":344,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":345,"author":{"gitId":"kimshitong"},"content":"`help`","lastModifiedDate":"2023-09-21"},{"lineNumber":346,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":347,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":348,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":349,"author":{"gitId":"kimshitong"},"content":"`help`","lastModifiedDate":"2023-09-21"},{"lineNumber":350,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":351,"author":{"gitId":"kimshitong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":352,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":353,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":354,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":355,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":356,"author":{"gitId":"kimshitong"},"content":"You can visit our product website :","lastModifiedDate":"2023-09-21"},{"lineNumber":357,"author":{"gitId":"kimshitong"},"content":"https://github.com/kimshitong/ip","lastModifiedDate":"2023-09-21"},{"lineNumber":358,"author":{"gitId":"kimshitong"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":359,"author":{"gitId":"kimshitong"},"content":"### 15. `bye` - Save and Close Application","lastModifiedDate":"2023-09-21"},{"lineNumber":360,"author":{"gitId":"kimshitong"},"content":"Save and Close Down Application","lastModifiedDate":"2023-09-21"},{"lineNumber":361,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":362,"author":{"gitId":"kimshitong"},"content":"Usage format:","lastModifiedDate":"2023-09-21"},{"lineNumber":363,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":364,"author":{"gitId":"kimshitong"},"content":"`bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":366,"author":{"gitId":"kimshitong"},"content":"Example Usage :","lastModifiedDate":"2023-09-21"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":368,"author":{"gitId":"kimshitong"},"content":"`bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":372,"author":{"gitId":"kimshitong"},"content":"* Successful","lastModifiedDate":"2023-09-21"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":374,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":375,"author":{"gitId":"kimshitong"},"content":"All Tasks is successfully cleared, use command \"save\" to update changes in File Database","lastModifiedDate":"2023-09-21"},{"lineNumber":376,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":18,"kimshitong":358}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import duke.task.TaskArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":" * The main class for the Duke chatbot application.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    private TaskArray taskArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    public final static String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    private boolean end \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    private static Duke globalDuke \u003d new Duke();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Kim.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        this(\"./data/tasks.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"    public static Duke getGlobalDuke() {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        return globalDuke;","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        Launcher.main(args);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"     * Constructs a Duke object with the given file path for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The file path to use for storing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"            this.taskArrayList \u003d storage.load();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"            //ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"            this.taskArrayList \u003d new TaskArray();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"     * Runs the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        Ui.greetFunction(\"KimDuke\");","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        ui.helpFunction();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        taskArrayList \u003d ui.runTask(taskArrayList);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        storage.upload(taskArrayList);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"     * Return response from Duke after processing the input and also modify if user input is bye.","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"     * @param input The input from user.","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        String output \u003d ui.runGUITask(taskArrayList,input);","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        if (output.equals(ui.byeFunction())) {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"            end \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"        if (output.equals(ui.byeFunction())) {","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"            end \u003d true;","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"        return \"KimDuke : \" + output;","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"    public static String saveData(){","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        globalDuke.storage.upload(globalDuke.taskArrayList);","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        return \"Task Data is successfully saved into File Database\";","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"    public static String clearData(){","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        globalDuke.taskArrayList \u003d new TaskArray();","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        return \"All Tasks is successfully cleared, use command \\\"save\\\" to update changes in File Database\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"    public static TaskArray getTaskArrayList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"        return globalDuke.taskArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"    public boolean isEnd(){","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        return end;","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":6,"kimshitong":118}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"import duke.ui.Main;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    public Launcher(){","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kimshitong":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":" *  This Class is mainly dealing with user input and logic process","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    private String input;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    private String[] inputArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * Constructs a Parser based on the user input and register user\u0027s input and sliced input","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * @param input input from user","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        inputArray\u003d this.input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     * Return input that has been pre-processed become sliced Array","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"     * @return inputArray","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    public String[] parseInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        return inputArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"     * Return command after parsing the input","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"     * @return the command to be done : todo deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public String getCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        return parseInput()[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"     * Return index after parsing the input like for mark/unmark index based on user","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"     * @return the index has been registered","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"    public String getIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        assert inputArray.length \u003c 2 : \"Parser Assume there the inputArray have larger than 2\";","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        return parseInput()[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    public Task processEvent() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        Integer startIndex \u003d -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        String extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        boolean gotFrom \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        boolean gotTo \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        //Extracting Task, date for /from and /to","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c inputArray.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"            if (inputArray[i].equals(\"/from\") \u0026\u0026 startIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"                startIndex \u003d i;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"                extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, i ));","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"                gotFrom \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"            } else if (inputArray[i].equals(\"/to\") \u0026\u0026 startIndex !\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"                endDate \u003d String.join(\" \", Arrays.copyOfRange(inputArray, i+1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"                startDate \u003d String.join(\" \", Arrays.copyOfRange(inputArray, startIndex + 1, i));","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                gotTo \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        assert gotFrom: \"There is no /from in Event\";","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        assert gotTo: \"There is no /to in Event\";","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        assert gotFrom \u0026\u0026 gotTo: \"Incomplete From and To Event\";","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        try{","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"            LocalDateTime formattedStartDate \u003d convertDateTime(startDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"            LocalDateTime formattedEndDate \u003d convertDateTime(endDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"            Task newTask \u003d new Event(extractedTask,formattedStartDate,formattedEndDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"            return newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"     * Convert the LocalDateTime based on String formatted input","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"     * @param input the input has to be format of dd-mm-yyyy HHmm, example : \"02/12/2019 1800\"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"     * @return The \"translated\" datetime based on input","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"    public LocalDateTime convertDateTime(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        return dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"     * ProcessDeadline based on the userinput, slicing and categorise with text, dueDate","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"     * then create and return a deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"     * @return Deadline Task","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"    public Task processDeadline() {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        String dueDate \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"        String extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"        boolean existBy \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c inputArray.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"            if (inputArray[i].equals(\"/by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"                dueDate \u003d String.join(\" \", Arrays.copyOfRange(inputArray, i+1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"                extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, i));","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"                existBy \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        assert existBy: \"There is no \u0027/by\u0027 in the deadline\";","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"            LocalDateTime formattedDeadlineDate \u003d convertDateTime(dueDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"            Task newTask \u003d new Deadline(extractedTask,formattedDeadlineDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"            return newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"     * ProcessToDo based on the userinput, slicing, save and create todo task","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"     * @return Todo Task","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"    public Task processToDo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"        String extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"        Task newTask \u003d new ToDo(extractedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"        return newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"    public Tag processGetTag() {","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"        return Tag.generateTag(inputArray[2]);","lastModifiedDate":"2023-09-14"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"    public int processTagGetTaskIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-09-14"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"            return index - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"    public Tag processListTag() {","lastModifiedDate":"2023-09-14"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-14"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"        String tagName \u003d inputArray[1];","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"        if (!Tag.existTag(tagName)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"        return Tag.generateTag(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"    public String getExtracted() {","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"            return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"        String extractedWord \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"kimshitong"},"content":"        return extractedWord;","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"kimshitong"},"content":"     * Return an Integer Index to be marked based on String input, and -1 if invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"     * @return Integer Index to be marked","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"kimshitong"},"content":"    public int processMarkIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"            //from string to index","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"            return index;","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"kimshitong"},"content":"     * Return an Integer Index to be unmarked based on String input, and -1 if invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"kimshitong"},"content":"     * @return Integer Index to be unmarked","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"kimshitong"},"content":"    public int processUnmarkIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"kimshitong"},"content":"            return index;","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"kimshitong"},"content":"     * Return an Integer Index to be deleted based on String input, and -1 if invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"kimshitong"},"content":"     * @return Integer Index to be deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"kimshitong"},"content":"    public int processRemoveIndex() {","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"kimshitong"},"content":"            return index;","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":251,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":256,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":257,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":259,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":260}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * This class handles the storage and retrieval of tasks to and from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The path of the file to be used for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * Loads tasks from the file and returns a TaskArray containing the parsed tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"     * @return A TaskArray containing the loaded tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public TaskArray load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        // Create the folder/file if it doesn\u0027t exist","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        createFolder();","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        createFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList();","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cString\u003e toBeProcessedArray \u003d scanFile(this.filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        return parseData(toBeProcessedArray);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"     * Creates a new file at the specified file path if it doesn\u0027t exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The path of the file to be created.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     * @return True if the file already exists, false if a new file was created.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public boolean createFile() {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"File already exists.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        System.out.println(\"File created successfully.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"     * Creates a folder at the specified path if it doesn\u0027t exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"     * @param folderPath The path of the folder to be created.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"     * @return True if the folder already exists, false if a new folder was created.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"    public boolean createFolder() {","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        File folder \u003d new File(filePath).getParentFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        if (folder.exists()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"Folder already exists.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"        boolean folderCreated \u003d folder.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        if (folderCreated) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"Folder created successfully.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"Failed to create folder.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"     * Scans the specified file and returns its contents as an ArrayList of lines.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"     * @param fileName The name of the file to be scanned.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"     * @return An ArrayList containing the lines of the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"    public ArrayList\u003cString\u003e scanFile(String fileName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"                lines.add(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        return lines;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"     * Parses the data from the input list and returns a TaskArray containing the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"     * @param inputList The ArrayList of strings to be parsed into tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"     * @return A TaskArray containing the parsed tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"    public TaskArray parseData(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        ","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        for (String input : inputList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"            Task newTask \u003d inputToTask(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"            if (newTask !\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"                taskArrayList.add(newTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        return new TaskArray(taskArrayList);","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"    public Task inputToTask(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"        String[] parts \u003d input.split(\";\");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"        String text \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        boolean checked \u003d parts[2].equals(\"true\");","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"        Tag tag \u003d Tag.generateTag(parts[3]);","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"                return new ToDo(text,checked,tag);","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"                LocalDateTime startDate \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"                LocalDateTime endDate \u003d LocalDateTime.parse(parts[5]);","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"                return new Event(text,startDate,endDate,checked,tag);","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"                LocalDateTime dueDate \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"                return new Deadline(text,dueDate,checked,tag);","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"        return null;","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"     * Formats the tasks from the TaskArray into an ArrayList of strings.","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"     * @param taskArray The TaskArray containing the tasks to be formatted.","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"     * @return An ArrayList of strings representing the formatted tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"    public ArrayList\u003cString\u003e formatData(TaskArray taskArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d taskArray.getTaskArrayList();","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"            String input \u003d task.getParsedTask();","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"            output.add(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"        assert output.size() \u003d\u003d taskArrayList.size(): \"Not All Data in Task Array being formatted into Output\";","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"     * Writes the formatted data from the inputArray into the specified file.","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"     * @param inputArray The ArrayList of strings to be written to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The path of the file to write the data to.","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"    public void inputFile(ArrayList\u003cString\u003e inputArray, String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"            for (String line : inputArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"                writer.write(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"                writer.newLine(); // Add a newline after each line","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"            writer.close(); // Close the writer to flush changes","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"     * Uploads the data from the TaskArray to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"     * @param taskArray The TaskArray containing the tasks to be uploaded.","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"    public void upload(TaskArray taskArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"        inputFile(formatData(taskArray),this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":207}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with text, dueDate, set type \"T\" with super constructor from Task","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"     * @param dueDate The dueDate of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public Deadline (String text, LocalDateTime dueDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"        super(text);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"D\");","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with the given text and checked status also set Type as \"T\"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"     * @param dueDate The dueDate of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public Deadline (String text, LocalDateTime dueDate,boolean checked, Tag tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        super(text,checked,tag);","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"D\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"     * Gets the formatted text including type, checked status, formatted startDate \u0026 endDate, and text description.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"     * @return The formatted text of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    public String getTypeCheckedText() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        String formattedDateTime \u003d dueDate.format(formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        String result \u003d getType() + getChecked() + \" \" + getText() + \" (by: \" + formattedDateTime+\")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s data in a parsed format to be imputed into our local file","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"     * @return The parsed data of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        String result \u003d super.getParsedTask() + \";\" + this.dueDate;","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kimshitong":64}},{"path":"src/main/java/duke/task/EmptyTag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"public class EmptyTag extends Tag{","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"    public EmptyTag() {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"        super(null);","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    public String getTagName() {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"        return \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTagName() {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"        return \"null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    public String getHashedTagName() {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        return \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kimshitong":22}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with text,startDate,endDate, set type \"T\" with super constructor from Task","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     * @param startDate The startDate of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     * @param endDate The endDate of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    public Event(String text, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        super(text);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        super.getText();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"E\");","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"        this.endDate\u003d endDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with the given text and checked status also set Type as \"E\"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"     * @param startDate The startDate of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"     * @param endDate The endDate of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    public Event(String text, LocalDateTime startDate, LocalDateTime endDate, boolean checked,Tag tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        super(text,checked,tag);","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        super.getText();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"E\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        this.endDate\u003d endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"     * Gets the formatted text including type, checked status, formatted startDate \u0026 endDate, and text description.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     * @return The formatted text of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public String getTypeCheckedText() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        String formattedStartDateTime \u003d startDate.format(formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        String formattedEndDateTime \u003d endDate.format(formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        String result \u003d getType() + getChecked() + \" \" + getText() + \" (from: \" + formattedStartDateTime + \" to: \"+ formattedEndDateTime+\")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s data in a parsed format to be imputed into our local file","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"     * @return The parsed data of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        String result \u003d super.getParsedTask() + \";\" + this.startDate + \";\" + this.endDate;","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kimshitong":72}},{"path":"src/main/java/duke/task/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"public class Tag {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"    private String tagName;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    private static HashMap\u003cString, Tag\u003e tagHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"    private static HashMap\u003cTag, ArrayList\u003cTask\u003e\u003e tagTaskArrayHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    private static Tag emptyTag\u003d new EmptyTag();","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    protected Tag(String tagName) {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    public String getTagName() {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        return tagName;","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    public String getHashedTagName() {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        return \"#\" + tagName;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTagName() {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        return tagName;","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    public static boolean existTag(String tagName) {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"        return tagHashMap.containsKey(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public static Tag generateTag(String tagName) {","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        if(tagName \u003d\u003d null || tagName.equals(\"\") || tagName.equals(\"null\")){","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"            return emptyTag;","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        if(!tagHashMap.containsKey(tagName)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            Tag newTag \u003d new Tag(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"            tagHashMap.put(tagName, newTag);","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        return tagHashMap.get(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public static String removeTag(String tagName) {","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        if(!tagHashMap.containsKey(tagName)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"            return \"Unable to Find Tag\";","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        Tag tag \u003d tagHashMap.get(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003dtagTaskArrayHashMap.get(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        tagHashMap.remove(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        if (taskArrayList !\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"            for( Task task : taskArrayList) {","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"                task.removeTag();","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        return \"Done Removing Tag\";","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kimshitong":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"    private String text;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"    private String type \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"    private boolean checked;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    private Tag tag \u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Task object with the given text and sets checked status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    public Task(String text) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        this.checked \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d Tag.generateTag(null);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Task object with the given text and checked status.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public Task(String text,boolean checked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        this.checked \u003d checked;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d Tag.generateTag(null);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    public Task(String text,boolean checked, Tag tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        this.checked \u003d checked;","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     * Gets the text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     * @return The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public String getText(){","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        return text;","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"     * Gets a string representation of the checked status.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"     * @return A string representing the checked status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    public String getChecked() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        if (checked) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"            return \"[/]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        } else{","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s status text including its checked status and text description.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"     * @return The task\u0027s status text.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    public String getStatusText() {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        String result \u003d getChecked() + \" \" + getText();","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"     * Gets the type of the task enclosed in brackets.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"    public String getType() {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        String result \u003d \"[\" + type +\"]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"     * Gets the formatted text including type, checked status, and text description.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"     * @return The formatted text of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"    public String getTypeCheckedText() {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"        String result;","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        if(tag \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"            result \u003d getType() + getChecked() + \" \" + getText();","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"            return result;","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        result \u003d getType() + getChecked() + tag.getHashedTagName() + \" \" + getText();","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"    public String mark() {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        checked \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + getStatusText();","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"     * Unmarks the task as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"    public String unmark() {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        checked \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + getStatusText();","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"     * Sets the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"     * @param text The type to set for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"    public void setType(String text) {","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        type \u003d text;","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s data in a parsed format to be imputed into our local file","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"     * @return The parsed data of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"        String result \u003d this.type + \";\" + this.text + \";\" + this.checked + \";\" + this.tag.getParsedTagName();","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"    public String setTag(String tagName) {","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d Tag.generateTag(tagName);","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"        return \"Tag \" + tag.getTagName() + \" has been setup!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"    public String setTag(Tag tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"        return \"Tag \" + tag.getTagName() + \" has been setup on \"+this.text+\" !\\n\" + getTypeCheckedText() ;","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"    public Tag getTag() {","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"        return getTag();","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"    public boolean containsTag(Tag tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"        return this.tag \u003d\u003d tag;","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"    public String removeTag() {","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"        return \"Tag is successfully being removed!\";","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kimshitong":159}},{"path":"src/main/java/duke/task/TaskArray.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":" * This class represents a list of tasks and provides methods to manipulate and display the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"public class TaskArray {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     * Constructs an empty TaskArray.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    public TaskArray() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     * Constructs a TaskArray with the given initial list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     * @param array The initial list of tasks to populate the TaskArray.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    public TaskArray(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        taskArrayList \u003d array;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"     * Prints the list of tasks along with their indexes.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    public String printTaskArrayList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"Here is your upcoming tasks (total : \" + getTaskCount() + \"):\";","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++ ) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"            output +\u003d \"\\n\" + index + \": \" + taskArrayList.get(i).getTypeCheckedText();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     * Adds a task to the TaskArray and prints a confirmation message.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     * @param task The task to be added to the TaskArray.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        taskArrayList.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        String word \u003d \"Got it. I\u0027ve added this task:\\n\" + task.getTypeCheckedText();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        word +\u003d \"\\nNow you have \" + getTaskCount()+\" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        return word;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        return taskArrayList.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"     * Returns the number of tasks in the TaskArray.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"     * @return The number of tasks in the TaskArray.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        return taskArrayList.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"     * Removes a task from the TaskArray at the specified index and prints a confirmation message.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"    public String removeTask(int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        if (index \u003c 0 \u0026\u0026 index \u003e\u003d taskArrayList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"            output \u003d \"Invalid Index\";","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"            return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"        Task removingTask \u003d taskArrayList.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        taskArrayList.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        output \u003d \"Noted. I\u0027ve removed this task:\\n\" + removingTask.getTypeCheckedText() + \"\\nNow you have \" + getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"    public String printFind(String arg) {","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e tempTaskArraylist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"            if (task.getText().contains(arg)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"                tempTaskArraylist.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c tempTaskArraylist.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"            output +\u003d (\"\\n\" + index + \".\" + tempTaskArraylist.get(i).getTypeCheckedText());","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"    public String printByTag(Tag tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e tempTaskArraylist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"            if (task.containsTag(tag)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"                tempTaskArraylist.add(task);","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"Here are the matching tasks according to your tag ( \" + tag.getTagName() + \" ) in your list:\";","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c tempTaskArraylist.size(); i++) {","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"            output +\u003d (\"\\n\" + index + \".\" + tempTaskArraylist.get(i).getTypeCheckedText());","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"     * Returns the list of tasks in the TaskArray.","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"     * @return The list of tasks in the TaskArray.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        return taskArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kimshitong":139}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"     * Creates a new \u0027ToDo\u0027 object with text and set type \"T\" with super constructor from Task","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"    public ToDo (String text) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"        super(text);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"T\");","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"     * Creates a new todo object with the given text and checked status also set Type as \"T\"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public ToDo (String text,boolean checked,Tag tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        super(text,checked,tag);","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"T\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kimshitong":28}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    protected DialogBox(String text, Image img,String styleClassName) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace(); ","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        getStyleClass().add(styleClassName);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    protected void flip() {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kimshitong":58}},{"path":"src/main/java/duke/ui/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"public class DukeDialogBox extends DialogBox {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    protected DukeDialogBox(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        super(text,img,\"duke-dialog\");","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        super.flip();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    public static DialogBox createDialog(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        return new DukeDialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kimshitong":32}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    private Duke duke \u003d Duke.getGlobalDuke();","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    public Main(){}","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"            stage.setTitle(\"Welcome to KimDuke\");","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/application.css\").toExternalForm());","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kimshitong":38}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    private boolean end \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Kim.jpg\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                DukeDialogBox.createDialog(Ui.greetFunction(\"KimDuke\"), dukeImage)","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"                UserDialogBox.createDialog(input, userImage),","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"                DukeDialogBox.createDialog(response, dukeImage)","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        if(duke.isEnd()){","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"            duke.saveData();","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"            Thread delayThread \u003d new Thread(() -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"                    Thread.sleep(3000);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"            });","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"            delayThread.start();","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kimshitong":75}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import duke.parser.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    String name;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"     * The Ui class handles interactions with the user interface, displaying messages and receiving inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     * Runs the task processing loop, taking user inputs and performing corresponding actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * @param oriTaskArray The original TaskArray containing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     * @return The updated TaskArray after processing user inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    public TaskArray runTask(TaskArray oriTaskArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        TaskArray taskArray \u003d oriTaskArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        //Requesting Input and Redirect to Parser","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"        Parser input \u003d new Parser(acceptInput(scanner));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        //Repeating Asking User if Not Equals Bye","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        String command \u003d input.getCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"                case \"help\":","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                    helpFunction();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"                case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"                    taskArray.printTaskArrayList();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"                case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"                    taskArray.printFind(input.getExtracted());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"                    int deleteIndex \u003d input.processRemoveIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"                    if (deleteIndex \u003e\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"                        taskArray.removeTask(deleteIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"                        printInvalidArgIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"                        continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"                    int markIndex \u003d input.processMarkIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"                    if (markIndex \u003e\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"                        taskArray.get(markIndex - 1).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"                        printInvalidArgIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"                        continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"                    int unmarkIndex \u003d input.processUnmarkIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"                    if (unmarkIndex \u003e\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"                        taskArray.get(unmarkIndex - 1).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"                        printInvalidArgIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"                        continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"                    Task toDo \u003d input.processToDo();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"                    if (toDo \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"                        printInsufficientArgToDo();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"                        taskArray.add(toDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"                    Task deadlineTask \u003d input.processDeadline();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"                    if (deadlineTask \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"                        printInsufficientArgDeadline();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"                        taskArray.add(deadlineTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"                case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"                    Task eventTask \u003d input.processEvent();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"                    if (eventTask \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"                        printInsufficientArgEvent();","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"                        taskArray.add(eventTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"                default:","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"                    printInvalidArg();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"            input \u003d new Parser(acceptInput(scanner));","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"            command \u003d input.getCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        scanner.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        byeFunction();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        return taskArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"    public String runGUITask(TaskArray oriTaskArray, String inputString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        //Requesting Input and Redirect to Parser","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        Parser input \u003d new Parser(inputString);","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"        //Repeating Asking User if Not Equals Bye","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        String command \u003d input.getCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        switch (command) {","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"            case \"help\":","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"                return helpFunction();","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"            case \"save\":","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"                return Duke.saveData();","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"            case \"clear\":","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"                return Duke.clearData();","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"            case \"list\":","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.printTaskArrayList();","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"            case \"find\":","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.printFind(input.getExtracted());","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"            case \"remove\":","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"                int removeIndex \u003d input.processRemoveIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"                if (removeIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.removeTask(removeIndex - 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidArgIndex();","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"            case \"addTag\":","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"                int addingTaskIndex \u003d input.processTagGetTaskIndex();","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"                Tag tagForAddTag \u003d input.processGetTag();","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"                if (addingTaskIndex \u003d\u003d -1 || tagForAddTag \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidAddTagArg();","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.get(addingTaskIndex).setTag(tagForAddTag);","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"            case \"removeTag\":","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"                int removingTaskIndex \u003d input.processTagGetTaskIndex();","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"                if (removingTaskIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidRemoveTagIndex();","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.get(removingTaskIndex).removeTag();","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"            case \"listTag\":","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"                Tag tagForListTag \u003d input.processListTag();","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"                if (tagForListTag \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidListTaskArg();","lastModifiedDate":"2023-09-14"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.printByTag(tagForListTag);","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"                int markIndex \u003d input.processMarkIndex();","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"                if (markIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.get(markIndex - 1).mark();","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidArgIndex();","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"                int unmarkIndex \u003d input.processUnmarkIndex();","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"                if (unmarkIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.get(unmarkIndex - 1).unmark();","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidArgIndex();","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"                Task toDo \u003d input.processToDo();","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"                if (toDo \u003d\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"                    return printInsufficientArgToDo();","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.add(toDo);","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"                Task deadlineTask \u003d input.processDeadline();","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"                if (deadlineTask \u003d\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"                    return printInsufficientArgDeadline();","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.add(deadlineTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"            case \"event\":","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"                Task eventTask \u003d input.processEvent();","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"                if (eventTask \u003d\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"                    return printInsufficientArgEvent();","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.add(eventTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"                return byeFunction();","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"            default:","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"                return printInvalidArg();","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":207,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":210,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"     * Greets the user with a welcome message.","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"kimshitong"},"content":"     * @param name The name of the bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"    public static String greetFunction(String name) {","lastModifiedDate":"2023-09-07"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"        String greetings \u003d \"Hello! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"kimshitong"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"kimshitong"},"content":"        return greetings;","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"kimshitong"},"content":"     * Displays the list of available commands to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"kimshitong"},"content":"    public String helpFunction() {","lastModifiedDate":"2023-09-07"},{"lineNumber":226,"author":{"gitId":"kimshitong"},"content":"        String output \u003d (\"You can visit our product website :\\nhttps://github.com/kimshitong/ip\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"kimshitong"},"content":"        output +\u003d (\"\");","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"kimshitong"},"content":"     * Accepts user input from the scanner.","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"kimshitong"},"content":"     * @param scanner The Scanner object used for input.","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"kimshitong"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"kimshitong"},"content":"    public String acceptInput(Scanner scanner) {","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"kimshitong"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"kimshitong"},"content":"        return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"kimshitong"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"kimshitong"},"content":"    public static String byeFunction() {","lastModifiedDate":"2023-09-07"},{"lineNumber":249,"author":{"gitId":"kimshitong"},"content":"        return \"Bye. Hope to see you again soon\";","lastModifiedDate":"2023-09-07"},{"lineNumber":250,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for an invalid index.","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidArgIndex() {","lastModifiedDate":"2023-09-07"},{"lineNumber":256,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! Invalid Index!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":257,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":259,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for insufficient arguments for an event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":262,"author":{"gitId":"kimshitong"},"content":"    public String printInsufficientArgEvent() {","lastModifiedDate":"2023-09-07"},{"lineNumber":263,"author":{"gitId":"kimshitong"},"content":"        return (\"OOPS!!! The argument for the event is invalid! \\n Please use this format instead : event [task] /from [dd/mm/yyyy HHmm] /to [dd/mm/yyyy HHmm]  \");","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":265,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":266,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":267,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for insufficient arguments for a deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":268,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":269,"author":{"gitId":"kimshitong"},"content":"    public String printInsufficientArgDeadline() {","lastModifiedDate":"2023-09-07"},{"lineNumber":270,"author":{"gitId":"kimshitong"},"content":"         return \"OOPS!!! The argument for the deadline is invalid! \\n Please use this format instead : deadline [task] /by [dd/mm/yyyy HHmm]\";","lastModifiedDate":"2023-09-13"},{"lineNumber":271,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":272,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":273,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":274,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for an empty description in a to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":276,"author":{"gitId":"kimshitong"},"content":"    public String printInsufficientArgToDo() {","lastModifiedDate":"2023-09-07"},{"lineNumber":277,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The description of a ToDo cannot be empty.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":278,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":279,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":280,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":281,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for an invalid command.","lastModifiedDate":"2023-08-31"},{"lineNumber":282,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":283,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidArg() {","lastModifiedDate":"2023-09-07"},{"lineNumber":284,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-07"},{"lineNumber":285,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":286,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":287,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidRemoveTagIndex() {","lastModifiedDate":"2023-09-14"},{"lineNumber":288,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The argument for the removeTag is invalid! \\n Please use this format instead : removeTag [taskIndex] [tagName]\";","lastModifiedDate":"2023-09-14"},{"lineNumber":289,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":290,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidAddTagArg() {","lastModifiedDate":"2023-09-14"},{"lineNumber":291,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The argument for the addTag is invalid! \\n Please use this format instead : addTag [taskIndex] [tagName]\";","lastModifiedDate":"2023-09-14"},{"lineNumber":292,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":293,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":294,"author":{"gitId":"kimshitong"},"content":"    public static String printInvalidListTaskArg(){","lastModifiedDate":"2023-09-14"},{"lineNumber":295,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The argument for the listTag is invalid or your tag is invalid! \\n Please use this format instead : listTag [tagName]\";","lastModifiedDate":"2023-09-14"},{"lineNumber":296,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":297,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":298,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":299,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":300,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":301,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":301}},{"path":"src/main/java/duke/ui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"public class UserDialogBox extends DialogBox {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    protected UserDialogBox(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        super(text,img,\"user-dialog\");","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    public static DialogBox createDialog(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kimshitong":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kimshitong":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"750.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"708.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"708.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send \" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"707.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"702.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kimshitong":20}},{"path":"src/test/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import duke.task.TaskArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":" * The main class for the Duke chatbot application.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    private TaskArray taskArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    public final static String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    private boolean end \u003d false;","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    private static Duke globalDuke \u003d new Duke();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Kim.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    public Duke() {","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        this(\"./data/tasks.txt\");","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    public static Duke getGlobalDuke() {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        return globalDuke;","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        Launcher.main(args);","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"     * Constructs a Duke object with the given file path for storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The file path to use for storing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"            this.taskArrayList \u003d storage.load();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"            //ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"            this.taskArrayList \u003d new TaskArray();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"     * Runs the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        Ui.greetFunction(\"KimDuke\");","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        ui.helpFunction();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        taskArrayList \u003d ui.runTask(taskArrayList);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        storage.upload(taskArrayList);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"     * Return response from Duke after processing the input and also modify if user input is bye.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"     * @param input The input from user.","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"        String output \u003d ui.runGUITask(taskArrayList,input);","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"        if (output.equals(ui.byeFunction())) {","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"            end \u003d true;","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"        if (output.equals(ui.byeFunction())) {","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"            end \u003d true;","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        return \"KimDuke : \" + output;","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"    public static String saveData(){","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        globalDuke.storage.upload(globalDuke.taskArrayList);","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        return \"Task Data is successfully saved into File Database\";","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"    public static String clearData(){","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"        globalDuke.taskArrayList \u003d new TaskArray();","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"        return \"All Tasks is successfully cleared, use command \\\"save\\\" to update changes in File Database\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"    public static TaskArray getTaskArrayList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        return globalDuke.taskArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"    public boolean isEnd(){","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        return end;","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":123}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.task.TaskArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"    public void Test(){","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"        Task taskA \u003d new ToDo(\"TaskA\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"        Task taskB \u003d new ToDo(\"TaskB\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"        Task taskC \u003d new ToDo(\"TaskC\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"        TaskArray taskArray \u003d new TaskArray();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"        taskArray.add(taskA);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"        taskArray.add(taskB);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        taskArray.add(taskC);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        taskArray.get(2).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        assertEquals(taskArray.get(2).getChecked(), \"[/]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"        taskArray.get(2).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"        assertEquals(taskArray.get(2).getChecked(), \"[]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        taskArray.get(2).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        assertEquals(taskArray.get(2).getChecked(), \"[/]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        taskArray.printTaskArrayList();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    public void removingTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        Task taskA \u003d new ToDo(\"TaskA\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        Task taskB \u003d new ToDo(\"TaskB\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        Task taskC \u003d new ToDo(\"TaskC\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        TaskArray taskArray \u003d new TaskArray();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        taskArray.add(taskA);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        taskArray.add(taskB);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        taskArray.add(taskC);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        taskArray.removeTask(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        //Check Whether did B get removed","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        assertEquals(taskArray.get(0), taskA);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        assertEquals(taskArray.get(1), taskC);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        taskArray.printTaskArrayList();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":48}},{"path":"src/test/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":" *  This Class is mainly dealing with user input and logic process","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    private String input;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    private String[] inputArray;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"     * Constructs a Parser based on the user input and register user\u0027s input and sliced input","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     * @param input input from user","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        inputArray\u003d this.input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * Return input that has been pre-processed become sliced Array","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"     * @return inputArray","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public String[] parseInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        return inputArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"     * Return command after parsing the input","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"     * @return the command to be done : todo deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    public String getCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        return parseInput()[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"     * Return index after parsing the input like for mark/unmark index based on user","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"     * @return the index has been registered","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    public String getIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        assert inputArray.length \u003c 2 : \"Parser Assume there the inputArray have larger than 2\";","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        return parseInput()[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    public Task processEvent() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        Integer startIndex \u003d -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"        String extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        boolean gotFrom \u003d false;","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"        boolean gotTo \u003d false;","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        //Extracting Task, date for /from and /to","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c inputArray.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"            if (inputArray[i].equals(\"/from\") \u0026\u0026 startIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"                startIndex \u003d i;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"                extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, i ));","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"                gotFrom \u003d true;","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"            } else if (inputArray[i].equals(\"/to\") \u0026\u0026 startIndex !\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"                endDate \u003d String.join(\" \", Arrays.copyOfRange(inputArray, i+1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"                startDate \u003d String.join(\" \", Arrays.copyOfRange(inputArray, startIndex + 1, i));","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"                gotTo \u003d true;","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        assert gotFrom: \"There is no /from in Event\";","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        assert gotTo: \"There is no /to in Event\";","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        assert gotFrom \u0026\u0026 gotTo: \"Incomplete From and To Event\";","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"        try{","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"            LocalDateTime formattedStartDate \u003d convertDateTime(startDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"            LocalDateTime formattedEndDate \u003d convertDateTime(endDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"            Task newTask \u003d new Event(extractedTask,formattedStartDate,formattedEndDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"            return newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"     * Convert the LocalDateTime based on String formatted input","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"     * @param input the input has to be format of dd-mm-yyyy HHmm, example : \"02/12/2019 1800\"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"     * @return The \"translated\" datetime based on input","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"    public LocalDateTime convertDateTime(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"        return dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"     * ProcessDeadline based on the userinput, slicing and categorise with text, dueDate","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"     * then create and return a deadline task","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"     * @return Deadline Task","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"    public Task processDeadline() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        String dueDate \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        String extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"        boolean existBy \u003d false;","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c inputArray.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"            if (inputArray[i].equals(\"/by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"                dueDate \u003d String.join(\" \", Arrays.copyOfRange(inputArray, i+1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"                extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, i));","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"                existBy \u003d true;","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"        assert existBy: \"There is no \u0027/by\u0027 in the deadline\";","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"            LocalDateTime formattedDeadlineDate \u003d convertDateTime(dueDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"            Task newTask \u003d new Deadline(extractedTask,formattedDeadlineDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"            return newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"     * ProcessToDo based on the userinput, slicing, save and create todo task","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"     * @return Todo Task","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"    public Task processToDo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"        String extractedTask \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"        Task newTask \u003d new ToDo(extractedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"        return newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"    public Tag processGetTag() {","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"        return Tag.generateTag(inputArray[2]);","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"    public int processTagGetTaskIndex() {","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"            return index - 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"    public Tag processListTag() {","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"        String tagName \u003d inputArray[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"        if (!Tag.existTag(tagName)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"        return Tag.generateTag(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"    public String getExtracted() {","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"            return \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"        String extractedWord \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"        return extractedWord;","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"kimshitong"},"content":"     * Return an Integer Index to be marked based on String input, and -1 if invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"kimshitong"},"content":"     * @return Integer Index to be marked","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"    public int processMarkIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"kimshitong"},"content":"            //from string to index","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"            return index;","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"kimshitong"},"content":"     * Return an Integer Index to be unmarked based on String input, and -1 if invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"kimshitong"},"content":"     * @return Integer Index to be unmarked","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"kimshitong"},"content":"    public int processUnmarkIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"kimshitong"},"content":"            return index;","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"kimshitong"},"content":"     * Return an Integer Index to be deleted based on String input, and -1 if invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"kimshitong"},"content":"     * @return Integer Index to be deleted","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"kimshitong"},"content":"    public int processRemoveIndex() {","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"kimshitong"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":243,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"kimshitong"},"content":"            int index \u003d Integer.parseInt(getIndex());","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"kimshitong"},"content":"            return index;","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"kimshitong"},"content":"            return -1;","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":256,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":257,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":259,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":259}},{"path":"src/test/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * This class handles the storage and retrieval of tasks to and from a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The path of the file to be used for storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * Loads tasks from the file and returns a TaskArray containing the parsed tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"     * @return A TaskArray containing the loaded tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public TaskArray load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        // Create the folder/file if it doesn\u0027t exist","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cString\u003e toBeProcessedArray \u003d scanFile(this.filePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        return parseData(toBeProcessedArray);","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"     * Creates a new file at the specified file path if it doesn\u0027t exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The path of the file to be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"     * @return True if the file already exists, false if a new file was created.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    public boolean createFile(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"File already exists.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        System.out.println(\"File created successfully.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"     * Creates a folder at the specified path if it doesn\u0027t exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"     * @param folderPath The path of the folder to be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"     * @return True if the folder already exists, false if a new folder was created.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"    public boolean createFolder(String folderPath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"        File folder \u003d new File(folderPath).getParentFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"        if (folder.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"Folder already exists.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"            return true;","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"        boolean folderCreated \u003d folder.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"        if (folderCreated) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"Folder created successfully.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"            System.out.println(\"Failed to create folder.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"     * Scans the specified file and returns its contents as an ArrayList of lines.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"     * @param fileName The name of the file to be scanned.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"     * @return An ArrayList containing the lines of the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"    public ArrayList\u003cString\u003e scanFile(String fileName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"                lines.add(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"        return lines;","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"     * Parses the data from the input list and returns a TaskArray containing the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"     * @param inputList The ArrayList of strings to be parsed into tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"     * @return A TaskArray containing the parsed tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    public TaskArray parseData(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        ","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        for (String input : inputList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"            Task newTask \u003d inputToTask(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"            if (newTask !\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"                taskArrayList.add(newTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"        return new TaskArray(taskArrayList);","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"    public Task inputToTask(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"        String[] parts \u003d input.split(\";\");","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"        String text \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"        boolean checked \u003d parts[2].equals(\"true\");","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        Tag tag \u003d Tag.generateTag(parts[3]);","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"                return new ToDo(text,checked,tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"                LocalDateTime startDate \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"                LocalDateTime endDate \u003d LocalDateTime.parse(parts[5]);","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"                return new Event(text,startDate,endDate,checked,tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"                LocalDateTime dueDate \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"                return new Deadline(text,dueDate,checked,tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"        return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"     * Formats the tasks from the TaskArray into an ArrayList of strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"     * @param taskArray The TaskArray containing the tasks to be formatted.","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"     * @return An ArrayList of strings representing the formatted tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"    public ArrayList\u003cString\u003e formatData(TaskArray taskArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d taskArray.getTaskArrayList();","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"            String input \u003d task.getParsedTask();","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"            output.add(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"        assert output.size() \u003d\u003d taskArrayList.size(): \"Not All Data in Task Array being formatted into Output\";","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"     * Writes the formatted data from the inputArray into the specified file.","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"     * @param inputArray The ArrayList of strings to be written to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"     * @param filePath The path of the file to write the data to.","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"    public void inputFile(ArrayList\u003cString\u003e inputArray, String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"            for (String line : inputArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"                writer.write(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"                writer.newLine(); // Add a newline after each line","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"            writer.close(); // Close the writer to flush changes","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"     * Uploads the data from the TaskArray to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"     * @param taskArray The TaskArray containing the tasks to be uploaded.","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"    public void upload(TaskArray taskArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"        inputFile(formatData(taskArray),this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":202}},{"path":"src/test/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with text, dueDate, set type \"T\" with super constructor from Task","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"     * @param dueDate The dueDate of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public Deadline (String text, LocalDateTime dueDate) {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"        super(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"D\");","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with the given text and checked status also set Type as \"T\"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"     * @param dueDate The dueDate of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public Deadline (String text, LocalDateTime dueDate,boolean checked, Tag tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        super(text,checked,tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"D\");","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"     * Gets the formatted text including type, checked status, formatted startDate \u0026 endDate, and text description.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"     * @return The formatted text of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    public String getTypeCheckedText() {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        String formattedDateTime \u003d dueDate.format(formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        String result \u003d getType() + getChecked() + \" \" + getText() + \" (by: \" + formattedDateTime+\")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s data in a parsed format to be imputed into our local file","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"     * @return The parsed data of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTask() {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        String result \u003d super.getParsedTask() + \";\" + this.dueDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":64}},{"path":"src/test/java/duke/task/EmptyTag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"public class EmptyTag extends Tag{","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"    public EmptyTag() {","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"        super(null);","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"    public String getTagName() {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"        return \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTagName() {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"        return \"null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public String getHashedTagName() {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"        return \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":19}},{"path":"src/test/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with text,startDate,endDate, set type \"T\" with super constructor from Task","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     * @param startDate The startDate of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     * @param endDate The endDate of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    public Event(String text, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        super(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        super.getText();","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"E\");","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"        this.endDate\u003d endDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Event object with the given text and checked status also set Type as \"E\"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"     * @param startDate The startDate of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"     * @param endDate The endDate of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    public Event(String text, LocalDateTime startDate, LocalDateTime endDate, boolean checked,Tag tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        super(text,checked,tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        super.getText();","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"E\");","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        this.endDate\u003d endDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"     * Gets the formatted text including type, checked status, formatted startDate \u0026 endDate, and text description.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     * @return The formatted text of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public String getTypeCheckedText() {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        String formattedStartDateTime \u003d startDate.format(formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        String formattedEndDateTime \u003d endDate.format(formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        String result \u003d getType() + getChecked() + \" \" + getText() + \" (from: \" + formattedStartDateTime + \" to: \"+ formattedEndDateTime+\")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s data in a parsed format to be imputed into our local file","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"     * @return The parsed data of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTask() {","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"        String result \u003d super.getParsedTask() + \";\" + this.startDate + \";\" + this.endDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":72}},{"path":"src/test/java/duke/task/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"public class Tag {","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"    private String tagName;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"    private static HashMap\u003cString, Tag\u003e tagHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    private static HashMap\u003cTag, ArrayList\u003cTask\u003e\u003e tagTaskArrayHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"    private static Tag emptyTag\u003d new EmptyTag();","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"    protected Tag(String tagName) {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    public String getTagName() {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"        return tagName;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    public String getHashedTagName() {","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        return \"#\" + tagName;","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTagName() {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        return tagName;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    public static boolean existTag(String tagName) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        return tagHashMap.containsKey(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    public static Tag generateTag(String tagName) {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        if(tagName \u003d\u003d null || tagName.equals(\"\") || tagName.equals(\"null\")){","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            return emptyTag;","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"        if(!tagHashMap.containsKey(tagName)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"            Tag newTag \u003d new Tag(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            tagHashMap.put(tagName, newTag);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        return tagHashMap.get(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    public static String removeTag(String tagName) {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        if(!tagHashMap.containsKey(tagName)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"            return \"Unable to Find Tag\";","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"        Tag tag \u003d tagHashMap.get(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003dtagTaskArrayHashMap.get(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        tagHashMap.remove(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        if (taskArrayList !\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"            for( Task task : taskArrayList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"                task.removeTag();","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"        return \"Done Removing Tag\";","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":61}},{"path":"src/test/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"    private String text;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"    private String type \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"    private boolean checked;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"    private Tag tag \u003d null;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Task object with the given text and sets checked status to false.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    public Task(String text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        this.checked \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d Tag.generateTag(null);","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     * Creates a new Task object with the given text and checked status.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    public Task(String text,boolean checked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        this.checked \u003d checked;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d Tag.generateTag(null);","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"    public Task(String text,boolean checked, Tag tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        this.checked \u003d checked;","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     * Gets the text description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     * @return The text description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    public String getText(){","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        return text;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"     * Gets a string representation of the checked status.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"     * @return A string representing the checked status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"    public String getChecked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        if (checked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"            return \"[/]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"        } else{","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s status text including its checked status and text description.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"     * @return The task\u0027s status text.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"    public String getStatusText() {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        String result \u003d getChecked() + \" \" + getText();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"     * Gets the type of the task enclosed in brackets.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"        String result \u003d \"[\" + type +\"]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"     * Gets the formatted text including type, checked status, and text description.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"     * @return The formatted text of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"    public String getTypeCheckedText() {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"        String result;","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"        if(tag \u003d\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"            result \u003d getType() + getChecked() + \" \" + getText();","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"            return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        result \u003d getType() + getChecked() + tag.getHashedTagName() + \" \" + getText();","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"    public String mark() {","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"        checked \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + getStatusText();","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"     * Unmarks the task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"    public String unmark() {","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        checked \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + getStatusText();","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"     * Sets the type of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"     * @param text The type to set for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"    public void setType(String text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"        type \u003d text;","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"     * Gets the task\u0027s data in a parsed format to be imputed into our local file","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"     * @return The parsed data of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"    public String getParsedTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"        String result \u003d this.type + \";\" + this.text + \";\" + this.checked + \";\" + this.tag.getParsedTagName();","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"    public String setTag(String tagName) {","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d Tag.generateTag(tagName);","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"        return \"Tag \" + tag.getTagName() + \" has been setup!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"    public String setTag(Tag tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"        return \"Tag \" + tag.getTagName() + \" has been setup on \"+this.text+\" !\\n\" + getTypeCheckedText() ;","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"    public Tag getTag() {","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"        return getTag();","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"    public boolean containsTag(Tag tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"        return this.tag \u003d\u003d tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"    public String removeTag() {","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"        this.tag \u003d null;","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"        return \"Tag is successfully being removed!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":159}},{"path":"src/test/java/duke/task/TaskArray.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":" * This class represents a list of tasks and provides methods to manipulate and display the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"public class TaskArray {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"     * Constructs an empty TaskArray.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    public TaskArray() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * Constructs a TaskArray with the given initial list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     * @param array The initial list of tasks to populate the TaskArray.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    public TaskArray(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        taskArrayList \u003d array;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"     * Prints the list of tasks along with their indexes.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    public String printTaskArrayList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"Here is your upcoming tasks (total : \" + getTaskCount() + \"):\";","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++ ) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"            output +\u003d \"\\n\" + index + \": \" + taskArrayList.get(i).getTypeCheckedText();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"     * Adds a task to the TaskArray and prints a confirmation message.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     * @param task The task to be added to the TaskArray.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"        taskArrayList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        String word \u003d \"Got it. I\u0027ve added this task:\\n\" + task.getTypeCheckedText();","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        word +\u003d \"\\nNow you have \" + getTaskCount()+\" tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"        return word;","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"        return taskArrayList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"     * Returns the number of tasks in the TaskArray.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"     * @return The number of tasks in the TaskArray.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"        return taskArrayList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"     * Removes a task from the TaskArray at the specified index and prints a confirmation message.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"    public String removeTask(int index) {","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"        if (index \u003c 0 \u0026\u0026 index \u003e\u003d taskArrayList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"            output \u003d \"Invalid Index\";","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"            return output;","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"        Task removingTask \u003d taskArrayList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"        taskArrayList.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"        output \u003d \"Noted. I\u0027ve removed this task:\\n\" + removingTask.getTypeCheckedText() + \"\\nNow you have \" + getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"    public String printFind(String arg) {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e tempTaskArraylist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"            if (task.getText().contains(arg)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"                tempTaskArraylist.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c tempTaskArraylist.size(); i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"            output +\u003d (\"\\n\" + index + \".\" + tempTaskArraylist.get(i).getTypeCheckedText());","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"    public String printByTag(Tag tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"        ArrayList\u003cTask\u003e tempTaskArraylist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"            if (task.containsTag(tag)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"                tempTaskArraylist.add(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        String output \u003d \"Here are the matching tasks according to your tag ( \" + tag.getTagName() + \" ) in your list:\";","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        for (int i \u003d 0; i \u003c tempTaskArraylist.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"            output +\u003d (\"\\n\" + index + \".\" + tempTaskArraylist.get(i).getTypeCheckedText());","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"     * Returns the list of tasks in the TaskArray.","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"     * @return The list of tasks in the TaskArray.","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"        return taskArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":138}},{"path":"src/test/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"     * Creates a new \u0027ToDo\u0027 object with text and set type \"T\" with super constructor from Task","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"    public ToDo (String text) {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"        super(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"T\");","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"     * Creates a new todo object with the given text and checked status also set Type as \"T\"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"     * Mainly used for registering input from local file","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"     * @param text The text description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * @param checked The status of whether the task is checked (completed) or not.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"    public ToDo (String text,boolean checked,Tag tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"        super(text,checked,tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"        super.setType(\"T\");","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":28}},{"path":"src/test/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"    protected DialogBox(String text, Image img,String styleClassName) {","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace(); ","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"        getStyleClass().add(styleClassName);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"    protected void flip() {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":58}},{"path":"src/test/java/duke/ui/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"public class DukeDialogBox extends DialogBox {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    protected DukeDialogBox(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        super(text,img,\"duke-dialog\");","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"        super.flip();","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public static DialogBox createDialog(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        return new DukeDialogBox(text, img);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":26}},{"path":"src/test/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    private Duke duke \u003d Duke.getGlobalDuke();","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    public Main(){}","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"            stage.setTitle(\"Welcome to KimDuke\");","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/application.css\").toExternalForm());","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"            stage.show();","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":39}},{"path":"src/test/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    private boolean end \u003d false;","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Kim.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"                DukeDialogBox.createDialog(Ui.greetFunction(\"KimDuke\"), dukeImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"        );","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"                UserDialogBox.createDialog(input, userImage),","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"                DukeDialogBox.createDialog(response, dukeImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"        );","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"        if(duke.isEnd()){","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"            duke.saveData();","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"            Thread delayThread \u003d new Thread(() -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"                try {","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"                    Thread.sleep(3000);","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"            });","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"            delayThread.start();","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":75}},{"path":"src/test/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"import duke.task.Tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":"import duke.task.TaskArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":"    String name;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":"     * The Ui class handles interactions with the user interface, displaying messages and receiving inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"     * Runs the task processing loop, taking user inputs and performing corresponding actions.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     * @param oriTaskArray The original TaskArray containing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"     * @return The updated TaskArray after processing user inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"    public TaskArray runTask(TaskArray oriTaskArray) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"        TaskArray taskArray \u003d oriTaskArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"        //Requesting Input and Redirect to Parser","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kimshitong"},"content":"        Parser input \u003d new Parser(acceptInput(scanner));","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kimshitong"},"content":"        //Repeating Asking User if Not Equals Bye","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"kimshitong"},"content":"        String command \u003d input.getCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kimshitong"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"kimshitong"},"content":"            switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"kimshitong"},"content":"                case \"help\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"kimshitong"},"content":"                    helpFunction();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"kimshitong"},"content":"                case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kimshitong"},"content":"                    taskArray.printTaskArrayList();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kimshitong"},"content":"                case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"kimshitong"},"content":"                    taskArray.printFind(input.getExtracted());","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"kimshitong"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kimshitong"},"content":"                    int deleteIndex \u003d input.processRemoveIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kimshitong"},"content":"                    if (deleteIndex \u003e\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kimshitong"},"content":"                        taskArray.removeTask(deleteIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"kimshitong"},"content":"                        printInvalidArgIndex();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"kimshitong"},"content":"                        continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kimshitong"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kimshitong"},"content":"                    int markIndex \u003d input.processMarkIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kimshitong"},"content":"                    if (markIndex \u003e\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kimshitong"},"content":"                        taskArray.get(markIndex - 1).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"kimshitong"},"content":"                        printInvalidArgIndex();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"kimshitong"},"content":"                        continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"kimshitong"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"kimshitong"},"content":"                    int unmarkIndex \u003d input.processUnmarkIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"kimshitong"},"content":"                    if (unmarkIndex \u003e\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"kimshitong"},"content":"                        taskArray.get(unmarkIndex - 1).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"kimshitong"},"content":"                        printInvalidArgIndex();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"kimshitong"},"content":"                        continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"kimshitong"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"kimshitong"},"content":"                    Task toDo \u003d input.processToDo();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"kimshitong"},"content":"                    if (toDo \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"kimshitong"},"content":"                        printInsufficientArgToDo();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"kimshitong"},"content":"                        taskArray.add(toDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"kimshitong"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"kimshitong"},"content":"                    Task deadlineTask \u003d input.processDeadline();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"kimshitong"},"content":"                    if (deadlineTask \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"kimshitong"},"content":"                        printInsufficientArgDeadline();","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"kimshitong"},"content":"                        taskArray.add(deadlineTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"kimshitong"},"content":"                case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"kimshitong"},"content":"                    Task eventTask \u003d input.processEvent();","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"kimshitong"},"content":"                    if (eventTask \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"kimshitong"},"content":"                        printInsufficientArgEvent();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"kimshitong"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"kimshitong"},"content":"                        taskArray.add(eventTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"kimshitong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"kimshitong"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"kimshitong"},"content":"                default:","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"kimshitong"},"content":"                    printInvalidArg();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"kimshitong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"kimshitong"},"content":"            input \u003d new Parser(acceptInput(scanner));","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"kimshitong"},"content":"            command \u003d input.getCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"kimshitong"},"content":"        scanner.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"kimshitong"},"content":"        byeFunction();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"kimshitong"},"content":"        return taskArray;","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"kimshitong"},"content":"    public String runGUITask(TaskArray oriTaskArray, String inputString) {","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"kimshitong"},"content":"        //Requesting Input and Redirect to Parser","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"kimshitong"},"content":"        Parser input \u003d new Parser(inputString);","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"kimshitong"},"content":"        //Repeating Asking User if Not Equals Bye","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"kimshitong"},"content":"        String command \u003d input.getCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"kimshitong"},"content":"        System.out.println(command);","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"kimshitong"},"content":"        switch (command) {","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"kimshitong"},"content":"            case \"help\":","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"kimshitong"},"content":"                return helpFunction();","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"kimshitong"},"content":"            case \"save\":","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"kimshitong"},"content":"                return Duke.saveData();","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"kimshitong"},"content":"            case \"clear\":","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"kimshitong"},"content":"                return Duke.clearData();","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"kimshitong"},"content":"            case \"list\":","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.printTaskArrayList();","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"kimshitong"},"content":"            case \"find\":","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.printFind(input.getExtracted());","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"kimshitong"},"content":"            case \"remove\":","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"kimshitong"},"content":"                int removeIndex \u003d input.processRemoveIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"kimshitong"},"content":"                if (removeIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.removeTask(removeIndex - 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidArgIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"kimshitong"},"content":"            case \"addTag\":","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"kimshitong"},"content":"                int addingTaskIndex \u003d input.processTagGetTaskIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"kimshitong"},"content":"                Tag tagForAddTag \u003d input.processGetTag();","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"kimshitong"},"content":"                if (addingTaskIndex \u003d\u003d -1 || tagForAddTag \u003d\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidAddTagArg();","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.get(addingTaskIndex).setTag(tagForAddTag);","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"kimshitong"},"content":"            case \"removeTag\":","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"kimshitong"},"content":"                int removingTaskIndex \u003d input.processTagGetTaskIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"kimshitong"},"content":"                if (removingTaskIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidRemoveTagIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.get(removingTaskIndex).removeTag();","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"kimshitong"},"content":"            case \"listTag\":","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"kimshitong"},"content":"                Tag tagForListTag \u003d input.processListTag();","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"kimshitong"},"content":"                if (tagForListTag \u003d\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidListTaskArg();","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"kimshitong"},"content":"                return oriTaskArray.printByTag(tagForListTag);","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"kimshitong"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"kimshitong"},"content":"                int markIndex \u003d input.processMarkIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"kimshitong"},"content":"                if (markIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.get(markIndex - 1).mark();","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidArgIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"kimshitong"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"kimshitong"},"content":"                int unmarkIndex \u003d input.processUnmarkIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"kimshitong"},"content":"                if (unmarkIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.get(unmarkIndex - 1).unmark();","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"kimshitong"},"content":"                    return printInvalidArgIndex();","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"kimshitong"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"kimshitong"},"content":"                Task toDo \u003d input.processToDo();","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"kimshitong"},"content":"                if (toDo \u003d\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"kimshitong"},"content":"                    return printInsufficientArgToDo();","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.add(toDo);","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"kimshitong"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"kimshitong"},"content":"                Task deadlineTask \u003d input.processDeadline();","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"kimshitong"},"content":"                if (deadlineTask \u003d\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":192,"author":{"gitId":"kimshitong"},"content":"                    return printInsufficientArgDeadline();","lastModifiedDate":"2023-09-21"},{"lineNumber":193,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.add(deadlineTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":197,"author":{"gitId":"kimshitong"},"content":"            case \"event\":","lastModifiedDate":"2023-09-21"},{"lineNumber":198,"author":{"gitId":"kimshitong"},"content":"                Task eventTask \u003d input.processEvent();","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"kimshitong"},"content":"                if (eventTask \u003d\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"kimshitong"},"content":"                    return printInsufficientArgEvent();","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"kimshitong"},"content":"                } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"kimshitong"},"content":"                    return oriTaskArray.add(eventTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"kimshitong"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"kimshitong"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"kimshitong"},"content":"                return byeFunction();","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"kimshitong"},"content":"            default:","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"kimshitong"},"content":"                return printInvalidArg();","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"kimshitong"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"kimshitong"},"content":"     * Greets the user with a welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"kimshitong"},"content":"     * @param name The name of the bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"kimshitong"},"content":"    public static String greetFunction(String name) {","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"kimshitong"},"content":"        String greetings \u003d \"Hello! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"kimshitong"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"kimshitong"},"content":"        return greetings;","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"kimshitong"},"content":"     * Displays the list of available commands to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"kimshitong"},"content":"    public String helpFunction() {","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"kimshitong"},"content":"        String output \u003d (\"You can visit our product website :\\nhttps://github.com/kimshitong/ip\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":230,"author":{"gitId":"kimshitong"},"content":"        output +\u003d (\"\");","lastModifiedDate":"2023-09-21"},{"lineNumber":231,"author":{"gitId":"kimshitong"},"content":"        return output;","lastModifiedDate":"2023-09-21"},{"lineNumber":232,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"kimshitong"},"content":"     * Accepts user input from the scanner.","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"kimshitong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"kimshitong"},"content":"     * @param scanner The Scanner object used for input.","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"kimshitong"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"kimshitong"},"content":"    public String acceptInput(Scanner scanner) {","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"kimshitong"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"kimshitong"},"content":"        return input;","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"kimshitong"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"kimshitong"},"content":"    public static String byeFunction() {","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"kimshitong"},"content":"        return \"Bye. Hope to see you again soon\";","lastModifiedDate":"2023-09-21"},{"lineNumber":253,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for an invalid index.","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":258,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidArgIndex() {","lastModifiedDate":"2023-09-21"},{"lineNumber":259,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! Invalid Index!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":260,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for insufficient arguments for an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"kimshitong"},"content":"    public String printInsufficientArgEvent() {","lastModifiedDate":"2023-09-21"},{"lineNumber":266,"author":{"gitId":"kimshitong"},"content":"        return (\"OOPS!!! The argument for the event is invalid! \\n Please use this format instead : event [task] /from [dd/mm/yyyy HHmm] /to [dd/mm/yyyy HHmm]  \");","lastModifiedDate":"2023-09-21"},{"lineNumber":267,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":268,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":270,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for insufficient arguments for a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":271,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"kimshitong"},"content":"    public String printInsufficientArgDeadline() {","lastModifiedDate":"2023-09-21"},{"lineNumber":273,"author":{"gitId":"kimshitong"},"content":"         return \"OOPS!!! The argument for the deadline is invalid! \\n Please use this format instead : deadline [task] /by [dd/mm/yyyy HHmm]\";","lastModifiedDate":"2023-09-21"},{"lineNumber":274,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":276,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":277,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for an empty description in a to-do task.","lastModifiedDate":"2023-09-01"},{"lineNumber":278,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":279,"author":{"gitId":"kimshitong"},"content":"    public String printInsufficientArgToDo() {","lastModifiedDate":"2023-09-21"},{"lineNumber":280,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The description of a ToDo cannot be empty.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":281,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":282,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":283,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":284,"author":{"gitId":"kimshitong"},"content":"     * Displays an error message for an invalid command.","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":286,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidArg() {","lastModifiedDate":"2023-09-21"},{"lineNumber":287,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-21"},{"lineNumber":288,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":289,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":290,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidRemoveTagIndex() {","lastModifiedDate":"2023-09-21"},{"lineNumber":291,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The argument for the removeTag is invalid! \\n Please use this format instead : removeTag [taskIndex] [tagName]\";","lastModifiedDate":"2023-09-21"},{"lineNumber":292,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":293,"author":{"gitId":"kimshitong"},"content":"    public String printInvalidAddTagArg() {","lastModifiedDate":"2023-09-21"},{"lineNumber":294,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The argument for the addTag is invalid! \\n Please use this format instead : addTag [taskIndex] [tagName]\";","lastModifiedDate":"2023-09-21"},{"lineNumber":295,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":296,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":297,"author":{"gitId":"kimshitong"},"content":"    public static String printInvalidListTaskArg(){","lastModifiedDate":"2023-09-21"},{"lineNumber":298,"author":{"gitId":"kimshitong"},"content":"        return \"OOPS!!! The argument for the listTag is invalid or your tag is invalid! \\n Please use this format instead : listTag [tagName]\";","lastModifiedDate":"2023-09-21"},{"lineNumber":299,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":300,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":301,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":302,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":303,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":304,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"kimshitong":304}},{"path":"src/test/java/duke/ui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"kimshitong"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"kimshitong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"kimshitong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"kimshitong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"kimshitong"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kimshitong"},"content":"public class UserDialogBox extends DialogBox {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kimshitong"},"content":"    protected UserDialogBox(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kimshitong"},"content":"        super(text,img,\"user-dialog\");","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kimshitong"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kimshitong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kimshitong"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"kimshitong"},"content":"    public static DialogBox createDialog(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"kimshitong"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"kimshitong"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"kimshitong"},"content":"}","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kimshitong"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"kimshitong":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kimshitong"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"kimshitong"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"kimshitong"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"kimshitong"},"content":"delete 2","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"kimshitong"},"content":"bye","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"kimshitong":5}}]
