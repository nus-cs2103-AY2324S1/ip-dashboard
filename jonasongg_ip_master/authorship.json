[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"jonasongg":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * Represents a Duke chat-bot which can store and manage tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     * Creates a Duke chat-bot object.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     * @param filePath The path to the file to store the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"            this.tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"        new Duke(Paths.get(\"data\", \"duke.txt\").toAbsolutePath().toString()).run();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * Runs the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        if (tasks.getSize() !\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"            ui.showLoadedTasksMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"        while (isRunning) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"                Command command \u003d Parser.parse(ui.readInput());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"                isRunning \u003d !command.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"jonasongg":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeIllegalArgumentsException;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeUnknownCommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":" * Represents a parser for the Duke chat-bot that parses the user input and returns the corresponding command.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"    private static final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     * @param fullCommand The user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        String[] splitInput \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        String commandWord \u003d splitInput[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"            return new MarkCommand(Integer.parseInt(splitInput[1]) - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"            return new UnmarkCommand(Integer.parseInt(splitInput[1]) - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(\"The description of a todo cannot be empty\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"            return new AddCommand(new Todo(splitInput[1].trim()));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(\"The description of an deadline cannot be empty\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"            String[] splitInputBy \u003d fullCommand.split(\"/by\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"            String[] splitDeadlineDescription \u003d splitInputBy[0].split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"            if (splitDeadlineDescription.length \u003d\u003d 1 || splitDeadlineDescription[1].equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(\"The description of an deadline cannot be empty\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"            if (splitInputBy.length \u003d\u003d 1 || splitInputBy[1].equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"                        \"The deadline date must be specified! (after /by)\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"                return new AddCommand(new Deadline(splitDeadlineDescription[1].trim(),","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"                        LocalDateTime.parse(splitInputBy[1].trim(), dateTimeFormat)));","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"                        \"The deadline date provided must be in the format: dd/mm/yyyy HHmm (in 24h format)\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(\"The description of an event cannot be empty\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"            String[] splitInputFrom \u003d fullCommand.split(\"/from\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"            String[] splitEventDescription \u003d splitInputFrom[0].split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"            if (splitEventDescription.length \u003d\u003d 1 || splitEventDescription[1].equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(\"The description of an event cannot be empty\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"            if (splitInputFrom.length \u003d\u003d 1 || splitInputFrom[1].equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"                        \"The start time of the event must be specified! (after /from)\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"            String[] splitInputTo \u003d splitInputFrom[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"            if (splitInputTo.length \u003d\u003d 1 || splitInputTo[1].equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"                        \"The end time of the event must be specified! (after /to)\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"                return new AddCommand(","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"                        new Event(splitInputFrom[0].trim(),","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jonasongg"},"content":"                                LocalDateTime.parse(splitInputTo[0].trim(), dateTimeFormat),","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"                                LocalDateTime.parse(splitInputTo[1].trim(), dateTimeFormat)));","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"                        \"The event dates provided must be in the format: dd/mm/yyyy HHmm (in 24h format)\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"jonasongg"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"            return new DeleteCommand(Integer.parseInt(splitInput[1]) - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"                throw new DukeIllegalArgumentsException(\"The keyword to search for cannot be empty!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"            return new FindCommand(splitInput[1].trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jonasongg"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"jonasongg"},"content":"            throw new DukeUnknownCommandException();","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":116}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":" * Represents a storage for the Duke chat-bot that stores the tasks in a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":" * This serves to allow the tasks to be saved and loaded on the hard drive when Duke starts and exits.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * Creates a Storage object.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @param filePath The path to the file to store the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     * Creates the file that stores the tasks if it does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     * @param file The file to be created.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeStorageException If the file cannot be created, or some other IOException is thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    private void createFile(File file) throws DukeStorageException {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"            boolean isCreated \u003d file.getParentFile().mkdirs() \u0026\u0026 file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"            if (!isCreated \u0026\u0026 !file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"                throw new DukeStorageException(\"Something went wrong with creating the store of tasks.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"            throw new DukeStorageException(\"Something went wrong with creating the store of tasks.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"     * Loads the tasks from the file provided by the filepath when Duke first starts.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeStorageException If the file cannot be created, or some other IOException is thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"    public List\u003cTask\u003e loadData() throws DukeStorageException {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"            Scanner loader \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"            while (loader.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"                String[] fields \u003d loader.nextLine().split(\";\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"                String description \u003d fields[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"                boolean isDone \u003d fields[1].equals(\"X\");","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"                switch (fields[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"                case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"                    tasks.add(new Todo(description, isDone));","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"                case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"                    tasks.add(new Deadline(description, isDone, LocalDateTime.parse(fields[3])));","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"                case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"                    tasks.add(new Event(description, isDone, LocalDateTime.parse(fields[3]),","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"                            LocalDateTime.parse(fields[4])));","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"                default:","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"                    // Do nothing if the task is not recognised","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"                    break;","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"            createFile(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"     * Saves the tasks to the file provided by the filepath after Duke exits.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeStorageException If the file cannot be created, or some other IOException is thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"    public void saveData(TaskList tasks) throws DukeStorageException {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"            fw.write(tasks.stringifyTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"jonasongg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"            throw new DukeStorageException(\"Something went wrong with saving the tasks\");","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * Represents a list of tasks to be used by the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * Creates a TaskList object.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"     * Creates a TaskList object with the given list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * Gets the task at the given index.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * @return The task at the given index.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"     * Removes the task at the given index.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"     * Stringifies the list of tasks for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"     * @return The stringified list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"    public String stringifyTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"        return tasks.stream().map(Task::encodeTask).collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"     * Gets the size of the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"     * @return The size of the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"     * Finds tasks that match the specified keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"     * @return A task list containing tasks that match the specified keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"        return new TaskList(tasks.stream()","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"                .filter(task -\u003e task.hasMatchingDescription(keyword))","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":89}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Represents the user interface of the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * Handles the input and output of the chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Creates a Ui object.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * Reads the input from the user using the default System.in Scanner.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @return The input from the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    public String readInput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    private void outputMessage(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        System.out.println(HORIZONTAL_LINE + message + HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * Shows the welcome message when the Duke chat-bot starts.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        outputMessage(\" Hello! I\u0027m Pixel\\n What can I do for you?\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"     * Shows the message when the Duke chat-bot loads the tasks from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"    public void showLoadedTasksMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        outputMessage(\" Loaded tasks from database!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"     * Shows the goodbye message when the Duke chat-bot exits.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"     * Also closes the default System.in Scanner.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"    public void closeAndGoodbyeMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"        outputMessage(\" Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"     * Shows the error message when the Duke chat-bot encounters an error, specifically a DukeException.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"     * @param e The DukeException.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"    public void showErrorMessage(DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"        outputMessage(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"     * Shows the list of tasks when the Duke chat-bot lists the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"     * @param tasks The list of tasks to be shown.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jonasongg"},"content":"            outputMessage(\" There are no tasks in your list!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jonasongg"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jonasongg"},"content":"            StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jonasongg"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jonasongg"},"content":"                tasksString.append(String.format(\"  %d. %s\\n\", i + 1, tasks.getTask(i).toString()));","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jonasongg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jonasongg"},"content":"            outputMessage(String.format(\" Here are the tasks in your list:\\n%s\", tasksString));","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jonasongg"},"content":"     * Shows the message when the Duke chat-bot marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jonasongg"},"content":"     * @param task The task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jonasongg"},"content":"    public void showDoneMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"jonasongg"},"content":"        outputMessage(String.format(\" Nice! I\u0027ve marked this task as done:\\n  %s\\n\", task));","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jonasongg"},"content":"     * Shows the message when the Duke chat-bot marks a task as not done yet.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"jonasongg"},"content":"     * @param task The task to be marked as not done yet.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jonasongg"},"content":"    public void showUndoneMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"jonasongg"},"content":"        outputMessage(String.format(\" OK, I\u0027ve marked this task as not done yet:\\n  %s\\n\", task));","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"jonasongg"},"content":"     * Shows the message when the Duke chat-bot adds a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jonasongg"},"content":"     * @param taskSize The size of the list of tasks after adding.","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jonasongg"},"content":"     * @param task     The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jonasongg"},"content":"    public void showAddMessage(int taskSize, Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"jonasongg"},"content":"        outputMessage(String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"jonasongg"},"content":"                \" Got it. I\u0027ve added this task:\\n  %s\\n Now you have %d task%s in the list.\\n\",","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"jonasongg"},"content":"                task, taskSize, taskSize \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"jonasongg"},"content":"     * Shows the message when the Duke chat-bot deletes a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"jonasongg"},"content":"     * @param taskSize The size of the list of tasks after deletion.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"jonasongg"},"content":"     * @param task     The task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"jonasongg"},"content":"    public void showDeleteMessage(int taskSize, Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"jonasongg"},"content":"        outputMessage(String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"jonasongg"},"content":"                \" Noted. I\u0027ve removed this task:\\n  %s\\n Now you have %d task%s in the list.\\n\",","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"jonasongg"},"content":"                task, taskSize, taskSize \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"jonasongg"},"content":"     * Shows the message when the Duke chat-bot finds matching tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"jonasongg"},"content":"    public void showNoMatchingTasksMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"jonasongg"},"content":"        outputMessage(\" There are no matching tasks in your list!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"jonasongg"},"content":"     * Shows the message when the Duke chat-bot finds matching tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"jonasongg"},"content":"     * @param matchingTasks The list of matching tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"jonasongg"},"content":"    public void showMatchingTasksMessage(TaskList matchingTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"jonasongg"},"content":"        StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"jonasongg"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.getSize(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"jonasongg"},"content":"            tasksString.append(String.format(\"  %d. %s\\n\", i + 1, matchingTasks.getTask(i).toString()));","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"jonasongg"},"content":"        outputMessage(String.format(\" Here are the matching tasks in your list:\\n%s\", tasksString));","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":146}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Represents a command that adds a task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    private final Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * Creates an AddCommand object.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * Executes the command: adds the task to the list of tasks and displays an \"Added\" message.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        ui.showAddMessage(tasks.getSize(), task);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * Returns false.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     * @return False.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":45}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Represents a command that can be executed by Duke.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeException If an error occurs during execution.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"     * Returns true iff the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     * @return True iff the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeTaskNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" * Represents a command that deletes a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     * Executes the command: deletes the task from the list of tasks and displays a \"Deleted\" message.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeTaskNotFoundException If the task to be deleted does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeTaskNotFoundException {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"            tasks.removeTask(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"            ui.showDeleteMessage(tasks.getSize(), task);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"     * Returns false.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"     * @return False.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":52}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Represents a command that exits Duke.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"     * Executes the command: displays a \"Goodbye\" message and exits Duke.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"        ui.closeAndGoodbyeMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     * Returns true.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     * @return True.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":" * Represents a command to find tasks in the task list based on a keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"     * Constructs a find command with the specified keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"     * Executes the find command.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The task list to search for tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface to show messages to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage to save the task list to.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"        TaskList matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        if (matchingTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"            ui.showNoMatchingTasksMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"            ui.showMatchingTasksMessage(matchingTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     * Returns false.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     * @return False.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jonasongg":46}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":" * Represents a command that lists all tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"     * Executes the command: displays all tasks in the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        ui.listTasks(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * Returns false.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @return False.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeTaskNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Represents a command that marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * Creates a MarkCommand object.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * Executes the command: marks the task as done and displays a \"Done\" message.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeTaskNotFoundException If the task to be marked as done does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeTaskNotFoundException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"            ui.showDoneMessage(tasks.getTask(taskIndex).markAsDone());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     * Returns false.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"     * @return False.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":49}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeTaskNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":" * Represents a command that marks a task as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * Creates a UnmarkCommand object.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * @param taskIndex The index of the task to be marked as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     * Executes the command: marks the task as undone and displays a \"Undone\" message.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * @param storage The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @throws DukeTaskNotFoundException If the task to be marked as undone does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeTaskNotFoundException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"            ui.showUndoneMessage(tasks.getTask(taskIndex).markAsUndone());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     * Returns false.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"     * @return False.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":49}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":" * Represents an exception that occurs during the execution of Duke.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":15}},{"path":"src/main/java/duke/exception/DukeIllegalArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":" * Represents an exception that occurs when the arguments of a command are invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"public class DukeIllegalArgumentsException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"     * Constructs a DukeIllegalArgumentsException with the specified detail message.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    public DukeIllegalArgumentsException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":15}},{"path":"src/main/java/duke/exception/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":" * Represents an exception that occurs when an error occurs during any storage activities of Duke.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"public class DukeStorageException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"     * Constructs a DukeStorageException with the specified detail message.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    public DukeStorageException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":15}},{"path":"src/main/java/duke/exception/DukeTaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":" * Represents an exception that occurs when a task cannot be found.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"public class DukeTaskNotFoundException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"     * Constructs a DukeTaskNotFoundException.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"    public DukeTaskNotFoundException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"        super(\"I can\u0027t find that task!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":13}},{"path":"src/main/java/duke/exception/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":" * Represents an exception that occurs when an unknown command is given.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"public class DukeUnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"     * Constructs a DukeUnknownCommandException.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"    public DukeUnknownCommandException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":13}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":" * Represents a deadline to be used by the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * @param by          The deadline of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"        super(description, false);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"     * Creates a Deadline object with done status as specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * @param isDone      Whether the deadline is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param by          The deadline of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by.format(DATE_TIME_FORMAT));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"     * Returns the deadline encoded for storage for the Duke chat-bot","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"     * @return The deadline encoded for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    public String encodeTask() {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"        return String.format(\"D;%s;%s;%s\", this.isDone ? \"X\" : \" \", this.description, this.by);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jonasongg":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":" * Represents an event to be used by the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"     * Creates an Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        super(description, false);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     * Creates an Event object with done status as specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @param isDone      Whether the event is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        return String.format(\"[E]%s (from: %s | to: %s)\", super.toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"                this.from.format(DATE_TIME_FORMAT), this.to.format(DATE_TIME_FORMAT));","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"     * Returns the event encoded for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"     * @return The event encoded for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"    public String encodeTask() {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"        return String.format(\"E;%s;%s;%s;%s\", this.isDone ? \"X\" : \" \", this.description, this.from, this.to);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jonasongg":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":" * Represents a task to be used by the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"     * Creates a Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"     * Checks if the task description matches the specified keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     * @return True if the task description matches the specified keyword, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"    public boolean hasMatchingDescription(String keyword) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * @return The task.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"    public Task markAsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        return this;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"     * @return The task.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"    public Task markAsUndone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        return this;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"     * Returns the task encoded for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"     * @return The task encoded for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    public abstract String encodeTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"jonasongg":70}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":" * Represents a to-do task to be used by the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"     * Creates a To-do object.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"        super(description, false);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"     * Creates a To-do object with done status as specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"     * @param isDone      Whether the to-do task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"     * Returns the string representation of the to-do task.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"     * Returns the to-do task encoded for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"     * @return The to-do task encoded for storage for the Duke chat-bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"    public String encodeTask() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        return String.format(\"T;%s;%s\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jonasongg":45}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeIllegalArgumentsException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"    public void testEventWithoutAnything() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"        Exception exception \u003d assertThrows(DukeIllegalArgumentsException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"                Parser.parse(\"event\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"        assertEquals(\"☹ OOPS!!! The description of an event cannot be empty\\n\", exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"    public void testEventWithoutDescription() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        Exception exception \u003d assertThrows(DukeIllegalArgumentsException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"                Parser.parse(\"event /from\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        assertEquals(\"☹ OOPS!!! The description of an event cannot be empty\\n\", exception.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"    public void testEventWithoutFrom() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"        Exception exception \u003d assertThrows(DukeIllegalArgumentsException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"                Parser.parse(\"event description\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"        assertEquals(\"☹ OOPS!!! The start time of the event must be specified! (after /from)\\n\",","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"                exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"    public void testEventWithoutToTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"        Exception exception \u003d assertThrows(DukeIllegalArgumentsException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"                Parser.parse(\"event description /from 29/2/2012\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"        assertEquals(\"☹ OOPS!!! The end time of the event must be specified! (after /to)\\n\",","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"                exception.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"    public void testDeadlineWithInvalidFromTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        Exception exception \u003d assertThrows(DukeIllegalArgumentsException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"                Parser.parse(\"deadline description /by 9/29/2012 1234\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"                \"☹ OOPS!!! The deadline date provided must be in the format: dd/mm/yyyy HHmm (in 24h format)\\n\",","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"                exception.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":49}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jonasongg"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jonasongg"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jonasongg"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jonasongg"},"content":"import duke.exception.DukeTaskNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jonasongg"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jonasongg"},"content":"public class CommandTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jonasongg"},"content":"    public void testSeriesOfAddCommands() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jonasongg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jonasongg"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jonasongg"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jonasongg"},"content":"        new AddCommand(new Todo(\"a\")).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jonasongg"},"content":"        new AddCommand(new Todo(\"b\")).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jonasongg"},"content":"        new AddCommand(new Todo(\"c\")).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jonasongg"},"content":"        assertEquals(tasks.stringifyTasks(), \"T; ;a\\nT; ;b\\nT; ;c\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jonasongg"},"content":"    public void testDeleteCommandWhenEmpty() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jonasongg"},"content":"        Command command \u003d new DeleteCommand(0);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jonasongg"},"content":"        // storage is not used in deleteCommand, so the filePath is not important","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jonasongg"},"content":"        Exception exception \u003d assertThrows(DukeTaskNotFoundException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"jonasongg"},"content":"                command.execute(new TaskList(), new Ui(), new Storage(\"data/duke.txt\")));","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jonasongg"},"content":"        assertEquals(\"☹ OOPS!!! I can\u0027t find that task!\\n\", exception.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jonasongg"},"content":"    public void testMarkUnmarkCommands() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jonasongg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jonasongg"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jonasongg"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jonasongg"},"content":"        new AddCommand(new Todo(\"a\")).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jonasongg"},"content":"        new AddCommand(new Todo(\"b\")).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jonasongg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jonasongg"},"content":"            new MarkCommand(0).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jonasongg"},"content":"            new MarkCommand(1).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jonasongg"},"content":"            new UnmarkCommand(0).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jonasongg"},"content":"            new UnmarkCommand(1).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jonasongg"},"content":"        } catch (DukeTaskNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jonasongg"},"content":"            // should not reach here","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jonasongg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jonasongg"},"content":"        assertEquals(tasks.stringifyTasks(), \"T; ;a\\nT; ;b\");","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jonasongg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jonasongg"},"content":"    public void testOutOfBoundsMarkCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jonasongg"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jonasongg"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jonasongg"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jonasongg"},"content":"        new AddCommand(new Todo(\"a\")).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jonasongg"},"content":"        new AddCommand(new Todo(\"b\")).execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jonasongg"},"content":"        Command command \u003d new MarkCommand(2);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jonasongg"},"content":"        Exception exception \u003d assertThrows(DukeTaskNotFoundException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"jonasongg"},"content":"                command.execute(tasks, ui, storage));","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"jonasongg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jonasongg"},"content":"        assertEquals(\"☹ OOPS!!! I can\u0027t find that task!\\n\", exception.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jonasongg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jonasongg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jonasongg":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonasongg"},"content":"todo a","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jonasongg"},"content":"todo b","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jonasongg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jonasongg"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jonasongg"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jonasongg"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jonasongg"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jonasongg":7}}]
