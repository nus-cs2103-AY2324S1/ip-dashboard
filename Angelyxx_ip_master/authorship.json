[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    private Duke() {this.taskList \u003d new ArrayList\u003cTask\u003e(); }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"        String logo \u003d","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"                \" ____        _        \\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"Hello from\\n \" + logo);","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"        String chatBotName \u003d \"Duke\";","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"        String header \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"                \"Hello! I\u0027m \" + chatBotName +","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"                \" \\nWhat can I do for you?\";","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(header);","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"        duke.executeDuke();","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"    private void executeDuke() {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"            loadTasksFromFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"        while (true) {","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"                if (userInput.equals(\"bye\") || userInput.equals(\"exit\")){","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"                    System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"                    System.out.println(\"Here are your entries:\");","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"                    for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"\\t\" + (i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"                        taskList.get(taskIndex).markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\\t\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"                                taskList.get(taskIndex).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"                    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"\\\"â˜¹ OOPS!!! Please provide a valid task index to mark.\\\"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"                        taskList.get(taskIndex).markNotDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"                                taskList.get(taskIndex).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"                    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"â˜¹ OOPS!!! Please provide a valid task index to unmarked.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"                } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"Angelyxx"},"content":"                    String todoDescription \u003d userInput.replace(\"todo \", \"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"Angelyxx"},"content":"                    validateTodo(todoDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"                    Todo newTodo \u003d new Todo(todoDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"Angelyxx"},"content":"                    taskList.add(newTodo);","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"Angelyxx"},"content":"                    displayCompletionMessage(newTodo);","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"Angelyxx"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"Angelyxx"},"content":"                else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"Angelyxx"},"content":"                    String[] info \u003d validateDeadline(userInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"Angelyxx"},"content":"                    Deadline deadline \u003d new Deadline(info[0], info[1]);","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"Angelyxx"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"Angelyxx"},"content":"                    displayCompletionMessage(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"Angelyxx"},"content":"                } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"Angelyxx"},"content":"                    String[] info \u003d validateEvent(userInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"Angelyxx"},"content":"                    Event event \u003d new Event(info[0], info[1], info[2]);","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"Angelyxx"},"content":"                    taskList.add(event);","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"Angelyxx"},"content":"                    displayCompletionMessage(event);","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"Angelyxx"},"content":"                } else if (userInput.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"Angelyxx"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"Angelyxx"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"Angelyxx"},"content":"                        Task removedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" + removedTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"Angelyxx"},"content":"                    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"Angelyxx"},"content":"                        System.out.println(\"â˜¹ OOPS!!! Please provide a valid task index to delete.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"Angelyxx"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"Angelyxx"},"content":"                } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"Angelyxx"},"content":"                    throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"Angelyxx"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"Angelyxx"},"content":"                saveTasksToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"Angelyxx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"Angelyxx"},"content":"                System.out.println(\"\\t\" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":115,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"Angelyxx"},"content":"    private void loadTasksFromFile() throws DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Angelyxx"},"content":"            File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"Angelyxx"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"Angelyxx"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"Angelyxx"},"content":"                return;","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"Angelyxx"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"Angelyxx"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"Angelyxx"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"Angelyxx"},"content":"                String[] taskData \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"Angelyxx"},"content":"                Task task \u003d new Task(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Angelyxx"},"content":"                //taskData[0] \u003d task type","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"Angelyxx"},"content":"                //taskData[1] \u003d Done status","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"Angelyxx"},"content":"                //taskData[2] \u003d description","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"Angelyxx"},"content":"                boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Angelyxx"},"content":"                if (taskData[0].equals(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"Angelyxx"},"content":"                    task \u003d new Todo(taskData[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"Angelyxx"},"content":"                } else if (taskData[0].equals(\"D\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"Angelyxx"},"content":"                    task \u003d new Deadline(taskData[2], taskData[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"Angelyxx"},"content":"                } else if (taskData[0].equals(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"Angelyxx"},"content":"                    String[] eventData \u003d taskData[3].split(\" to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"Angelyxx"},"content":"                    task \u003d new Event(taskData[2], eventData[0], eventData[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"Angelyxx"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"Angelyxx"},"content":"                    System.out.println(\"error: unknown task type found in file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"Angelyxx"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"Angelyxx"},"content":"                // Set done status","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"Angelyxx"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"Angelyxx"},"content":"                    task.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"Angelyxx"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"Angelyxx"},"content":"                    task.markNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"Angelyxx"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"Angelyxx"},"content":"                taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"Angelyxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"Error loading file: IOException occurred.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"Angelyxx"},"content":"    private void saveTasksToFile() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"Angelyxx"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"Angelyxx"},"content":"            for (Task task: taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"Angelyxx"},"content":"                fileWriter.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"Angelyxx"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"Angelyxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"Error saving file: IOException occured.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"Angelyxx"},"content":"    private void validateTodo(String todo) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"Angelyxx"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"Angelyxx"},"content":"    private String[] validateDeadline(String input) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"Angelyxx"},"content":"        String[] splitInput \u003d input.replace(\"deadline\", \"\").split(\" /by \");","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"Angelyxx"},"content":"        for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"Angelyxx"},"content":"            splitInput[i] \u003d splitInput[i].trim(); //remove whitespace","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"Angelyxx"},"content":"        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please remember to put a task description and deadline\");","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":193,"author":{"gitId":"Angelyxx"},"content":"        return splitInput;","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":196,"author":{"gitId":"Angelyxx"},"content":"    private String[] validateEvent(String input) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"Angelyxx"},"content":"        String[] info \u003d input.replace(\"event \", \"\").split(\" /from \");","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"Angelyxx"},"content":"        if (info.length !\u003d 2) {","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide a valid event format: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"Angelyxx"},"content":"        String description \u003d info[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":204,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"Angelyxx"},"content":"        String[] timeInfo \u003d info[1].split(\" /to \");","lastModifiedDate":"2023-08-26"},{"lineNumber":206,"author":{"gitId":"Angelyxx"},"content":"        if (timeInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-26"},{"lineNumber":207,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide both start and end times for the event.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":208,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"Angelyxx"},"content":"        String startDateTime \u003d timeInfo[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"Angelyxx"},"content":"        String endDateTime \u003d timeInfo[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":212,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"Angelyxx"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"Angelyxx"},"content":"        } else if (startDateTime.isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":216,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The start time of this event cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"Angelyxx"},"content":"        } else if (endDateTime.isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The end time of this event cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":219,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":220,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":221,"author":{"gitId":"Angelyxx"},"content":"        return new String[]{description, startDateTime, endDateTime};","lastModifiedDate":"2023-08-26"},{"lineNumber":222,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":223,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":224,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":225,"author":{"gitId":"Angelyxx"},"content":"    private void displayCompletionMessage(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":226,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":227,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2023-08-26"},{"lineNumber":228,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":231,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":233,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":224,"-":9}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":12}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    public DeadlineCommand(String description, String deadlineBy) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineBy);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        ui.displayCompletionMessage(deadline, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        storage.saveTasksToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":27}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    private int index; //index of task to be deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            Task removedTask \u003d taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            taskList.delete(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"            ui.printDeleteMessage(removedTask, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            storage.saveTasksToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide a valid task index to delete.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":28}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    private String startDateTimeStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    private String endDateTimeStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    public EventCommand(String description, String startDateTimeStr,String endDateTimeStr) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"        this.startDateTimeStr \u003d startDateTimeStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"        this.endDateTimeStr \u003d endDateTimeStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        Event event \u003d new Event(description, startDateTimeStr, endDateTimeStr);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        taskList.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"        ui.displayCompletionMessage(event, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        storage.saveTasksToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":29}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":16}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"        ui.printTaskList(taskList.getAllTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":12}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"    private int index; //index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"            Task markTask \u003d taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"            taskList.markDone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"            ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\",markTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            storage.saveTasksToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide a valid task index to mark.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":25}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"        ui.displayCompletionMessage(todo, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        storage.saveTasksToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":24}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"    private int index; //index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"            Task unmarkTask \u003d taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"            taskList.markNotDone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"            ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\",unmarkTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"            storage.saveTasksToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide a valid task index to be unmarked.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":25}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":7}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        new Duke(DATA_FILE_PATH).executeDuke();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    private Duke(String filePath) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"            taskList \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"An error occurred during file loading.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"    private void executeDuke() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"            } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":58}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        if (userInput.equals(\"bye\") || userInput.equals(\"exit\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"            int taskIndex \u003d validateMarkAndDelete(userInput.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"            int taskIndex \u003d validateMarkAndDelete(userInput.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"            String todoDescription \u003d userInput.replace(\"todo \", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"            validateTodo(todoDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"            return new TodoCommand(todoDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"            String[] info \u003d validateDeadline(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"            return new DeadlineCommand(info[0], info[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"            String[] info \u003d validateEvent(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"            return new EventCommand(info[0], info[1], info[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"            int taskIndex \u003d validateMarkAndDelete(userInput.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"    private static int validateMarkAndDelete(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"        if (input.isEmpty() || !isNumeric(input)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The index cannot be blank or not an integer.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        return Integer.parseInt(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        if (str \u003d\u003d null || str \u003d\u003d \"\") {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"    private static void validateTodo(String todo) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"    private static String[] validateDeadline(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"        String[] splitInput \u003d input.replace(\"deadline\", \"\").split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"        for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"            splitInput[i] \u003d splitInput[i].trim(); //remove whitespace","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please remember to put a task description and deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Angelyxx"},"content":"        return splitInput;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Angelyxx"},"content":"    private static String[] validateEvent(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Angelyxx"},"content":"        String[] info \u003d input.replace(\"event \", \"\").split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Angelyxx"},"content":"        if (info.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide a valid event format: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Angelyxx"},"content":"        String description \u003d info[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Angelyxx"},"content":"        String[] timeInfo \u003d info[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Angelyxx"},"content":"        if (timeInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide both start and end times for the event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Angelyxx"},"content":"        String startDateTime \u003d timeInfo[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Angelyxx"},"content":"        String endDateTime \u003d timeInfo[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Angelyxx"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Angelyxx"},"content":"        } else if (startDateTime.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The start time of this event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Angelyxx"},"content":"        } else if (endDateTime.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The end time of this event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Angelyxx"},"content":"        return new String[]{description, startDateTime, endDateTime};","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":110}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    Storage(String filePath) {this.filePath \u003d filePath;};","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"                return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"                String[] taskData \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"                Task task \u003d new Task(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"                //taskData[0] \u003d task type","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"                //taskData[1] \u003d Done status","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"                //taskData[2] \u003d description","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"                boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"                if (taskData[0].equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"                    task \u003d new Todo(taskData[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"                } else if (taskData[0].equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"                    task \u003d new Deadline(taskData[2], taskData[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"                } else if (taskData[0].equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"                    String[] eventData \u003d taskData[3].split(\" to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"                    task \u003d new Event(taskData[2], eventData[0], eventData[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"                    System.out.println(\"error: unknown task type found in file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"                // Set done status","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"                    task.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"                    task.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"                taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"            return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"Error loading file: IOException occurred.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"    public void saveTasksToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"            for (Task task: taskList.getAllTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"                fileWriter.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"            throw new DukeException(\"Error saving file: IOException occurred.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":80}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"        return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"    public void delete(int index) { taskList.remove(index); }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"        taskList.get(index).markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"    public void markNotDone(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        taskList.get(index).markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":43}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"        String logo \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"                \" ____        _        \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"                        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"                        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"                        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"Hello from\\n \" + logo);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"        showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    public void displayCompletionMessage(Task task , int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"    public void printMessage(String message, Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\t\" + message + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"Here are your entries:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"            System.out.println(\"\\t\" + (i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"    public void printDeleteMessage(Task removedTask, int size){","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" + removedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"    String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Angelyxx":69}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    private LocalDateTime deadlineDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"    public Deadline(String description, String deadlineBy) {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"        this.deadlineDate \u003d parseDate(deadlineBy);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        this.deadlineDateTime \u003d parseDateTime(deadlineBy);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"        String type \u003d \"D\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"        return type + \" | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.deadlineBy;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"        if (deadlineDate !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"            String formattedDate \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), formattedDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"        } else if (deadlineDateTime !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"            String formattedDate \u003d deadlineDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), formattedDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineBy);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"    //parse LocalDate Object","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"    private LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"        //List of accepted data formats","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"                return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"            } catch (DateTimeParseException ignore){","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"    //parse LocalDateTime Object","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"    private LocalDateTime parseDateTime(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"        //List of accepted data formats","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\")); //format from reading file","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"MM/dd/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Angelyxx"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Angelyxx"},"content":"                return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"            } catch (DateTimeParseException ignore) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Angelyxx"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Angelyxx":89}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"    private String startDateTimeStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    private String endDateTimeStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    public Event(String description, String startDateTimeStr,String endDateTimeStr) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"        this.startDate \u003d parseDate(startDateTimeStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"        this.endDate \u003d parseDate(endDateTimeStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        this.startDateTime \u003d parseDateTime(startDateTimeStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"        this.endDateTime \u003d parseDateTime(endDateTimeStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"        this.startDateTimeStr \u003d startDateTimeStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"        this.endDateTimeStr \u003d endDateTimeStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"        String type \u003d \"E\";","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        return type + \" | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"                + this.startDateTimeStr + \" to \" + this.endDateTimeStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"        String startStr \u003d startDateTimeStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"        String endStr \u003d endDateTimeStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        if (startDateTime !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"            startStr \u003d startDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"        } else if (startDate !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"            startStr \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Angelyxx"},"content":"        if (endDateTime !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Angelyxx"},"content":"            endStr \u003d endDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Angelyxx"},"content":"        } else if (endDate !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Angelyxx"},"content":"            endStr \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Angelyxx"},"content":"        return String.format(\"[E]%s (from: %s to %s)\", super.toString(), startStr, endStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Angelyxx"},"content":"    private LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Angelyxx"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Angelyxx"},"content":"        //List of accepted data formats","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Angelyxx"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Angelyxx"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Angelyxx"},"content":"                return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Angelyxx"},"content":"            } catch (DateTimeParseException ignore){","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Angelyxx"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Angelyxx"},"content":"    //parse LocalDateTime Object","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Angelyxx"},"content":"    private LocalDateTime parseDateTime(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"Angelyxx"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Angelyxx"},"content":"        //List of accepted data formats","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\")); //format from reading file","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"MM/dd/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Angelyxx"},"content":"        formatters.add(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Angelyxx"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Angelyxx"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Angelyxx"},"content":"                return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Angelyxx"},"content":"            } catch (DateTimeParseException ignore) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Angelyxx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Angelyxx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Angelyxx"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Angelyxx":101}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"public class Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"    protected String description;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    //Returns description of the task","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"Angelyxx"},"content":"        return description;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"Angelyxx"},"content":"    //Returns isDone status of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Angelyxx"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Angelyxx"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Angelyxx"},"content":"    //Toggles isDone to True","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"Angelyxx"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"Angelyxx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"Angelyxx"},"content":"    //Toggles isDone to false","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"Angelyxx"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"Angelyxx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"Angelyxx"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Angelyxx"},"content":"        String type \u003d \"T\"; // Default type for base Task","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Angelyxx"},"content":"        return type + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"Angelyxx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Angelyxx":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Angelyxx"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Angelyxx"},"content":"        String type \u003d \"T\";","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Angelyxx"},"content":"        return type + \" | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Angelyxx"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"Angelyxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Angelyxx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Angelyxx":17}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Angelyxx"},"content":"package exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Angelyxx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Angelyxx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Angelyxx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Angelyxx"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Angelyxx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Angelyxx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Angelyxx":7}}]
