[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"# duke.duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lynnlow175":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"lynnlow175"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lynnlow175":20,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"todo read book","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"todo read book","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"todo read book","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"todo read book","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"lynnlow175":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":" * A subclass of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"    private LocalDateTime date;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"     * A public constructor of the deadline class.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"     * @param name extracted from the input","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"     * @param date of LocalDateTime type","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"    public Deadline(String name, LocalDateTime date, String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"        super(name, input);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"     * A string representation of the deadline class.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"     * @return a string","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"        formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"        if (!this.getDone()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"            return \"[D][ ] \" + this.getName() + \"(by: \" + this.date.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"            return \"[D][X] \" + this.getName() + \"(by: \" + this.date.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lynnlow175":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"lynnlow175"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"lynnlow175"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"lynnlow175"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"lynnlow175"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"lynnlow175"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"lynnlow175"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"lynnlow175"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"lynnlow175"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lynnlow175":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":" * A class that represents a ChatBot.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":" * Interacts with the user based on the input received.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"public class Duke {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"     * Public Constructor for Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"        this.taskList \u003d Storage.load(\"data/duke.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"     * Runs the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"     * Reads the user inputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"        return Parser.handleInput(input, taskList, false);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lynnlow175":36}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":" * A subclass of Task","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"    private String from;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"    private String to;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"     * Public constructor of Event class.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"     * @param name extracted from the original input","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"     * @param from extracted from the original input","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"     * @param to extracted from the original input","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"     * @param input the input that user keyed in","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"    public Event(String name, String from, String to, String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"        super(name, input);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"     * String Representation of the Event class.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"     * @return String that contains the Event name, timeframe and flags.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"        if (!this.getDone()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"            return  \"[E][ ] \" + this.getName() + \"(from: \" + this.from + \"to: \" + this.to + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"            return \"[E][X] \" + this.getName() + \"(from: \" + this.from + \"to: \" + this.to + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lynnlow175":37}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lynnlow175":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lynnlow175":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"    @FXML ","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"lynnlow175"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"lynnlow175"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"lynnlow175"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lynnlow175":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":" * A class that deals with making sense of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"     * Handles the different inputs by checking their first word.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"     * @param input the input that user entered","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an arraylist of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"     * @param isLoading a flag to check if the application is restoring","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"    public static String handleInput(String input, TaskList taskList, Boolean isLoading) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"            return \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"        if (input.startsWith(\"mark\") || input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"            return handleMark(input, taskList, isLoading);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"            return handleTodo(input, taskList, isLoading);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"            return handleDeadline(input, taskList, isLoading);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"        if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"            return handleEvent(input, taskList, isLoading);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"        if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"            return handleDelete(input, taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"            return handleList(taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"        if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"            String[] arr \u003d input.split(\"find \");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"            System.out.println(\"arr: \" + arr.length);","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lynnlow175"},"content":"            if (arr.length \u003d\u003d 1 || arr.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lynnlow175"},"content":"                return Ui.matchExcept();","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"                return findMatching(arr[1], taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lynnlow175"},"content":"        return Ui.printError();","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lynnlow175"},"content":"     * Handles the List input.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lynnlow175"},"content":"    public static String handleList(TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"lynnlow175"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"lynnlow175"},"content":"            return Ui.printEmptyList();","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"lynnlow175"},"content":"        return Ui.printList(taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lynnlow175"},"content":"     * Handles inputs that start with mark and unmark.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lynnlow175"},"content":"     * @param input the input that user entered","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lynnlow175"},"content":"     * @param isLoading a flag to check if the application is restoring","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lynnlow175"},"content":"    public static String handleMark(String input, TaskList taskList, Boolean isLoading) {","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"lynnlow175"},"content":"        assert !input.equals(\"\") : \"inputs shouldn\u0027t be empty string!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"lynnlow175"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lynnlow175"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"lynnlow175"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"lynnlow175"},"content":"                int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"lynnlow175"},"content":"                Task thisTask \u003d taskList.getTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"lynnlow175"},"content":"                if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"lynnlow175"},"content":"                    taskList.getTask(index).setDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"lynnlow175"},"content":"                    return Ui.printDone(thisTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"lynnlow175"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"lynnlow175"},"content":"                if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"lynnlow175"},"content":"                    taskList.getTask(index).setNotDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"lynnlow175"},"content":"                    return Ui.printNotDone(thisTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"lynnlow175"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lynnlow175"},"content":"                Storage.save(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"lynnlow175"},"content":"            } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lynnlow175"},"content":"                Ui.outOfBounds();","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"lynnlow175"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"lynnlow175"},"content":"                Ui.numberFormat();","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"lynnlow175"},"content":"        return Ui.markExcept();","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lynnlow175"},"content":"     * Handles inputs that start with delete.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lynnlow175"},"content":"     * @param input the input that user entered","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lynnlow175"},"content":"    public static String handleDelete(String input, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"lynnlow175"},"content":"        assert !input.equals(\"\") : \"inputs shouldn\u0027t be empty string!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"lynnlow175"},"content":"        String[] parts1 \u003d input.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"lynnlow175"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"lynnlow175"},"content":"        int index \u003d Integer.parseInt(parts1[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"lynnlow175"},"content":"        String deleted \u003d String.valueOf(taskList.getTask(index - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"lynnlow175"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"lynnlow175"},"content":"        Storage.save(taskList); // save in file","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"lynnlow175"},"content":"        return Ui.removeTask(deleted, taskList);]","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"lynnlow175"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"lynnlow175"},"content":"            return Ui.numberFormat();","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"lynnlow175"},"content":"     * Handles inputs that start with todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"lynnlow175"},"content":"     * @param input the input that user entered","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"lynnlow175"},"content":"     * @param isLoading a flag to check if the application is restoring","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"lynnlow175"},"content":"    public static String handleTodo(String input, TaskList taskList, Boolean isLoading) {","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"lynnlow175"},"content":"        assert !input.equals(\"\") : \"inputs shouldn\u0027t be empty string!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"lynnlow175"},"content":"        String[] arr0 \u003d input.split(\"todo \");","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"lynnlow175"},"content":"        if (arr0.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"lynnlow175"},"content":"            return Ui.toDoExcept();","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"lynnlow175"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"lynnlow175"},"content":"            Task todo \u003d new Todo(arr0[1], input);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"lynnlow175"},"content":"            return AddTask(todo, taskList, isLoading);","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"lynnlow175"},"content":"     * Handles inputs that start with event.","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"lynnlow175"},"content":"     * @param input the input that user entered","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"lynnlow175"},"content":"     * @param isLoading a flag to check if the application is restoring","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"lynnlow175"},"content":"    public static String handleEvent(String input, TaskList taskList, Boolean isLoading) {","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"lynnlow175"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"lynnlow175"},"content":"            String[] arr1 \u003d input.split(\"/from \"); // [0]: event + name, [1]: timeframe","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"lynnlow175"},"content":"            String[] arr2 \u003d arr1[1].split(\"/to \"); // [0] from:..., [1] to:...","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"lynnlow175"},"content":"            String[] arr3 \u003d arr1[0].split(\"event \");","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"lynnlow175"},"content":"            Task event \u003d new Event(arr3[1], arr2[0], arr2[1], input);","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"lynnlow175"},"content":"            return AddTask(event, taskList, isLoading);","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"lynnlow175"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"lynnlow175"},"content":"            return Ui.eventExcept();","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"lynnlow175"},"content":"     * Handles inputs that start with deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"lynnlow175"},"content":"     * @param input the input that user entered","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"lynnlow175"},"content":"     * @param isLoading a flag to check if the application is restoring","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"lynnlow175"},"content":"    public static String handleDeadline(String input, TaskList taskList, Boolean isLoading) {","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"lynnlow175"},"content":"        assert !input.equals(\"\") : \"inputs shouldn\u0027t be empty string!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"lynnlow175"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"lynnlow175"},"content":"            String[] arr1 \u003d input.split(\"/by \"); // 0: deadline + name , 1: date","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"lynnlow175"},"content":"            String[] arr2 \u003d arr1[0].split(\"deadline \");","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"lynnlow175"},"content":"            String date \u003d arr1[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"lynnlow175"},"content":"            LocalDateTime formattedDate \u003d dateFormatter(date);","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"lynnlow175"},"content":"            Task deadline \u003d new Deadline(arr2[1], formattedDate, input);","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"lynnlow175"},"content":"            return AddTask(deadline, taskList, isLoading);","lastModifiedDate":"2023-09-08"},{"lineNumber":174,"author":{"gitId":"lynnlow175"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"lynnlow175"},"content":"            return Ui.deadlineExcept();","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"lynnlow175"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"lynnlow175"},"content":"            return Ui.dateFormatExcept();","lastModifiedDate":"2023-09-08"},{"lineNumber":178,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"lynnlow175"},"content":"     * Converts the string date and time to a LocalDateTime object.","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"lynnlow175"},"content":"     * @param dateTime a String extracted from the deadline input","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"lynnlow175"},"content":"     * @return LocalDateTime that allows the reformatting of date and time","lastModifiedDate":"2023-09-03"},{"lineNumber":186,"author":{"gitId":"lynnlow175"},"content":"     * @throws DateTimeParseException an exception when the format of date is invalid","lastModifiedDate":"2023-09-03"},{"lineNumber":187,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":188,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"lynnlow175"},"content":"    public static LocalDateTime dateFormatter(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"lynnlow175"},"content":"            String[] inputs \u003d dateTime.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"lynnlow175"},"content":"            DateTimeFormatter formatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"lynnlow175"},"content":"            if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"lynnlow175"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"lynnlow175"},"content":"                return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"lynnlow175"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"lynnlow175"},"content":"                return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":201,"author":{"gitId":"lynnlow175"},"content":"     * Add the individual task into the taskList and saves them into a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"lynnlow175"},"content":"     * @param task includes event, todo and deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":205,"author":{"gitId":"lynnlow175"},"content":"     * @param isLoading a flag to check if the application is restoring","lastModifiedDate":"2023-09-03"},{"lineNumber":206,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":207,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":208,"author":{"gitId":"lynnlow175"},"content":"    public static String AddTask(Task task, TaskList taskList, Boolean isLoading) {","lastModifiedDate":"2023-09-08"},{"lineNumber":209,"author":{"gitId":"lynnlow175"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"lynnlow175"},"content":"        Storage.save(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"lynnlow175"},"content":"        if (!isLoading) {","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"lynnlow175"},"content":"            return Ui.printAddTask(task, taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"lynnlow175"},"content":"        return \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":215,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":217,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":218,"author":{"gitId":"lynnlow175"},"content":"     * Find tasks based on a target string that the user entered.","lastModifiedDate":"2023-09-04"},{"lineNumber":219,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":220,"author":{"gitId":"lynnlow175"},"content":"     * @param keyword the target string followed by \"find\"","lastModifiedDate":"2023-09-04"},{"lineNumber":221,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":223,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":224,"author":{"gitId":"lynnlow175"},"content":"    public static String findMatching(String keyword, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":225,"author":{"gitId":"lynnlow175"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":226,"author":{"gitId":"lynnlow175"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":227,"author":{"gitId":"lynnlow175"},"content":"            return \"list is empty!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":228,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":229,"author":{"gitId":"lynnlow175"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i ++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":230,"author":{"gitId":"lynnlow175"},"content":"            Task matchTask \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":231,"author":{"gitId":"lynnlow175"},"content":"            if (matchTask.getName().contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":232,"author":{"gitId":"lynnlow175"},"content":"                newList.add(matchTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":233,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":234,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":235,"author":{"gitId":"lynnlow175"},"content":"        return Ui.printMatching(newList);","lastModifiedDate":"2023-09-08"},{"lineNumber":236,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":237,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lynnlow175":237}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.io.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":" * A class that contains the save and load methods","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"     * Loads the content of the file into the ChatBot","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"     * @param filepath directs to the file containing the saved content","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"     * @return a TaskList that contains the tasks from the content","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"    public static TaskList load(String filepath) {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"                String text \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"                if (text.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"                    continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"                Parser.handleInput(text, taskList, true);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"            //ignore;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"     * Saves the task-list into the file whenever a change is made","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"    public static void save (TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"            String filepath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"                writer.write(\"\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"                for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"                    taskList.getTask(i).save(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lynnlow175"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lynnlow175"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"                System.out.println(\"IOException\");","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lynnlow175":49}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":" * Represents a task entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"    private Boolean isDone;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"    private String input;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"     * A public constructor for the task class.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"     * @param name extracted from the user input","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"    public Task(String name, String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"     * A method that sets the done flag to true.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"    public void setDone() {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"     * A method that sets the done flag to false.","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"     * Getter method for the done field.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lynnlow175"},"content":"     * @return the boolean value of the done flag","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lynnlow175"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lynnlow175"},"content":"     * Getter method for the name field.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lynnlow175"},"content":"     * @return the string name","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lynnlow175"},"content":"    public String getName() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"lynnlow175"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lynnlow175"},"content":"     * Getter method for the input field.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lynnlow175"},"content":"     * @return the string input","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lynnlow175"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"lynnlow175"},"content":"        return this.input;","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"lynnlow175"},"content":"    };","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lynnlow175"},"content":"     * Saves the individual task as string into the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lynnlow175"},"content":"     * @param filepath directs to the file","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lynnlow175"},"content":"    public void save(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"lynnlow175"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"lynnlow175"},"content":"            FileWriter myWriter \u003d new FileWriter(filepath, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"lynnlow175"},"content":"            myWriter.write(this.getInput() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"lynnlow175"},"content":"            myWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"lynnlow175"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"lynnlow175"},"content":"            System.out.println(\"Error saving to file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"lynnlow175"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lynnlow175"},"content":"     * String representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lynnlow175"},"content":"     * @return a string","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lynnlow175"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"lynnlow175"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"lynnlow175"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"lynnlow175"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"lynnlow175"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"lynnlow175"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lynnlow175":101}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":" * Representation of a list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"     * Obtains the number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"     * @return an integer","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"     * Adds the task into the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"     * @param task","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"     * Removes the task from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"     * @param index","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"     * A getter to return the task in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lynnlow175"},"content":"     * @param index an integer value","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lynnlow175"},"content":"     * @return a Task from the list","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lynnlow175"},"content":"        if (index \u003c\u003d this.taskList.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"            return this.taskList.get(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lynnlow175"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lynnlow175"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lynnlow175":55}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":" * A subclass of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"    private String Input;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"    public Todo(String name, String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"        super(name, input);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"     * A string representation of the todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"     * @return a string","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"        if (!this.getDone()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"            return \"[T][ ] \" + this.getName();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"            return \"[T][X] \" + this.getName();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lynnlow175":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":" * UI of the ChatBot","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"     * Reads a line from the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"     * @return","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"    public static String scanInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"        return input;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"     * Prints to standard output a greeting message.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"    public static void printGreetings() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"        System.out.println(\"Hello! I\u0027m lippy the wombat\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"     * Prints to an input bye.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"    public static void printBYE() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"     * Prints when the input is not recognised","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"    public static String printError() {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"     * Prints when a new task is added.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lynnlow175"},"content":"     * @param task     of type Task","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lynnlow175"},"content":"    public static String printAddTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"lynnlow175"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"lynnlow175"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lynnlow175"},"content":"     * Prints to the input list when the list is empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lynnlow175"},"content":"    public static String printEmptyList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"lynnlow175"},"content":"        return \"There is currently no items in the list\";","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lynnlow175"},"content":"     * Prints to an input list when list is not empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lynnlow175"},"content":"    public static String printList(TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"lynnlow175"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"lynnlow175"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"lynnlow175"},"content":"            String task \u003d String.valueOf(taskList.getTask(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"lynnlow175"},"content":"            String indivTask \u003d i + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"lynnlow175"},"content":"            tasks +\u003d indivTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"lynnlow175"},"content":"        return \"Here are the tasks in your list: \\n\" + tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lynnlow175"},"content":"     * Prints when the user marks a task done.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lynnlow175"},"content":"     * @param task of type Task","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lynnlow175"},"content":"    public static String printDone(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"lynnlow175"},"content":"        return \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + task;","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lynnlow175"},"content":"     * Prints when the user unmarks a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lynnlow175"},"content":"     * @param task of type Task","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lynnlow175"},"content":"    public static String printNotDone(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"lynnlow175"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + task;","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lynnlow175"},"content":"     * Prints when an IndexOutOfBounds exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lynnlow175"},"content":"    public static String outOfBounds() {","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"lynnlow175"},"content":"        return \"IndexOutOfBounds\";","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lynnlow175"},"content":"     * Prints when a NumberFormatException is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lynnlow175"},"content":"    public static String numberFormat() {","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"lynnlow175"},"content":"        return \"NumberFormatException\";","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"lynnlow175"},"content":"     * Prints when a task gets deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"lynnlow175"},"content":"     * @param deleted  of type String that represents the deleted task","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"lynnlow175"},"content":"     * @param taskList an array of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"lynnlow175"},"content":"    public static String removeTask(String deleted, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"lynnlow175"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + deleted + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"lynnlow175"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"lynnlow175"},"content":"     * Prins when todo description is empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"lynnlow175"},"content":"    public static String toDoExcept() {","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"lynnlow175"},"content":"        return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"lynnlow175"},"content":"     * Prints when the date format for deadline is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"lynnlow175"},"content":"    public static String dateFormatExcept() {","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"lynnlow175"},"content":"        return \"invalid date format\";","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"lynnlow175"},"content":"     * Prints when the deadline input is wrongly formatted","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"lynnlow175"},"content":"    public static String deadlineExcept() {","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"lynnlow175"},"content":"        return \"Wrong Deadline Format!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"lynnlow175"},"content":"     * Prints when the event input is wrongly formatted","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"lynnlow175"},"content":"    public static String eventExcept() {","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"lynnlow175"},"content":"        return \"Wrong Event Format!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"lynnlow175"},"content":"     * Prints the tasks containing the target string when there is a valid find command.","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"lynnlow175"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"lynnlow175"},"content":"     * @param newList a new TaskList that contains the matching tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"lynnlow175"},"content":"    public static String printMatching(TaskList newList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"lynnlow175"},"content":"        if (newList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":156,"author":{"gitId":"lynnlow175"},"content":"            return \"no matching task found:(\";","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"lynnlow175"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"lynnlow175"},"content":"            String tasks \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"lynnlow175"},"content":"            for (int i \u003d 1; i \u003c\u003d newList.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":160,"author":{"gitId":"lynnlow175"},"content":"                String task \u003d String.valueOf(newList.getTask(i));","lastModifiedDate":"2023-09-04"},{"lineNumber":161,"author":{"gitId":"lynnlow175"},"content":"                String indivTask \u003d i + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"lynnlow175"},"content":"                tasks +\u003d indivTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"lynnlow175"},"content":"            return \"Here are the matching tasks in your list:\" + tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":166,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":167,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"lynnlow175"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":169,"author":{"gitId":"lynnlow175"},"content":"     * Empty find command description.","lastModifiedDate":"2023-09-04"},{"lineNumber":170,"author":{"gitId":"lynnlow175"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":171,"author":{"gitId":"lynnlow175"},"content":"    public static String matchExcept() {","lastModifiedDate":"2023-09-08"},{"lineNumber":172,"author":{"gitId":"lynnlow175"},"content":"        return \"description of a find command cannot be empty\";","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":174,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"lynnlow175"},"content":"    public static String markExcept() {","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"lynnlow175"},"content":"        return \"Sorry mark description cannot be empty!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":178,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lynnlow175":178}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-spacing: 20;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: F79; -fx-border-radius: 24px;;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lynnlow175":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #000001;\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lynnlow175":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"    public void test_Valid_DateTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"        String validDateTime \u003d \"2023-09-02 12:30\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"        LocalDateTime result \u003d Parser.dateFormatter(validDateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"        assertNotNull(result);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"    public void test_InvalidDate_ValidTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"        String InvalidDateValidTime \u003d \"2020-13-13 12:30\";","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.dateFormatter(InvalidDateValidTime));","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"    public void test_ValidDate_InvalidTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"        String ValidDateInvalidTime \u003d \"2020-12-13 40:10\";","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.dateFormatter(ValidDateInvalidTime));","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lynnlow175":27}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"import java.io.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lynnlow175"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lynnlow175"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lynnlow175"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lynnlow175"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lynnlow175"},"content":"    public void test_Save() throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lynnlow175"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"lynnlow175"},"content":"        String filepath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"lynnlow175"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath));","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lynnlow175"},"content":"        writer.write(\"\");","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lynnlow175"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"            taskList.add(new Todo(\"read book\", \"todo read book\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"lynnlow175"},"content":"        Storage.save(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"lynnlow175"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filepath))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"lynnlow175"},"content":"            for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lynnlow175"},"content":"                assertEquals(\"todo read book\", br.readLine());","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lynnlow175"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"lynnlow175"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"lynnlow175"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"lynnlow175"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"lynnlow175"},"content":"    public void test_Invalid_File() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"lynnlow175"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"lynnlow175"},"content":"        String filepath \u003d \"nonexistent.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"lynnlow175"},"content":"        Storage.save(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"lynnlow175"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filepath))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"lynnlow175"},"content":"            for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"lynnlow175"},"content":"                assertEquals(\"todo read book\", br.readLine());","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"lynnlow175"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"lynnlow175"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"lynnlow175"},"content":"            // ignore","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"lynnlow175"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"lynnlow175"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"lynnlow175"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lynnlow175":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lynnlow175"},"content":"todo take a run","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lynnlow175"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lynnlow175"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lynnlow175"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lynnlow175"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lynnlow175":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lynnlow175"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lynnlow175":1,"-":20}}]
