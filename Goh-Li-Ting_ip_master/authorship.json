[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"mainClassName \u003d \u0027chatbuddy.ChatBuddy\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"    mainClass.set(\"chatbuddy.ChatBuddy\")","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"    archiveFileName \u003d \u0027chatBuddy.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"    archiveBaseName \u003d \"chatBuddy\"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Goh-Li-Ting":6}},{"path":"src/main/java/chatbuddy/ChatBuddy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"/** ChatBuddy is a chatbot that helps a user keep track of tasks. */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"public class ChatBuddy {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of ChatBuddy with a specified filepath.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param filePath The filepath of the file to save task data in.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    public ChatBuddy(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Runs the chatbot. */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"            } catch (ChatBuddyException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"            } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"        new ChatBuddy(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Goh-Li-Ting":53}},{"path":"src/main/java/chatbuddy/ChatBuddyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"public class ChatBuddyException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a ChatBuddyException.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param description The description of the error.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"    public ChatBuddyException(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"        return \"☹ OOPS!!! \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"        return toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Goh-Li-Ting":24}},{"path":"src/main/java/chatbuddy/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":" * The TaskList represents a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":" * Tasks can be added or delete from the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":" * Tasks in the list can be mark as done or not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The list of tasks. */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Returns an instance of a TaskList that has no tasks. */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns an instance of a TaskList with the list of inputted tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param tasks The tasks that the TaskList should contain.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The size of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Checks if the task number is valid.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"     * The task number is valid if it is within the range of available task.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"     * The task number is invalid if the task number exceeds the number of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskNum The task number to check for.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the task number is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"    private void checkValidTaskNumber(int taskNum) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (taskNum \u003e tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input a valid task number. There are only \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"                    getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Adds a task to the back of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param task The task to add to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Goh-Li-Ting"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Deletes the task with the given task number from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskNum The task number of the task to delete.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The task object that is deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the task number is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Task deleteTask(int taskNum) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Goh-Li-Ting"},"content":"        // check for valid task number","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Goh-Li-Ting"},"content":"        checkValidTaskNumber(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Goh-Li-Ting"},"content":"        // delete task from list","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Goh-Li-Ting"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Goh-Li-Ting"},"content":"        Task task \u003d tasks.remove(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Goh-Li-Ting"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Marks the task with the given task number as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskNum The task number of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the task number is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Task markTaskAsDone(int taskNum) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Goh-Li-Ting"},"content":"        // check for valid task number","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Goh-Li-Ting"},"content":"        checkValidTaskNumber(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Goh-Li-Ting"},"content":"        // mark task as done","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Goh-Li-Ting"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Goh-Li-Ting"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Goh-Li-Ting"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Goh-Li-Ting"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Marks the task with the given task number as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskNum The task number of the task to mark as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The task that was marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the task number is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Task markTaskAsNotDone(int taskNum) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Goh-Li-Ting"},"content":"        // check for valid task number","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Goh-Li-Ting"},"content":"        checkValidTaskNumber(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Goh-Li-Ting"},"content":"        // mark task as done","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Goh-Li-Ting"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Goh-Li-Ting"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Goh-Li-Ting"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Goh-Li-Ting"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a list of strings representing the task in the format for saving.","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return A list of strings representing the task in the format for saving.","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Goh-Li-Ting"},"content":"    public ArrayList\u003cString\u003e getTaskStringsToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Goh-Li-Ting"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Goh-Li-Ting"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Goh-Li-Ting"},"content":"            String taskString \u003d task.getInformationForSaving();","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Goh-Li-Ting"},"content":"            taskStrings.add(taskString);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Goh-Li-Ting"},"content":"        return taskStrings;","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a list of strings representing the task in the format for printing.","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return A list of strings representing the task in the format for printing.","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Goh-Li-Ting"},"content":"    public ArrayList\u003cString\u003e getTaskStringsToPrint() {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Goh-Li-Ting"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Goh-Li-Ting"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"Goh-Li-Ting"},"content":"            taskStrings.add(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Goh-Li-Ting"},"content":"        return taskStrings;","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Finds a list of tasks containing the given keyword in their description.","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return A TaskList containing a list of tasks that contains the given keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Goh-Li-Ting"},"content":"    public TaskList getMatchingTasks(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Goh-Li-Ting"},"content":"        return new TaskList(tasks.stream()","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"Goh-Li-Ting"},"content":"                .filter(task -\u003e task.containKeyword(keyword))","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Goh-Li-Ting"},"content":"                .collect(Collectors.toCollection(ArrayList::new)));","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":155}},{"path":"src/main/java/chatbuddy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"/** Command is an abstract class that represents commands that can be executed. */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param ui The ui used to handle interactions with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param storage The storage used to load and save tasks in a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the execution of the command has an error.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns true if the command is an exit command, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return False by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":29}},{"path":"src/main/java/chatbuddy/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"/** DeadlineCommand represents a command to create a deadline task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    private String taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    private LocalDate by;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a DeadlineCommand with the given description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    public DeadlineCommand(String taskDescription, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showTaskAddition(deadline, tasks.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":34}},{"path":"src/main/java/chatbuddy/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"/** DeleteCommand represents a command to delete a task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    private int taskNum;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a delete command with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskNum The task number of the task to delete.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"        Task task \u003d tasks.deleteTask(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showTaskDeletion(task, tasks.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":28}},{"path":"src/main/java/chatbuddy/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"/** EventCommand represents a command to create an event task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    private String taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a EventCommand with the given description, \u0027from\u0027 and \u0027to\u0027 datetimes.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param from The datetime that the event starts from.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param to The datetime that the events ends at.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"    public EventCommand(String taskDescription, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"        Event event \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showTaskAddition(event, tasks.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":37}},{"path":"src/main/java/chatbuddy/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"/** ExitCommand represents a command to exit the chatbot. */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns true if the command is an exit command, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return True.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":29}},{"path":"src/main/java/chatbuddy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"/** FindCommand represents a command to find a list of tasks containing a keyword. */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    private String keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a FindCommand with the given keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        TaskList matchingTasks \u003d tasks.getMatchingTasks(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d matchingTasks.getTaskStringsToPrint();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showTaskList(taskStrings, \"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Goh-Li-Ting":31}},{"path":"src/main/java/chatbuddy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"/** ListCommand represents a command to show the list of tasks. */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d tasks.getTaskStringsToPrint();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showTaskList(taskStrings, \"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":19}},{"path":"src/main/java/chatbuddy/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"/** MarkCommand represents a command to mark a task as done. */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    private int taskNum;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a MarkCommand with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskNum The task number of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"        Task task \u003d tasks.markTaskAsDone(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showMarkTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":29}},{"path":"src/main/java/chatbuddy/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"/** TodoCommand represents a command to create a todo task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    private String taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a TodoCommand with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"        ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showTaskAddition(todo, tasks.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":30}},{"path":"src/main/java/chatbuddy/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"/** UnmarkCommand represents a command to mark a task as not done. */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    private int taskNum;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of an UnmarkCommand with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskNum The task number of the task to mark as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"        Task task \u003d tasks.markTaskAsNotDone(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        ui.showUnmarkTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":29}},{"path":"src/main/java/chatbuddy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.DeadlineCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.DeleteCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.EventCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.MarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.TodoCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.UnmarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":" * Parser represents a class to handle the parsing of user commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":" * Parser can also parse task data from storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The formatter for deadline inputs. */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT_DEADLINE \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The formatter for event datetime inputs. */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT_EVENT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Parses the user command and returns a Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param commandString The command inputted by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The command to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the command is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static Command parse(String commandString) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"        String[] commandArray \u003d commandString.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"        String command \u003d commandArray[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"        String args \u003d commandArray.length \u003e 1 ? commandArray[1] : \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"            return prepareAddTodo(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Goh-Li-Ting"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Goh-Li-Ting"},"content":"            return prepareAddDeadline(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Goh-Li-Ting"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Goh-Li-Ting"},"content":"            return prepareAddEvent(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Goh-Li-Ting"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Goh-Li-Ting"},"content":"            return prepareDelete(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Goh-Li-Ting"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Goh-Li-Ting"},"content":"            return prepareMark(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Goh-Li-Ting"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Goh-Li-Ting"},"content":"            return prepareUnmark(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Goh-Li-Ting"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Goh-Li-Ting"},"content":"            return new FindCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Goh-Li-Ting"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a TodoCommand based on the arguments provided by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param args The arguments provided by the user. This should be the description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The TodoCommand to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the description of the task is empty or consists only of whitespace.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static TodoCommand prepareAddTodo(String args) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (args.trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Goh-Li-Ting"},"content":"        return new TodoCommand(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a DeadlineCommand based on the arguments provided by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param args The arguments provided by the user. This should be the description and deadline of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The DeadlineCommand to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the description or deadline of the task is empty or consists only of whitespace.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static DeadlineCommand prepareAddDeadline(String args) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Goh-Li-Ting"},"content":"        String[] arr \u003d args.split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Goh-Li-Ting"},"content":"        String taskDescription \u003d arr[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Goh-Li-Ting"},"content":"        // check validity of arguments","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (taskDescription.equals(\"\") || arr.length \u003d\u003d 1 || arr[1].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input deadlines in the format \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"\u0027deadline [task description] /by [deadline in dd/MM/yyyy]\u0027.\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"The task description and deadline cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Goh-Li-Ting"},"content":"        // parse deadline string to LocalDate object","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Goh-Li-Ting"},"content":"        LocalDate date \u003d parseDate(arr[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Goh-Li-Ting"},"content":"        return new DeadlineCommand(taskDescription, date);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns an EventCommand based on the arguments provided by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param args The arguments provided by the user. This should be the description,","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Goh-Li-Ting"},"content":"     *             the \u0027from\u0027 datetime and the \u0027to\u0027 datetime task.","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The EventCommand to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the description, \u0027from\u0027 or \u0027to\u0027 datetime is empty of consists only of whitespaces.","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static EventCommand prepareAddEvent(String args) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Goh-Li-Ting"},"content":"        // check validity of arguments","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Goh-Li-Ting"},"content":"        String[] arr \u003d args.split(\" /from \");","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Goh-Li-Ting"},"content":"        String taskDescription \u003d arr[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (taskDescription.equals(\"\") || arr.length \u003d\u003d 1 || arr[1].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input events in the format \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"\u0027event [task description] /from [dd/MM/yyyy HHmm] /to [dd/MM/yyyy HHmm]\u0027.\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"The task description, from datetime and to datetime cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Goh-Li-Ting"},"content":"        String[] dateTimeArgs \u003d arr[1].trim().split(\" /to \");","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (dateTimeArgs[0].trim().equals(\"\") || dateTimeArgs.length \u003d\u003d 1 || dateTimeArgs[1].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input events in the format \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"\u0027event [task description] /from [dd/MM/yyyy HHmm] /to [dd/MM/yyyy HHmm]\u0027.\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"The task description, from datetime and to datetime cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"Goh-Li-Ting"},"content":"        // parse date time arguments to LocalDateTime object","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"Goh-Li-Ting"},"content":"        LocalDateTime from \u003d parseDateTime(dateTimeArgs[0].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"Goh-Li-Ting"},"content":"        LocalDateTime to \u003d parseDateTime(dateTimeArgs[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"Goh-Li-Ting"},"content":"        return new EventCommand(taskDescription, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a DeleteCommand based on the arguments provided by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param args The arguments provided by the user. This should be the task number of the task to delete.","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The DeleteCommand to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the task number is not a numerical number.","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static DeleteCommand prepareDelete(String args) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"Goh-Li-Ting"},"content":"            int taskNum \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"Goh-Li-Ting"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input a valid task number in digits (e.g. 1).\");","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a MarkCommand based on the arguments provided by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param args The arguments provided by the user. This should be the task number of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The MarkCommand to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the task number is not a numerical number.","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static MarkCommand prepareMark(String args) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"Goh-Li-Ting"},"content":"            int taskNum \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"Goh-Li-Ting"},"content":"            return new MarkCommand(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input a valid task number in digits (e.g. 1).\");","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns an UnmarkCommand based on the arguments provided by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param args The arguments provided by the user. This should be the task number of the task to mark as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The UnmarkCommand to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the task number is not a numerical number.","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static UnmarkCommand prepareUnmark(String args) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"Goh-Li-Ting"},"content":"            int taskNum \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"Goh-Li-Ting"},"content":"            return new UnmarkCommand(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input a valid task number in digits (e.g. 1).\");","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a LocalDate object parsed from the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param dateString The string representing the date in the format dd/MM/yyyy.","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The LocalDate object parsed from the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the input string is in the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static LocalDate parseDate(String dateString) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDate date \u003d LocalDate.parse(dateString, FORMATTER_INPUT_DEADLINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"Goh-Li-Ting"},"content":"            return date;","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input the deadline date in the format dd/MM/yyyy.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a LocalDateTime object parsed from the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param dateTimeString The string representing the datetime in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The LocalDateTime object parsed from the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the input string is in the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, FORMATTER_INPUT_EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"Goh-Li-Ting"},"content":"            return dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Please input the datetime in the format dd/MM/yyyy HHmm.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a Task object parsed from the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskString The string representing the task in saved format.","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The Task object parsed from the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If the input string is in the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"Goh-Li-Ting"},"content":"    public static Task parseToTask(String taskString) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"Goh-Li-Ting"},"content":"        String[] taskData \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"Goh-Li-Ting"},"content":"        String taskType \u003d taskData[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"Goh-Li-Ting"},"content":"        boolean isCompleted \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"Goh-Li-Ting"},"content":"        String taskDescription \u003d taskData[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"Goh-Li-Ting"},"content":"        // create task object","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"Goh-Li-Ting"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"Goh-Li-Ting"},"content":"            task \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"Goh-Li-Ting"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDate by \u003d parseDate(taskData[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"Goh-Li-Ting"},"content":"            task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"Goh-Li-Ting"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDateTime from \u003d parseDateTime(taskData[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDateTime to \u003d parseDateTime(taskData[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"Goh-Li-Ting"},"content":"            task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"Goh-Li-Ting"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Error parsing data from file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"Goh-Li-Ting"},"content":"        // update completion status","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-09-01"},{"lineNumber":258,"author":{"gitId":"Goh-Li-Ting"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"Goh-Li-Ting"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":263}},{"path":"src/main/java/chatbuddy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":" * Storage represents a class to handle operations relating to the local storage of task data.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":" * Data from TaskList can be saved into or loaded from the local storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The filepath of the file containing the task data. */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a Storage object with the given filepath.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param filePath The filepath of the file containing the task data.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Loads the task data from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return A list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If there is an error creating or finding the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"    public ArrayList\u003cTask\u003e load() throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"        // load file from hard disk","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"        File parentDirectory \u003d file.getParentFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"        // check for existence of parentDirectory and file","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (!parentDirectory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"            parentDirectory.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"                throw new ChatBuddyException(\"Error creating data file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"        // load data from file","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Goh-Li-Ting"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Goh-Li-Ting"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Goh-Li-Ting"},"content":"                // populate task array","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Goh-Li-Ting"},"content":"                Task task \u003d Parser.parseToTask(fileScanner.nextLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Goh-Li-Ting"},"content":"                taskList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Goh-Li-Ting"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Data file not found.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Goh-Li-Ting"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Saves the task data into the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Date in the file is overwritten.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @throws ChatBuddyException If there is an error saving data into the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void save(TaskList tasks) throws ChatBuddyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Goh-Li-Ting"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Goh-Li-Ting"},"content":"            ArrayList\u003cString\u003e taskStrings \u003d tasks.getTaskStringsToSave();","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Goh-Li-Ting"},"content":"            for (String taskString : taskStrings) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Goh-Li-Ting"},"content":"                fileWriter.write(taskString + System.lineSeparator());","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Goh-Li-Ting"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Goh-Li-Ting"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Goh-Li-Ting"},"content":"            throw new ChatBuddyException(\"Error saving data into file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":92}},{"path":"src/main/java/chatbuddy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":" * Deadline represents a Deadline object in ChatBuddy.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":" * A deadline is a task that has a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The formatter used for date inputs. */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static final DateTimeFormatter FORMATTER_DATE_INPUT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The formatter used for date outputs. */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static final DateTimeFormatter FORMATTER_DATE_OUTPUT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a Deadline object with the given description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a boolean representing whether the task is due within a week.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return True if the deadline is due within a week, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"    public boolean isWithinAWeek() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"        return by.isBefore(LocalDate.now().plus(1, ChronoUnit.WEEKS));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(FORMATTER_DATE_OUTPUT) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns deadline task information in format for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"     * The format is D | [1 if completed, 0 if not completed] | [task description] | [by].","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The deadline task information in format for saving.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String getInformationForSaving() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"        return \"D | \" + super.getInformationForSaving() + \" | \" + by.format(FORMATTER_DATE_INPUT);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Goh-Li-Ting":57}},{"path":"src/main/java/chatbuddy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":" * Event represents an Event object in ChatBuddy.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":" * An event is a task that has a \u0027from\u0027 datetime and a \u0027to\u0027 datetime.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The formatter used for datetime inputs. */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static final DateTimeFormatter FORMATTER_DATETIME_INPUT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The formatter used for datetime outputs. */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    private static final DateTimeFormatter FORMATTER_DATETIME_OUTPUT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The \u0027from\u0027 datetime of the task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The \u0027to\u0027 datetime of the task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Constructor to create an Event object.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param description The task description.","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param from The task\u0027s start date/time in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param to The task\u0027s end date/time in the format.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a boolean representing whether the event starts within a week.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return True if the event starts within a week, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"    public boolean isWithinAWeek() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"        return from.isBefore(LocalDateTime.now().plus(1, ChronoUnit.WEEKS));","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"        return String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"                \"[E]%1s (from: %2s to: %3s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"                super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"                from.format(FORMATTER_DATETIME_OUTPUT),","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"                to.format(FORMATTER_DATETIME_OUTPUT)","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns deadline task information in format for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Goh-Li-Ting"},"content":"     * The format is E | [1 if completed, 0 if not completed] | [task description] | [from] | [to].","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The event task information in format for saving.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String getInformationForSaving() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Goh-Li-Ting"},"content":"        return String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Goh-Li-Ting"},"content":"                \"E | %1s | %2s | %3s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Goh-Li-Ting"},"content":"                super.getInformationForSaving(),","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Goh-Li-Ting"},"content":"                from.format(FORMATTER_DATETIME_INPUT),","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Goh-Li-Ting"},"content":"                to.format(FORMATTER_DATETIME_INPUT));","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Goh-Li-Ting":70}},{"path":"src/main/java/chatbuddy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":" * Task represents a Task object in ChatBuddy.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":" * A task has a description and a boolean representing whether the task is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The description of the task. */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** The boolean representing whether the task is done. */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates a Task object with a given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"     * The task object is not done by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Marks the task as done. */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Marks the task as not done. */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns the status icon of the task based on whether the task is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The status icon of the task. Returns X if task is done, else returns an empty space.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns a boolean representing whether the task is due or an event starts within a week.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return True if task is due or starts within a week, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"    public boolean isWithinAWeek() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"        return String.format(\"[%1s] %2s\", getStatusIcon(), description);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns task information in format for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Goh-Li-Ting"},"content":"     * The format is [1 if completed, 0 if not completed] | [task description].","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The task information in format for saving.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String getInformationForSaving() {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Goh-Li-Ting"},"content":"        return String.format(\"%1s | %2s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Checks if the description of the task contains the given keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return True if the description contains the keyword, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Goh-Li-Ting"},"content":"    public boolean containKeyword(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Goh-Li-Ting"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Goh-Li-Ting":77}},{"path":"src/main/java/chatbuddy/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":" * ToDo represents a ToDo object in ChatBuddy.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":" * A todo object is a task and has a description and a boolean representing whether the task is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Creates an instance of a ToDo object with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Returns todo task information in format for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"     * The format is T | [1 if completed, 0 if not completed] | [task description].","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The todo task information in format for saving.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String getInformationForSaving() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"        return \"T | \" + super.getInformationForSaving();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Goh-Li-Ting":33}},{"path":"src/main/java/chatbuddy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":" * The Ui class handles interactions with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":" * It reads inputs from the users and output messages to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    private final String DIVIDER \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Creates an instance of an Ui object. */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Prints out a divider. */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(this.DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Prints the welcome message. */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"    Hello! I\u0027m Chat Buddy!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Prints the exit message. */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"    /** Prints the error message. */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"    \" + errorMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Reads the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @return The user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Prints a list of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param taskStrings The list of tasks represented by Strings.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param message The message to print before the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showTaskList(ArrayList\u003cString\u003e taskStrings, String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"    \" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Goh-Li-Ting"},"content":"        for (int i \u003d 0; i \u003c taskStrings.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Goh-Li-Ting"},"content":"            String taskString \u003d taskStrings.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Goh-Li-Ting"},"content":"            System.out.println(String.format(\"    %1s.%2s\", i + 1, taskString));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Prints a confirmation message about the addition of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param totalNumOfTasks The number of tasks after the task was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showTaskAddition(Task task, int totalNumOfTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(String.format(\"    Now you have %d tasks in the list.\", totalNumOfTasks));","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Prints a confirmation message about the deletion of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param totalNumOfTasks The number of tasks after the task was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showTaskDeletion(Task task, int totalNumOfTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(String.format(\"    Now you have %d tasks in the list.\", totalNumOfTasks));","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Prints a confirmation message about a task being marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showMarkTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Goh-Li-Ting"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Goh-Li-Ting"},"content":"     * Prints a confirmation message about a task being marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Goh-Li-Ting"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Goh-Li-Ting"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Goh-Li-Ting"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void showUnmarkTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Goh-Li-Ting"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":110}},{"path":"src/test/java/chatbuddy/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void getTaskStringsToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"        // set up task list","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"        ToDo taskOne \u003d new ToDo(\"task1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"        ToDo taskTwo \u003d new ToDo(\"task2\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"        tasks.addTask(taskOne);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"        tasks.addTask(taskTwo);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"        taskTwo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d tasks.getTaskStringsToSave();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(2, taskStrings.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(\"T | 0 | task1\", taskStrings.get(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(\"T | 1 | task2\", taskStrings.get(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":27}},{"path":"src/test/java/chatbuddy/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.ChatBuddyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import chatbuddy.command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void parse_listCommandWord_listCommandReturned() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"            Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(ListCommand.class, command.getClass());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"            Command command \u003d Parser.parse(\"list abcdefg\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(ListCommand.class, command.getClass());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void parse_invalidCommandWord_chatBuddyExceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"hi\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"Bye\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void parse_missingTodoDescription_chatBuddyExceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"todo      \");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void parse_invalidDeadlineInput_chatBuddyExceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Goh-Li-Ting"},"content":"        String errorMessage \u003d \"☹ OOPS!!! Please input deadlines in the format \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"\u0027deadline [task description] /by [deadline in dd/MM/yyyy]\u0027.\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Goh-Li-Ting"},"content":"                    \"The task description and deadline cannot be empty.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Goh-Li-Ting"},"content":"        String dateFormatErrorMessage \u003d \"☹ OOPS!!! Please input the deadline date in the format dd/MM/yyyy.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"deadline    \");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(errorMessage, e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"deadline /by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(errorMessage, e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"deadline xx /by    \");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(errorMessage, e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"deadline task /by Sunday\");","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(dateFormatErrorMessage, e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Goh-Li-Ting"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Goh-Li-Ting"},"content":"            Parser.parse(\"deadline task /by 01/09/2023 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Goh-Li-Ting"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Goh-Li-Ting"},"content":"        } catch (ChatBuddyException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Goh-Li-Ting"},"content":"            assertEquals(dateFormatErrorMessage, e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Goh-Li-Ting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":107}},{"path":"src/test/java/chatbuddy/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"    // create event object","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    LocalDateTime from \u003d LocalDateTime.parse(\"01/09/2023 1000\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    LocalDateTime to \u003d LocalDateTime.parse(\"01/09/2023 1732\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"    Event event \u003d new Event(\"event1\", from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void getInformationForSaving() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(\"E | 0 | event1 | 01/09/2023 1000 | 01/09/2023 1732\", event.getInformationForSaving());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":20}},{"path":"src/test/java/chatbuddy/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"package chatbuddy.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"    Task todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Goh-Li-Ting"},"content":"    Task deadline \u003d new Deadline(\"return book\",","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDate.parse(\"23/09/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Goh-Li-Ting"},"content":"    );","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Goh-Li-Ting"},"content":"    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Goh-Li-Ting"},"content":"    Task event \u003d new Event(","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"            \"go out\",","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDateTime.parse(\"01/09/2023 1000\", dateTimeFormatter),","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Goh-Li-Ting"},"content":"            LocalDateTime.parse(\"01/09/2023 1732\", dateTimeFormatter)","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Goh-Li-Ting"},"content":"    );","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Goh-Li-Ting"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Goh-Li-Ting"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Goh-Li-Ting"},"content":"        event.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(true, todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(true, deadline.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(true, event.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Goh-Li-Ting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Goh-Li-Ting"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Goh-Li-Ting"},"content":"        todo.markAsNotDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Goh-Li-Ting"},"content":"        deadline.markAsNotDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Goh-Li-Ting"},"content":"        event.markAsNotDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Goh-Li-Ting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(false, todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(false, deadline.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Goh-Li-Ting"},"content":"        assertEquals(false, event.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Goh-Li-Ting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Goh-Li-Ting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Goh-Li-Ting":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Goh-Li-Ting"},"content":"todo buy groceries","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Goh-Li-Ting"},"content":"deadline do homework /by 02/09/2023","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Goh-Li-Ting"},"content":"event birthday party /from 03/09/2023 1400 /to 03/09/2023 1700","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Goh-Li-Ting"},"content":"deadline return book /by 10/12/2023","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Goh-Li-Ting"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Goh-Li-Ting"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Goh-Li-Ting"},"content":"todo read book","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Goh-Li-Ting"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Goh-Li-Ting"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"find book","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Goh-Li-Ting"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Goh-Li-Ting"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Goh-Li-Ting":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Goh-Li-Ting"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\chatbuddy\\*.java","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Goh-Li-Ting"},"content":"java -classpath ..\\bin chatbuddy.ChatBuddy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Goh-Li-Ting":2}}]
