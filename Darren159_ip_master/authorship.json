[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Darren159":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":20,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Darren159":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":" * Represents the main Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     * @param filePath The path to the file where the task data is stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"            assert c !\u003d null : \"Command should not be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"                return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"                return ui.showInvalidCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Darren159":42,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Darren159":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    private final Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Darren159":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Darren159":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":" * Represents a parser that parses user input to create appropriate Command objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"     * Enum to identify types of commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    public enum CommandType {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"        LIST, DELETE, MARK, UNMARK, ADD, UNKNOWN, BYE, FIND","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     * Parses the user input and returns the appropriate Command object.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     * @param userInput The string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"     * @return A Command object representing the user\u0027s desired action.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"     * @throws InvalidCommandException If the user input is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    public static Command parse(String userInput) throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        CommandType commandType \u003d parseCommand(userInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"        case LIST:","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"        case DELETE:","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"            // Extract the index to delete","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"            int deleteIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"        case MARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"            // Extract the index to mark","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"            int markIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"            return new MarkCommand(markIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"            // Extract the index to unmark","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"            int unmarkIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"            return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"        case ADD:","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"            if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"                if (userInput.equals(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Darren159"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Darren159"},"content":"                String taskName \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Darren159"},"content":"                return new AddCommand(new Todo(taskName));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Darren159"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Darren159"},"content":"                String trim \u003d userInput.substring(userInput.indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Darren159"},"content":"                if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Darren159"},"content":"                    int deadlineIndex \u003d trim.indexOf(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Darren159"},"content":"                    String taskDeadline \u003d trim.substring(deadlineIndex + 4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Darren159"},"content":"                    String taskName \u003d trim.substring(0, deadlineIndex).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Darren159"},"content":"                    return new AddCommand(new Deadline(taskName, taskDeadline));","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Darren159"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Darren159"},"content":"                    int fromIndex \u003d trim.indexOf(\"/from\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Darren159"},"content":"                    int toIndex \u003d trim.indexOf(\"/to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Darren159"},"content":"                    String taskFrom \u003d trim.substring(fromIndex + 6, toIndex - 1).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Darren159"},"content":"                    String taskTo \u003d trim.substring(toIndex + 4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Darren159"},"content":"                    String taskName \u003d trim.substring(0, fromIndex).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Darren159"},"content":"                    return new AddCommand(new Event(taskName, taskFrom, taskTo));","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Darren159"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Darren159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Darren159"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Darren159"},"content":"        case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Darren159"},"content":"            String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Darren159"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Darren159"},"content":"        case BYE:","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Darren159"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Darren159"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Darren159"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Darren159"},"content":"        return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Darren159"},"content":"     * Determines the type of command based on the given user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Darren159"},"content":"     * @param userInput The string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Darren159"},"content":"     * @return CommandType indicating the type of command.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Darren159"},"content":"    private static CommandType parseCommand(String userInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Darren159"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Darren159"},"content":"            return CommandType.BYE;","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Darren159"},"content":"        } else if (userInput.startsWith(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Darren159"},"content":"            return CommandType.LIST;","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Darren159"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Darren159"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Darren159"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Darren159"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Darren159"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Darren159"},"content":"            return CommandType.MARK;","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Darren159"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Darren159"},"content":"            return CommandType.FIND;","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Darren159"},"content":"        } else if (userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Darren159"},"content":"            return CommandType.ADD;","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Darren159"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Darren159"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":120}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":" * Represents a storage for saving and loading task data to and from disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"     * The path to the file where the task data is stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     * @param filePath The path to the file where the task data is stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"        // Create data folder and file if they don\u0027t exist","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"        File folder \u003d file.getParentFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"     * Loads the task data from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"     * @return List of tasks loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"     * @throws InvalidCommandException If the task data in the file is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"    public List\u003cTask\u003e load() throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"        try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Darren159"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Darren159"},"content":"                Task task \u003d parseFromFile(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Darren159"},"content":"                list.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Darren159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Darren159"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Darren159"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Darren159"},"content":"        assert list !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"Darren159"},"content":"        return list;","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Darren159"},"content":"     * Saves the task data to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Darren159"},"content":"     * @param list List of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Darren159"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Darren159"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Darren159"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Darren159"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Darren159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Darren159"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Darren159"},"content":"            System.out.println(\"An error occurred while saving tasks to disk.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Darren159"},"content":"     * Parses a line from the storage file to generate a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Darren159"},"content":"     * @param line The line of task data to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Darren159"},"content":"     * @return TA Task object corresponding to the given line.","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Darren159"},"content":"     * @throws InvalidCommandException If the task data in the file is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Darren159"},"content":"    private static Task parseFromFile(String line) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Darren159"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Darren159"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Darren159"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Darren159"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Darren159"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Darren159"},"content":"        switch (type) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Darren159"},"content":"        case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Darren159"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Darren159"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Darren159"},"content":"        case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Darren159"},"content":"            String deadline \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Darren159"},"content":"            task \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Darren159"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Darren159"},"content":"        case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Darren159"},"content":"            String eventTime \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Darren159"},"content":"            int toIndex \u003d eventTime.indexOf(\"to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Darren159"},"content":"            String from \u003d eventTime.substring(0, toIndex).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Darren159"},"content":"            String to \u003d eventTime.substring(toIndex + 2).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Darren159"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Darren159"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Darren159"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Darren159"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Darren159"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"Darren159"},"content":"            task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Darren159"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":127}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":" * Represents a list of Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"     * The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     * Constructs a new empty TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Constructs a new TaskList object with the given list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"        assert tasks.contains(task) : \"Task should be in the list\";","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"     * Deletes a task by its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"     * @return The deleted Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"        return this.tasks.remove(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"     * Marks a task as done by its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"     * @param index The index of the task to mark.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"     * @return The marked Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Darren159"},"content":"    public Task mark(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Darren159"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Darren159"},"content":"        task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Darren159"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Darren159"},"content":"     * Unmarks a task as done by its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Darren159"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Darren159"},"content":"     * @return The unmarked Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Darren159"},"content":"    public Task unmark(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Darren159"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Darren159"},"content":"        task.markUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Darren159"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Darren159"},"content":"     * Finds tasks by keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Darren159"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Darren159"},"content":"     * @return The list of tasks found.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Darren159"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Darren159"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Darren159"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Darren159"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Darren159"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Darren159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Darren159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Darren159"},"content":"        return new TaskList(foundTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Darren159"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Darren159"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Darren159"},"content":"    public int getListSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Darren159"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Darren159"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"Darren159"},"content":"        return tasks.stream();","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Darren159"},"content":"     * Provides an iterator for the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Darren159"},"content":"     * @return An iterator over the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Darren159"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Darren159"},"content":"        return this.tasks.iterator();","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":118}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"        String logo \u003d \"    ___    _   ___   ________  __      ____      __________  ____  _   __\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"                + \"   /   |  / | / / | / / __ \\\\ \\\\/ /     / __ \\\\    /_  __/ __ \\\\/ __ \\\\/ | / /\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"                + \"  / /| | /  |/ /  |/ / / / /\\\\  /_____/ / / /_____/ / / /_/ / / / /  |/ / \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"                + \" / ___ |/ /|  / /|  / /_/ / / /_____/ /_/ /_____/ / / _, _/ /_/ / /|  /  \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"                + \"/_/  |_/_/ |_/_/ |_/\\\\____/ /_/      \\\\____/     /_/ /_/ |_|\\\\____/_/ |_/   \\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"        String horizontalLine \u003d \"__________________________________________________________________________\";","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"        return horizontalLine + logo + \"Hello! I\u0027m ANNOY-O-TRON!\\nWhat can I do for you?\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"                + horizontalLine;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"    public String showBye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"     * Prints the error message when loading tasks from file.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        return \"Error loading tasks from file.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"     * Prints the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"     * @param message The error message to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"        return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"     * Prints the message when a task is added.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"     * @param task The task that is added.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"    public String showAddedTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"     * Prints the message when a task is deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Darren159"},"content":"     * @param task The task that is deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Darren159"},"content":"    public String showDeletedTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Darren159"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Darren159"},"content":"     * Prints the message when a task is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Darren159"},"content":"     * @param task The task that is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Darren159"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Darren159"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Darren159"},"content":"     * Prints the message when a task is marked as not done yet.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Darren159"},"content":"     * @param task The task that is marked as not done yet.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Darren159"},"content":"    public String showUnmarkedTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"Darren159"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Darren159"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Darren159"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Darren159"},"content":"        String message \u003d tasks.stream()","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"Darren159"},"content":"                .map(Task::toString)","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"Darren159"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"Darren159"},"content":"        return \"Here are the tasks in your list:\\n\" + message;","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Darren159"},"content":"     * Prints the list of tasks found by the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks found by the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Darren159"},"content":"    public String showFoundTasks(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"Darren159"},"content":"        String message \u003d tasks.stream()","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"Darren159"},"content":"                .map(Task::toString)","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"Darren159"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"Darren159"},"content":"        return \"Here are the matching tasks in your list:\\n\" + message;","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Darren159"},"content":"     * Prints the current number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Darren159"},"content":"     * @param taskList The current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Darren159"},"content":"    public String showNumberOfTasks(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"Darren159"},"content":"        return \"Now you have \" + taskList.getListSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Darren159"},"content":"    public String showInvalidCommand() {","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"Darren159"},"content":"        return \"Invalid command. Please try again.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":121}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"     * The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    private final Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     * Constructs a new AddCommand object with the specified task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"     * Executes the addition of the task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Updates the UI and saves the updated list to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"        return ui.showAddedTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" * This serves as the base class for all specific command types.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"     * Checks if the command should cause the program to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"     * @return False by default, can be overridden by specific commands that cause exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" * Represents a command to delete a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     * The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    private final int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     * Constructs a new DeleteCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Executes the deletion of the task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     * Updates the UI and saves the updated list to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        Task task \u003d tasks.delete(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"        return ui.showDeletedTask(task) + ui.showNumberOfTasks(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":41}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"     * Executes the exit command, shows the exit message on UI.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"        return ui.showBye();","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"     * Indicates that this command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"     * @return true, as it is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" * Represents a command to find tasks by keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"     * The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     * Constructs a new FindCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"     * Executes the search for tasks by keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Updates the UI.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"        TaskList foundTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        return ui.showFoundTasks(foundTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"     * Executes the list command, displaying the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":23}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     * The index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    private final int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     * Constructs a new MarkCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Executes the mark command, marking the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     * Updates the UI and saves the updated list to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        Task task \u003d tasks.mark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"        return ui.showMarkedTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":41}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     * The index of the task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    private final int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     * Constructs a new UnmarkCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Executes the unmark command, marking the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     * Updates the UI and saves the updated list to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     * @param ui The UI for user interaction.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"        Task task \u003d tasks.unmark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"        return ui.showUnmarkedTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":41}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"     * @param errorMessage The specific error message for this exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Darren159":16}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":" * Represents an exception that is thrown when a todo task has an empty description.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"     * Constructs a new EmptyDescriptionException with a default error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"        super(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Darren159":14}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":" * Represents an exception that is thrown when an invalid command is provided.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"     * Constructs a new InvalidCommandException with a default error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"     * The deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"     * Constructs a new Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(formatter) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the Deadline task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the Deadline task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"        return \"D\" + super.toFileString() + \" | \" + this.deadline.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Darren159":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":" * Represents an Event task with a specific time range.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"     * The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"     * The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(formatter) + \" to: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"                + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the Event task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the Event task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.from.format(formatter)","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"                + \" to \" + this.to.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Darren159":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":" * Represents a generic task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"     * The status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     * Constructs a new Task object with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"Darren159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"Darren159"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Darren159"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Darren159"},"content":"        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Darren159":79}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"     * Constructs a new Todo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"     * Returns the string representation of the Todo task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"     * @return String representation of the Todo task to be saved in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Darren159":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Darren159":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Darren159":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"    public void testParseListCommand() throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"    public void testParseDeleteCommand() throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"        Command command \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"    public void testParseMarkCommand() throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"    public void testParseUnmarkCommand() throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"        Command command \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"    public void testParseAddCommand() throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"        Command command \u003d Parser.parse(\"todo Test\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Darren159"},"content":"    public void testParseExitCommand() throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Darren159"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Darren159"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Darren159"},"content":"    public void testInvalidCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Darren159"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.parse(\"invalid_command\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":60}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"public class UiTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Darren159"},"content":"    public void testShowWelcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Darren159"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Darren159"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Darren159"},"content":"        String expected \u003d \"__________________________________________________________________________\"","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"Darren159"},"content":"                + \"    ___    _   ___   ________  __      ____      __________  ____  _   __\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"Darren159"},"content":"                + \"   /   |  / | / / | / / __ \\\\ \\\\/ /     / __ \\\\    /_  __/ __ \\\\/ __ \\\\/ | / /\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Darren159"},"content":"                + \"  / /| | /  |/ /  |/ / / / /\\\\  /_____/ / / /_____/ / / /_/ / / / /  |/ / \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Darren159"},"content":"                + \" / ___ |/ /|  / /|  / /_/ / / /_____/ /_/ /_____/ / / _, _/ /_/ / /|  /  \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Darren159"},"content":"                + \"/_/  |_/_/ |_/_/ |_/\\\\____/ /_/      \\\\____/     /_/ /_/ |_|\\\\____/_/ |_/   \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Darren159"},"content":"                + \"Hello! I\u0027m ANNOY-O-TRON!\\nWhat can I do for you?\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Darren159"},"content":"                + \"__________________________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Darren159"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Darren159"},"content":"    public void testShowBye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Darren159"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Darren159"},"content":"        ui.showBye();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Darren159"},"content":"        String expected \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Darren159"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Darren159"},"content":"    @AfterEach","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Darren159"},"content":"    public void tearDown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Darren159"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":49}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Darren159"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Darren159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Darren159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Darren159"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Darren159"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Darren159"},"content":"        Todo todo \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Darren159"},"content":"        String expected \u003d \"[T][ ] Sample Task\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Darren159"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Darren159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Darren159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Darren159"},"content":"    public void testToFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Darren159"},"content":"        Todo todo \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Darren159"},"content":"        String expected \u003d \"T | 0 | Sample Task\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Darren159"},"content":"        assertEquals(expected, todo.toFileString());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Darren159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Darren159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Darren159":21}}]
