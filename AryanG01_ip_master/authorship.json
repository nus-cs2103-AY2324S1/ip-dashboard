[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"# Axela User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"Welcome to Axela, your personal AI assistant! This guide will help you get started and make the most of Axela\u0027s","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"features.","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"## Table of Contents","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"- [Usage](#usage)","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"    - [Adding a Task](#adding-a-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"    - [Exiting the Application](#exiting-the-application)","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    - [Deleting a Task](#deleting-a-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    - [Searching for Tasks](#searching-for-tasks)","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    - [Finding the Features](#finding-the-features)","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    - [Greeting Alexa](#greeting-alexa)","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    - [Listing Tasks](#listing-tasks)","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    - [Marking a Task as Done](#marking-a-task-as-done)","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"    - [Marking a Task as Not Done](#marking-a-task-as-not-done)","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"## Features","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"### Task Management","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"Axela can help you manage your tasks efficiently. You can add, delete, mark as done, mark as not done, and list","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"tasks. There are three types of tasks:","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"1. **Todo** - Simple tasks with specific dates indicating from when to when do we carry out the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"2. **Deadline** - Tasks with a deadline date.","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"3. **Event** - Tasks that happen at a specific time.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"### Priority Tracking","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"You can set priorities for your tasks, allowing you to focus on what\u0027s most important. Axela supports three priority","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"levels: High, Medium, and Low.","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"### Task Search","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"Easily find tasks by searching for keywords or dates. Axela will display tasks matching your search criteria.","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"## Usage","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"### Adding a Task","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"To add a task, use one of the following commands:","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"- `todo [task description] /from [YYYY-MM-DD] /from [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"- `todo [task description] /priority low /from [YYYY-MM-DD] /from [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"- `deadline [task description] /by [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"- `deadline [task description] /priority medium /by [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"- `event [task description] /at [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"- `event [task description] /priority high /at [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"todo Buy groceries /priroity high /from 2023-09-22 /to 2023-12-10","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"deadline Coding Assignment /priroity medium /by 2019-12-12","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"event printing workshop /priroity low /at 2024-01-31","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"### Exiting the Application","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"To exit the application, use:","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"- `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"bye","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"### Deleting a Task","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"You can remove a task by specifying its index:","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"- `delete [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"delete 2","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"AryanG01"},"content":"### Searching for Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"AryanG01"},"content":"Find tasks by keywords or dates with:","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"AryanG01"},"content":"- `find [keyword]`","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"AryanG01"},"content":"find important","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"AryanG01"},"content":"### Finding the Features","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"AryanG01"},"content":"Find what are the different commands possible:","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"AryanG01"},"content":"- `help`","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"AryanG01"},"content":"help","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"AryanG01"},"content":"### Greeting Alexa","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"AryanG01"},"content":"To greet Alexa, use:","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"AryanG01"},"content":"- `hi`","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"AryanG01"},"content":"hi","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"AryanG01"},"content":"### Listing Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"AryanG01"},"content":"To see all your tasks, use:","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"AryanG01"},"content":"- `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"AryanG01"},"content":"list","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"AryanG01"},"content":"### Marking a Task as Done","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"AryanG01"},"content":"Mark a task as done using:","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"AryanG01"},"content":"- `mark [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"AryanG01"},"content":"mark 1","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"AryanG01"},"content":"### Marking a Task as Not Done","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"AryanG01"},"content":"Mark a task as not done using:","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"AryanG01"},"content":"- `unmark [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"AryanG01"},"content":"unmark 1","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"AryanG01"},"content":"This user guide provides a brief overview of Axela\u0027s key features and how to use them effectively. Feel free to explore","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"AryanG01"},"content":"and make the most of your AI assistant!","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"-":6,"AryanG01":142}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"mainClassName \u003d \u0027duke.gui.Launcher\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"compileJava {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    sourceCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    targetCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"AryanG01":30}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"# Axela User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"Welcome to Axela, your personal AI assistant! This guide will help you get started and make the most of Axela\u0027s","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"features.","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"## Table of Contents","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"- [Usage](#usage)","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"    - [Adding a Task](#adding-a-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"    - [Exiting the Application](#exiting-the-application)","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    - [Deleting a Task](#deleting-a-task)","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    - [Searching for Tasks](#searching-for-tasks)","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    - [Finding the Features](#finding-the-features)","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    - [Greeting Alexa](#greeting-alexa)","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    - [Listing Tasks](#listing-tasks)","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    - [Marking a Task as Done](#marking-a-task-as-done)","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"    - [Marking a Task as Not Done](#marking-a-task-as-not-done)","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"### Task Management","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"Axela can help you manage your tasks efficiently. You can add, delete, mark as done, mark as not done, and list","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"tasks. There are three types of tasks:","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"1. **Todo** - Simple tasks with specific dates indicating from when to when do we carry out the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"2. **Deadline** - Tasks with a deadline date.","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"3. **Event** - Tasks that happen at a specific time.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"### Priority Tracking","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"You can set priorities for your tasks, allowing you to focus on what\u0027s most important. Axela supports three priority","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"levels: High, Medium, and Low.","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"### Task Search","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"Easily find tasks by searching for keywords or dates. Axela will display tasks matching your search criteria.","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"### Adding a Task","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"To add a task, use one of the following commands:","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"- `todo [task description] /from [YYYY-MM-DD] /from [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"- `todo [task description] /priority low /from [YYYY-MM-DD] /from [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"- `deadline [task description] /by [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"- `deadline [task description] /priority medium /by [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"- `event [task description] /at [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"- `event [task description] /priority high /at [YYYY-MM-DD]`","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"todo Buy groceries /priroity high /from 2023-09-22 /to 2023-12-10","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"deadline Coding Assignment /priroity medium /by 2019-12-12","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"event printing workshop /priroity low /at 2024-01-31","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"### Exiting the Application","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"To exit the application, use:","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"- `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"bye","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"### Deleting a Task","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"You can remove a task by specifying its index:","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"- `delete [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"delete 2","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"AryanG01"},"content":"### Searching for Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"AryanG01"},"content":"Find tasks by keywords or dates with:","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"AryanG01"},"content":"- `find [keyword]`","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"AryanG01"},"content":"find important","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"AryanG01"},"content":"### Finding the Features","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"AryanG01"},"content":"Find what are the different commands possible:","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"AryanG01"},"content":"- `help`","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"AryanG01"},"content":"help","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"AryanG01"},"content":"### Greeting Alexa","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"AryanG01"},"content":"To greet Alexa, use:","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"AryanG01"},"content":"- `hi`","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"AryanG01"},"content":"hi","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"AryanG01"},"content":"### Listing Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"AryanG01"},"content":"To see all your tasks, use:","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"AryanG01"},"content":"- `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"AryanG01"},"content":"list","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":124,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"AryanG01"},"content":"### Marking a Task as Done","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"AryanG01"},"content":"Mark a task as done using:","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"AryanG01"},"content":"- `mark [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"AryanG01"},"content":"mark 1","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"AryanG01"},"content":"### Marking a Task as Not Done","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"AryanG01"},"content":"Mark a task as not done using:","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"AryanG01"},"content":"- `unmark [task index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"AryanG01"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"AryanG01"},"content":"unmark 1","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"AryanG01"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"AryanG01"},"content":"This user guide provides a brief overview of Axela\u0027s key features and how to use them effectively. Feel free to explore","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"AryanG01"},"content":"and make the most of your AI assistant!","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"-":26,"AryanG01":122}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"E | 0 | H | read (at: 2019-10-15)","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" * The Duke class represents a chatbot application that manages tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":" * Users can add, mark as done, mark as not done, delete, list, and interact with different types of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     * Constructs a Duke object with the specified file path for storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasksFromFile());","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"     * Generates a response to user input based on the provided input command.","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"     * @param input The user input command to process.","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"     * @return A formatted response message based on the input command.","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"            Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"            return command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"            return this.ui.showError(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"     * The main entry point for the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"     * Runs the Duke application, allowing users to interact with it through the command line.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"    public void run() {","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"        this.ui.showHiMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"        String userInput;","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"        do {","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"            String response \u003d getResponse(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"            System.out.println(response);","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"        } while (!userInput.equalsIgnoreCase(\"bye\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"        this.ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":78}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"import duke.command.HiCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"import duke.command.MarkNotDoneCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":" * The Parser class is responsible for parsing user input and converting it into","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":" * executable commands and tasks for the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"public class Parser {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * Parses the user input to determine the appropriate command to execute.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If the input cannot be parsed or is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    public static Command parseCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"        case \"list\":","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        case \"hi\":","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"            return new HiCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"                return new MarkDoneCommand(input.toLowerCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"Please provide a task number to mark as done.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"                return new MarkNotDoneCommand(input.toLowerCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"Please provide a task number to mark as not done.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"                return new DeleteCommand(input.toLowerCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"Please provide a task number to delete.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"        case \"find\":","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"                return new FindCommand(input.toLowerCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"Please provide a description to find.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"        case \"help\":","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"        case \"event\":","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"            return new AddCommand(input.toLowerCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"        default:","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Unrecognized command: \" + input);","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"AryanG01"},"content":"     * Extracts the task index from a user input string.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"AryanG01"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"AryanG01"},"content":"     * @return The task index.","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If the input cannot be parsed or is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"AryanG01"},"content":"    public static int extractTaskIndex(String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"AryanG01"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"AryanG01"},"content":"        assert parts.length \u003e 0 : \"Command parts cannot be empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"AryanG01"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! Please provide the task index.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"AryanG01"},"content":"        return Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"AryanG01"},"content":"     * Extracts the keyword from a user input string for searching tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"AryanG01"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"AryanG01"},"content":"     * @return The extracted keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"AryanG01"},"content":"    public static String extractKeyword(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"AryanG01"},"content":"        return input.substring(\"find\".length()).trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"AryanG01"},"content":"     * Parses the given command and generates a Task object based on its content.","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"AryanG01"},"content":"     * @param command The user command to parse.","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"AryanG01"},"content":"     * @return A Task object representing the parsed command.","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If the command cannot be parsed or is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"AryanG01"},"content":"    public static Task parseTask(String command) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"AryanG01"},"content":"        assert command !\u003d null : \"Command cannot be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"AryanG01"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"AryanG01"},"content":"        TaskPriority priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"AryanG01"},"content":"        String description;","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"AryanG01"},"content":"        Task task;","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"AryanG01"},"content":"        // Check if the command contains \"/priority\"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"AryanG01"},"content":"        if (command.contains(\"/priority\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"AryanG01"},"content":"            String[] priorityParts \u003d command.split(\"/priority\", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"AryanG01"},"content":"            String priorityValue \u003d priorityParts[1].trim().split(\" \")[0]; // Extract the first word as priority","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"AryanG01"},"content":"            priority \u003d TaskPriority.parse(priorityValue); // Parse the priority","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"AryanG01"},"content":"            // Remove the \"/priority\" part from the description","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"AryanG01"},"content":"            parts[1] \u003d parts[1].replace(\" /priority \" + priorityValue, \"\").trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"AryanG01"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"AryanG01"},"content":"            priority \u003d TaskPriority.LOW;","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"AryanG01"},"content":"            TaskType taskType \u003d TaskType.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"AryanG01"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"AryanG01"},"content":"            case TODO:","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"AryanG01"},"content":"                if (parts.length \u003d\u003d 1 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"AryanG01"},"content":"                    throw new DukeException(\"OOPS!!! TODO tasks must have a description.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"AryanG01"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"AryanG01"},"content":"                description \u003d parts[1].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"AryanG01"},"content":"                task \u003d parseTodoTask(description, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"AryanG01"},"content":"                break;","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"AryanG01"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"AryanG01"},"content":"                if (parts.length \u003d\u003d 1 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"AryanG01"},"content":"                    throw new DukeException(\"OOPS!!! DEADLINE tasks must have a description.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"AryanG01"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"AryanG01"},"content":"                description \u003d parts[1].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"AryanG01"},"content":"                task \u003d parseDeadlineTask(description, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"AryanG01"},"content":"                break;","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"AryanG01"},"content":"            case EVENT:","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"AryanG01"},"content":"                if (parts.length \u003d\u003d 1 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"AryanG01"},"content":"                    throw new DukeException(\"OOPS!!! EVENT tasks must have a description.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"AryanG01"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"AryanG01"},"content":"                description \u003d parts[1].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"AryanG01"},"content":"                task \u003d parseEventTask(description, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"AryanG01"},"content":"                break;","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"AryanG01"},"content":"            default:","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"AryanG01"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"AryanG01"},"content":"        return task;","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"AryanG01"},"content":"     * Parses a command string to create a TodoTask object based on its content.","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"AryanG01"},"content":"     * @param description The description of the TodoTask.","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"AryanG01"},"content":"     * @param priority    The priority of the TodoTask.","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"AryanG01"},"content":"     * @return A TodoTask object representing the parsed command.","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If the command cannot be parsed or is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"AryanG01"},"content":"    static Task parseTodoTask(String description, TaskPriority priority) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"AryanG01"},"content":"        String[] descriptionParts \u003d description.split(\" /from \");","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"AryanG01"},"content":"        if (descriptionParts.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! Todo tasks must include \u0027/from\u0027 for date.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"AryanG01"},"content":"        String[] dateRange \u003d descriptionParts[1].split(\" /to \");","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"AryanG01"},"content":"        if (dateRange.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! Todo tasks must include \u0027/to\u0027 for the end date.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":192,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":193,"author":{"gitId":"AryanG01"},"content":"        String taskDescription \u003d descriptionParts[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"AryanG01"},"content":"        LocalDate fromDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"AryanG01"},"content":"            fromDate \u003d LocalDate.parse(dateRange[0].trim());","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"AryanG01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid date format. Please use YYYY-MM-DD format for dates.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"AryanG01"},"content":"        LocalDate toDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"AryanG01"},"content":"            toDate \u003d LocalDate.parse(dateRange[1].trim());","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"AryanG01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid date format. Please use YYYY-MM-DD format for dates.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"AryanG01"},"content":"        if (fromDate.isAfter(toDate)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! \u0027From\u0027 date cannot be later than \u0027to\u0027 date.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"AryanG01"},"content":"        return new TodoTask(taskDescription, fromDate, toDate, false, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":214,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"AryanG01"},"content":"     * Parses a command string to create a DeadlineTask object based on its content.","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"AryanG01"},"content":"     * @param description The description of the DeadlineTask.","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"AryanG01"},"content":"     * @param priority    The priority of the DeadlineTask.","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"AryanG01"},"content":"     * @return A DeadlineTask object representing the parsed command.","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If the command cannot be parsed or is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":224,"author":{"gitId":"AryanG01"},"content":"    static Task parseDeadlineTask(String description, TaskPriority priority) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"AryanG01"},"content":"        String[] deadlineParts \u003d description.split(\" /by \");","lastModifiedDate":"2023-09-21"},{"lineNumber":226,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"AryanG01"},"content":"        if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! Deadline tasks must include \u0027/by\u0027 for date.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":230,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":231,"author":{"gitId":"AryanG01"},"content":"        String taskDescription \u003d deadlineParts[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":232,"author":{"gitId":"AryanG01"},"content":"        LocalDate byDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"AryanG01"},"content":"            byDate \u003d LocalDate.parse(deadlineParts[1].trim());","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"AryanG01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid date format. Please use YYYY-MM-DD format for dates.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"AryanG01"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! Deadline tasks must have a description.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":243,"author":{"gitId":"AryanG01"},"content":"        return new DeadlineTask(taskDescription, byDate, false, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"AryanG01"},"content":"     * Parses a command string to create an EventTask object based on its content.","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":249,"author":{"gitId":"AryanG01"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"AryanG01"},"content":"     * @param priority    The priority of the EventTask.","lastModifiedDate":"2023-09-21"},{"lineNumber":251,"author":{"gitId":"AryanG01"},"content":"     * @return An EventTask object representing the parsed command.","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If the command cannot be parsed or is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":253,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"AryanG01"},"content":"    static Task parseEventTask(String description, TaskPriority priority) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":255,"author":{"gitId":"AryanG01"},"content":"        String[] eventParts \u003d description.split(\" /at \");","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":257,"author":{"gitId":"AryanG01"},"content":"        if (eventParts.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":258,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! Event tasks must include \u0027/at\u0027 for date.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":259,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":260,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":261,"author":{"gitId":"AryanG01"},"content":"        String taskDescription \u003d eventParts[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":262,"author":{"gitId":"AryanG01"},"content":"        LocalDate atDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":263,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":264,"author":{"gitId":"AryanG01"},"content":"            atDate \u003d LocalDate.parse(eventParts[1].trim());","lastModifiedDate":"2023-09-22"},{"lineNumber":265,"author":{"gitId":"AryanG01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":266,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid date format. Please use YYYY-MM-DD format for dates.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":267,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":268,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":269,"author":{"gitId":"AryanG01"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":270,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"OOPS!!! Event tasks must have a description.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":271,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":272,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":273,"author":{"gitId":"AryanG01"},"content":"        return new EventTask(taskDescription, atDate, false, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":274,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":275,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":276,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":277,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":278,"author":{"gitId":"AryanG01"},"content":"     * Parses a line from a file and generates a Task object based on its content.","lastModifiedDate":"2023-09-21"},{"lineNumber":279,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":280,"author":{"gitId":"AryanG01"},"content":"     * @param line The line from the file to parse.","lastModifiedDate":"2023-09-21"},{"lineNumber":281,"author":{"gitId":"AryanG01"},"content":"     * @return A Task object representing the parsed line.","lastModifiedDate":"2023-09-21"},{"lineNumber":282,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If the line cannot be parsed or is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":283,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":284,"author":{"gitId":"AryanG01"},"content":"    public static Task parseFileLine(String line) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":285,"author":{"gitId":"AryanG01"},"content":"        assert line !\u003d null : \"Line cannot be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":286,"author":{"gitId":"AryanG01"},"content":"        // Parse the line and create tasks based on the format in the file","lastModifiedDate":"2023-09-21"},{"lineNumber":287,"author":{"gitId":"AryanG01"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-21"},{"lineNumber":288,"author":{"gitId":"AryanG01"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2023-09-21"},{"lineNumber":289,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid task format in the file.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":290,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":291,"author":{"gitId":"AryanG01"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":292,"author":{"gitId":"AryanG01"},"content":"        String description \u003d parts[3];","lastModifiedDate":"2023-09-21"},{"lineNumber":293,"author":{"gitId":"AryanG01"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-21"},{"lineNumber":294,"author":{"gitId":"AryanG01"},"content":"        TaskPriority priority \u003d TaskPriority.parse(parts[2]);","lastModifiedDate":"2023-09-21"},{"lineNumber":295,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":296,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":297,"author":{"gitId":"AryanG01"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-21"},{"lineNumber":298,"author":{"gitId":"AryanG01"},"content":"        case \"T\":","lastModifiedDate":"2023-09-21"},{"lineNumber":299,"author":{"gitId":"AryanG01"},"content":"            // Check if the description contains date information","lastModifiedDate":"2023-09-21"},{"lineNumber":300,"author":{"gitId":"AryanG01"},"content":"            String[] todoParts \u003d description.split(\" \\\\(from: | to: \", 3);","lastModifiedDate":"2023-09-21"},{"lineNumber":301,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":302,"author":{"gitId":"AryanG01"},"content":"            if (todoParts.length \u003d\u003d 3) {","lastModifiedDate":"2023-09-21"},{"lineNumber":303,"author":{"gitId":"AryanG01"},"content":"                LocalDate fromDate \u003d LocalDate.parse(todoParts[1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":304,"author":{"gitId":"AryanG01"},"content":"                LocalDate toDate \u003d LocalDate.parse(todoParts[2].substring(0, todoParts[2].length() - 1));","lastModifiedDate":"2023-09-21"},{"lineNumber":305,"author":{"gitId":"AryanG01"},"content":"                return new TodoTask(todoParts[0], fromDate, toDate, isDone, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":306,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":307,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"Invalid todo task format in the file.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":308,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":309,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":310,"author":{"gitId":"AryanG01"},"content":"        case \"D\":","lastModifiedDate":"2023-09-21"},{"lineNumber":311,"author":{"gitId":"AryanG01"},"content":"            // Check if the description contains date information","lastModifiedDate":"2023-09-21"},{"lineNumber":312,"author":{"gitId":"AryanG01"},"content":"            String[] deadlineParts \u003d description.split(\" \\\\(by: \", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":313,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":314,"author":{"gitId":"AryanG01"},"content":"            if (deadlineParts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":315,"author":{"gitId":"AryanG01"},"content":"                LocalDate byDate \u003d LocalDate.parse(deadlineParts[1].substring(0, deadlineParts[1].length() - 1));","lastModifiedDate":"2023-09-21"},{"lineNumber":316,"author":{"gitId":"AryanG01"},"content":"                return new DeadlineTask(deadlineParts[0], byDate, isDone, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":317,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":318,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"Invalid deadline task format in the file.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":319,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":320,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":321,"author":{"gitId":"AryanG01"},"content":"        case \"E\":","lastModifiedDate":"2023-09-21"},{"lineNumber":322,"author":{"gitId":"AryanG01"},"content":"            // Check if the description contains date information","lastModifiedDate":"2023-09-21"},{"lineNumber":323,"author":{"gitId":"AryanG01"},"content":"            String[] eventParts \u003d description.split(\" \\\\(at: \", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":324,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":325,"author":{"gitId":"AryanG01"},"content":"            if (eventParts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":326,"author":{"gitId":"AryanG01"},"content":"                LocalDate atDate \u003d LocalDate.parse(eventParts[1].substring(0, eventParts[1].length() - 1));","lastModifiedDate":"2023-09-21"},{"lineNumber":327,"author":{"gitId":"AryanG01"},"content":"                return new EventTask(eventParts[0], atDate, isDone, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":328,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":329,"author":{"gitId":"AryanG01"},"content":"                throw new DukeException(\"Invalid event task format in the file.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":330,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":331,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":332,"author":{"gitId":"AryanG01"},"content":"        default:","lastModifiedDate":"2023-09-21"},{"lineNumber":333,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Unknown task type in file.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":334,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":335,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":336,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"AryanG01":336}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import java.io.File;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":" * The Storage class is responsible for loading and saving tasks to/from a file.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"public class Storage {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    private String filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     * Loads tasks from a file and returns them as a list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error loading tasks from the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"                return tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"            String line;","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"                Task task \u003d Parser.parseFileLine(line);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"            reader.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"        return tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"     * Saves a list of tasks to the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error saving tasks to the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"            writer.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":75}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * The Ui class provides user interface functionality for interacting with the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * It displays messages to the user, such as welcome messages, task lists, and error messages.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * @return The goodbye message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"     * @return The welcome message as a string.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    public String showHiMessage() {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Hi! How can i help you this fine day?\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"        message.append(\"\\n If unsure of what to do just type in \u0027help\u0027 to see all the command possible\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"     * Displays an error message when tasks cannot be loaded from a file.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"     * @return The error message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"        message.append(\"Error loading tasks from file.\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"     * Displays a list of tasks to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"     * @param taskList The list of tasks to display.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"     * @return The list of tasks as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"    public String showTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"            message.append(\" \").append(i + 1).append(\".\").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"     * @param task       The task that has been added.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"     * @param totalTasks The total number of tasks after adding.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"     * @return The message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"    public String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"        message.append(\"   \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Now you have \").append(totalTasks).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"AryanG01"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"AryanG01"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"AryanG01"},"content":"     * @return The message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"AryanG01"},"content":"    public String showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"AryanG01"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"AryanG01"},"content":"        message.append(\"   \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"AryanG01"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"AryanG01"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"AryanG01"},"content":"     * @return The message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"AryanG01"},"content":"    public String showTaskMarkedAsNotDone(Task task) {","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"AryanG01"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"AryanG01"},"content":"        message.append(\" OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"AryanG01"},"content":"        message.append(\"   \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"AryanG01"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"AryanG01"},"content":"     * @param task       The task that has been deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"AryanG01"},"content":"     * @param totalTasks The total number of tasks after deletion.","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"AryanG01"},"content":"     * @return The message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"AryanG01"},"content":"    public String showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"AryanG01"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"AryanG01"},"content":"        message.append(\"   \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Now you have \").append(totalTasks).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"AryanG01"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"AryanG01"},"content":"     * @param matchingTasks The list of matching tasks to display.","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"AryanG01"},"content":"     * @return The matching tasks as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"AryanG01"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"AryanG01"},"content":"        message.append(\" Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"AryanG01"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"AryanG01"},"content":"            message.append(\" \").append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"AryanG01"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"AryanG01"},"content":"     * @param message The error message to display.","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"AryanG01"},"content":"     * @return The error message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"AryanG01"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"AryanG01"},"content":"        StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"AryanG01"},"content":"        errorMessage.append(\" \").append(message).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"AryanG01"},"content":"        return errorMessage.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":148}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" * The AddCommand class represents a command for adding tasks in the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":" * It allows the user to add tasks such as todo, deadline, and event tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    private String input;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * Constructs an AddCommand with the specified input.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @param input The user input containing task details.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"add\" command, parsing the input to create a new task and adding it to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list where the new task will be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving tasks to a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * @return A string message indicating that the task has been added successfully.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error parsing the input or adding the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        Task newTask \u003d Parser.parseTask(this.input);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"        assert newTask !\u003d null : \"New task cannot be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        storage.saveTasksToFile(tasks.getAllTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"        return ui.showTaskAdded(newTask, tasks.getTotalTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":42}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * The ByeCommand class represents the \"bye\" command in the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * It allows the user to exit the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"bye\" command, displaying a goodbye message.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving and loading tasks (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @return A string containing a goodbye message.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        return ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":25}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * The Command class represents a command in the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * It is an abstract class that defines the structure of all specific command classes.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" * Specific command classes must extend this class and implement the execute method.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     * Executes the specific command.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list to operate on.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving and loading tasks (not used in all commands).","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     * @return A string message indicating the result of executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" * The DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":" * It extends the Command class and is responsible for handling the execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    private String input;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * Constructs a DeleteCommand with the specified user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @param input The user input containing the task index to delete.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"delete\" command by deleting a task from the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list from which to delete the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying the deletion result.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving the updated task list (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * @return A string message indicating the task that has been deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        int taskIndex \u003d Parser.extractTaskIndex(this.input);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"        Task deletedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        storage.saveTasksToFile(tasks.getAllTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        return ui.showTaskDeleted(deletedTask, tasks.getTotalTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":41}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":" * The DukeException class represents an exception specific to the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":" * It extends the base Exception class and provides a custom message for the exception.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"        super(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"AryanG01":16}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":" * The FindCommand class represents a command to search for tasks containing a specific keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":" * It extends the Command class and is responsible for handling the execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    private String input;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * Constructs a FindCommand with the specified user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"     * @param input The user input containing the keyword to search for.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"find\" command by searching for tasks containing a specific keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list to search within.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying the search results.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     * @return A string containing the list of tasks that match the search keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        String keyword \u003d Parser.extractKeyword(this.input);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":42}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * The HelpCommand class represents a command to display a help message to the user, listing available commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * It extends the Command class and is responsible for handling the execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"help\" command by displaying a list of available commands and their descriptions.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying the help message.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving the updated task list to a file (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @return A string containing the help message with a list of available commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        message.append(\"Here are the available commands:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `list`: List all tasks\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `bye`: Exit the program\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `hi`: Display a welcome message\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `mark \u003cindex\u003e`: Mark a task as done\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `unmark \u003cindex\u003e`: Mark a task as not done\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `delete \u003cindex\u003e`: Delete a task\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `find \u003ckeyword\u003e`: Find tasks by keyword\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `help`: Display this help message\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `todo \u003cdescription\u003e /priority \u003cTaskPriority\u003e /from \u003cfromDate\u003e /to \u003ctoDate\u003e`:Add Todo task\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `deadline \u003cdescription\u003e \u003cTaskPriority\u003e /by \u003cbyDate\u003e`: Add a Deadline task\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        message.append(\"- `event \u003cdescription\u003e \u003cTaskPriority\u003e /at \u003catDate\u003e`: Add an Event task\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        return message.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":37}},{"path":"src/main/java/duke/command/HiCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * The HiCommand class represents a command to greet the user when they start the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * It extends the Command class and is responsible for handling the execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class HiCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"hi\" command by displaying a welcome message to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying the welcome message.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving the updated task list to a file (not used in this command).","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @return A string containing the welcome message.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        return ui.showHiMessage();","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * The ListCommand class represents a command to list all tasks in the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * It extends the Command class and is responsible for handling the execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"list\" command by displaying a sorted list of all tasks in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving the updated task list to a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @return A string containing the sorted list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        tasks.sortTasksByPriority();","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        return ui.showTaskList(tasks.getAllTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":26}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * The MarkDoneCommand class represents a command to mark a task as done in the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" * It extends the Command class and is responsible for handling the execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    private String input;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * Constructs a MarkDoneCommand object with the provided input.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param input The input string containing the command and task index.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    public MarkDoneCommand(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"mark as done\" command by marking the specified task as done in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving the updated task list to a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     * @return A message indicating the successful execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        assert this.input !\u003d null : \"input cannot be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        int taskIndex \u003d Parser.extractTaskIndex(this.input);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        // Check if the task is already marked as done","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        if (tasks.isTaskDone(taskIndex)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"            return \"Relax, you already did this task. It ain\u0027t going anywhere!\";","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"        tasks.markAsDone(taskIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"        storage.saveTasksToFile(tasks.getAllTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        return ui.showTaskMarkedAsDone(tasks.getTask(taskIndex));","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":47}},{"path":"src/main/java/duke/command/MarkNotDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * The MarkNotDoneCommand class represents a command to mark a task as not done in the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" * It extends the Command class and is responsible for handling the execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"public class MarkNotDoneCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    private String input;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * Constructs a MarkNotDoneCommand object with the provided input.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param input The input string containing the command and task index.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    public MarkNotDoneCommand(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"     * Executes the \"mark as not done\" command by marking the specified task as not done in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"     * @param storage The storage for saving the updated task list to a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     * @return A message indicating the successful execution of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        assert this.input !\u003d null : \"input cannot be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        int taskIndex \u003d Parser.extractTaskIndex(this.input);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        // Check if the task is already unmarked","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        if (!tasks.isTaskDone(taskIndex)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"            return \"Relax, this task is already marked as not done! It isn\u0027t going to run away from you\";","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"        tasks.markAsNotDone(taskIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"        storage.saveTasksToFile(tasks.getAllTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        return ui.showTaskMarkedAsNotDone(tasks.getTask(taskIndex));","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"AryanG01":47}},{"path":"src/main/java/duke/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"T | 1 | H | buy food (from: 2023-09-22 to: 2023-12-10)","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"D | 0 | H | project (by: 2023-09-22)","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"D | 0 | M | read book (by: 2024-10-15)","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"E | 0 | L | attend lecture (at: 2019-11-18)","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"E | 0 | H | read (at: 2019-10-15)","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":5}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    private DialogBox(String text, Image img, String style) {","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        this.getStyleClass().add(\"dialog-box\");","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        // Apply additional style attributes","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"        this.setStyle(style);","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        Circle circle \u003d new Circle(50, 50, 45);","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"    private void flip() {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"    public static DialogBox getUserDialog(String text, Image img, String style) {","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"        return new DialogBox(text, img, style);","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"    public static DialogBox getDukeDialog(String text, Image img, String style) {","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"        var db \u003d new DialogBox(text, img, style);","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"        db.flip();","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"        return db;","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AryanG01":69}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"public class Launcher {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AryanG01":13}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"            stage.show();","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AryanG01":33}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"     * Initializes the main window of the Duke chat application.","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"     * This method is automatically called after loading the FXML file and initializing the UI components.","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"     * It sets up the initial state of the GUI, binds scrolling to the chat container, sets user input styles,","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"     * and displays a welcome message from Duke.","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #333;\");","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        // Set font and text color for the user input field","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        userInput.setStyle(\"-fx-font-size: 14px; -fx-text-fill: black;\");","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"        // Set a prompt text (placeholder text) for user input field","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"        userInput.setPromptText(\"Type your message...\");","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"        // Display a hello message when the GUI starts","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Axela. What can I do for you?\\n\\nIf unsure of what to do just \"","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"                                + \"type in \u0027help\u0027 to see all the command possible\", dukeImage,","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"                            \"-fx-background-color: #3498db; -fx-text-fill: black;\")","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"        );","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"    public Duke getDuke() {","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"        return duke;","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"        String input \u003d userInput.getText().toLowerCase(); // Convert to lowercase","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"        // Create user and Duke dialogs and add them to the container","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"AryanG01"},"content":"                DialogBox.getUserDialog(userInput.getText(), userImage, \"-fx-background-color: #777;\"),","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"AryanG01"},"content":"                DialogBox.getDukeDialog(response, dukeImage, \"-fx-background-color: #3498db;\")","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"AryanG01"},"content":"        );","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"AryanG01"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"AryanG01"},"content":"            // Create a Timeline to delay program exit","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"AryanG01"},"content":"            Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(2), event -\u003e exitApplication()));","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"AryanG01"},"content":"            timeline.setCycleCount(1);","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"AryanG01"},"content":"            timeline.play();","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"AryanG01"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"AryanG01"},"content":"    private void exitApplication() {","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"AryanG01"},"content":"        // Exit the program","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"AryanG01"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AryanG01":97}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":" * The DeadlineTask class represents a task with a deadline type in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * It extends the base Task class and includes an additional field for the deadline date.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    private TaskPriority priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * Constructs a DeadlineTask with the specified description, deadline date, and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @param byDate      The deadline date of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     * @param isDone      The completion status of the task (true if done, false otherwise).","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    public DeadlineTask(String description, LocalDate byDate, boolean isDone, TaskPriority priority) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        super(description, isDone, byDate, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"     * Returns a string representation of the DeadlineTask, including task type, completion status,","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     * * and description details.","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     * @return A string representation of the DeadlineTask.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        return \"[D]\" + super.toString() + \"[\" + this.priority.toCode() + \"] \" + this.getDescriptionDetails();","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"     * Converts the DeadlineTask to a string format suitable for saving to a file, including task type,","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"     * completion status, description, and deadline date.","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"        return String.format(\"%s | %d | %s | %s (by: %s)\",","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"                getTaskType(),","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"                this.priority.toCode(),","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"                this.description,","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"                this.byDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"     * Returns the task type identifier for a deadline task (i.e., \"D\").","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"     * @return The task type identifier.","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"        return \"D\";","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"     * Returns the description details of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"     * @return The deadline task name together with the by date.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"    private String getDescriptionDetails() {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"        return this.description + \" (by: \" + this.byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":73}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":" * The EventTask class represents a task with an event type in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * It extends the base Task class and includes an additional field for the event date.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    private LocalDate atDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    private TaskPriority priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     * Constructs an EventTask with the specified description, event date, and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param atDate      The date of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @param isDone      The completion status of the task (true if done, false otherwise).","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    public EventTask(String description, LocalDate atDate, boolean isDone, TaskPriority priority) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        super(description, isDone, atDate, priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"     * Returns a string representation of the EventTask, including task type, completion status,","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"     * and description details.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * @return A string representation of the EventTask.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        return \"[E]\" + super.toString() + \"[\" + this.priority.toCode() + \"] \" + this.getDescriptionDetails();","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"     * Converts the EventTask to a string format suitable for saving to a file, including task type, completion status,","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"     * description, and event date.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        return String.format(\"%s | %d | %s | %s (at: %s)\",","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"                getTaskType(),","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"                this.priority.toCode(),","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"                this.description,","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"                this.atDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"     * Returns the task type identifier for an event task (i.e., \"E\").","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"     * @return The task type identifier.","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"        return \"E\";","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"     * Returns the description details of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"     * @return The event task name together with the at date.","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"    private String getDescriptionDetails() {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"        return this.description + \" (at: \" + this.atDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":72}},{"path":"src/main/java/duke/task/PriorityComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":" * The PriorityComparator class is a custom comparator for comparing tasks based on their priorities.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":" * It implements the Comparator interface to provide a custom comparison method for tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"public class PriorityComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"     * Compares two tasks based on their priorities, task types, and descriptions.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     * @param task1 The first task to compare.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     * @param task2 The second task to compare.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * @return A negative integer, zero, or a positive integer as the first task is less than, equal to,","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     *         or greater than the second task, respectively.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        TaskPriority priority1 \u003d task1.getPriority();","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        TaskPriority priority2 \u003d task2.getPriority();","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        // First, compare priorities based on their ordinal values","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        int priorityComparison \u003d Integer.compare(priority1.ordinal(), priority2.ordinal());","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        if (priorityComparison \u003d\u003d 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"            // If priorities are the same, compare task types","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"            TaskType type1 \u003d task1.getType();","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"            TaskType type2 \u003d task2.getType();","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"            // Compare task types based on their ordinal values","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"            int typeComparison \u003d Integer.compare(type1.ordinal(), type2.ordinal());","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"            if (typeComparison \u003d\u003d 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"                // If task types are the same, compare by other criteria (e.g., description)","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"                return task1.getDescription().compareTo(task2.getDescription());","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"                return typeComparison;","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"        return priorityComparison;","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"AryanG01":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":" * The Task class represents a task template in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":" * It includes a description and a boolean flag indicating whether the task is done or not.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"    protected String description;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    private LocalDate date;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    private TaskPriority priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * Constructs a Task object with the specified description and done status.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @param isDone      The status indicating whether the task is done (true) or not (false).","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     * @param date        The date of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"     * @param priority    The priority of the task - H(High), M(Medium), L(Low)","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    public Task(String description, boolean isDone, LocalDate date, TaskPriority priority) {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     * @return \"X\" if the task is done, or a space \" \" if the task is not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"     * Marks the task as done by setting the isDone flag to true.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"     * Marks the task as not done by setting the isDone flag to false.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"     * Checks if task is Done or not","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"     * @return True if is done and False otherwise","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"     * Returns a string representation of the task, including its status icon.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"     * @return A string representation of the status of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"        return \"[\" + this.getStatusIcon() + \"]\";","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"     * @return A formatted string containing task type, status, and description.","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"        return String.format(\"%s | %d | %s | %s\", this.getTaskType(), this.isDone ? 1 : 0,","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"AryanG01"},"content":"                this.priority.toCode(), this.description);","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"AryanG01"},"content":"     * Gets the task type, which should be overridden in subclasses.","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"AryanG01"},"content":"     * @return The task type as a string.","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"AryanG01"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"AryanG01"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"AryanG01"},"content":"     * @return The task description.","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"AryanG01"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"AryanG01"},"content":"        return this.description;","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"AryanG01"},"content":"     * Gets the priority of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"AryanG01"},"content":"     * @return The task priority (HIGH, MEDIUM, LOW).","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"AryanG01"},"content":"    public TaskPriority getPriority() {","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"AryanG01"},"content":"        return this.priority;","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"AryanG01"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"AryanG01"},"content":"     * @return The task type (TODO, DEADLINE, EVENT).","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"AryanG01"},"content":"    public TaskType getType() {","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"AryanG01"},"content":"        // Implement this method to return the task type for each task","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"AryanG01"},"content":"        if (this instanceof DeadlineTask) {","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"AryanG01"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"AryanG01"},"content":"        } else if (this instanceof TodoTask) {","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"AryanG01"},"content":"            return TaskType.TODO;","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"AryanG01"},"content":"        } else if (this instanceof EventTask) {","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"AryanG01"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"AryanG01"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"AryanG01"},"content":"            throw new IllegalArgumentException(\"Unknown task type\");","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":125}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" * The TaskList class represents a list of tasks in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":" * It provides methods for adding, deleting, marking tasks as done, and loading/saving tasks to a file.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"public class TaskList {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"     * Constructs a TaskList with the provided list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"     * @param arr The list of tasks to initialize the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        this.tasks \u003d arr;","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"     * Checks if a task at the specified index is marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"     * @param taskIndex The index of the task to check.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"    public boolean isTaskDone(int taskIndex) {","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"            return task.isDone();","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"        return false;","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"     * Returns a string representation of all tasks in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"        if (!this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"                sb.append(\" \").append(i + 1).append(\".\").append(this.tasks.get(i));","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"     * Returns an ArrayList of all tasks in the TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"AryanG01"},"content":"     * @return An ArrayList of all tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"AryanG01"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"AryanG01"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"AryanG01"},"content":"     * Returns the total number of tasks in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"AryanG01"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"AryanG01"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"AryanG01"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"AryanG01"},"content":"     * Gets a task from the TaskList based on its index.","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"AryanG01"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"AryanG01"},"content":"     * @return The task at the specified index, or null if the index is out of bounds.","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"AryanG01"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"AryanG01"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"AryanG01"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"AryanG01"},"content":"        return null;","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"AryanG01"},"content":"     * Marks a task as done based on its index in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"AryanG01"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error marking the task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"AryanG01"},"content":"    public void markAsDone(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"AryanG01"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"AryanG01"},"content":"            this.tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"AryanG01"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"AryanG01"},"content":"     * Marks a task as not done based on its index in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"AryanG01"},"content":"     * @param taskIndex The index of the task to mark as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error marking the task as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"AryanG01"},"content":"    public void markAsNotDone(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"AryanG01"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"AryanG01"},"content":"            this.tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"AryanG01"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"AryanG01"},"content":"     * Deletes a task from the TaskList based on its index.","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"AryanG01"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"AryanG01"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"AryanG01"},"content":"     * @throws DukeException If there is an error deleting the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"AryanG01"},"content":"    public Task deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"AryanG01"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"AryanG01"},"content":"            Task deletedTask \u003d this.tasks.remove(taskIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"AryanG01"},"content":"            return deletedTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"AryanG01"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"AryanG01"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"AryanG01"},"content":"     * Finds tasks in the TaskList that contain a specified keyword in their description.","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"AryanG01"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"AryanG01"},"content":"     * @return An ArrayList of tasks matching the keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"AryanG01"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"AryanG01"},"content":"        assert keyword !\u003d null : \"keyword cannot be null\";","lastModifiedDate":"2023-09-17"},{"lineNumber":156,"author":{"gitId":"AryanG01"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"AryanG01"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"AryanG01"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"AryanG01"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"AryanG01"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"AryanG01"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"AryanG01"},"content":"     * Sorts tasks in the TaskList by priority.","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"AryanG01"},"content":"    public void sortTasksByPriority() {","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"AryanG01"},"content":"        Collections.sort(this.tasks, new PriorityComparator());","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"AryanG01":173}},{"path":"src/main/java/duke/task/TaskPriority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":" * Represents the priority levels of tasks in Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"public enum TaskPriority {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"    HIGH,","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"    MEDIUM,","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"    LOW;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"     * Parses a string input to return the corresponding TaskPriority value.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     * @param input The string input representing the TaskPriority.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     * @return The TaskPriority enum value.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * @throws IllegalArgumentException If the input is not a valid TaskPriority.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    public static TaskPriority parse(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"        switch (input.toUpperCase()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"        case \"H\":","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        case \"HIGH\":","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"            return HIGH;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        case \"M\":","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        case \"MEDIUM\":","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"            return MEDIUM;","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"        case \"L\":","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        case \"LOW\":","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"            return LOW;","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"        default:","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"            throw new IllegalArgumentException(\"Invalid priority input: \" + input);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"     * Converts the TaskPriority to its code representation.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"     * @return The code representation as a string (\"H\" for HIGH, \"M\" for MEDIUM, \"L\" for LOW).","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"     * @throws IllegalArgumentException If the TaskPriority is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"    public String toCode() {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        switch (this) {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"        case HIGH:","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"            return \"H\";","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"        case MEDIUM:","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"            return \"M\";","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        case LOW:","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"            return \"L\";","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"        default:","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"            throw new IllegalArgumentException(\"Invalid TaskPriority: \" + this.name());","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"AryanG01":53}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":" * The TaskType enum represents different types of tasks in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":" * It includes TODO, DEADLINE, and EVENT as possible task types.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"     * Represents a TODO task type.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    TODO,","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"     * Represents a DEADLINE task type.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * Represents an EVENT task type.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"    EVENT;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":22}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":" * The TodoTask class represents a task with a to-do type in the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":" * It extends the base Task class and includes additional fields for date range information.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    private TaskPriority taskPriority;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"     * Constructs a TodoTask with the specified description, date range, and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"     * @param fromDate    The starting date of the date range.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"     * @param toDate      The ending date of the date range.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"     * @param isDone      The completion status of the task (true if done, false otherwise).","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    public TodoTask(String description, LocalDate fromDate, LocalDate toDate, boolean isDone,","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"                    TaskPriority taskPriority) {","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        super(description, isDone, fromDate, taskPriority);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        this.taskPriority \u003d taskPriority;","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"     * Returns a string representation of the TodoTask, including task type, completion status, and description details.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"     * @return A string representation of the TodoTask.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        return \"[T]\" + super.toString() + \"[\" + this.taskPriority.toCode() + \"] \" + this.getDescriptionDetails();","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"     * Converts the TodoTask to a string format suitable for saving to a file, including task type, completion status,","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"     * description, and date range.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"        return String.format(\"%s | %d | %s | %s (from: %s to: %s)\", getTaskType(), this.isDone ? 1 : 0,","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"                this.taskPriority.toCode(),","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"                this.description,","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"                this.fromDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"                this.toDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"     * Returns the task type identifier for a to-do task (i.e., \"T\").","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"     * @return The task type identifier.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"        return \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AryanG01"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AryanG01"},"content":"     * Returns the description details of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"AryanG01"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AryanG01"},"content":"     * @return The to-do task name together with the from and to dates.","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"AryanG01"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"AryanG01"},"content":"    private String getDescriptionDetails() {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"AryanG01"},"content":"        return this.description + \" (from: \" + this.fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"AryanG01"},"content":"                + \" to: \" + this.toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AryanG01":75}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AryanG01":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AryanG01":19}},{"path":"src/test/java/duke/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    public void addDeadlineTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"deadline Submit assignment /by 2022-11-30\";","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"        AddCommand addCommand \u003d new AddCommand(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"        String result \u003d addCommand.execute(taskList, new Ui(), new Storage(\"./src/test/java/duke/sample.txt\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"                \"   [D][ ][L] Submit assignment (by: Nov 30 2022)\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"                \" Now you have 1 tasks in the list.\\n\", result);","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    public void addEventTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"event Submit assignment /at 2022-11-30\";","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"        AddCommand addCommand \u003d new AddCommand(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        String result \u003d addCommand.execute(taskList, new Ui(), new Storage(\"./src/test/java/duke/sample.txt\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"                \"   [E][ ][L] Submit assignment (at: Nov 30 2022)\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"                \" Now you have 1 tasks in the list.\\n\", result);","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"    public void addTodoTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"todo Submit assignment /from 2022-11-30 /to 2022-12-30\";","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"        AddCommand addCommand \u003d new AddCommand(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        String result \u003d addCommand.execute(taskList, new Ui(), new Storage(\"./src/test/java/duke/sample.txt\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"                \"   [T][ ][L] Submit assignment (from: Nov 30 2022 to: Dec 30 2022)\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"                \" Now you have 1 tasks in the list.\\n\", result);","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":44}},{"path":"src/test/java/duke/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    public void deadlineTaskTest1() {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"        DeadlineTask dl \u003d new DeadlineTask(\"test1\", LocalDate.parse(\"2019-10-15\"), false, TaskPriority.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[D][ ][L] test1 (by: Oct 15 2019)\", dl.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    public void deadlineTaskTest2() {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        DeadlineTask dl \u003d new DeadlineTask(\"test2\", LocalDate.parse(\"2020-12-01\"), true, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[D][X][L] test2 (by: Dec 01 2020)\", dl.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    public void deadlineTaskTest3() {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        DeadlineTask dl \u003d new DeadlineTask(\"test3\", LocalDate.parse(\"2019-10-15\"), false, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[D][ ][M] test3 (by: Oct 15 2019)\", dl.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"    public void deadlineTaskTest4() {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"        DeadlineTask dl \u003d new DeadlineTask(\"test4\", LocalDate.parse(\"2020-12-01\"), true, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[D][X][M] test4 (by: Dec 01 2020)\", dl.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"    public void deadlineTaskTest5() {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        DeadlineTask dl \u003d new DeadlineTask(\"test5\", LocalDate.parse(\"2019-10-15\"), false, TaskPriority.HIGH);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[D][ ][H] test5 (by: Oct 15 2019)\", dl.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"    public void deadlineTaskTest6() {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        DeadlineTask dl \u003d new DeadlineTask(\"test6\", LocalDate.parse(\"2020-12-01\"), true, TaskPriority.HIGH);","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[D][X][H] test6 (by: Dec 01 2020)\", dl.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":48}},{"path":"src/test/java/duke/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    public void deleteTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"        TodoTask todoTask \u003d new TodoTask(\"Read a book\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), false, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        String result \u003d deleteCommand.execute(taskList, new Ui(), new Storage(\"./src/test/java/duke/sample.txt\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\" Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"                \"   [T][ ][M] Read a book (from: Oct 15 2019 to: Dec 01 2020)\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"                \" Now you have 0 tasks in the list.\\n\", result);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":29}},{"path":"src/test/java/duke/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class EventTaskTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    public void EventTaskTest1() {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"        EventTask et \u003d new EventTask(\"test1\", LocalDate.parse(\"2019-10-15\"), false, TaskPriority.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[E][ ][L] test1 (at: Oct 15 2019)\", et.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    public void EventTaskTest2() {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        EventTask et \u003d new EventTask(\"test2\", LocalDate.parse(\"2020-12-01\"), true, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[E][X][L] test2 (at: Dec 01 2020)\", et.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    public void EventTaskTest3() {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        EventTask et \u003d new EventTask(\"test3\", LocalDate.parse(\"2019-10-15\"), false, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[E][ ][M] test3 (at: Oct 15 2019)\", et.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"    public void EventTaskTest4() {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"        EventTask et \u003d new EventTask(\"test4\", LocalDate.parse(\"2020-12-01\"), true, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[E][X][M] test4 (at: Dec 01 2020)\", et.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"    public void EventTaskTest5() {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        EventTask et \u003d new EventTask(\"test5\", LocalDate.parse(\"2019-10-15\"), false, TaskPriority.HIGH);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[E][ ][H] test5 (at: Oct 15 2019)\", et.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"    public void EventTaskTest6() {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        EventTask et \u003d new EventTask(\"test6\", LocalDate.parse(\"2020-12-01\"), true, TaskPriority.HIGH);","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[E][X][H] test6 (at: Dec 01 2020)\", et.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":48}},{"path":"src/test/java/duke/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    public void findTasksByKeywordTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"        TodoTask todoTask1 \u003d new TodoTask(\"Read book\",  LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), false, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"        TodoTask todoTask2 \u003d new TodoTask(\"Read magazine\",  LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), false, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"        taskList.addTask(todoTask1);","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        taskList.addTask(todoTask2);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"find Read\";","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        FindCommand findCommand \u003d new FindCommand(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        String result \u003d findCommand.execute(taskList, new Ui(), new Storage(\"./src/test/java/duke/sample.txt\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\" Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"                \" 1.[T][ ][M] Read book (from: Oct 15 2019 to: Dec 01 2020)\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"                \" 2.[T][ ][L] Read magazine (from: Oct 15 2019 to: Dec 01 2020)\\n\", result);","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":31}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"    public void parseDeadlineTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"Finish report /by 2021-10-15\";","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"        Task deadlineTask \u003d Parser.parseDeadlineTask(input, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\"[D][ ][L] Finish report (by: Oct 15 2021)\", deadlineTask.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    public void parseEventTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"Finish report /at 2021-10-15\";","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        Task eventTask \u003d Parser.parseEventTask(input, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\"[E][ ][L] Finish report (at: Oct 15 2021)\", eventTask.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    public void parseTodoTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"Finish report /from 2019-10-15 /to 2019-10-15\";","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        Task todoTask \u003d Parser.parseTodoTask(input, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"        assertEquals(\"[T][ ][L] Finish report (from: Oct 15 2019 to: Oct 15 2019)\", todoTask.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"    public void addTodoTaskIncorrectDateFormat() {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"todo Task with wrong date format /from 2021-30-02 /to 2022-10-15\";","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"            Parser.parseTodoTask(input, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"            fail(\"Expected DukeException to be thrown\");","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"            assertEquals(\"Invalid date format. Please use YYYY-MM-DD format for dates.\", e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"    public void addEventTaskIncorrectDateFormat() {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"event Task with wrong date format /at 2021-30-02\";","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"            Parser.parseEventTask(input, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"            fail(\"Expected DukeException to be thrown\");","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"AryanG01"},"content":"            assertEquals(\"Invalid date format. Please use YYYY-MM-DD format for dates.\", e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"AryanG01"},"content":"    public void addDeadlineTaskIncorrectDateFormat() {","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"AryanG01"},"content":"        String input \u003d \"deadline Task with wrong date format /by 2021-30-02\";","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"AryanG01"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"AryanG01"},"content":"            Parser.parseDeadlineTask(input, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"AryanG01"},"content":"            fail(\"Expected DukeException to be thrown\");","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"AryanG01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"AryanG01"},"content":"            assertEquals(\"Invalid date format. Please use YYYY-MM-DD format for dates.\", e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":64}},{"path":"src/test/java/duke/PriorityComparatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.task.PriorityComparator;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"import java.util.List;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"public class PriorityComparatorTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"        @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"        public void priorityComparatorTest() {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"            TodoTask highPriority \u003d new TodoTask(\"High priority task\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"),false, TaskPriority.HIGH);","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"            TodoTask mediumPriority \u003d new TodoTask(\"Medium priority task\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), false, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"            TodoTask lowPriority \u003d new TodoTask(\"Low priority task\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"),false, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"            tasks.add(mediumPriority);","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"            tasks.add(lowPriority);","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"            tasks.add(highPriority);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"            Collections.sort(tasks, new PriorityComparator());","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"            assertEquals(highPriority, tasks.get(0));","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"            assertEquals(mediumPriority, tasks.get(1));","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"            assertEquals(lowPriority, tasks.get(2));","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":35}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    public void addAndDeleteTaskTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"        TodoTask todoTask \u003d new TodoTask(\"Buy groceries\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), true, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"        // Add a task and verify it\u0027s added","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"        assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        // Delete the task and verify it\u0027s removed","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"        Task deletedTask \u003d taskList.deleteTask(0);","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"        assertEquals(0, taskList.getTotalTasks());","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"        assertEquals(todoTask, deletedTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    public void markTaskAsDoneTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"        EventTask eventTask \u003d new EventTask(\"Birthday party\", LocalDate.parse(\"2023-12-31\"), false, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        // Mark the task as done and verify it\u0027s marked","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"        taskList.markAsDone(0);","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"        assertTrue(taskList.isTaskDone(0));","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"    public void markTaskAsNotDoneTest() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"        EventTask eventTask \u003d new EventTask(\"Birthday party\", LocalDate.parse(\"2023-12-31\"), true, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        // Mark the task as done and verify it\u0027s marked","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        taskList.markAsNotDone(0);","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"        assertTrue(!taskList.isTaskDone(0));","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"AryanG01":49}},{"path":"src/test/java/duke/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"public class TodoTaskTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"    public void todoTaskTest1() {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"        TodoTask td \u003d new TodoTask(\"test1\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), false, TaskPriority.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[T][ ][L] test1 (from: Oct 15 2019 to: Dec 01 2020)\", td.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"    public void todoTaskTest2() {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"        TodoTask td \u003d new TodoTask(\"test2\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), true, TaskPriority.LOW);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[T][X][L] test2 (from: Oct 15 2019 to: Dec 01 2020)\", td.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"    public void todoTaskTest3() {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"        TodoTask td \u003d new TodoTask(\"test3\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), false, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[T][ ][M] test3 (from: Oct 15 2019 to: Dec 01 2020)\", td.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AryanG01"},"content":"    public void todoTaskTest4() {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"AryanG01"},"content":"        TodoTask td \u003d new TodoTask(\"test4\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), true, TaskPriority.MEDIUM);","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[T][X][M] test4 (from: Oct 15 2019 to: Dec 01 2020)\", td.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"AryanG01"},"content":"    public void todoTaskTest5() {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"AryanG01"},"content":"        TodoTask td \u003d new TodoTask(\"test5\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), false, TaskPriority.HIGH);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[T][ ][H] test5 (from: Oct 15 2019 to: Dec 01 2020)\", td.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"AryanG01"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"AryanG01"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"AryanG01"},"content":"    public void todoTaskTest6() {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"AryanG01"},"content":"        TodoTask td \u003d new TodoTask(\"test6\", LocalDate.parse(\"2019-10-15\"), LocalDate.parse(\"2020-12-01\"), true, TaskPriority.HIGH);","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"AryanG01"},"content":"        assertEquals( \"[T][X][H] test6 (from: Oct 15 2019 to: Dec 01 2020)\", td.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"AryanG01"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AryanG01"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AryanG01":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AryanG01"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"AryanG01"},"content":"todo read book","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"AryanG01"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"AryanG01"},"content":"todo join sports club","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"AryanG01"},"content":"todo borrow book","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"AryanG01"},"content":"mark 4","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"AryanG01"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"AryanG01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"AryanG01"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"AryanG01"},"content":"todo","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"AryanG01"},"content":"deadline","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"AryanG01"},"content":"event","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"AryanG01"},"content":"blah","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"AryanG01"},"content":"mark","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"mark 9","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"mark 8","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"unmark","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"unmark -1","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"unmark 7","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"AryanG01"},"content":"delete","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"AryanG01"},"content":"delete 100","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"AryanG01"},"content":"delete 6","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"AryanG01"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"AryanG01"},"content":"blah","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"AryanG01":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"AryanG01"},"content":"if not exist C:\\Users\\dell\\Desktop\\NUS_CS\\Modules\\Y2S1\\CS2100\\IP\\bin mkdir C:\\Users\\dell\\Desktop\\NUS_CS\\Modules\\Y2S1\\CS2100\\IP\\bin","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"AryanG01"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"AryanG01"},"content":"javac  -cp C:\\Users\\dell\\Desktop\\NUS_CS\\Modules\\Y2S1\\CS2100\\IP\\src\\main\\java -Xlint:none -d C:\\Users\\dell\\Desktop\\NUS_CS\\Modules\\Y2S1\\CS2100\\IP\\bin C:\\Users\\dell\\Desktop\\NUS_CS\\Modules\\Y2S1\\CS2100\\IP\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"AryanG01"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AryanG01"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AryanG01"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AryanG01"},"content":"java -classpath C:\\Users\\dell\\Desktop\\NUS_CS\\Modules\\Y2S1\\CS2100\\IP\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AryanG01"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e e5248c68952972df38e1725f70ec399f544663d6","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":17,"AryanG01":8}}]
