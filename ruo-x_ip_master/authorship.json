[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"# duke.duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruo-x":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.6\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"    mainClass.set(\"duke.Bobi\")","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"    archiveBaseName \u003d \"bobi\"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ruo-x":26,"-":40}},{"path":"src/main/java/duke/Bobi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import duke.utility.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":" * Bobi class encapsulates all components of the Bobi tracker bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"public class Bobi {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"    private Command command;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"     * Constructor of a Bobi object.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"     * Load tasks saved from the backend into the active Bobi.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    public Bobi() {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"        // Load list of tasks stored in text file \"task.txt\" into the local task List","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"        storage.handleLoad(list);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"        // Start Scanner to read user inputs","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"        this.ui \u003d new Ui(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"        this.command \u003d new Command(storage, ui, list);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"     * Returns Bobi\u0027s response to user\u0027s inputs.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"     * @return Bobi\u0027s response","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"            return Ui.exit();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"            return ui.listTasks();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"            return command.handleMark(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"            return command.handleUnMark(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"            return command.handleToDo(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"            return command.handleDeadline(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"            return command.handleEvent(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"            return command.handleDelete(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"            return command.handleFind(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"        } else if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(new EmptyCommandException());","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(new InvalidCommandException());","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"     * Runs Bobi.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"        System.out.println(Ui.greeting());","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"        String answer \u003d ui.getInput();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"        // Listens to user commands and perform the relevant functions","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"        while (!answer.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"            System.out.println(this.getResponse(answer));","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"            answer \u003d ui.getInput();","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"        System.out.println(Ui.exit());","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"        ui.stopScanner();","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"ruo-x"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"ruo-x"},"content":"        new Bobi().run();","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ruo-x":87,"-":2}},{"path":"src/main/java/duke/exception/BobiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * BobiException is the base class for all exceptions thrown while using Bobi.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * A BobiException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class BobiException extends Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of a BobiException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"     * @param message Error Message to be shown to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    public BobiException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ruo-x":19}},{"path":"src/main/java/duke/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * EmptyCommandException inherits from BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * An EmptyCommandException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class EmptyCommandException extends BobiException {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an EmptyCommandException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public EmptyCommandException() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"Oh no! Bobi cannot receive empty commands. :/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ruo-x":17}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * EmptyTaskException inherits from BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * An EmptyTaskException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class EmptyTaskException extends BobiException {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an EmptyTaskException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public EmptyTaskException() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"Oh no! Bobi cannot add an empty task. :/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ruo-x":17}},{"path":"src/main/java/duke/exception/FailedSearchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * FailedSearchException class inherits from DukeException class.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * It encapsulates the error message to be displayed","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * when no task matches the keyword that the user has input.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class FailedSearchException extends BobiException {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor for a FailedSearchException object.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public FailedSearchException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"OOPS! Seems like there are no task that matches the given keyword. :/\");","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"ruo-x":17}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * InvalidCommandException inherits from BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * An InvalidCommandException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class InvalidCommandException extends BobiException {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an InvalidCommandException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"Oh no! Bobi does not know what that means... :/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ruo-x":17}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * InvalidDeadlineException inherits from BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * An InvalidDeadlineException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class InvalidDeadlineException extends BobiException {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an InvalidDeadlineException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"Oh no! It seems like you have indicated an invalid deadline :/ \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"                + \"Please follow this format:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"                + \"deadline \u003ctask name\u003e /by \u003cyyyy-mm-dd\u003e \u003cHHmm\u003e\"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ruo-x":20}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * InvalidEventException inherits from BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * An InvalidEventException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class InvalidEventException extends BobiException {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an InvalidEventException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"Oh no! It seems like you have indicated an invalid event :/ \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"                + \"Please follow this format:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"                + \"event \u003ctask name\u003e /from \u003cyyyy-mm-dd\u003e \u003cHHmm\u003e /to \u003cyyyy-mm-dd\u003e \u003cHHmm\u003e\"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ruo-x":20}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * InvalidTaskException inherits from BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * An InvalidTaskException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class InvalidTaskException extends BobiException {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an InvalidTaskException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"Seems like Bobi cannot find the task you want!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ruo-x":17}},{"path":"src/main/java/duke/exception/MissingTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * MissingTimeException inherits from BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * An MissingTimeException object encapsulates the error message","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * which will be shown when this exception is thrown.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class MissingTimeException extends BobiException {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an MissingTimeException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    public MissingTimeException() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        super(\"Please input a date and time for this task.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ruo-x":17}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":" * DialogBox class encapsulates a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":" * It is the controller of DialogBox.fxml.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"     * Constructor of a DialogBox object.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"     * @param text Text to add inside the dialog box.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"     * @param img Image to add inside the dialog box","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"            // Load layout of dialog box","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"        // Initialize a new DialogBox","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"     * Returns a dialog box designed for the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"     * Image is at the right-most position followed by the text on its left.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"     * @param text Text to add inside the dialog box.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"     * @param img Image to add inside the dialog box.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"     * Returns a dialog box designed for Bobi.","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"     * Image is at the left-most position followed by the text on its right.","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"     * @param text Text to add inside the dialog box.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"     * @param img Image to add inside the dialog box.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"    public static DialogBox getBobiDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ruo-x":85}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * Launcher class launches the GUI of Bobi.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ruo-x":14}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import duke.Bobi;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":" * Main class is a GUI for Bobi using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    private Bobi bobi \u003d new Bobi();","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"     * Starts Bobi\u0027s GUI, load all components of the GUI.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"     *     the application scene can be set.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"     *     Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"     *     primary stages.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"            // Loading layout of GUI","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBobi(bobi);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"            stage.setTitle(\"Bobi\");","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ruo-x":44}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.util.Timer;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import duke.Bobi;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":" * MainWindow class is a controller for MainWindow.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":" * It provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"    private Bobi bobi;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"    private Image bobiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bobi.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"     * Initialize the dialog container.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"     * Initialize Bobi, Bobi greets the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"     * @param d Bobi to initialize.","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"    public void setBobi(Bobi d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"        bobi \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"                DialogBox.getBobiDialog(Ui.greeting(), bobiImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Bobi\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"        String response \u003d bobi.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"                DialogBox.getBobiDialog(response, bobiImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"        // if user input is \"bye\", GUI closes automatically after 1 second.","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"        if (response.equals(Ui.exit())) {","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"            Timer timer \u003d new Timer();","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"            timer.schedule(new TimerTask() {","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"                @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"                public void run() {","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"                    Platform.exit();","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"                    timer.cancel();","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"            }, 1000);","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ruo-x":85}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" * Deadline inherits from Task Class.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * A Deadline object encapsulates the name of task,","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" * status of task, and the deadline of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    /** Deadline of task */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"     * Constructor of a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"     * @param isDone Status of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"     * @param deadline Deadline of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"    public Deadline(boolean isDone, String taskName, LocalDateTime deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"        super(isDone, taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"     * Formats deadline of task into the desired format.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"     * @param deadline Deadline of task as a LocalDateTime object.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"     * @return Formatted deadline of task as a String.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"    public String getDeadlineString(LocalDateTime deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"        return deadline.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"     * Returns a string format of a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"     * @return String format of a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"        if (this.getStatus()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"            return \"[D]\" + \"[X] \" + this.getName() + \"(by: \" + getDeadlineString(this.deadline) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"            return \"[D]\" + \"[ ] \" + this.getName() + \"(by: \" + getDeadlineString(this.deadline) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"    public String toStoreString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"        if (this.getStatus()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"            return \"D/@/1/@/\" + this.getName() + \"/@/\" + this.deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"            return \"D/@/0/@/\" + this.getName() + \"/@/\" + this.deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"    public String toUpdateString(int newStatus) {","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"        return \"D/@/\" + newStatus + \"/@/\" + this.getName() + \"/@/\" + this.deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"ruo-x":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" * Event class inherits from Task class.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * An event object encapsulates the name of task, status of task,","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" * start date and time of task, end date and time of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    /** Start date and time of task */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"    /** End date and time of task */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"     * @param isDone Status of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"     * @param start Start of task as a LocalDateTime object.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"     * @param end End of task as a LocalDateTime object.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"    public Event(boolean isDone, String taskName, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"        super(isDone, taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"     * Formats date and time of task into the desired format.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"     * @param dateTime Start or end of task as a LocalDateTime object.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"     * @return Formatted date and time of task as a String.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"    public String getDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"     * Returns a string format of an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"     * @return String format of an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"        if (this.getStatus()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"            return \"[E]\"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"                    + \"[X] \"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"                    + this.getName()","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"                    + \"(from: \" + getDateTimeString(this.start)","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"                    + \" to: \" + getDateTimeString(this.end) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"            return \"[E]\"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"                    + \"[ ] \"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"                    + this.getName()","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"                    + \"(from: \" + getDateTimeString(this.start)","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"                    + \" to: \" + getDateTimeString(this.end) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"    public String toStoreString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"        if (this.getStatus()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"            return \"E/@/1/@/\" + this.getName() + \"/@/\" + this.start + \"/@/\" + this.end;","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"            return \"E/@/0/@/\" + this.getName() + \"/@/\" + this.start + \"/@/\" + this.end;","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"    public String toUpdateString(int newStatus) {","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"        return \"E/@/\" + newStatus + \"/@/\" + this.getName() + \"/@/\" + this.start + \"/@/\" + this.end;","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"ruo-x":87}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * Task is an abstract base class for all types of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * that users wish to add into their Bobi task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" * A Task Object encapsulates the task name and status for users to track.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    /** Name of task */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"    private final String taskName;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    /** Status of task */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"     * Constructor of a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"     * @param status Status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"    public Task(Boolean status, String taskName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"     * Returns status of task.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"     * Returns name of task.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"    public String getName() {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"     * Status of the task object is changed to true.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"    public void mark() {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"     * Marks a task as un-done.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"     * Status of the task object is changed to false.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"     * Converts the task into a String format","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"     * which will be stored in the backend.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"     * @return String to be stored in backend.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"    public abstract String toStoreString();","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"     * Updates the task into a String format","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"     * when there is a change in status.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"     * This newly updated string will be stored in the backend.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"     * @return Updated string to be stored in backend.","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"    public abstract String toUpdateString(int newStatus);","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"ruo-x":74}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":" * To-Do class inherits from Task class.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":" * A To-Do object encapsulates the task name and status.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"     * Constructor of a To-Do Object.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"     * @param isDone Status of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    public ToDo(boolean isDone, String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"        super(isDone, taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"     * Returns a string format of a To-Do object.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"     * @return String format of a To-Do object.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"        if (this.getStatus()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"            return \"[T]\" + \"[X] \" + this.getName();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"            return \"[T]\" + \"[ ] \" + this.getName();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"    public String toStoreString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"        if (this.getStatus()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"            return \"T/@/1/@/\" + this.getName();","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"            return \"T/@/0/@/\" + this.getName();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"    public String toUpdateString(int newStatus) {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"        return \"T/@/\" + newStatus + \"/@/\" + this.getName();","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"ruo-x":53}},{"path":"src/main/java/duke/utility/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.utility;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import duke.exception.FailedSearchException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import duke.exception.MissingTimeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":" * Command class encapsulates all commands users can input into Bobi","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":" * and the results from each of the commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"public class Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"    /** Storage that stores all tasks from Bobi into backend */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"    /** Ui that determines which system message to display to the user */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"    /** TaskList stores all tasks that the user has input */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"     * Constructor for a Command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"     * @param storage Current storage system.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"     * @param ui Current Ui system.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"    public Command(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"     * Breaks down user\u0027s inputs to identify what is","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"     * the name and status of task and create a To-Do object.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"     * Prints out related error message if user did not input the task name.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"     * Adds newly created To-Do object into the current task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"     * Saves newly created To-Do object into the current storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"     * @return A system message to inform user of successful execution or","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"     *     error message to inform user of failed execution","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"    public String handleToDo(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"            ToDo task \u003d Parser.parseTodo(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"            // Add new To Do into task list","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"            // Save new task into backend","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"            this.storage.saveTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"            // Return system message to inform action","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"            return this.ui.printAddTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"     * Breaks down user\u0027s inputs to identify what is","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"     * the name, status, and deadline of task and create a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"     * Prints out related error message if user did not input the task name or deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"     * Adds newly created Deadline object into the current task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"     * Saves newly created Deadline object into the current storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"     * @return A system message to inform user of successful execution or","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"     *     error message to inform user of failed execution","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"    // Add deadline task","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"    public String handleDeadline(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"ruo-x"},"content":"            Deadline task \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"ruo-x"},"content":"            // Add new Deadline into task list","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"ruo-x"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"ruo-x"},"content":"            // Save new task into backend","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"ruo-x"},"content":"            this.storage.saveTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"ruo-x"},"content":"            // Return system message to inform action","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"ruo-x"},"content":"            return this.ui.printAddTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"ruo-x"},"content":"        } catch (MissingTimeException | EmptyTaskException | InvalidDeadlineException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"ruo-x"},"content":"     * Breaks down user\u0027s inputs to identify what is the name, status,","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"ruo-x"},"content":"     * start date and time, end date and time of task and create an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"ruo-x"},"content":"     * Returns related error message if user did not input the task name, start/end date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"ruo-x"},"content":"     * Adds newly created Event object into the current task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"ruo-x"},"content":"     * Saves newly created Event object into the current storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"ruo-x"},"content":"     * @return A system message to inform user of successful execution or","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"ruo-x"},"content":"     *     error message to inform user of failed execution","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"ruo-x"},"content":"    public String handleEvent(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"ruo-x"},"content":"            Event task \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"ruo-x"},"content":"            // Add new Event into task list","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"ruo-x"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"ruo-x"},"content":"            // Save new task into backend","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"ruo-x"},"content":"            this.storage.saveTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"ruo-x"},"content":"            // Return system message to inform action","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"ruo-x"},"content":"            return this.ui.printAddTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"ruo-x"},"content":"        } catch (MissingTimeException | EmptyTaskException | InvalidEventException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"ruo-x"},"content":"     * Breaks down user\u0027s inputs into the task number to mark as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"ruo-x"},"content":"     * Returns the relevant error message if user did not input a valid task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"ruo-x"},"content":"     * Updates task from the task list as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"ruo-x"},"content":"     * Updates task from the storage as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"ruo-x"},"content":"     * @return A system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"ruo-x"},"content":"    public String handleMark(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"ruo-x"},"content":"            int taskNumber \u003d Parser.parseActions(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"ruo-x"},"content":"            Task task \u003d this.taskList.getTask(taskNumber);","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"ruo-x"},"content":"            // Update backend, important to update backend first!","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"ruo-x"},"content":"            this.storage.updateTask(task, 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"ruo-x"},"content":"            // Mark task as done","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"ruo-x"},"content":"            task.mark();","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"ruo-x"},"content":"            // Return system message to inform action","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"ruo-x"},"content":"            return Ui.printUpdateTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"ruo-x"},"content":"        } catch (EmptyTaskException | InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"ruo-x"},"content":"     * Breaks down user\u0027s inputs into the task number to mark as un-done.","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"ruo-x"},"content":"     * Returns the relevant error message if user did not input a valid task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"ruo-x"},"content":"     * Updates task from the task list as un-done.","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"ruo-x"},"content":"     * Updates task from the storage as un-done.","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"ruo-x"},"content":"     * @return A system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"ruo-x"},"content":"    public String handleUnMark(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"ruo-x"},"content":"            int taskNumber \u003d Parser.parseActions(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"ruo-x"},"content":"            Task task \u003d this.taskList.getTask(taskNumber);","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"ruo-x"},"content":"            // Update backend","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"ruo-x"},"content":"            this.storage.updateTask(task, 0);","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"ruo-x"},"content":"            // un-mark task","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"ruo-x"},"content":"            task.unMark();","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"ruo-x"},"content":"            // Return system message to inform action","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"ruo-x"},"content":"            return Ui.printUpdateTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"ruo-x"},"content":"        } catch (EmptyTaskException | InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":185,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":188,"author":{"gitId":"ruo-x"},"content":"     * Breaks down user\u0027s inputs into the task number to delete task.","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"ruo-x"},"content":"     * Returns the relevant error message if user did not input a valid task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":190,"author":{"gitId":"ruo-x"},"content":"     * Delete task from the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":191,"author":{"gitId":"ruo-x"},"content":"     * Delete task from the storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":192,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":193,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":194,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":195,"author":{"gitId":"ruo-x"},"content":"     * @return A system message to inform user of successful execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":196,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":197,"author":{"gitId":"ruo-x"},"content":"    public String handleDelete(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":198,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"ruo-x"},"content":"            // Get task from input","lastModifiedDate":"2023-08-27"},{"lineNumber":200,"author":{"gitId":"ruo-x"},"content":"            int taskNumber \u003d Parser.parseActions(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"ruo-x"},"content":"            Task task \u003d this.taskList.getTask(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"ruo-x"},"content":"            // Delete task from backend","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"ruo-x"},"content":"            this.storage.deleteTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"ruo-x"},"content":"            // Delete task from task list","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"ruo-x"},"content":"            this.taskList.deleteTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":209,"author":{"gitId":"ruo-x"},"content":"            // Return system message to inform action","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"ruo-x"},"content":"            return this.ui.printDeleteTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"ruo-x"},"content":"        } catch (EmptyTaskException | InvalidTaskException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":214,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":215,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":216,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":217,"author":{"gitId":"ruo-x"},"content":"     * Breaks down user\u0027s input into keyword to find.","lastModifiedDate":"2023-09-04"},{"lineNumber":218,"author":{"gitId":"ruo-x"},"content":"     * Search up keyword in the original task list and return a new filtered task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":219,"author":{"gitId":"ruo-x"},"content":"     * Prints all tasks that matches the keyword if search is successful, otherwise,","lastModifiedDate":"2023-09-04"},{"lineNumber":220,"author":{"gitId":"ruo-x"},"content":"     * prints a failed search message.","lastModifiedDate":"2023-09-04"},{"lineNumber":221,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-04"},{"lineNumber":223,"author":{"gitId":"ruo-x"},"content":"     * @return All tasks that matches the keyword in String format if search is successful, otherwise,","lastModifiedDate":"2023-09-04"},{"lineNumber":224,"author":{"gitId":"ruo-x"},"content":"     *     prints a failed search message.","lastModifiedDate":"2023-09-04"},{"lineNumber":225,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":226,"author":{"gitId":"ruo-x"},"content":"    public String handleFind(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":227,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":228,"author":{"gitId":"ruo-x"},"content":"            // breaks down input to obtain keyword to search for","lastModifiedDate":"2023-09-04"},{"lineNumber":229,"author":{"gitId":"ruo-x"},"content":"            String keyword \u003d Parser.parseFind(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":230,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":231,"author":{"gitId":"ruo-x"},"content":"            // search up key word in the original task list, returning a new filtered TaskList object","lastModifiedDate":"2023-09-04"},{"lineNumber":232,"author":{"gitId":"ruo-x"},"content":"            TaskList filteredList \u003d taskList.searchTask(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":233,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":234,"author":{"gitId":"ruo-x"},"content":"            // Prints system message to inform of results","lastModifiedDate":"2023-09-04"},{"lineNumber":235,"author":{"gitId":"ruo-x"},"content":"            return ui.printSearchTask(filteredList);","lastModifiedDate":"2023-09-04"},{"lineNumber":236,"author":{"gitId":"ruo-x"},"content":"        } catch (InvalidTaskException | FailedSearchException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":237,"author":{"gitId":"ruo-x"},"content":"            return Ui.printError(e);","lastModifiedDate":"2023-09-04"},{"lineNumber":238,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":239,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":240,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"ruo-x":240}},{"path":"src/main/java/duke/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.utility;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"import duke.exception.MissingTimeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":" * Parser class encapsulates all parsing actions to","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":" * break down user\u0027s inputs into outputs that can be read by Bobi.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"     * Parse input and use the results to return a To-Do object.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"     * @return A To-Do object.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"     * @throws EmptyTaskException if user did not input a task name","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"    public static ToDo parseTodo(String input) throws EmptyTaskException {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"        String[] keyword \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"        // checks if user has input a task name","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"        if (keyword.length \u003d\u003d 1 || keyword[1].equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"        // create new To Do task from input","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"        return new ToDo(false, keyword[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"     * Parse input and use the results to return a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"     * @return A Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"     * @throws MissingTimeException if user did not input a deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"     * @throws EmptyTaskException if user did not input a task name.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"     * @throws InvalidDeadlineException if user did not follow the specified format for deadlines.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"    public static Deadline parseDeadline(String input) throws MissingTimeException, EmptyTaskException, InvalidDeadlineException {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"            // split input by \"/by\"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"            String[] firstSplit \u003d input.split(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input a deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"            if (firstSplit.length \u003d\u003d 1 || firstSplit[1].equals(\" \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"                throw new MissingTimeException();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input a task name","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"            String[] secondSplit \u003d firstSplit[0].split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"            if (secondSplit.length \u003d\u003d 1 || secondSplit[1].equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"            // fill up a name field with input values","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"            String name \u003d secondSplit[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"            String[] thirdSplit \u003d firstSplit[1].split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input a valid deadline with date and time","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"            if (thirdSplit.length \u003d\u003d 2 || thirdSplit[2].equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"            // create a deadline field with input values","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"            int hour \u003d Integer.parseInt(thirdSplit[2].substring(0, 2));","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"            int minute \u003d Integer.parseInt(thirdSplit[2].substring(2));","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"            LocalDate date \u003d LocalDate.parse(thirdSplit[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"            LocalTime time \u003d LocalTime.of(hour, minute);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"            LocalDateTime deadline \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"            // create new Deadline task from variables","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"            return new Deadline(false, name, deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"        } catch (NumberFormatException | DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ruo-x"},"content":"     * Parse inputs and use the results to return a new Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"ruo-x"},"content":"     * @return An Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"ruo-x"},"content":"     * @throws MissingTimeException if user did not input a start/end to the Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"ruo-x"},"content":"     * @throws EmptyTaskException if user did not input an event name.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"ruo-x"},"content":"     * @throws InvalidEventException if user did not follow the specified format for start/end date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"ruo-x"},"content":"    public static Event parseEvent(String input) throws MissingTimeException, EmptyTaskException, InvalidEventException {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"ruo-x"},"content":"            // split input by \"/from\"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"ruo-x"},"content":"            String[] firstSplit \u003d input.split(\"/from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input a start field","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"ruo-x"},"content":"            if (firstSplit.length \u003d\u003d 1 || firstSplit[1].equals(\" \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"ruo-x"},"content":"                throw new MissingTimeException();","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"ruo-x"},"content":"            String[] secondSplit \u003d firstSplit[0].split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input a task name","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"ruo-x"},"content":"            if (secondSplit.length \u003d\u003d 1 || secondSplit[1].equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"ruo-x"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"ruo-x"},"content":"            // create a name field with input value","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"ruo-x"},"content":"            String name \u003d secondSplit[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"ruo-x"},"content":"            String[] thirdSplit \u003d firstSplit[1].split(\"/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input an end field","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"ruo-x"},"content":"            if (thirdSplit.length \u003d\u003d 1 || thirdSplit[1].equals(\" \") || thirdSplit[0].equals(\" \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"ruo-x"},"content":"                throw new MissingTimeException();","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"ruo-x"},"content":"            String[] startSplit \u003d thirdSplit[0].split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input the correct start field with date and time","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"ruo-x"},"content":"            if (startSplit.length \u003d\u003d 2 || startSplit[2].equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"ruo-x"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"ruo-x"},"content":"            // create a start field from input values","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"ruo-x"},"content":"            LocalDate startDate \u003d LocalDate.parse(startSplit[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"ruo-x"},"content":"            int startHour \u003d Integer.parseInt(startSplit[2].substring(0, 2));","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"ruo-x"},"content":"            int startMinute \u003d Integer.parseInt(startSplit[2].substring(2));","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"ruo-x"},"content":"            LocalTime startTime \u003d LocalTime.of(startHour, startMinute);","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"ruo-x"},"content":"            LocalDateTime start \u003d LocalDateTime.of(startDate, startTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"ruo-x"},"content":"            String[] endSplit \u003d thirdSplit[1].split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"ruo-x"},"content":"            // checks if user has input the correct end field with date and time","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"ruo-x"},"content":"            if (endSplit.length \u003d\u003d 2 || endSplit[2].equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"ruo-x"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"ruo-x"},"content":"            // creates an end field from input values","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"ruo-x"},"content":"            LocalDate endDate \u003d LocalDate.parse(endSplit[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"ruo-x"},"content":"            int endHour \u003d Integer.parseInt(endSplit[2].substring(0, 2));","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"ruo-x"},"content":"            int endMinute \u003d Integer.parseInt(endSplit[2].substring(2));","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"ruo-x"},"content":"            LocalTime endTime \u003d LocalTime.of(endHour, endMinute);","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"ruo-x"},"content":"            LocalDateTime end \u003d LocalDateTime.of(endDate, endTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"ruo-x"},"content":"            // create new Event task from variables","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"ruo-x"},"content":"            return new Event(false, name, start, end);","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"ruo-x"},"content":"        } catch (NumberFormatException | DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"ruo-x"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"ruo-x"},"content":"     * Parse user\u0027s input and return a task number of the task the user wish to perform the action on.","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"ruo-x"},"content":"     * @return Task number of the task to perform action.","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"ruo-x"},"content":"     * @throws EmptyTaskException if user did not input a task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"ruo-x"},"content":"    public static int parseActions(String input) throws EmptyTaskException {","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"ruo-x"},"content":"        String[] keyword \u003d input.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"ruo-x"},"content":"        // checks if user has input a task number","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"ruo-x"},"content":"        if (keyword.length \u003d\u003d 1 || keyword[1].equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"ruo-x"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"ruo-x"},"content":"        return Integer.parseInt(keyword[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":169,"author":{"gitId":"ruo-x"},"content":"     * Parse user\u0027s input and returns the keyword user wish to find.","lastModifiedDate":"2023-09-04"},{"lineNumber":170,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":171,"author":{"gitId":"ruo-x"},"content":"     * @param input User\u0027s input from the keyboard.","lastModifiedDate":"2023-09-04"},{"lineNumber":172,"author":{"gitId":"ruo-x"},"content":"     * @return Keyword user wish to find.","lastModifiedDate":"2023-09-04"},{"lineNumber":173,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":174,"author":{"gitId":"ruo-x"},"content":"    public static String parseFind(String input) throws InvalidTaskException {","lastModifiedDate":"2023-09-04"},{"lineNumber":175,"author":{"gitId":"ruo-x"},"content":"        String[] keyword \u003d input.split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":176,"author":{"gitId":"ruo-x"},"content":"        // checks if user has input a keyword to find","lastModifiedDate":"2023-09-04"},{"lineNumber":177,"author":{"gitId":"ruo-x"},"content":"        if (keyword.length \u003d\u003d 1 || keyword[1].equals(\"\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":178,"author":{"gitId":"ruo-x"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-09-04"},{"lineNumber":179,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":180,"author":{"gitId":"ruo-x"},"content":"        return keyword[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":181,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":182,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ruo-x":182}},{"path":"src/main/java/duke/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.utility;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import java.io.File;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":" * Storage class encapsulates all actions that can be done to the tasks saved in the backend.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    /** Path to the text file the data is saved in */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"    private final String pathString;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"     * Constructor for a Storage object.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"    public Storage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"        this.pathString \u003d \"C:\\\\Users\\\\Admin\\\\ip\\\\text-ui-test\\\\data\\\\task.txt\";","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"     * Saves a new task into the task list in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"     * @param newTask New task to save into the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"    public void saveTask(Task newTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"            Path path \u003d Paths.get(\"C:\\\\Users\\\\Admin\\\\ip\\\\text-ui-test\", \"data\", \"task.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"            String taskString \u003d newTask.toStoreString() + \"\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"            // write task into text file in string format","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"            Files.writeString(path, taskString, StandardOpenOption.APPEND);","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"     * Updates the status of a task saved in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"     * @param task Task saved in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"     * @param newStatus Status to update the task to.","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"     *     0 for false, 1 for true.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"    public void updateTask(Task task, int newStatus) {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"        String oldTask \u003d task.toStoreString();","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"        String newTask \u003d task.toUpdateString(newStatus);","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"        File fileToUpdate \u003d new File(this.pathString);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"        String oldContent \u003d \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"            reader \u003d new BufferedReader(new FileReader(fileToUpdate));","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"            //Reading all the lines of input text file into oldContent","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"                oldContent +\u003d line + System.lineSeparator();","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"            //Replacing oldString with newString in the oldContent","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"            String newContent \u003d oldContent.replaceAll(oldTask, newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"            //Rewriting the input text file with newContent","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"            writer \u003d new FileWriter(fileToUpdate);","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"            writer.write(newContent);","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"ruo-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"ruo-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"ruo-x"},"content":"        } finally {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"ruo-x"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"ruo-x"},"content":"                //Closing the resources","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"ruo-x"},"content":"                assert reader !\u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"ruo-x"},"content":"                reader.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"ruo-x"},"content":"                assert writer !\u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"ruo-x"},"content":"                writer.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"ruo-x"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"ruo-x"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"ruo-x"},"content":"     * Deletes a task from the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"ruo-x"},"content":"     * @param task Task to delete.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"ruo-x"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"ruo-x"},"content":"        String oldTask \u003d task.toStoreString();","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"ruo-x"},"content":"        File fileToUpdate \u003d new File(this.pathString);","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"ruo-x"},"content":"        String newContent \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"ruo-x"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"ruo-x"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"ruo-x"},"content":"            reader \u003d new BufferedReader(new FileReader(fileToUpdate));","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"ruo-x"},"content":"            //Reading all the lines of input text file into oldContent","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"ruo-x"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"ruo-x"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"ruo-x"},"content":"                // do not copy contents if it is equals to the task to delete","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"ruo-x"},"content":"                if (!line.equals(oldTask)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"ruo-x"},"content":"                    newContent +\u003d line + System.lineSeparator();","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"ruo-x"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"ruo-x"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"ruo-x"},"content":"            //Rewriting the input text file with newContent","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"ruo-x"},"content":"            writer \u003d new FileWriter(fileToUpdate);","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"ruo-x"},"content":"            writer.write(newContent);","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"ruo-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"ruo-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"ruo-x"},"content":"        } finally {","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"ruo-x"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"ruo-x"},"content":"                //Closing the resources","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"ruo-x"},"content":"                assert reader !\u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"ruo-x"},"content":"                reader.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"ruo-x"},"content":"                assert writer !\u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"ruo-x"},"content":"                writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"ruo-x"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"ruo-x"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"ruo-x"},"content":"     * Loads all contents from the text file into the active task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"ruo-x"},"content":"     * @param list Active task list to load into.","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"ruo-x"},"content":"    public void handleLoad(TaskList list) {","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"ruo-x"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"ruo-x"},"content":"            File file \u003d new File(this.pathString);","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"ruo-x"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"ruo-x"},"content":"            // creates new file if it does not exist","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"ruo-x"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"ruo-x"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"ruo-x"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"ruo-x"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"ruo-x"},"content":"                // reads text file line by line","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"ruo-x"},"content":"                String[] keyword \u003d sc.nextLine().split(\"/@/\");","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"ruo-x"},"content":"                switch (keyword[0]) {","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"ruo-x"},"content":"                case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"ruo-x"},"content":"                    // line is a To-Do Task","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"ruo-x"},"content":"                    boolean tStatus \u003d keyword[1].equals(\"1\");","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"ruo-x"},"content":"                    list.addTask(new ToDo(tStatus, keyword[2]));","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"ruo-x"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"ruo-x"},"content":"                case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"ruo-x"},"content":"                    // line is a Deadline Task","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"ruo-x"},"content":"                    boolean dStatus \u003d keyword[1].equals(\"1\");","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"ruo-x"},"content":"                    list.addTask(new Deadline(","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"ruo-x"},"content":"                            dStatus,","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"ruo-x"},"content":"                            keyword[2],","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"ruo-x"},"content":"                            LocalDateTime.parse(keyword[3])","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"ruo-x"},"content":"                    ));","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"ruo-x"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"ruo-x"},"content":"                case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"ruo-x"},"content":"                    // line is an Event Task","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"ruo-x"},"content":"                    boolean eStatus \u003d keyword[1].equals(\"1\");","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"ruo-x"},"content":"                    list.addTask(new Event(","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"ruo-x"},"content":"                            eStatus,","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"ruo-x"},"content":"                            keyword[2],","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"ruo-x"},"content":"                            LocalDateTime.parse(keyword[3]),","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"ruo-x"},"content":"                            LocalDateTime.parse(keyword[4])","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"ruo-x"},"content":"                    ));","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"ruo-x"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"ruo-x"},"content":"                default:","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"ruo-x"},"content":"                    System.out.println(\"error\");","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"ruo-x"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":196,"author":{"gitId":"ruo-x"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"ruo-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"ruo-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"ruo-x"},"content":"        } finally {","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"ruo-x"},"content":"            assert sc !\u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"ruo-x"},"content":"            sc.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":204,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"ruo-x":205}},{"path":"src/main/java/duke/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.utility;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import duke.exception.FailedSearchException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":" * TaskList class encapsulates an ArrayList of all the tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":" * users have added into their Bobi task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"public class TaskList {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    /** ArrayList of tasks in the task list */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"     * Constructor of a TaskList object.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"     * Adds a new task into the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"     * @param newTask New task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"        // add new task into our tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"     * Retrieves the task at the specified task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"     * @param taskNumber Specified task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"     * @return Task retrieved of that specified task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"     * @throws InvalidTaskException if task number is not within the length of task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"    public Task getTask(int taskNumber) throws InvalidTaskException {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"        if (taskNumber \u003e this.tasks.size() || taskNumber \u003d\u003d 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"        return this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"     * Returns the length of task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"     * @return Length of task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"    public int getLength() {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"     * Remove a task from the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"     * @param task Task to remove.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"        for (int i \u003d 0; i \u003c 100; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"            if (this.tasks.get(i).equals(task)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"                this.tasks.remove(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"     * Search the given keyword for all the task names in the task list","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"     * and returns the filtered task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"     * @return A new TaskList object containing all tasks that contains the given keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"     * @throws FailedSearchException if no task matches the given keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"    public TaskList searchTask(String keyword) throws FailedSearchException {","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"        // copy all contents of task list into search list","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"        TaskList searchList \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"        searchList.tasks.addAll(this.tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"ruo-x"},"content":"        int originalSize \u003d searchList.getLength();","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"ruo-x"},"content":"        for (int i \u003d 0; i \u003c originalSize; i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"ruo-x"},"content":"            for (int j \u003d 0; j \u003c searchList.getLength(); j++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"ruo-x"},"content":"                String taskName \u003d searchList.tasks.get(j).getName();","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"ruo-x"},"content":"                // remove tasks that do not contain the keyword","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"ruo-x"},"content":"                if (!taskName.contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"ruo-x"},"content":"                    searchList.tasks.remove(j);","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"ruo-x"},"content":"                    break;","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"ruo-x"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"ruo-x"},"content":"        // none of the tasks matches the keyword, throw an exception","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"ruo-x"},"content":"        if (searchList.tasks.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"ruo-x"},"content":"            throw new FailedSearchException();","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"ruo-x"},"content":"        return searchList;","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"ruo-x"},"content":"     * Returns the task list in a String format.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"ruo-x"},"content":"     * @return Task list in a String format.","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"ruo-x"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":115,"author":{"gitId":"ruo-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":116,"author":{"gitId":"ruo-x"},"content":"        // display in numerical pointers","lastModifiedDate":"2023-08-25"},{"lineNumber":117,"author":{"gitId":"ruo-x"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"ruo-x"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"ruo-x"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"ruo-x"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-25"},{"lineNumber":121,"author":{"gitId":"ruo-x"},"content":"                break;","lastModifiedDate":"2023-08-25"},{"lineNumber":122,"author":{"gitId":"ruo-x"},"content":"            } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":123,"author":{"gitId":"ruo-x"},"content":"                list +\u003d (i + 1) + \".\" + task + \"\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"ruo-x"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":125,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":126,"author":{"gitId":"ruo-x"},"content":"        return list;","lastModifiedDate":"2023-08-25"},{"lineNumber":127,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":128,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"ruo-x":128}},{"path":"src/main/java/duke/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.utility;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import duke.exception.BobiException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":" * Ui class encapsulates all system messages Bobi displays in different scenarios.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":" * @author ruo-x","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"    private static final String SEPARATOR \u003d \"_______________________________________________________________________\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Bobi \u003e.\u003c, what can I do for you?\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    private static final String EXIT \u003d \"Bye! Hope you have a good day today :)\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"    private static final String ADD_TASK \u003d \"New task added to your list:\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    private static String taskCount;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"    private static final String LIST_TASKS \u003d \"Things you need to do: \\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"    private static final String UPDATE_TASK \u003d \"OK! Your task has now been updated to: \\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"    private static final String DELETE_TASK \u003d \"Alright! I have deleted this task from the list:\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"    private static final String SEARCH_TASK \u003d \"Found it! Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"     * Constructor of an Ui object.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"    public Ui(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"     * Retrieves user\u0027s input from the keyboard.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"     * Closes the scanner.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"    public void stopScanner() {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"        this.sc.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message greeting the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"    public static String greeting() {","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + GREETING + SEPARATOR;","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message informing user a task has been added to Bobi task list","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"     * and the number of tasks in the task list after the action.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"     * @param task Task added into Bobi task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"    public String printAddTask(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"        taskCount \u003d \"You currently have \" + this.taskList.getLength() + \" tasks to do.\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + ADD_TASK + task.toString() + \"\\n\" + taskCount + SEPARATOR;","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message listing all tasks currently in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"    public String listTasks() {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + LIST_TASKS + this.taskList.toString() + SEPARATOR;","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message informing the user that the status of a task has been updated.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ruo-x"},"content":"     * @param task Task that has updated its status.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ruo-x"},"content":"    public static String printUpdateTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + UPDATE_TASK + task.toString() + \"\\n\" + SEPARATOR;","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"ruo-x"},"content":"     * Returns a system error message of a specific BobiException.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ruo-x"},"content":"     * @param e BobiException to throw the message.","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ruo-x"},"content":"    public static String printError(BobiException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + e.getMessage() + \"\\n\" + SEPARATOR;","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to inform user that a task has been deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"ruo-x"},"content":"     * @param task Task deleted from the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"ruo-x"},"content":"    public String printDeleteTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"ruo-x"},"content":"        taskCount \u003d \"You currently have \" + this.taskList.getLength() + \" tasks to do.\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + DELETE_TASK + task.toString() + \"\\n\" + taskCount + SEPARATOR;","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"ruo-x"},"content":"     * Returns all tasks found from the search in a String format.","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"ruo-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"ruo-x"},"content":"     * @param filteredList TaskList of all tasks that matches the keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"ruo-x"},"content":"    public String printSearchTask(TaskList filteredList) {","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + SEARCH_TASK + filteredList.toString() + \"\\n\" + SEPARATOR;","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"ruo-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"ruo-x"},"content":"     * Returns a system message to say goodbye to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"ruo-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"ruo-x"},"content":"    public static String exit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"ruo-x"},"content":"        return SEPARATOR + EXIT + SEPARATOR;","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"ruo-x":119}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"600.0\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"120.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ruo-x":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ruo-x":20}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 5, 30, 8, 0);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"        Deadline task \u003d new Deadline(false, \"Bobi Homework \", deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"        assertEquals(\"[D][ ] Bobi Homework (by: May 30 2023 at 08:00)\", task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"    public void toStoreStringTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 5, 30, 8, 0);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"        Deadline task \u003d new Deadline(false, \"Bobi Homework \", deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"        assertEquals(\"D/@/0/@/Bobi Homework /@/2023-05-30T08:00\", task.toStoreString());","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ruo-x":24}},{"path":"src/test/java/duke/utility/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"package duke.utility;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"import duke.exception.BobiException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"    public void parseEventTest_validInput_success() throws BobiException {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2023, 10, 10, 8, 00);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2023, 10, 11, 18, 00);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"        Event expectedEvent \u003d new Event(false, \"Bobi birthday party \", start, end);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"        Event actualEvent \u003d Parser","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"                .parseEvent(\"event Bobi birthday party /from 2023-10-10 0800 /to 2023-10-11 1800\");","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"        assertEquals(expectedEvent.toString(), actualEvent.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"    public void parseEventTest_missingName_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"            assertEquals(new Object(), Parser.parseEvent(\"event /from 2023-10-10 0800 /to 2023-10-11 1800\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"        } catch (BobiException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"            assertEquals(\"Oh no! Bobi cannot add an empty task. :/\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ruo-x"},"content":"    public void parseEventTest_missingDateTime_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ruo-x"},"content":"            assertEquals(new Object(), Parser.parseEvent(\"event Bobi birthday party\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ruo-x"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ruo-x"},"content":"        } catch (BobiException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ruo-x"},"content":"            assertEquals(\"Please input a date and time for this task.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ruo-x"},"content":"    public void parseEventTest_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ruo-x"},"content":"            assertEquals(new Object(),","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"ruo-x"},"content":"                    Parser.parseEvent(\"event Bobi birthday party /from date time /to 2111-50-2131 21394\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"ruo-x"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ruo-x"},"content":"        } catch (BobiException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ruo-x"},"content":"            assertEquals(","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ruo-x"},"content":"                    \"Oh no! It seems like you have indicated an invalid event :/ \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ruo-x"},"content":"                    + \"Please follow this format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ruo-x"},"content":"                    + \"event \u003ctask name\u003e /from \u003cyyyy-mm-dd\u003e \u003cHHmm\u003e /to \u003cyyyy-mm-dd\u003e \u003cHHmm\u003e\",","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"ruo-x"},"content":"                    e.getMessage()","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ruo-x"},"content":"            );","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ruo-x"},"content":"    public void parseActionsTest_validInput_success() throws EmptyTaskException {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ruo-x"},"content":"        assertEquals(1, Parser.parseActions(\"mark 1\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ruo-x"},"content":"        assertEquals(2, Parser.parseActions(\"unmark 2\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"ruo-x"},"content":"        assertEquals(3, Parser.parseActions(\"delete 3\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ruo-x"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ruo-x"},"content":"    public void parseActionsTest_missingNumber_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"ruo-x"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"ruo-x"},"content":"            assertEquals(0, Parser.parseActions(\"mark \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"ruo-x"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"ruo-x"},"content":"        } catch (BobiException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ruo-x"},"content":"            assertEquals(\"Oh no! Bobi cannot add an empty task. :/\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"ruo-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"ruo-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"ruo-x"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ruo-x":77}},{"path":"text-ui-test/data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"T/@/0/@/eat chocolate","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"T/@/0/@/dance class","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"D/@/0/@/run 100km /@/2023-10-01T18:00","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"T/@/0/@/say hi","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"T/@/0/@/say bye","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"E/@/0/@/halloween party /@/2023-10-01T18:00/@/2023-10-02T08:00","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"T/@/0/@/dance","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ruo-x":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruo-x"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"ruo-x"},"content":"todo running","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"ruo-x"},"content":"deadline school work /by this friday","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"ruo-x"},"content":"event hackathon /from 2pm /to 5pm","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ruo-x"},"content":"mark 0","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"ruo-x"},"content":"mark 1","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"ruo-x"},"content":"mark 2","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"ruo-x"},"content":"mark 3","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"ruo-x"},"content":"mark 5","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"ruo-x"},"content":"unmark 0","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"ruo-x"},"content":"unmark 1","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"ruo-x"},"content":"unmark 2","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"ruo-x"},"content":"unmark 3","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ruo-x"},"content":"unmark 5","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"ruo-x"},"content":"todo","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"ruo-x"},"content":"deadline","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"ruo-x"},"content":"deadline school work","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"ruo-x"},"content":"event","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"ruo-x"},"content":"event hackathon","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"ruo-x"},"content":"event hackathon /from","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"ruo-x"},"content":"event hackathon /from 2pm","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"ruo-x"},"content":"delete 0","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"ruo-x"},"content":"delete 1","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"ruo-x"},"content":"delete 1","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"ruo-x"},"content":"delete 1","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"ruo-x"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"ruo-x"},"content":"bye","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"ruo-x"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ruo-x":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ruo-x"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Bobi.java","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruo-x":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ruo-x"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruo-x":1,"-":37}}]
