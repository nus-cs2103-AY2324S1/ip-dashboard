[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FerdiHS":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FerdiHS":21,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" * Chatbot class","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    static final String DIRECTORY_NAME \u003d \"./data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    static final String FILE_NAME \u003d \"storage.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * Constructs the duke.Duke","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     * @param directoryName the name of the directory","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * @param fileName the name of the file","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    public Duke(String directoryName, String fileName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        this.storage \u003d new Storage(directoryName, fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"            this.ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     * The main method","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * @param args the input argument","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"        new Duke(DIRECTORY_NAME, FILE_NAME).run();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * Runs the program","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        ui.printIntro();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        String message \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        while (!message.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"            Parser.parse(message, ui, tasks, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"            message \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        Parser.parse(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        scanner.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     * Gets the response based on the input","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"     * @param input the input of the program","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"     * @return the response based on the input","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        return Parser.parse(input, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":70,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import duke.gui.Main;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"     * Launchs the GUI of the application","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     * @param args the list of arguments","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":18}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidToDoException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":" * The class for Command","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"public class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * Lists all the tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the list task command","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException when the list command is invalid","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    public static String list(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        if (message.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"            return ui.printTasks(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"     * Marks task","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the mark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException when the mark command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    public static String mark(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"                int index \u003d Integer.parseInt(messageWords[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"                Task markTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"                markTask.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"                return ui.printMarkTask(markTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks task","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the unmark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException when the unmark command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    public static String unmark(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"                int index \u003d Integer.parseInt(messageWords[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"                Task unmarkTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"                unmarkTask.unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"                return ui.printUnmarkTask(unmarkTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"     * Adds to do","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add todo command","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidToDoException when the todo command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"    public static String addToDo(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidToDoException {","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d ToDo.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"        return ui.printAddTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"     * Adds deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add deadline command","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidDeadlineException when the deadline command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"    public static String addDeadline(String message, Ui ui, TaskList tasks, Storage storage)","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"            throws InvalidDeadlineException {","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d Deadline.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"FerdiHS"},"content":"        return ui.printAddTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"FerdiHS"},"content":"     * Adds event","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add event command","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidEventException when the event command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"FerdiHS"},"content":"    public static String addEvent(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidEventException {","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d Event.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"FerdiHS"},"content":"        return ui.printAddTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"FerdiHS"},"content":"     * Deletes task","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the delete task command","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException when the delete command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"FerdiHS"},"content":"    public static String delete(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"FerdiHS"},"content":"                int index \u003d Integer.parseInt(messageWords[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"FerdiHS"},"content":"                Task removedTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"FerdiHS"},"content":"                tasks.removeTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"FerdiHS"},"content":"                return ui.printRemoveTask(removedTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"FerdiHS"},"content":"     * Finds the compatible tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage to store","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the find task command","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException if the command is invalid","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"FerdiHS"},"content":"    public static String find(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-06"},{"lineNumber":192,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"FerdiHS"},"content":"                String keyWord \u003d messageWords[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"FerdiHS"},"content":"                return ui.printFindTask(tasks.find(keyWord));","lastModifiedDate":"2023-09-06"},{"lineNumber":198,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"FerdiHS":207}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The Exception class for invalid command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidCommandException","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":12}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The exception for invalid deadline command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidDeadlineException","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the Deadline input is invalid :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":12}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid event command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidEventException","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input Event is invalid :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":12}},{"path":"src/main/java/duke/exception/InvalidToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid todo command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidToDoException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidToDoException","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    public InvalidToDoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input ToDo is invalid :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":12}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":" * Class for the box for dialog","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    private Label text;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates DialogBox","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @param l the label","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * @param iv the image view","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     * Flips the dialog box (used for the bot)","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new dialog box for user","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     * @param l the label shown","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     * @param iv the image shown","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     * @return a new dialog box for user","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new dialog box for the bot","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"     * @param l the label shown","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"     * @param iv the image shown","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"     * @return a new dialog box for the bot","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        DialogBox db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":70}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":" * The main class for the GUI","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    private Image chatbot \u003d new Image(this.getClass().getResourceAsStream(\"/images/Chatbot.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    private Duke duke \u003d new Duke(\"./data\", \"storage.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    private UserInputPane userInputPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        //Step 1. Formatting the window to look as expected.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        userInputPane \u003d new UserInputPane(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInputPane);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"        stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        stage.setTitle(\"Not a Chatbot\");","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setBottomAnchor(userInputPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setLeftAnchor(userInputPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(new Label(\"    Hello! I\u0027m Not A ChatBot\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"                + \"    What can I do for you?\\n\"), new ImageView(chatbot)));","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * Adds both user\u0027s and bot\u0027s dialog box based on the text sent by the user","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     * @param userText the text sent by the user","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"    public void addDialog(String userText) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        Label userLabel \u003d new Label(userText);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        Label responseLabel \u003d new Label(duke.getResponse(userText));","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"                DialogBox.getUserDialog(userLabel, new ImageView(user)),","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"                DialogBox.getDukeDialog(responseLabel, new ImageView(chatbot))","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":87}},{"path":"src/main/java/duke/gui/UserInputPane.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":" * The class for the user input panel","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"public class UserInputPane extends Pane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    private Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/SendIcon.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    private Main mainPanel;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the UserInputPane","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @param mainPanel the mainPanel where the UserInputPane located","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    public UserInputPane(Main mainPanel) {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        this.mainPanel \u003d mainPanel;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        ImageView sendImage \u003d new ImageView(sendIcon);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        sendImage.setFitWidth(30.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        sendImage.setFitHeight(25);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        userInput.setPrefWidth(345.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane inputContainer \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        inputContainer.getChildren().addAll(userInput, sendImage);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        // Position userInput in the bottom left corner","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        // Position sendImage in the bottom right corner","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setRightAnchor(sendImage, -35.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setBottomAnchor(sendImage, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"        // Set the preferred height for inputContainer to accommodate both elements","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        inputContainer.setPrefHeight(userInput.getPrefHeight());","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        getChildren().add(inputContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        sendImage.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        mainPanel.addDialog(userText);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        if (userText.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":69}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidToDoException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" * The Parser class to parse the command","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * Parses the message given","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message given","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage program","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * @return the response","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    public static String parse(String message, Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"            String messageType \u003d message.split(\" \")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"            if (messageType.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"                return Command.list(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"            } else if (messageType.equals(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"                return Command.mark(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"            } else if (messageType.equals(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"                return Command.unmark(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            } else if (messageType.equals(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"                return Command.addToDo(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            } else if (messageType.equals(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"                return Command.addDeadline(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            } else if (messageType.equals(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"                return Command.addEvent(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            } else if (messageType.equals(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"                return Command.delete(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            } else if (messageType.equals(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"                return Command.find(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            } else if (message.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"                return ui.printEnd();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidToDoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidEventException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":59}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":" * Storage class that save the data","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the Storage class","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     * @param directoryName the name of the directory","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * @param fileName the name of the file","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    public Storage(String directoryName, String fileName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        this.filePath \u003d directoryName + \"/\" + fileName;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        // Make new file to store","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            File directory \u003d new File(directoryName);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            // Make the directory if not exist","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"            // Make the file if not exist","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"                loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * Loads the tasks from the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * @return the tasks loaded","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException when the task stored is invalid (usually the date)","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        // Adds each task","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"            Task currentTask \u003d readTask(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"            loadedTasks.add(currentTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"        return loadedTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     * Reads a task stored in the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"     * @param taskStoredInString the string representative of the task stored in the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"     * @return the task","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException if the task read is invalid","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"    public static Task readTask(String taskStoredInString) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"        String[] taskInStringSplit \u003d taskStoredInString.split(\" \\\\| \");","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        String type \u003d taskInStringSplit[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"        String mark \u003d taskInStringSplit[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"        String description \u003d taskInStringSplit[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"        Task task \u003d type.equals(\"T\")","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"            ? new ToDo(description)","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"            : type.equals(\"D\")","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"            ? new Deadline(description, LocalDate.parse(taskInStringSplit[3]))","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"            : new Event(description, LocalDate.parse(taskInStringSplit[3]), LocalDate.parse(taskInStringSplit[4]));","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"            task.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"        return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"     * Adds new task to the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task added","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"            writer.write(task.storeInString());","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"            writer.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to add task: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"     * Updates the storage based on current tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"    public void updateTask(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"FerdiHS"},"content":"            writer.write(tasks.storeInString());","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to update task: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"FerdiHS":127}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":" * Deadline class","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * @param deadline the date of the deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new deadline based on the message","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * @return the new deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidDeadlineException when the deadline command message is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    public static Deadline create(String message) throws InvalidDeadlineException {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"            String name \u003d message.substring(9, message.indexOf(\"/by \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            String deadlineString \u003d message.substring(message.indexOf(\"/by \") + 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            return new Deadline(name, deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"        String deadlineMonth \u003d deadline.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        String deadlineDay \u003d deadline.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        String deadlineYear \u003d deadline.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineMonth + \" \"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"                + deadlineDay + \" \" + deadlineYear + \" )\";","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        return \"D | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName() + \" | \" + this.deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":" * Event class","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates event","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * @param start the starting time of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * @param end the end time of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new event based on the message","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new event","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * @return the new event","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidEventException when the event command message is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    public static Event create(String message) throws InvalidEventException {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            String name \u003d message.substring(6, message.indexOf(\"/from \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"            int fromIndex \u003d message.indexOf(\"/from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            int toIndex \u003d message.indexOf(\" /to \", fromIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"            String fromString \u003d message.substring(fromIndex + 6, toIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            String toString \u003d message.substring(toIndex + 5);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            LocalDate fromDate \u003d LocalDate.parse(fromString);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            LocalDate toDate \u003d LocalDate.parse(toString);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"            return new Event(name, fromDate, toDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        String startMonth \u003d start.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        String startDay \u003d start.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        String startYear \u003d start.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"        String endMonth \u003d end.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        String endDay \u003d end.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        String endYear \u003d end.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"                + startMonth + \" \" + startDay + \" \" + startYear","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"                + \" to: \" + endMonth + \" \" + endDay + \" \" + endYear + \" )\";","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        return \"E | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName() + \" | \" + this.start + \" | \" + this.end;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":68}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * Task class","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * Marks the task","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"        isMarked \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks the task","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * Gets the name of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * @return the name of the to do","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    public String getName() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        return name;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     * Gets whether the task is marked","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     * @return whether the task is marked","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"    public boolean getMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        return isMarked;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     * Check whether the name of the task containing the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * @param keyWord the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     * @return whether the name of the task containing the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    public boolean hasKeyword(String keyWord) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        return name.toLowerCase().contains(keyWord.toLowerCase());","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        return \"[\" + (isMarked ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"     * Gets string format of the task in the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     * @return the string format of the task in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"    public abstract String storeInString();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":67}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":" * The TaskList class for the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     * Gets the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * @return the task with the certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * Adds a new task","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     * Removes the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the removed task","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     * Marks the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the marked task","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the unmarked task","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"     * Gets the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"     * Gets the string representation to store the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"     * @return the string representation to store the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"            ret +\u003d task.storeInString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        return ret;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"     * Finds list of task containing the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"     * @param keyWord the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"     * @return the list of task containing the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"    public TaskList find(String keyWord) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"            if (task.hasKeyword(keyWord)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"                results.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"        return new TaskList(results);","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"     * Checks whether the TaskList is empty","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"     * @return whether the TaskList is empty","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"            ret +\u003d \"    \" + (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"        return ret;","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":117}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidToDoException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" * Class for ToDo","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    };","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new ToDo based on the message","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new todo","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * @return the new todo","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidToDoException when the todo command message is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    public static ToDo create(String message) throws InvalidToDoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"            return new ToDo(message.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidToDoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        return \"T | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":37}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":" * The Ui class for the user interaction of the program","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    private static final String SPACE \u003d \"    \";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    private static final String DASH \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * Prints the intro to user","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @return the intro message","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    public String printIntro() {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        String intro \u003d SPACE + \"Hello! I\u0027m Not A ChatBot\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"                        + SPACE + \"What can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        return intro;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     * Prints the bye message to user","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     * @return the bye message","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    public String printEnd() {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        String end \u003d SPACE + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(end);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        return end;","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * Prints if exception occur","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     * @param e the exception","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the exception","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    public String printException(Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"        String exceptionMessage \u003d SPACE + e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(exceptionMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"        return exceptionMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"     * Prints the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the list task command","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"    public String printTasks(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        String tasksMessage \u003d SPACE + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"                            + tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(tasksMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        return tasksMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of marking task","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task marked","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the mark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"    public String printMarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        String markTaskMessage \u003d SPACE + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(markTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"        return markTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of unmarking task","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task unmarked","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the unmark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"    public String printUnmarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"        String unmarkTaskMessage \u003d SPACE + \"OK, I\u0027ve unmarked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(unmarkTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"        return unmarkTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of adding task","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"     * @param size the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add task command","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"    public String printAddTask(Task task, int size) {","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"        String addTaskMessage \u003d SPACE + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + task + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(addTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"        return addTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of removing task","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task removed","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"FerdiHS"},"content":"     * @param size the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the remove task command","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"FerdiHS"},"content":"    public String printRemoveTask(Task task, int size) {","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"FerdiHS"},"content":"        String removeTaskMessage \u003d SPACE + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"FerdiHS"},"content":"                                    + SPACE + task + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"FerdiHS"},"content":"                                    + SPACE + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(removeTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"FerdiHS"},"content":"        return removeTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of find task","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the find task command","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"FerdiHS"},"content":"    public String printFindTask(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"FerdiHS"},"content":"        String findTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"FerdiHS"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"FerdiHS"},"content":"            findTaskMessage \u003d \"Cannot find any tasks with this keyword\";","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"FerdiHS"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"FerdiHS"},"content":"            findTaskMessage \u003d tasks + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(findTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"FerdiHS"},"content":"        return findTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":156}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import duke.ui.UiSample;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":" * The test class for Parser","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    private UiSample ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * Sets things up before each tests","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    public void setup() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        this.ui \u003d new UiSample();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        this.storage \u003d new Storage(\"./data\", \"test.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     * Tests the parse method with list message in Parser","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    public void parse_list_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        Parser.parse(\"list\", ui, tasks, storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(ui.getPrintTasksCount(), 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     * Tests the parse method with invalid message in Parser","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    public void parse_invalid_fail() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        Parser.parse(\"invalid\", ui, tasks, storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(ui.getPrintExceptionCount(), 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":52}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" * The testing class for TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    private TaskList sampleTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * Sets things up before every tests","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    public void setup() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.addTask(new ToDoSample());","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.addTask(new ToDoSample());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method size of list of two tasks in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    public void size_twoTasks_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(sampleTasks.getSize(), 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method addTask in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    public void addTask_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.addTask(new ToDoSample());","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(sampleTasks.getSize(), 3);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method removeTask in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"    public void removeTask_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.removeTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(sampleTasks.getSize(), 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method markTask in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"    public void markTask_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.markTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        assertTrue(sampleTasks.getTask(1).getMark());","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":62}},{"path":"src/test/java/duke/task/ToDoSample.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * Sample for ToDo","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class ToDoSample extends ToDo {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    public ToDoSample() {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"        super(\"TaskSample\");","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":10}},{"path":"src/test/java/duke/ui/UiSample.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":" * Sample class for UI","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"public class UiSample extends Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    private int printTasksCount \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    private int printExceptionCount \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     * Prints the list of tasks (Mock)","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    public String printTasks(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"        printTasksCount++;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"        return super.printTasks(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * Prints the exception (Mock)","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * @param e the exception","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    public String printException(Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        printExceptionCount++;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        return super.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     * Returns the number of print tasks called","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of print tasks called","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    public int getPrintTasksCount() {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        return printTasksCount;","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     * Returns the number of print exception called","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of print exception called","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    public int getPrintExceptionCount() {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        return printExceptionCount;","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"todo","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"todo CS2101 Presentation","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"deadline without by","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"deadline with /by but invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"deadline invalid date /by 2023-13-01","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"deadline CS2103 Individual Project /by 2023-09-01","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"event","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"event without date","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"event with /from but invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"event with only /from 2023-01-09","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"event with /from and /to","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"event with /from 2023-01-09 /to invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"event invalid date /from 2023-09-01 /to 2023-09-31","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"event September /from 2023-09-01 /to 2023-09-30","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"unmark 3","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"mark my words","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"mark this","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"mark -9","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"mark 0","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"mark 999","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"unmark 1 1","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"mark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"unmark my words","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"unmark that","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"unmark -9","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"unmark 0","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"unmark 999","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"unmark 1 1","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"delete","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"delete -1","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"delete haha","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"delete 99","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"delete 1 1","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"todo CS2103 Materials","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"find","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"find invalid invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"find nothing","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"find Presentation","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"find CS2103","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":59}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FerdiHS":1,"-":20}}]
