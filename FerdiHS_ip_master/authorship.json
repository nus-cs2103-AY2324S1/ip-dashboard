[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":" * Chatbot class","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    // Attribute","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of Duke","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * @param directoryName the name of directory","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     * @param fileName the name of the file","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    public Duke(String directoryName, String fileName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        this.storage \u003d new Storage(directoryName, fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            this.ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"    // Method","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     * The main method","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     * @param args the input argument","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        new Duke(\"./data\", \"storage.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     * Runs the program","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        ui.printIntro();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"        String message \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        while(!message.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"            Parser.parse(message, ui, tasks, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"            message \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        ui.printEnd();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        scanner.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":61,"-":3}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidToDoException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":" * The class for Command","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"public class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     * Marks task","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    public static void mark(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"            if(message.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"                Task markTask \u003d tasks.getTask(Integer.parseInt(message.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"                markTask.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"                ui.printMarkTask(markTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks task","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    public static void unmark(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"            if(message.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"                Task unmarkTask \u003d tasks.getTask(Integer.parseInt(message.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"                unmarkTask.unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"                ui.printUnmarkTask(unmarkTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"     * Adds to do","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidToDoException","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"    public static void addToDo(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidToDoException {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d ToDo.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"        ui.printAddTask(newTask, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"     * Adds deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidDeadlineException","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"    public static void addDeadline(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidDeadlineException {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d Deadline.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"        ui.printAddTask(newTask, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"     * Adds event","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidEventException","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"    public static void addEvent(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidEventException {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d Event.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"        ui.printAddTask(newTask, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"     * Deletes task","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"FerdiHS"},"content":"    public static void delete(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"FerdiHS"},"content":"            if(message.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"FerdiHS"},"content":"                Task removedTask \u003d tasks.getTask(Integer.parseInt(message.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"FerdiHS"},"content":"                tasks.removeTask(Integer.parseInt(message.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"FerdiHS"},"content":"                ui.printRemoveTask(removedTask, tasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"FerdiHS"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"FerdiHS"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"FerdiHS":144}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The Exception class for invalid command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidCommandException","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":14}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The exception for invalid deadline command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidDeadlineException","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the Deadline input is invalid :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":14}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid event command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidEventException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidEventException","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input Event is invalid :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":14}},{"path":"src/main/java/duke/exception/InvalidToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid todo command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class InvalidToDoException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of InvalidToDoException","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    public InvalidToDoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input ToDo is invalid :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidToDoException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     * Parses the message given","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message given","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage program","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    public static void parse(String message, Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"        try{","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"            String messageType \u003d message.split(\" \")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"            if(message.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"                ui.printTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"            } else if(messageType.equals(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"                Command.mark(message, ui, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"            } else if(messageType.equals(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"                Command.unmark(message, ui, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"            } else if(messageType.equals(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"                Command.addToDo(message, ui, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"            } else if(messageType.equals(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"                Command.addDeadline(message, ui, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            } else if(messageType.equals(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"                Command.addEvent(message, ui, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            } else if(messageType.equals(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"                Command.delete(message, ui, tasks, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        } catch(InvalidToDoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        } catch(InvalidEventException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"        } catch(InvalidDeadlineException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        } catch(InvalidCommandException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":51}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"/*","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":" * Storage class that save the data","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     * Constructor for Storage class","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    public Storage(String directoryName, String fileName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        this.filePath \u003d directoryName + \"/\" + fileName;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        ","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        // Make new file to store","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            File directory \u003d new File(directoryName);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            if(!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            if(file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"                loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    // Method","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * Loads the tasks from the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * @return the tasks loaded","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        while(line !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"            String[] lineSplit \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"            String type \u003d lineSplit[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"            String mark \u003d lineSplit[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"            String description \u003d lineSplit[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"            Task currentTask \u003d type.equals(\"T\") ","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"                ? new ToDo(description) ","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"                : type.equals(\"D\") ","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"                ? new Deadline(description, LocalDate.parse(lineSplit[3])) ","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"                : new Event(description, LocalDate.parse(lineSplit[3]), LocalDate.parse(lineSplit[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"            if(mark.equals(\"1\")) currentTask.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"            loadedTasks.add(currentTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        return loadedTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"     * Method to add task","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task added","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"            writer.write(task.storeInString());","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"            writer.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to add task: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"     * Method to update the storage based on current tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"    public void updateTask(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"        try{","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"            writer.write(tasks.storeInString());","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to update task: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"FerdiHS":112}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":" * Deadline class","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    // Attribute","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of Deadline class","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * @param deadline the deadline of the deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    // Method","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new deadline based on the message","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     * @return the new deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidDeadlineException","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"    public static Deadline create(String message) throws InvalidDeadlineException {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"            String name \u003d message.substring(9, message.indexOf(\"/by \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            String deadlineString \u003d message.substring(message.indexOf(\"/by \") + 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            return new Deadline(name, deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * Method to get the string representation of deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     * @return the string representation of deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        String deadlineMonth \u003d deadline.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"        String deadlineDay \u003d deadline.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        String deadlineYear \u003d deadline.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineMonth + \" \" ","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"            + deadlineDay + \" \" + deadlineYear + \" )\";","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"     * Method to return the string format of the deadline in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"     * @return the string format of the deadline in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        return \"D | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName() + \" | \" + this.deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":71}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":" * Event class","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    // Attribute","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of Event class","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     * @param name name of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * @param start the start of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @param end the end of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    // Method","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new event based on the message","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new event","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     * @return the new event","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidEventException","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    public static Event create(String message) throws InvalidEventException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            String name \u003d message.substring(6, message.indexOf(\"/from \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            int fromIndex \u003d message.indexOf(\"/from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"            int toIndex \u003d message.indexOf(\" /to \", fromIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            String fromString \u003d message.substring(fromIndex + 6, toIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"            String toString \u003d message.substring(toIndex + 5);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"            LocalDate fromDate \u003d LocalDate.parse(fromString);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"            LocalDate toDate \u003d LocalDate.parse(toString);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            return new Event(name, fromDate, toDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * Method to return the string representation of event","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     * @return the string representation of event","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        String startMonth \u003d start.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        String startDay \u003d start.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        String startYear \u003d start.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        String endMonth \u003d end.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        String endDay \u003d end.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        String endYear \u003d end.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        return \"[E]\" + super.toString() + \" (from: \" ","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"            + startMonth + \" \" + startDay + \" \" + startYear + \" to: \" + endMonth + \" \" + endDay + \" \" + endYear + \" )\";","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"     * Method to return the string format of the event in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     * @return the string format of the event in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        return \"E | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName() + \" | \" + this.start + \" | \" + this.end;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":82}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":" * Task class","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    // Attribute","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"    private boolean mark \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    ","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of Task class","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    // Methods","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * Method to mark the task","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        this.mark \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * Method to unmark the task","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        this.mark \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     * Method to get the name of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     * @return the name of the to do","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"    public String getName() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        return this.name;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     * Method to get whether the task is marked","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * @return whether the task is marked","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    public boolean getMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"        return mark;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     * Method to return the string implementation of Task","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * @return the string implementation of Task","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        return \"[\" + (this.mark ? \"X\" : \" \") +\"] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"     * Method to return the string format of the task in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"     * @return the string format of the task in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"    public abstract String storeInString();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":71}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"    // Attribute","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"     * The constructor for TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    // Method","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * Gets the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * @return the task with the certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * Adds a new task","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     * Removes the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the removed task","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * Marks the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the marked task","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the unmarked task","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"     * Gets the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     * Gets the string representation to store the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     * @return the string representation to store the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"        for(Task task: tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"            ret +\u003d task.storeInString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        return ret;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"     * Gets the string representation of the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"     * @return the string representation of the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"            ret +\u003d \"    \" + (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"        return ret;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":99}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"import duke.exception.InvalidToDoException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" * Class for ToDo","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"     * Constructor of class ToDo","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the todo","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    };","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    ","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    // Method","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    public static ToDo create(String message) throws InvalidToDoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"            return new ToDo(message.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidToDoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * Method to return the string representation of todo","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * @return the string representation of todo","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"     * Method to return the string format of the to do in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     * @return the string format of the to do in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"        return \"T | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":47}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    // Attribute","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    private static String SPACE \u003d \"    \";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    private static String DASH \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    Scanner sc;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    // Constructor","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     * The constructor of the Ui","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * Prints the intro to user","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    public void printIntro() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        String intro \u003d SPACE + DASH + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"            SPACE + \"Hello! I\u0027m Not A ChatBot\\n\" + ","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"            SPACE + \"What can I do for you?\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"            SPACE + DASH;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     * Prints the good bye message to user","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    public void printEnd() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        String end \u003d SPACE + DASH + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            SPACE + \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"            SPACE + DASH;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(end);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     * Prints if exception occur","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * @param e the exception","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * Prints the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"    public void printTasks(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        System.out.print(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of marking task","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task marked","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    public void printMarkTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of unmarking task","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task unmarked","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"    public void printUnmarkTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + \"OK, I\u0027ve unmarked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of adding task","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"     * @param size the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"    public void printAddTask(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of removing task","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task removed","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"     * @param size the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"    public void printRemoveTask(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(\"    Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":117}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"todo","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"todo CS2101 Presentation","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"deadline without by","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"deadline with /by but invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"deadline invalid date /by 2023-13-01","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"deadline CS2103 Individual Project /by 2023-09-01","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"event","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"event without date","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"event with /from but invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"event with only /from 2023-01-09","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"event with /from and /to","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"event with /from 2023-01-09 /to invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"event invalid date /from 2023-09-01 /to 2023-09-31","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"event September /from 2023-09-01 /to 2023-09-30","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"unmark 3","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"mark my words","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"mark this","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"mark -9","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"mark 0","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"mark 999","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"unmark 1 1","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"mark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"unmark my words","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"unmark that","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"unmark -9","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"unmark 0","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"unmark 999","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"unmark 1 1","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"delete","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"delete -1","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"delete haha","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"delete 99","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"delete 1 1","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":53}}]
