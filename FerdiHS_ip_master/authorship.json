[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"# Boti project template","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Boti_. Given below are instructions on how to use it.","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"3. After that, locate the `src/main/java/boti.Boti.java` file, right-click it, and choose `Run boti.Boti.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```   ","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"   ____        _   _","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"  | __ )  ___ | |_(_)","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"  |  _ \\ / _ \\| __| |","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"  | |_) | (_) | |_| |","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"  |____/ \\___/ \\__|_|","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"                     ","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```   ","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FerdiHS":9,"-":16}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FerdiHS":21,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"This user guide is adapted from [AddressBook Level 3](https://se-education.org/addressbook-level3/UserGuide.html)","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"Boti Chatbot is a desktop app for **managing tasks**, optimized for use via a [Command Line Interface (CLI)](https://en.wikipedia.org/wiki/Command-line_interface) while still having the benefits of a [Graphical User Interface (GUI)](https://en.wikipedia.org/wiki/Graphical_user_interface).","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"----------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"## Quick Start","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"1. Ensure to download [Java `11`](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) or above installed in your Computer.","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"2. Download the latest `boti.jar` from [here](https://github.com/FerdiHS/ip/releases).","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"3. Copy the file to the folder you want to use as the home folder for your Boti Chatbot.","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"4. Open a command terminal, ``cd`` into the folder you put the jar file in, and use the ``java -jar boti.jar`` command to run the application.","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"   The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"   \u003cbr /\u003e \u003cbr /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"   ![Ui](Ui.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"----------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"* Command words are case-insensitive.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"  e.g. `list`, `List`, and `LIST` all are valid and refer to the same command.","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"* Words inside the `[]` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"  e.g. in `todo [task]`, `[task]` is a parameter which can be used as `todo workout`.","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"* Parameter `[deadline]`, `[start]`, and `[end]` must be supplied in `YYYY-MM-DD` format.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"  e.g. `/by [deadline]` can be used as `/by 2023-09-22`","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"* Parameter `[time]` must be supplied in `[amount] [type]` where the `[amount]` must be an integer and the `[type]` must be equal to either `days`, `day`, `hours`, `hour`, `minutes`, `minute`, `seconds`, or `second`.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"  e.g. `/in [time]` can be used as `/in 3 hours`","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will result in error.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"  e.g. if the command specifies `list whatever`, it will be interpreted as invalid command.","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"* The expected outcomes given in this user guide is based when the first example command of each features is executed with the same order as the user guide.","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"### Adding a task: `todo`, `deadline`, `event`, `timed`","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"Adds a task to the list of tasks. Task is divided into 4 types:","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"1. Todo","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"   Task which does not have any time constraint.","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"   e.g. *buy a chair* which can be done anytime without any time constraint.","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"3. Deadline","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"   Task which needs to be done before the time constraint.","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"   e.g. *CS2103T ip by 22 September 2023* which need to be done before 22 September 2023.","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"5. Event","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"   Task which occurs in a certain period of time.","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"   e.g. *Recess week from 25 September 2023 to 29 September 2023* which occurs between 25-29 September 2023.","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"7. Timed","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"   Task which can be done in a certain amount of time.","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"   e.g. *Watch Oppenheimer in 3 hours* which can be done in 3 hours.","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"#### Adding a todo task: `todo`","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"Adds a todo task to the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"Format: `todo [name]`","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"- `name`: The name/description of the todo task.","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"- `todo buy a chair`","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"- `todo fix the rooftop`","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"- `todo tidy up the bedroom`","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"    Got it. I\u0027ve added this todo:","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"    [T][ ] buy a chair","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"#### Adding a deadline task: `deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"Adds a deadline task to the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"Format: `deadline [name] /by [deadline]`","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"- `name`: The name/description of the deadline task.","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"- `deadline`: The deadline of the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"- `deadline CS2103T ip /by 2023-09-22`","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"- `deadline pay tuition /by 2023-08-30`","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"- `deadline Online Assessment Shopee /by 2023-10-01`","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"    Got it. I\u0027ve added this deadline:","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"    [D][ ] CS2103 ip  (by: SEP 22 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"#### Adding an event task: `event`","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"Adds an event task to the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"Format: `event [name] /from [start] /to [end]`","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"- `name`: The name/description of the event task.","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"- `start`: The start of the event task.","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"FerdiHS"},"content":"- `end`: The end of the event task.","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"FerdiHS"},"content":"- `event Recess Week /from 2023-09-25 /to 2023-09-29`","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"FerdiHS"},"content":"- `event Apple Student Discount 2023 /from 2023-06-22 /to 2023-10-02`","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"FerdiHS"},"content":"- `event TikTok Open Intern Application /from 2023-08-01 /to 2023-09-30`","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"FerdiHS"},"content":"    Got it. I\u0027ve added this event:","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"FerdiHS"},"content":"    [E][ ] Recess Week (from: SEP 25 2023 to: SEP 29 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"FerdiHS"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"FerdiHS"},"content":"#### Adding a timed task: `timed`","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"FerdiHS"},"content":"Adds a timed task to the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"FerdiHS"},"content":"Format: `timed [name] /in [time]`","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"FerdiHS"},"content":"- `name`: The name/description of the timed task.","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"FerdiHS"},"content":"- `time`: The amount of time needed to finish the timed task.","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"FerdiHS"},"content":"- `timed Watch Oppenheimer /in 3 hours`","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"FerdiHS"},"content":"- `timed Read CS2103 Week 7 Materials /in 45 minutes`","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"FerdiHS"},"content":"- `timed Kaggle Virtual Competition /in 2 days`","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":166,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"FerdiHS"},"content":"    Got it. I\u0027ve added this timed task:","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"FerdiHS"},"content":"    [TT][ ] Watch Oppenheimer (in: 3 hours)","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"FerdiHS"},"content":"    Now you have 4 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"FerdiHS"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"FerdiHS"},"content":"Shows a list of all tasks, including other informations such as whether the task is marked and the date related to the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"FerdiHS"},"content":"Format: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"FerdiHS"},"content":"- `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":186,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"FerdiHS"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"FerdiHS"},"content":"    1. [T][ ] buy a chair","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"FerdiHS"},"content":"    2. [D][ ] CS2103 ip  (by: SEP 22 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"FerdiHS"},"content":"    3. [E][ ] Recess Week (from: SEP 25 2023 to: SEP 29 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"FerdiHS"},"content":"    4. [TT][ ] Watch Oppenheimer (in: 3 hours)","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"FerdiHS"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"FerdiHS"},"content":"Marks the task with the given index as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"FerdiHS"},"content":"Format: `mark [index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"FerdiHS"},"content":"- `index`: The index of the task that will be marked with $1$ \u0026le; `index` \u0026le; the number of tasks in the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"FerdiHS"},"content":"- `mark 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"FerdiHS"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"FerdiHS"},"content":"    [D][X] CS2103 ip  (by: SEP 22 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"FerdiHS"},"content":"### Unmarking a task as not done: `unmark`","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"FerdiHS"},"content":"Unmarks the task with the given index as not done.","lastModifiedDate":"2023-09-22"},{"lineNumber":221,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"FerdiHS"},"content":"Format: `unmark [index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"FerdiHS"},"content":"- `index`: The index of the task that will be unmarked with $1$ \u0026le; `index` \u0026le; the number of tasks in the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":228,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"FerdiHS"},"content":"- `mark 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"FerdiHS"},"content":"    OK, I\u0027ve unmarked this task as not done yet:","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"FerdiHS"},"content":"    [D][ ] CS2103 ip  (by: SEP 22 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"FerdiHS"},"content":"### Removing a task: `delete`","lastModifiedDate":"2023-09-22"},{"lineNumber":242,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"FerdiHS"},"content":"Removes the task with the given index from the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":244,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":245,"author":{"gitId":"FerdiHS"},"content":"Format: `delete [index]`","lastModifiedDate":"2023-09-22"},{"lineNumber":246,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":247,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":248,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":249,"author":{"gitId":"FerdiHS"},"content":"- `index`: The index of the task that will be removed with $1$ \u0026le; `index` \u0026le; the number of tasks in the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":250,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":251,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":252,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":253,"author":{"gitId":"FerdiHS"},"content":"- `delete 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":254,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":255,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":256,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":257,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":258,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":259,"author":{"gitId":"FerdiHS"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"FerdiHS"},"content":"    [D][ ] CS2103 ip  (by: SEP 22 2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":261,"author":{"gitId":"FerdiHS"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":262,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":263,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":264,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":265,"author":{"gitId":"FerdiHS"},"content":"### Finding a list of tasks with a certain keyword: `find`","lastModifiedDate":"2023-09-22"},{"lineNumber":266,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":267,"author":{"gitId":"FerdiHS"},"content":"Finds the list of tasks that contain a certain keyword in their name/description.","lastModifiedDate":"2023-09-22"},{"lineNumber":268,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":269,"author":{"gitId":"FerdiHS"},"content":"Format: `find [keyword]`","lastModifiedDate":"2023-09-22"},{"lineNumber":270,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":271,"author":{"gitId":"FerdiHS"},"content":"Parameter:","lastModifiedDate":"2023-09-22"},{"lineNumber":272,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":273,"author":{"gitId":"FerdiHS"},"content":"- `keyword`: The keyword of the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":274,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":275,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":276,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":277,"author":{"gitId":"FerdiHS"},"content":"- `find  chair`","lastModifiedDate":"2023-09-22"},{"lineNumber":278,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":279,"author":{"gitId":"FerdiHS"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":280,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":281,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":282,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":283,"author":{"gitId":"FerdiHS"},"content":"    The list of tasks containing the keyword is:","lastModifiedDate":"2023-09-22"},{"lineNumber":284,"author":{"gitId":"FerdiHS"},"content":"    1. [T][ ] buy a chair","lastModifiedDate":"2023-09-22"},{"lineNumber":285,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":286,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":287,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":288,"author":{"gitId":"FerdiHS"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":289,"author":{"gitId":"FerdiHS"},"content":"Exits the Boti Chatbot.","lastModifiedDate":"2023-09-22"},{"lineNumber":290,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":291,"author":{"gitId":"FerdiHS"},"content":"Format: `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":292,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":293,"author":{"gitId":"FerdiHS"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":294,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":295,"author":{"gitId":"FerdiHS"},"content":"- `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":296,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":297,"author":{"gitId":"FerdiHS"},"content":"Sample Outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":298,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":299,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":300,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":301,"author":{"gitId":"FerdiHS"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-09-22"},{"lineNumber":302,"author":{"gitId":"FerdiHS"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-22"},{"lineNumber":303,"author":{"gitId":"FerdiHS"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":304,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":305,"author":{"gitId":"FerdiHS"},"content":"----------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":306,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":307,"author":{"gitId":"FerdiHS"},"content":"## Command Summary","lastModifiedDate":"2023-09-22"},{"lineNumber":308,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":309,"author":{"gitId":"FerdiHS"},"content":"| Action               | Format and Examples                                                                                    |","lastModifiedDate":"2023-09-22"},{"lineNumber":310,"author":{"gitId":"FerdiHS"},"content":"|----------------------|--------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":311,"author":{"gitId":"FerdiHS"},"content":"| **Add Todo**         | `todo [name]` \u003cbr /\u003e e.g., `todo buy a chair`                                                          |","lastModifiedDate":"2023-09-22"},{"lineNumber":312,"author":{"gitId":"FerdiHS"},"content":"| **Add Deadline**     | `deadline [name] /by [deadline]` \u003cbr /\u003e e.g. `deadline CS2103T ip /by 2023-09-22`                      |","lastModifiedDate":"2023-09-22"},{"lineNumber":313,"author":{"gitId":"FerdiHS"},"content":"| **Add Event**        | `event [name] /from [start] /to [end]` \u003cbr /\u003e e.g. `event Recess Week /from 2023-09-25 /to 2023-09-29` |","lastModifiedDate":"2023-09-22"},{"lineNumber":314,"author":{"gitId":"FerdiHS"},"content":"| **Add Timed Task**   | `timed [name] /in [time]` \u003cbr /\u003e e.g. `timed Watch Oppenheimer /in 3 hours`                            |","lastModifiedDate":"2023-09-22"},{"lineNumber":315,"author":{"gitId":"FerdiHS"},"content":"| **List Tasks**       | `list` \u003cbr /\u003e e.g. `list`                                                                              |","lastModifiedDate":"2023-09-22"},{"lineNumber":316,"author":{"gitId":"FerdiHS"},"content":"| **Mark Task**        | `mark [index]` \u003cbr /\u003e e.g., `mark 2`                                                                   |","lastModifiedDate":"2023-09-22"},{"lineNumber":317,"author":{"gitId":"FerdiHS"},"content":"| **Unmark Task**      | `unmark [index]` \u003cbr /\u003e e.g., `unmark 2`                                                               |","lastModifiedDate":"2023-09-22"},{"lineNumber":318,"author":{"gitId":"FerdiHS"},"content":"| **Delete Task**      | `delete [index]` \u003cbr /\u003e e.g., `delete 2`                                                               |","lastModifiedDate":"2023-09-22"},{"lineNumber":319,"author":{"gitId":"FerdiHS"},"content":"| **Find by Name**     | `find [keyword]` \u003cbr /\u003e e.g., `find chair`                                                             |                                   |","lastModifiedDate":"2023-09-22"},{"lineNumber":320,"author":{"gitId":"FerdiHS"},"content":"| **Exit**             | `bye` \u003cbr /\u003e e.g., `bye`                                                                               |","lastModifiedDate":"2023-09-22"},{"lineNumber":321,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":322,"author":{"gitId":"FerdiHS"},"content":"----------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":295,"-":27}},{"path":"src/main/java/boti/Boti.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.parser.Parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import boti.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import boti.ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" * Chatbot class","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"public class Boti {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    static final String DIRECTORY_NAME \u003d \"./data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    static final String FILE_NAME \u003d \"storage.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * Constructs the duke.Boti","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     * @param directoryName the name of the directory","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * @param fileName the name of the file","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    public Boti(String directoryName, String fileName) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        this.storage \u003d new Storage(directoryName, fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"            this.ui.printException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     * Executes the program","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * @param args the input argument","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"        new Boti(DIRECTORY_NAME, FILE_NAME).run();","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * Runs the program","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        ui.printIntro();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        String message \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        while (!message.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"            Parser.parse(message, ui, tasks, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"            message \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        Parser.parse(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        scanner.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     * Gets the response based on the input","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"     * @param input the input of the program","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"     * @return the response based on the input","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        return Parser.parse(input, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":71,"-":1}},{"path":"src/main/java/boti/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import boti.gui.Main;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"     * Launchs the GUI of the application","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     * @param args the list of arguments","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":18}},{"path":"src/main/java/boti/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidByeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidDeleteException;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidEventException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidFindException;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidListException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidMarkException;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidTimedTaskException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidToDoException;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidUnmarkException;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import boti.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TimedTask;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"import boti.task.ToDo;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"import boti.ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":" * The class for Command","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"public class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * Lists all the tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the list task command","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidListException when the list command is invalid","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    public static String list(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidListException {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"list\") : \"First word of message must be list\";","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        if (message.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            return ui.printTasks(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidListException();","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     * Marks task","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the mark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidMarkException when the mark command is invalid","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    public static String mark(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidMarkException {","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"mark\") : \"First word of message must be mark\";","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"                int index \u003d Integer.parseInt(messageWords[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"                tasks.markTask(index);","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"                return ui.printMarkTask(tasks.getTask(index));","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidMarkException();","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidMarkException();","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidMarkException();","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks task","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the unmark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidUnmarkException when the unmark command is invalid","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"    public static String unmark(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidUnmarkException {","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"unmark\") : \"First word of message must be unmark\";","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"                int index \u003d Integer.parseInt(messageWords[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"                tasks.unmarkTask(index);","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"                return ui.printUnmarkTask(tasks.getTask(index));","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidUnmarkException();","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidUnmarkException();","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidUnmarkException();","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"     * Adds to do","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add todo command","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidToDoException when the todo command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"    public static String addToDo(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidToDoException {","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"todo\") : \"First word of message must be todo\";","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d ToDo.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"        return ui.printAddTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"     * Adds deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add deadline command","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidDeadlineException when the deadline command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"FerdiHS"},"content":"    public static String addDeadline(String message, Ui ui, TaskList tasks, Storage storage)","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"FerdiHS"},"content":"            throws InvalidDeadlineException {","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"deadline\") : \"First word of message must be deadline\";","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d Deadline.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"FerdiHS"},"content":"        return ui.printAddTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"FerdiHS"},"content":"     * Adds event","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add event command","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidEventException when the event command is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"FerdiHS"},"content":"    public static String addEvent(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidEventException {","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"event\") : \"First word of message must be event\";","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d Event.create(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"FerdiHS"},"content":"        return ui.printAddTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"FerdiHS"},"content":"     * Adds timed task","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add timed task command","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidTimedTaskException when the timed task command is invalid","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"FerdiHS"},"content":"    public static String addTimedTask(String message, Ui ui, TaskList tasks, Storage storage)","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"FerdiHS"},"content":"            throws InvalidTimedTaskException {","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"timed\") : \"First word of message must be timed\";","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"FerdiHS"},"content":"        Task newTask \u003d TimedTask.create(message);","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"FerdiHS"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"FerdiHS"},"content":"        return ui.printAddTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"FerdiHS"},"content":"     * Deletes task","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"FerdiHS"},"content":"     * @param message the command message","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the delete task command","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidDeleteException when the delete command is invalid","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"FerdiHS"},"content":"    public static String delete(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidDeleteException {","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"delete\") : \"First word of message must be delete\";","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"FerdiHS"},"content":"                int index \u003d Integer.parseInt(messageWords[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"FerdiHS"},"content":"                Task removedTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"FerdiHS"},"content":"                tasks.removeTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"FerdiHS"},"content":"                storage.updateTask(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"FerdiHS"},"content":"                return ui.printRemoveTask(removedTask, tasks.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":202,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidDeleteException();","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"FerdiHS"},"content":"     * Finds the compatible tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage to store","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the find task command","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidFindException if the command is invalid","lastModifiedDate":"2023-09-22"},{"lineNumber":221,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"FerdiHS"},"content":"    public static String find(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidFindException {","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"find\") : \"First word of message must be find\";","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"FerdiHS"},"content":"            String[] messageWords \u003d message.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"FerdiHS"},"content":"            int numOfWords \u003d messageWords.length;","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"FerdiHS"},"content":"            if (numOfWords \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"FerdiHS"},"content":"                String keyWord \u003d messageWords[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"FerdiHS"},"content":"                return ui.printFindTask(tasks.find(keyWord));","lastModifiedDate":"2023-09-06"},{"lineNumber":230,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidFindException();","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidFindException();","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"FerdiHS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidFindException();","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":240,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":241,"author":{"gitId":"FerdiHS"},"content":"     * Responds to bye message","lastModifiedDate":"2023-09-12"},{"lineNumber":242,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":243,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message","lastModifiedDate":"2023-09-12"},{"lineNumber":244,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui","lastModifiedDate":"2023-09-12"},{"lineNumber":245,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":246,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage","lastModifiedDate":"2023-09-12"},{"lineNumber":247,"author":{"gitId":"FerdiHS"},"content":"     * @return the goodbye string","lastModifiedDate":"2023-09-12"},{"lineNumber":248,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidByeException if the command is invalid","lastModifiedDate":"2023-09-22"},{"lineNumber":249,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":250,"author":{"gitId":"FerdiHS"},"content":"    public static String bye(String message, Ui ui, TaskList tasks, Storage storage) throws InvalidByeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":251,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"find\") : \"First word of message must be find\";","lastModifiedDate":"2023-09-12"},{"lineNumber":252,"author":{"gitId":"FerdiHS"},"content":"        if (message.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":253,"author":{"gitId":"FerdiHS"},"content":"            return ui.printEnd();","lastModifiedDate":"2023-09-12"},{"lineNumber":254,"author":{"gitId":"FerdiHS"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":255,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidByeException();","lastModifiedDate":"2023-09-22"},{"lineNumber":256,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":258,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"FerdiHS":258}},{"path":"src/main/java/boti/exception/InvalidByeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid bye command","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidByeException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidEventException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidByeException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input bye command is invalid :-(\");","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception class for invalid command","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidCommandException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidCommandException","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"        super(message);","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":20}},{"path":"src/main/java/boti/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The exception for invalid deadline command","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidDeadlineException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidDeadlineException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the Deadline input is invalid :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid delete command","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidDeleteException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidDeleteException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidDeleteException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input delete command is invalid :-(\");","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid event command","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidEventException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidEventException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input Event is invalid :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid find command","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidFindException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidFindException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidFindException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input find command is invalid :-(\");","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid list command","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidListException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidListExeption","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidListException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input list command is invalid :-(\");","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid mark command","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidMarkException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates InvalidMarkException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidMarkException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input mark command is invalid :-(\");","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidTimedTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid timed task command","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidTimedTaskException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidTimedException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidTimedTaskException() {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input TimedTask is invalid :-(\");","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid todo command","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidToDoException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidToDoException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidToDoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input ToDo is invalid :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/exception/InvalidUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.exception;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * The Exception for invalid mark command","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class InvalidUnmarkException extends InvalidCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates of InvalidEventException","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    public InvalidUnmarkException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input unmark command is invalid :-(\");","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":13}},{"path":"src/main/java/boti/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" * Class for the box for dialog","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    private static final String BOTCOLOR \u003d \"gray\";","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    private static final String USERCOLOR \u003d \"green\";","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    private static final String SPACE \u003d \"    \";","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    private Label text;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates DialogBox","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * @param l the label","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     * @param iv the image view","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    public DialogBox(Label l, ImageView iv, String color) {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        Font font \u003d Font.font(\"Helvetica\", 12);","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        l.setFont(font);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        // Set the background color of the DialogBox to green","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        this.setStyle(\"-fx-background-color: \" + color + \";\");","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     * Flips the dialog box (used for the bot)","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new dialog box for user","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     * @param l the label shown","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"     * @param iv the image shown","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"     * @return a new dialog box for user","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        return new DialogBox(new Label(l.getText() + SPACE), iv, USERCOLOR);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new dialog box for the bot","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"     * @param l the label shown","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"     * @param iv the image shown","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"     * @return a new dialog box for the bot","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"        DialogBox db \u003d new DialogBox(l, iv, BOTCOLOR);","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":79}},{"path":"src/main/java/boti/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import boti.Boti;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":" * The main class for the GUI","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    private static final String INTRO \u003d \"    Hello! I\u0027m Boti\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"                                    + \"    What can I do for you?\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    private final Image chatbot \u003d new Image(this.getClass().getResourceAsStream(\"/images/Chatbot.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    private final Boti duke \u003d new Boti(\"./data\", \"storage.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    private AnchorPane mainLayout;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    private UserInputPane userInputPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        initialize();","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        addContent();","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"        format(stage);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    private void initialize() {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        userInputPane \u003d new UserInputPane(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"    private void addContent() {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInputPane);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(new Label(INTRO), new ImageView(chatbot)));","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    private void format(Stage stage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        stage.setTitle(\"Boti\");","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setBottomAnchor(userInputPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setLeftAnchor(userInputPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"     * Adds both user\u0027s and bot\u0027s dialog box based on the text sent by the user","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"     * @param userText the text sent by the user","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"    public void addDialog(String userText) {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"        Label userLabel \u003d new Label(userText);","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"        Label responseLabel \u003d new Label(duke.getResponse(userText));","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"                DialogBox.getUserDialog(userLabel, new ImageView(user)),","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"                DialogBox.getDukeDialog(responseLabel, new ImageView(chatbot))","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":93}},{"path":"src/main/java/boti/gui/UserInputPane.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":" * The class for the user input panel","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"public class UserInputPane extends Pane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    private Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/SendIcon.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    private Main mainPanel;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    private AnchorPane inputContainer;","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    private ImageView sendImage;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the UserInputPane","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * @param mainPanel the mainPanel where the UserInputPane located","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    public UserInputPane(Main mainPanel) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        initialize(mainPanel);","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"        addContent();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        format();","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        sendImage.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        });","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        });","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    private void initialize(Main mainPanel) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        this.mainPanel \u003d mainPanel;","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        sendImage \u003d new ImageView(sendIcon);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        inputContainer \u003d new AnchorPane();","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"    private void addContent() {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        inputContainer.getChildren().addAll(userInput, sendImage);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        getChildren().add(inputContainer);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    private void format() {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        // Set the size of the sendImage and the userInput text box","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        sendImage.setFitWidth(30.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        sendImage.setFitHeight(25);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"        userInput.setPrefWidth(345.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        // Position userInput in the bottom left corner","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        // Position sendImage in the bottom right corner","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setRightAnchor(sendImage, -35.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        AnchorPane.setBottomAnchor(sendImage, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        // Set the preferred height for inputContainer to accommodate both elements","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        inputContainer.setPrefHeight(userInput.getPrefHeight());","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"     * Handles the user input","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"        mainPanel.addDialog(userText);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"        if (userText.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"FerdiHS":82}},{"path":"src/main/java/boti/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import boti.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidByeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidDeleteException;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidEventException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidFindException;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidListException;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidMarkException;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidTimedTaskException;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidToDoException;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidUnmarkException;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"import boti.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"import boti.ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":" * The Parser class to parse the command","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * Parses the message given","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message given","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     * @param ui the ui of the program","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * @param storage the storage program","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * @return the response","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    public static String parse(String message, Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"            String messageType \u003d message.split(\" \")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"            switch (messageType.toLowerCase()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            case \"list\":","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"                return Command.list(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"                return Command.mark(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"                return Command.unmark(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"                return Command.addToDo(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"                return Command.addDeadline(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"            case \"event\":","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"                return Command.addEvent(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            case \"timed\":","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"                return Command.addTimedTask(message, ui, tasks, storage);","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"                return Command.delete(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"            case \"find\":","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"                return Command.find(message, ui, tasks, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"                return Command.bye(message, ui, tasks, storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidListException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidMarkException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidUnmarkException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidToDoException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidEventException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidTimedTaskException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidDeleteException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidFindException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidByeException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"            return ui.printException(e);","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":83}},{"path":"src/main/java/boti/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":" * Storage class that save the data","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the Storage class","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * @param directoryName the name of the directory","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * @param fileName the name of the file","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    public Storage(String directoryName, String fileName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        this.filePath \u003d directoryName + \"/\" + fileName;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"        // Make new file to store","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"            File directory \u003d new File(directoryName);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"            // Make the directory if not exist","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"            assert directory.exists() : \"The directory should have been created\";","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            // Make the file if not exist","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"                loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"            assert false : \"The tasks are not stored or loaded correctly\";","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     * Loads the tasks from the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * @return the tasks loaded","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException when the task stored is invalid (usually the date)","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        // Adds each task","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"            Task currentTask \u003d Task.createFromStorage(line);","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"            loadedTasks.add(currentTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        return loadedTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * Adds new task to the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task added","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"            writer.write(task.storeInString());","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"            writer.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"            assert false : \"The task could not be added properly\";","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to add task: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"     * Updates the storage based on current tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"    public void updateTask(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"            writer.write(tasks.storeInString());","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"            assert false : \"The tasks could not be updated properly\";","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to update task: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"     * Gets the file path of the storage","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"     * @return the file path of the storage","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"    public String getFilePath() {","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"        return filePath;","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"FerdiHS":114}},{"path":"src/main/java/boti/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":" * Deadline class","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * @param deadline the date of the deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new deadline based on the message","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * @return the new deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidDeadlineException when the deadline command message is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    public static Deadline create(String message) throws InvalidDeadlineException {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"deadline\") : \"First word of message must be deadline\";","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"            String name \u003d message.substring(9, message.indexOf(\"/by \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"            String deadlineString \u003d message.substring(message.indexOf(\"/by \") + 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"            return new Deadline(name, deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     * Creates new deadline based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"     * @param stored the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"     * @return the deadline based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException when the string stored does not belong to deadline","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    public static Deadline createFromStorage(String stored) throws IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"        assert stored.split(\" \\\\| \")[0].equals(\"E\") : \"The first part of the string stored is E\";","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"        String[] splitTaskInString \u003d stored.split(\" \\\\| \");","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        String mark \u003d splitTaskInString[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        String description \u003d splitTaskInString[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        String deadlineDate \u003d splitTaskInString[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        Deadline deadline \u003d new Deadline(description, LocalDate.parse(deadlineDate));","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"            deadline.mark();","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        return deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        String deadlineMonth \u003d deadline.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        String deadlineDay \u003d deadline.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        String deadlineYear \u003d deadline.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadlineMonth + \" \"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"                + deadlineDay + \" \" + deadlineYear + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"        return \"D | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName() + \" | \" + this.deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":79}},{"path":"src/main/java/boti/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidEventException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":" * Event class","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates event","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     * @param start the starting time of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * @param end the end time of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new event based on the message","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new event","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     * @return the new event","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidEventException when the event command message is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    public static Event create(String message) throws InvalidEventException {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"create\") : \"First word of message must be create\";","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"            String name \u003d message.substring(6, message.indexOf(\"/from \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            int fromIndex \u003d message.indexOf(\"/from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            int toIndex \u003d message.indexOf(\" /to \", fromIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            String fromString \u003d message.substring(fromIndex + 6, toIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"            String toString \u003d message.substring(toIndex + 5);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"            LocalDate fromDate \u003d LocalDate.parse(fromString);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"            LocalDate toDate \u003d LocalDate.parse(toString);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"            return new Event(name, fromDate, toDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * Creates new event based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * @param stored the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * @return the event based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException when the string stored does not belong to event","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    public static Event createFromStorage(String stored) throws IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        assert stored.split(\" \\\\| \")[0].equals(\"E\") : \"The first part of the string stored is E\";","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        String[] splitTaskInString \u003d stored.split(\" \\\\| \");","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        String mark \u003d splitTaskInString[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        String description \u003d splitTaskInString[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        String start \u003d splitTaskInString[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        String end \u003d splitTaskInString[4];","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        Event event \u003d new Event(description, LocalDate.parse(start), LocalDate.parse(end));","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"            event.mark();","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        return event;","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"        String startMonth \u003d start.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"        String startDay \u003d start.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"        String startYear \u003d start.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        String endMonth \u003d end.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        String endDay \u003d end.toString().split(\"-\")[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        String endYear \u003d end.toString().split(\"-\")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"        return \"[E]\" + super.toString() + \"(from: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"                + startMonth + \" \" + startDay + \" \" + startYear","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"                + \" to: \" + endMonth + \" \" + endDay + \" \" + endYear + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"        return \"E | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName() + \" | \" + this.start + \" | \" + this.end;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":91}},{"path":"src/main/java/boti/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":" * Task class","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the Task","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the task","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * Marks the task","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        isMarked \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks the task","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     * Gets the name of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     * @return the name of the to do","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    public String getName() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        return name;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     * Gets whether the task is marked","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     * @return whether the task is marked","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"    public boolean getMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        return isMarked;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"     * Checks whether the name of the task containing the keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     * @param keyWord the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * @return whether the name of the task containing the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"    public boolean hasKeyword(String keyWord) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        return name.toLowerCase().contains(keyWord.toLowerCase());","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     * Creates new task based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"     * @param stored the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"     * @return the task based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException when the string stored does not belong to task","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"    public static Task createFromStorage(String stored) throws IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        String[] splitTaskInString \u003d stored.split(\" \\\\| \");","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        String type \u003d splitTaskInString[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"        switch (type) {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"        case \"T\":","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"            return ToDo.createFromStorage(stored);","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"        case \"D\":","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"            return Deadline.createFromStorage(stored);","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"        case \"E\":","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"            return Event.createFromStorage(stored);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        default:","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"            assert false : \"The type of the task stored is invalid\";","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"            throw new IOException();","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"        return \"[\" + (isMarked ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"     * Gets string format of the task in the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"     * @return the string format of the task in the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"    public abstract String storeInString();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":97}},{"path":"src/main/java/boti/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":" * The TaskList class for the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the TaskList","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of the tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * Gets the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"     * @return the task with the certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c getSize()","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"                : \"The index must not be be less than 0 but less than the number of tasks\";","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     * Adds a new task","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * Removes the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the removed task","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c getSize()","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"                : \"The index must not be be less than 0 but less than the number of tasks\";","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     * Marks the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the marked task","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c getSize()","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"                : \"The index must not be be less than 0 but less than the number of tasks\";","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     * Unmarks the task with a certain index","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"     * @param index the index of the unmarked task","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c getSize()","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"                : \"The index must not be be less than 0 but less than the number of tasks\";","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * Gets the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"     * Gets the string representation to store the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"     * @return the string representation to store the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"            ret +\u003d task.storeInString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"        return ret;","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"     * Finds list of task containing the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"     * @param keyWord the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"     * @return the list of task containing the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"    public TaskList find(String keyWord) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"            if (task.hasKeyword(keyWord)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"                results.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"        return new TaskList(results);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"     * Checks whether the TaskList is empty","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"     * @return whether the TaskList is empty","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"FerdiHS"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"FerdiHS"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"            ret +\u003d \"    \" + (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"FerdiHS"},"content":"        return ret;","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":131}},{"path":"src/main/java/boti/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.time.Duration;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidTimedTaskException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":" * Class for timed task (task that can be done in a given period of time)","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"public class TimedTask extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    private Duration duration;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    private String durationType;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates timed task","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * @param name the name of the timed task","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @param duration the duration of the timed task","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    public TimedTask(String name, Duration duration, String durationType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        this.durationType \u003d durationType;","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new timed task based on the message","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new timed task","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     * @return the new timed task","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidTimedTaskException when the timed task command message is invalid","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    public static TimedTask create(String message) throws InvalidTimedTaskException {","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"timed\") : \"First word of message must be timed\";","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"            String name \u003d message.substring(6, message.indexOf(\"/in \"));","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"            String durationString \u003d message.substring(message.indexOf(\"/in \") + 4);","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"            String[] durationStringSplit \u003d durationString.split(\" \");","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"            if (durationStringSplit.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"                long durationLength \u003d Long.parseLong(durationStringSplit[0]);","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"                String durationParameter \u003d durationStringSplit[1];","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"                switch (durationParameter.toLowerCase()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"                case \"day\":","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"                case \"days\":","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"                    return new TimedTask(name, Duration.ofDays(durationLength), \"day\");","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"                case \"hour\":","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"                case \"hours\":","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"                    return new TimedTask(name, Duration.ofHours(durationLength), \"hour\");","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"                case \"minute\":","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"                case \"minutes\":","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"                    return new TimedTask(name, Duration.ofMinutes(durationLength), \"minute\");","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"                case \"second\":","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"                case \"seconds\":","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"                    return new TimedTask(name, Duration.ofSeconds(durationLength), \"second\");","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"                default:","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"                    throw new InvalidTimedTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidTimedTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidTimedTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidTimedTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"     * Creates new TimedTask based on the string stored in the storage","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"     * @param stored the string stored in the storage","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * @return the TimedTask based on the string stored in the storage","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException when the string stored does not belong to TimedTask","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    public static TimedTask createFromStorage(String stored) throws IOException {","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        assert stored.split(\" \\\\| \")[0].equals(\"TT\") : \"The first part of the string stored is TT\";","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        String[] splitTaskInString \u003d stored.split(\" \\\\| \");","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        String mark \u003d splitTaskInString[1];","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"        String description \u003d splitTaskInString[2];","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"        String timedTaskString \u003d splitTaskInString[3];","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"        String durationType \u003d splitTaskInString[4];","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        TimedTask timedTask \u003d new TimedTask(description, Duration.parse(timedTaskString), durationType);","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"            timedTask.mark();","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"        return timedTask;","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"        switch (durationType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"        case \"day\":","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"            return \"[TT]\" + super.toString() + \"(in: \" + duration.toDays() + \" days)\";","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"        case \"hour\":","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"            return \"[TT]\" + super.toString() + \"(in: \" + duration.toHours() + \" hours)\";","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"        case \"minute\":","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"            return \"[TT]\" + super.toString() + \"(in: \" + duration.toMinutes() + \" minutes)\";","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"        default:","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"            assert durationType \u003d\u003d \"seconds\" : \"The only case left possible is when the duration is in second\";","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"            return \"[TT]\" + super.toString() + \"(in: \" + duration.toSeconds() + \" seconds)\";","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"        return \"TT | \" + (getMark() ? \"1 | \" : \"0 | \") + getName() + \" | \" + duration + \" | \" + durationType;","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"FerdiHS":111}},{"path":"src/main/java/boti/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidToDoException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":" * Class for ToDo","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"    };","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * Creates a new ToDo based on the message","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     * @param message the message to create the new todo","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * @return the new todo","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     * @throws InvalidToDoException when the todo command message is invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    public static ToDo create(String message) throws InvalidToDoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        assert message.split(\" \")[0].equalsIgnoreCase(\"todo\") : \"First word of message must be todo\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"            return new ToDo(message.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"            throw new InvalidToDoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"     * Creates new todo based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     * @param stored the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * @return the todo based on the string stored in the storage","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     * @throws IOException when the string stored does not belong to todo","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    public static ToDo createFromStorage(String stored) throws IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"        assert stored.split(\" \\\\| \")[0].equals(\"T\") : \"The first part of the string stored is T\";","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        String[] splitTaskInString \u003d stored.split(\" \\\\| \");","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        String mark \u003d splitTaskInString[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        String description \u003d splitTaskInString[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"            todo.mark();","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        return todo;","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    public String storeInString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        return \"T | \" + (this.getMark() ? \"1 | \" : \"0 | \") + this.getName();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":60}},{"path":"src/main/java/boti/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Event;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TimedTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import boti.task.ToDo;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" * The Ui class for the user interaction of the program","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    private static final String SPACE \u003d \"    \";","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"    private static final String DASH \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the Ui","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"     * Prints the intro to user","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     * @return the intro message","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    public String printIntro() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        String intro \u003d SPACE + \"Hello! I\u0027m Boti\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"                        + SPACE + \"What can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        return intro;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"     * Prints the bye message to user","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     * @return the bye message","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"    public String printEnd() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"        String end \u003d SPACE + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(end);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        return end;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * Prints if exception occur","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"     * @param e the exception","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the exception","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    public String printException(Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"        String exceptionMessage \u003d SPACE + e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(exceptionMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"        return exceptionMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"     * Prints the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the list task command","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    public String printTasks(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"        String tasksMessage;","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"            tasksMessage \u003d SPACE + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"                    + tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"            tasksMessage \u003d SPACE + \"Currently you have no tasks.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(tasksMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"FerdiHS"},"content":"        return tasksMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of marking task","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task marked","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the mark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"FerdiHS"},"content":"    public String printMarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"FerdiHS"},"content":"        String markTaskMessage \u003d SPACE + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(markTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"FerdiHS"},"content":"        return markTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of unmarking task","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task unmarked","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the unmark task command","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"FerdiHS"},"content":"    public String printUnmarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"FerdiHS"},"content":"        String unmarkTaskMessage \u003d SPACE + \"OK, I\u0027ve unmarked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(unmarkTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"FerdiHS"},"content":"        return unmarkTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of adding task","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"FerdiHS"},"content":"     * @param task the new task","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"FerdiHS"},"content":"     * @param size the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the add task command","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"FerdiHS"},"content":"    public String printAddTask(Task task, int size) {","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"FerdiHS"},"content":"        String type;","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"FerdiHS"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"FerdiHS"},"content":"            type \u003d \"todo\";","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"FerdiHS"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"FerdiHS"},"content":"            type \u003d \"deadline\";","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"FerdiHS"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"FerdiHS"},"content":"            type \u003d \"event\";","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"FerdiHS"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"FerdiHS"},"content":"            assert task instanceof TimedTask : \"The task must be a timed task\";","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"FerdiHS"},"content":"            type \u003d \"timed task\";","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"FerdiHS"},"content":"        String addTaskMessage \u003d SPACE + \"Got it. I\u0027ve added this \" + type + \":\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + task + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"FerdiHS"},"content":"                                + SPACE + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(addTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"FerdiHS"},"content":"        return addTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of removing task","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"FerdiHS"},"content":"     * @param task the task removed","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"FerdiHS"},"content":"     * @param size the number of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the remove task command","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"FerdiHS"},"content":"    public String printRemoveTask(Task task, int size) {","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"FerdiHS"},"content":"        String removeTaskMessage \u003d SPACE + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"FerdiHS"},"content":"                                    + SPACE + task + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"FerdiHS"},"content":"                                    + SPACE + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(removeTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"FerdiHS"},"content":"        return removeTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"FerdiHS"},"content":"     * Prints the output of find task","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"FerdiHS"},"content":"     * @return the message of the find task command","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"FerdiHS"},"content":"    public String printFindTask(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"FerdiHS"},"content":"        String findTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"FerdiHS"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"FerdiHS"},"content":"            findTaskMessage \u003d SPACE + \"Cannot find any tasks with this keyword\";","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"FerdiHS"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"FerdiHS"},"content":"            findTaskMessage \u003d SPACE + \"The list of tasks containing the keyword is:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"FerdiHS"},"content":"                            + tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(findTaskMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"FerdiHS"},"content":"        System.out.println(SPACE + DASH);","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"FerdiHS"},"content":"        return findTaskMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"FerdiHS":184}},{"path":"src/test/java/boti/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import boti.command.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidCommandException;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidListException;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"import boti.exception.InvalidToDoException;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"import boti.storage.StorageSample;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"import boti.ui.UiSample;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":" * The test class for Parser","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    private UiSample ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    private TaskList copyTasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    private StorageSample storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * Sets things up before each tests","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    public void setup() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        this.ui \u003d new UiSample();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"        this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"        this.copyTasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"        this.storage \u003d new StorageSample(\"./data\", \"test.txt\");","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"     * Tests the parse method with list message in Parser","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    public void parse_list_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"            String message \u003d \"list\";","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"            String result \u003d Parser.parse(message, ui, tasks, storage);","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"            assertEquals(ui.getPrintTasksCount(), 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"            String expected \u003d Command.list(message, ui, tasks, storage);","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"            assertEquals(result, expected);","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidListException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"            fail();","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"     * Tests the parse method with todo message in Parser","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    public void parse_todo_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"            String message \u003d \"todo buy a chair\";","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"            String result \u003d Parser.parse(\"todo buy a chair\", ui, tasks, storage);","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"            assertEquals(ui.getPrintAddTaskCount(), 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"            String expected \u003d Command.addToDo(message, ui, copyTasks, storage);","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"            assertEquals(result, expected);","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        } catch (InvalidToDoException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"            fail();","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     * Tests the parse method with invalid message in Parser","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"    public void parse_invalid_fail() {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        String result \u003d Parser.parse(\"invalid\", ui, tasks, storage);","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(ui.getPrintExceptionCount(), 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(result, ui.printException(new InvalidCommandException()));","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":83}},{"path":"src/test/java/boti/storage/StorageSample.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":" * The Storage class for sampling for unit testing","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"public class StorageSample extends Storage {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * Instantiates the StorageSample","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * @param directoryName the directory name","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     * @param fileName the file name","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    public StorageSample(String directoryName, String fileName) {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"        super(directoryName, fileName);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(super.getFilePath(), true));","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"            writer.close();","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"            assert false : \"The task could not be added properly\";","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"            System.out.println(\"Failed to add task: \" + e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":34}},{"path":"src/test/java/boti/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":" * The testing class for TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"    private TaskList sampleTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"     * Sets things up before every tests","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    public void setup() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.addTask(new ToDoSample());","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.addTask(new ToDoSample());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method size of list of two tasks in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"    public void size_twoTasks_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(sampleTasks.getSize(), 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method addTask in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    public void addTask_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.addTask(new ToDoSample());","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(sampleTasks.getSize(), 3);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method removeTask in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"    public void removeTask_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.removeTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(sampleTasks.getSize(), 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     * Tests the method markTask in TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"    public void markTask_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        sampleTasks.markTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        assertTrue(sampleTasks.getTask(1).getMark());","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":62}},{"path":"src/test/java/boti/task/ToDoSample.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":" * Sample for ToDo","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"public class ToDoSample extends ToDo {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"    public ToDoSample() {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"        super(\"TaskSample\");","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":10}},{"path":"src/test/java/boti/ui/UiSample.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":" * Sample class for UI","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"public class UiSample extends Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"    private int printTasksCount \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"    private int printExceptionCount \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"    private int printAddTaskCount \u003d 0;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"     * Prints the list of tasks (Mock)","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    public String printTasks(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"        printTasksCount++;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"        return super.printTasks(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"    public String printAddTask(Task task, int size) {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"        printAddTaskCount++;","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"        return super.printAddTask(task, size);","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"     * Prints the exception (Mock)","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"     * @param e the exception","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"    public String printException(Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"        printExceptionCount++;","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"        return super.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"     * Returns the number of print tasks called","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of print tasks called","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"    public int getPrintTasksCount() {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"        return printTasksCount;","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"     * Returns the number of print exception called","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of print exception called","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    public int getPrintExceptionCount() {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"        return printExceptionCount;","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"     * Returns the number of print add task called","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"     * @return the number of print add task called","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"    public int getPrintAddTaskCount() {","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        return printAddTaskCount;","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"FerdiHS":68}},{"path":"src/test/java/boti/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"package boti.ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"import boti.storage.StorageSample;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"import boti.task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"import boti.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"import boti.task.ToDo;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":" * Class for Ui testing","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"public class UiTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"    private static final String SPACE \u003d \"    \";","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"    private UiSample ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"    private TaskList copyTasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"    private StorageSample storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"     * Sets things up before each tests","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"    public void setup() {","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"        this.ui \u003d new UiSample();","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"        this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"        this.copyTasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"        this.storage \u003d new StorageSample(\"./data\", \"test.txt\");","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"     * Tests the ui method to print task","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"    public void ui_printToDo_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"        Task task \u003d new ToDo(\"Test\");","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"        String type \u003d \"todo\";","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"        String result \u003d ui.printAddTask(task, size);","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"        String expected \u003d SPACE + \"Got it. I\u0027ve added this \" + type + \":\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"                + SPACE + task + \"\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"                + SPACE + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(ui.getPrintAddTaskCount(), 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"     * Tests the ui method to print a list of non empty tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"    public void ui_printList_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"        Task firstTask \u003d new ToDo(\"Test\");","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"        Task secondTask \u003d new ToDo(\"Another Test\");","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"FerdiHS"},"content":"        Task thirdTask \u003d new ToDo(\"Final Test\");","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(firstTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(secondTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"FerdiHS"},"content":"        tasks.addTask(thirdTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"FerdiHS"},"content":"        String result \u003d ui.printTasks(tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"FerdiHS"},"content":"        String expected \u003d SPACE + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"FerdiHS"},"content":"                        + tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(ui.getPrintTasksCount(), 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"FerdiHS"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"FerdiHS"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"FerdiHS"},"content":"     * Tests the ui method to print an empty list of tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"FerdiHS"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"FerdiHS"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"FerdiHS"},"content":"    public void ui_printEmptyList_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"FerdiHS"},"content":"        String result \u003d ui.printTasks(tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"FerdiHS"},"content":"        String expected \u003d SPACE + \"Currently you have no tasks.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(ui.getPrintTasksCount(), 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"FerdiHS"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"FerdiHS"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"FerdiHS"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"FerdiHS":83}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FerdiHS"},"content":"todo","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"FerdiHS"},"content":"todo CS2101 Presentation","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"FerdiHS"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"FerdiHS"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"FerdiHS"},"content":"deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"FerdiHS"},"content":"deadline without by","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"FerdiHS"},"content":"deadline with /by but invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"FerdiHS"},"content":"deadline invalid date /by 2023-13-01","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"FerdiHS"},"content":"deadline CS2103 Individual Project /by 2023-09-01","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"FerdiHS"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"FerdiHS"},"content":"event","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"FerdiHS"},"content":"event without date","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"FerdiHS"},"content":"event with /from but invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"event with only /from 2023-01-09","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"FerdiHS"},"content":"event with /from and /to","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"FerdiHS"},"content":"event with /from 2023-01-09 /to invalid date","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"FerdiHS"},"content":"event invalid date /from 2023-09-01 /to 2023-09-31","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"FerdiHS"},"content":"event September /from 2023-09-01 /to 2023-09-30","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"FerdiHS"},"content":"unmark 3","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"FerdiHS"},"content":"mark my words","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"FerdiHS"},"content":"mark this","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"FerdiHS"},"content":"mark -9","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"FerdiHS"},"content":"mark 0","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"FerdiHS"},"content":"mark 999","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"FerdiHS"},"content":"unmark 1 1","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"FerdiHS"},"content":"mark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"FerdiHS"},"content":"unmark my words","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"FerdiHS"},"content":"unmark that","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"FerdiHS"},"content":"unmark -9","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"FerdiHS"},"content":"unmark 0","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"FerdiHS"},"content":"unmark 999","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"FerdiHS"},"content":"unmark 1 1","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"FerdiHS"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"FerdiHS"},"content":"delete","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"FerdiHS"},"content":"delete -1","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"FerdiHS"},"content":"delete haha","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"FerdiHS"},"content":"delete 99","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"FerdiHS"},"content":"delete 1 1","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"FerdiHS"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"FerdiHS"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"FerdiHS"},"content":"todo CS2103 Materials","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"FerdiHS"},"content":"find","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"FerdiHS"},"content":"find invalid invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"FerdiHS"},"content":"find nothing","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"FerdiHS"},"content":"find Presentation","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"FerdiHS"},"content":"find CS2103","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"FerdiHS"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"FerdiHS":59}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"FerdiHS"},"content":"java -classpath ..\\bin boti.Boti \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FerdiHS":1,"-":20}}]
