[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"seewhyjay":15,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"# Duke User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"Duke is a task management application designed to help users organize and keep track of their tasks, to-do items, events, and deadlines.","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"It provides features for adding, deleting, listing, marking tasks as complete or incomplete, and finding tasks based on keywords. ","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"Duke simplifies task management, making it easier to stay organized and on top of your responsibilities.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"### GUI","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"Duke has a gorgeous GUI for you to use","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"![GUI.png](Ui.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"### Add Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"The \"Add Tasks\" feature allows you to add new tasks to your task list in Duke. ","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"You can use this feature to keep track of various tasks, such as to-do items, events, or deadlines.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"* **To-do** are tasks without start or deadlines","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"* **Deadlines** are tasks with a deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"* **Events** are tasks with both a start and deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"### Delete Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"The \"Delete Tasks\" feature enables you to remove tasks from your task list in Duke. ","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"This is useful when you want to clean up your list or if you\u0027ve completed a task and want to remove it.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"### List Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"The \"List Tasks\" feature provides you with a way to view all the tasks currently in your Duke task list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"This feature helps you get an overview of all your tasks at once.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"### Mark tasks as complete","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"With the \"Mark tasks as complete\" feature, you can indicate that a specific task on your list has been completed. ","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"This feature is handy for keeping track of your progress and ensuring that you don\u0027t miss any completed tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"### Mark tasks as incomplete","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"The \"Mark tasks as incomplete\" feature allows you to change the status of a previously marked completed task back to incomplete. ","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"This is useful if you accidentally marked a task as complete or if you need to revisit a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"### Find Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"The \"Find Tasks\" feature helps you search for specific tasks in your Duke task list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"You can use keywords to filter and locate tasks that match your search criteria.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"### Detect duplicates","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"The \"Detect duplicates\" features help to find and remove duplicate tasks that may have accidentally been created.","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"### todo - Add a to-do task","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"To add a to-do task, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"todo \u003ctask_description\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"Duke will acknowledge the addition of the to-do task and display the updated task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"[T][ ] \u003ctask_description\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"### deadline - Add a deadline task","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"To add a deadline task, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"deadline \u003ctask_description\u003e /by \u003cdeadline_date\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"* `\u003cdeadline_date\u003e` should be formatted `YYYY-MM-DD HH:MM`","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"Duke will acknowledge the addition of the deadline task and display the updated task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"[D][ ] \u003ctask_description\u003e (by: \u003cdeadline_date\u003e)","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"### event - Add an event task","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"To add an event task, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"event \u003ctask_description\u003e /by \u003cstart_date\u003e /to \u003cend_date\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"* `\u003cstart_date\u003e` should be formatted `YYYY-MM-DD HH:MM`","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"* `\u003cend_date\u003e` should be formatted `YYYY-MM-DD HH:MM`","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"Duke will acknowledge the addition of the event task and display the updated task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"seewhyjay"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"seewhyjay"},"content":"[E][ ] \u003ctask_description\u003e (from: \u003cstart_date\u003e to: \u003cend_date\u003e)","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"seewhyjay"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"seewhyjay"},"content":"### delete - Delete a task","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"seewhyjay"},"content":"To delete a task, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"seewhyjay"},"content":"delete \u003ctask_index\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"seewhyjay"},"content":"Duke will remove the specified task from the task list and display the updated list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"seewhyjay"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"seewhyjay"},"content":"[T][ ] \u003ctask_description\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"seewhyjay"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"seewhyjay"},"content":"### list - List all tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"seewhyjay"},"content":"To list all tasks, simply enter:","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"seewhyjay"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"seewhyjay"},"content":"Duke will display a numbered list of all the tasks in your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"seewhyjay"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"seewhyjay"},"content":"1. [T][X] \u003ctask_description_1\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"seewhyjay"},"content":"2. [D][ ] \u003ctask_description_2\u003e (by: \u003cdeadline\u003e)","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"seewhyjay"},"content":"### mark - Mark a task as complete","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"seewhyjay"},"content":"To mark a task as complete, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"seewhyjay"},"content":"mark \u003ctask_index\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"seewhyjay"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"seewhyjay"},"content":"Duke will mark the specified task as complete and display the updated task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"seewhyjay"},"content":"Got it! I\u0027ve marked this task as complete!","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"seewhyjay"},"content":"[T][X] \u003ctask_description\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"seewhyjay"},"content":"### unmark - Mark a task as complete","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"seewhyjay"},"content":"To mark a task as incomplete, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"seewhyjay"},"content":"unmark \u003ctask_index\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"seewhyjay"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"seewhyjay"},"content":"Duke will mark the specified task as incomplete and display the updated task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"seewhyjay"},"content":"Got it! I\u0027ve marked this task as incomplete!","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"seewhyjay"},"content":"[T][ ] \u003ctask_description\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"seewhyjay"},"content":"### find - Find tasks by keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"seewhyjay"},"content":"To find tasks that contain a specific keyword, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"seewhyjay"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"seewhyjay"},"content":"Duke will display a list of tasks that match the specified keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"seewhyjay"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"seewhyjay"},"content":"1. [T][ ] \u003ctask_description_1\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"seewhyjay"},"content":"2. [D][X] \u003ctask_description_2\u003e (by: \u003cdeadline\u003e)","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":196,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"seewhyjay"},"content":"### duplicate - Detect and remove duplicate tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"seewhyjay"},"content":"To detect duplicate tasks and delete them, use the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"seewhyjay"},"content":"Duplicate tasks are tasks with the same description and if applicable, dates.","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"seewhyjay"},"content":"duplicates","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"seewhyjay"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"seewhyjay"},"content":"Duke will display a list of duplicate tasks that have been removed.","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"seewhyjay"},"content":"The following duplicate tasks were removed:","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"seewhyjay"},"content":"0.[T][ ] a","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"seewhyjay"},"content":"```","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"seewhyjay":185,"-":29}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    private final DateTimeFormatter parseFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"     * Constructs a Deadline object with the given task description and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"     * @param deadline The deadline for the task in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"     * @throws DukeInvalidDateException If the deadline is not in the correct datetime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"    public Deadline(String task, String deadline) throws DukeInvalidDateException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, parseFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"            throw new DukeInvalidDateException(\"Incorrect datetime format used.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"     * Generates a formatted string to save the Deadline task to file.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the Deadline task\u0027s details for saving to file.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"        String completedString \u003d isCompleted ? \"X|\" : \" |\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"        return \"D|\" + completedString + description + \"|\" + deadline.format(parseFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"     * Generates a string representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"     * @return A string displaying the Deadline task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"        String formattedDeadline \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM uuuu h:mm a\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDeadline + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"     * Indicates whether some other object is \"equal to\" this Deadline instance.","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"     * This method overrides the default equals implementation from the Object class.","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"     * Two Deadline instances are considered equal if they meet the following criteria:","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"     * 1. They reference the same object (i.e., identical references).","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"     * 2. The other object is an instance of the Deadline class.","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"     * 3. The \u0027isCompleted\u0027 status, \u0027description\u0027, and \u0027deadline\u0027 fields of both","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"     *    Deadline instances are equal.","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"     * @param o The object to compare for equality with this Deadline instance.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"     * @return true if the two Deadline instances are equal based on the specified criteria,","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"     *         false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"        Deadline otherDeadline \u003d (Deadline) o;","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"        return this.isCompleted \u003d\u003d otherDeadline.isCompleted \u0026\u0026 this.description.equals(otherDeadline.description)","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"                \u0026\u0026 this.deadline.equals(otherDeadline.deadline);","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"     * Returns a hash code value for the Deadline object.","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"     * This method generates a hash code based on the \u0027isCompleted\u0027 status, \u0027description\u0027,","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"     * and \u0027deadline\u0027 of the Deadline object. It combines these properties to create","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"     * a unique hash code.","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"     * @return The hash code value for the Deadline object.","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"        return Objects.hash(isCompleted, description, deadline);","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":96}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seewhyjay":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    public Duke(String saveLocation) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        storage \u003d new Storage(saveLocation, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"            tasks \u003d new TaskList(storage.loadSavedTasks(), ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"            parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"        } catch (DukeNoExistingTasksException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"            tasks \u003d new TaskList(ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"            parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"        } catch (DukeLoadTasksException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"            tasks \u003d new TaskList(ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"            parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"        new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"     * The main entry point for all JavaFX applications.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"     * The start method is called after the init method has returned,","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"     * and after the system is ready for the application to begin running.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"     * NOTE: This method is called on the JavaFX Application Thread.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"     *                     the application scene can be set.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"     *                     Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"     *                     primary stages.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"     * @throws Exception if something goes wrong","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"        primaryStage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"        primaryStage.show(); // Render the stage.","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"        return parser.parseCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"seewhyjay":64,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seewhyjay":7}},{"path":"src/main/java/duke/DukeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"public class DukeInvalidDateException extends DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"    public DukeInvalidDateException(String msg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"        super(msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"seewhyjay":7}},{"path":"src/main/java/duke/DukeLoadTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"public class DukeLoadTasksException extends DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"    public DukeLoadTasksException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seewhyjay":7}},{"path":"src/main/java/duke/DukeNoExistingTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"public class DukeNoExistingTasksException extends DukeLoadTasksException{","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"    public DukeNoExistingTasksException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"        super(\"No existing save file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seewhyjay":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":" * Represents an event task with a description, start time, and deadline. It inherits from the Task class.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    private final DateTimeFormatter parseFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"     * Constructs an Event object with the provided event details.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"     * @param task The description of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"     * @param start The start time of the event in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"     * @param deadline The deadline time of the event in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"     * @throws DukeInvalidDateException If the start or deadline time has an incorrect format.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    public Event(String task, String start, String deadline) throws DukeInvalidDateException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"            this.start \u003d LocalDateTime.parse(start, parseFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"            throw new DukeInvalidDateException(\"Incorrect datetime format used for /by.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, parseFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"            throw new DukeInvalidDateException(\"Incorrect datetime format used for /to.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"     * Returns a string representation of the Event task in a format suitable for saving to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the Event task\u0027s details for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"        String completedString \u003d isCompleted ? \"X|\" : \" |\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"        return \"E|\" + completedString + description + \"|\" + start.format(parseFormatter) + \"|\" + deadline.format(parseFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"     * Returns a string representation of the Event task including its start and deadline times.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"        DateTimeFormatter toStringFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM uuuu h:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"        String formattedDeadline \u003d this.deadline.format(toStringFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"        String formattedStart \u003d this.start.format(toStringFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedStart + \" to: \" + formattedDeadline + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"     * Indicates whether some other object is \"equal to\" this Event instance.","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"     * This method overrides the default equals implementation from the Object class.","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"     * Two Event instances are considered equal if they meet the following criteria:","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"     * 1. They reference the same object (i.e., identical references).","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"     * 2. The other object is an instance of the Even class.","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"     * 3. The \u0027isCompleted\u0027 status, \u0027description\u0027, \u0027start\u0027 and \u0027deadline\u0027 fields of both","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"     *    Event instances are equal.","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"     * @param o The object to compare for equality with this Event instance.","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"     * @return true if the two Event instances are equal based on the specified criteria,","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"     *         false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"        Event otherEvent \u003d (Event) o;","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"        return this.isCompleted \u003d\u003d otherEvent.isCompleted \u0026\u0026 this.description.equals(otherEvent.description)","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"                \u0026\u0026 this.deadline.equals(otherEvent.deadline) \u0026\u0026 this.start.equals(otherEvent.start);","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"     * Returns a hash code value for the Event object.","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"     * This method generates a hash code based on the \u0027isCompleted\u0027 status, \u0027description\u0027,","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"     * \u0027start\u0027, and \u0027deadline\u0027 of the Event object. It combines these properties to create","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"     * a unique hash code.","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"seewhyjay"},"content":"     * @return The hash code value for the Event object.","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"seewhyjay"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"seewhyjay"},"content":"        return Objects.hash(isCompleted, description, start, deadline);","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":106}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seewhyjay":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"            stage.setTitle(\"Duke Task Assistant\");","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seewhyjay":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"                DialogBox.getDukeDialog(ui.showWelcome(), dukeImage)","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"        );","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seewhyjay":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.util.EnumSet;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":" * Parses user input commands and performs corresponding actions on the task list and user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":" * The Parser class handles various commands related to managing tasks and interacting with the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    public Parser(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"     * Represents different types of commands that the user can input.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    private enum Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"        invalid, bye, list, mark, unmark, delete, find, todo, deadline, event, duplicates;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"        /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"         * Returns an EnumSet of Command containing task-related command types.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"         * This is useful for determining whether a given command involves adding tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"         * If more task types are added in the future can just add here so I don\u0027t have to change in main","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"         * when checking if it\u0027s an adding task command","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"         *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"         * @return An EnumSet containing task-related command types (todo, deadline, event).","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"         */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        public static EnumSet\u003cCommand\u003e taskTypes() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"            return EnumSet.of(todo, deadline, event);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"     * Parses the user\u0027s input command and executes the corresponding action.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"     * @return The response from Duke","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"    public String parseCommand(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"        Command cmd \u003d Command.invalid;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"        for (Command c : Command.values()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"            if (input.startsWith(c.toString())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"                cmd \u003d c;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"        if (cmd.equals(Command.duplicates)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"            TaskList duplicates \u003d taskList.removeDuplicates();","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"            return \"The following duplicate tasks were removed:\\n\" + duplicates;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.bye)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"            ui.showByeMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"            return \"Bye! Hope to see you soon!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.list)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"            ui.showTaskList(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"            return taskList.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.mark)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"                return taskList.markTask(Integer.parseInt(input.split(\" \")[1]));","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"                ui.showInvalidIndexError();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"                return \"Invalid task index!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.unmark)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"                return taskList.unmarkTask(Integer.parseInt(input.split(\" \")[1]));","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"                ui.showInvalidIndexError();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"                return \"Invalid task index!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.delete)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"                return taskList.deleteTask(Integer.parseInt(input.split(\" \")[1]));","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"                ui.showInvalidIndexError();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"                return \"Invalid task index!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.invalid)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"            ui.showInvalidCommandError();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"            return \"Invalid command!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.find)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"            ui.showFindResults(taskList.find(input.split(\" \", 2)[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"            return taskList.find(input.split(\" \", 2)[1]).toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"        } else if (Command.taskTypes().contains(cmd)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"                return createTask(cmd, input);","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"            } catch (DukeInvalidDateException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"                ui.showAddTaskError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"                return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"        return \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"    private String getTaskInfo(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"        for (Command cmd : Command.taskTypes()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"            if (input.startsWith(cmd.toString())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"seewhyjay"},"content":"                return input.replace(cmd + \" \", \"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"seewhyjay"},"content":"        // Will never happen","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"seewhyjay"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"seewhyjay"},"content":"     * Parses the input information to create and add an Event task to the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"seewhyjay"},"content":"     * @param info The input information containing details about the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"seewhyjay"},"content":"     * @return String indicating the event information or the error when trying to create event","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"seewhyjay"},"content":"     * @throws DukeInvalidDateException If the input contains invalid date formats for the event\u0027s start and end times.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"seewhyjay"},"content":"    private String parseAndAndEvent(String info) throws DukeInvalidDateException {","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"seewhyjay"},"content":"        if (!info.matches(\".*\\\\b /by \\\\b.*\") || !info.matches(\".*\\\\b /to \\\\b.*\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"seewhyjay"},"content":"            return \"An event must contain a description,\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"seewhyjay"},"content":"                    \" start and end specified with `/by` and `/to`!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"seewhyjay"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"seewhyjay"},"content":"            // In case the user does /to before /by, split /by and /to and vice versa to get by and to","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"seewhyjay"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"seewhyjay"},"content":"                String by \u003d info.split(\" /by \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"seewhyjay"},"content":"                by \u003d by.split(\" /to \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"seewhyjay"},"content":"                String to \u003d info.split(\" /to \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"seewhyjay"},"content":"                to \u003d to.split(\" /by \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"seewhyjay"},"content":"                // Get index 0 to get before the /by and /to, so either way you\u0027ll get only the task","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"seewhyjay"},"content":"                String task \u003d info.split(\" /to \")[0].split(\" /by \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"seewhyjay"},"content":"                task \u003d task.replaceFirst(\"event \", \"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"seewhyjay"},"content":"                Event event \u003d new Event(task, by, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"seewhyjay"},"content":"                taskList.addTask(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"seewhyjay"},"content":"                return \"Got it! I\u0027ve added the Event: \" + event;","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"seewhyjay"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"seewhyjay"},"content":"                ui.showAddTaskError(\"Description, /by and /to cannot be empty!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"seewhyjay"},"content":"                return \"Event description, /by and /to cannot be empty!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"seewhyjay"},"content":"     * Creates a task based on the provided command and input, and adds it to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"seewhyjay"},"content":"     * @param cmd The command indicating the type of task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"seewhyjay"},"content":"     * @param input The user\u0027s input containing task information.","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"seewhyjay"},"content":"     * @return String indicating the task information or the error when trying to create task","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"seewhyjay"},"content":"     * @throws DukeInvalidDateException If the input contains an invalid date format for tasks that require dates.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"seewhyjay"},"content":"    private String createTask(Command cmd, String input) throws DukeInvalidDateException {","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"seewhyjay"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"seewhyjay"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"seewhyjay"},"content":"            ui.showAddTaskError(\"Task description cannot be empty!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"seewhyjay"},"content":"            return \"Task description cannot be empty!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":151,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"seewhyjay"},"content":"        String info \u003d getTaskInfo(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"seewhyjay"},"content":"        if (cmd.equals(Command.todo)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"seewhyjay"},"content":"            Todo todo \u003d new Todo(info);","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"seewhyjay"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"seewhyjay"},"content":"            return \"Got it! I\u0027ve added the Todo: \" + todo;","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.deadline)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"seewhyjay"},"content":"            assert info !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"seewhyjay"},"content":"            String[] splitInfo \u003d info.split(\" /by \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"seewhyjay"},"content":"            if (splitInfo.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"seewhyjay"},"content":"                Deadline deadline \u003d new Deadline(splitInfo[0], splitInfo[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":162,"author":{"gitId":"seewhyjay"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2023-09-09"},{"lineNumber":163,"author":{"gitId":"seewhyjay"},"content":"                return \"Got it! I\u0027ve added the Deadline: \" + deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":164,"author":{"gitId":"seewhyjay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"seewhyjay"},"content":"                ui.showAddTaskError(\"Description and /by cannot be empty!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"seewhyjay"},"content":"                return \"Deadline description and /by cannot be empty!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":167,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.event)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"seewhyjay"},"content":"            assert info !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"seewhyjay"},"content":"            return parseAndAndEvent(info);","lastModifiedDate":"2023-09-09"},{"lineNumber":171,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"seewhyjay"},"content":"        return \"Unknown task type!\";  // Should never happen","lastModifiedDate":"2023-09-09"},{"lineNumber":173,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seewhyjay":174}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" * Handles saving and loading tasks to/from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    private final String saveLocation;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    public Storage(String saveLocation, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"        this.saveLocation \u003d saveLocation;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"     * Saves the tasks from the provided TaskList to the specified file.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"        File saveFile \u003d new File(saveLocation);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"        saveFile.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"        if (saveFile.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"            boolean deleteFileSuccess \u003d saveFile.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"            if (!deleteFileSuccess) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"Failed to delete previous save file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"            boolean createNewFileSuccess \u003d saveFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"            if (!createNewFileSuccess) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"Failed to create save file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(saveLocation, true));","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"                for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"                    writer.append(task.saveString()).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"                writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"            ui.showSaveTasksError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"     * Loads saved tasks from the file and returns them as a list.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"     * @return A List of loaded Task objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"     * @throws DukeLoadTasksException If an error occurs while loading tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"     * @throws DukeNoExistingTasksException If the save file does not exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"    public List\u003cTask\u003e loadSavedTasks() throws DukeLoadTasksException {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"        File saveFile \u003d new File(saveLocation);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"        if (saveFile.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(saveLocation));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"                String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"                List\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"                    String[] datum \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"                        switch (datum[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"                            tempTaskList.add(new Todo(datum[2]));","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"                            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"                                tempTaskList.add(new Deadline(datum[2], datum[3]));","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"                            } catch (DukeInvalidDateException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"                            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"                                tempTaskList.add(new Event(datum[2], datum[3], datum[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"                            } catch (DukeInvalidDateException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"                                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"                        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"                            System.out.println(\"Illegal task type, skipping\");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"                        if (datum[1].equals(\"X\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"                            tempTaskList.get(tempTaskList.size() - 1).setIsCompleted(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"                        System.out.println(\"Illegal line in save file, skipping\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"                reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"                return tempTaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"                throw new DukeLoadTasksException(\"IOException occurred\" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"seewhyjay"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"            throw new DukeNoExistingTasksException();","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seewhyjay":104}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":" * Represents a task with a description and completion status. This is an abstract base class","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":" * that provides common functionality for different types of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"abstract public class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"    protected String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    protected Boolean isCompleted \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"        assert description !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"     * @param isCompleted True if the task is completed, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    public void setIsCompleted(Boolean isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"     * Returns a string representation of the task in a format suitable for saving to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the task\u0027s details for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    abstract public String saveString();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"     * Returns a string representation of the task including its completion status and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"        String box \u003d this.isCompleted ? \"[X]\": \"[ ]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"        return box + \" \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":41}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" * Represents a list of tasks that can be managed, including adding, deleting, and marking tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":" * Tasks are stored in a List\u003cTask\u003e and can be interacted with using the provided methods.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"     * Constructs a TaskList with the provided list of saved tasks and a Ui object.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"     * @param savedTasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"     * @param ui The Ui object used to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    public TaskList(List\u003cTask\u003e savedTasks, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"        assert savedTasks !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"        this.tasks \u003d savedTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"     * Constructs an empty TaskList with the provided Ui object, to be used when there is no previously saved tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"     * @param ui The Ui object used to display messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"     * Deletes a task at the specified index from the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"     * @param idx The index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the valid range of task indices.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"    public String deleteTask(int idx) throws IndexOutOfBoundsException{","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"        Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"        tasks.remove(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"        ui.showDeleteTaskMessage(task, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"        return \"Got it! I\u0027ve deleted this task:\\n\" + task;","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"        ui.showAddTaskMessage(task, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"     * Marks a task at the specified index as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"     * @param idx The index of the task to be marked as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the valid range of task indices.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"    public String markTask(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"        Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"        task.setIsCompleted(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"        ui.showMarkedTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"        return \"Got it! I\u0027ve marked this task as complete!\\n\" + task;","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"     * Unmarks a task at the specified index as not completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"     * @param idx The index of the task to be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the valid range of task indices.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"    public String unmarkTask(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"        Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"        task.setIsCompleted(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"        ui.showUnmarkedTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"        return \"Got it! I\u0027ve marked this task as incomplete!\\n\" + task;","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"     * Returns the list of tasks stored in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"     * Finds tasks that match the provided keyword in their descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"     * @return A new TaskList containing tasks that match the keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"seewhyjay"},"content":"        TaskList ret \u003d new TaskList(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"seewhyjay"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"seewhyjay"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"seewhyjay"},"content":"                ret.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"seewhyjay"},"content":"        return ret;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"seewhyjay"},"content":"     * Removes duplicate tasks from the current TaskList and returns a new TaskList","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"seewhyjay"},"content":"     * containing the removed duplicate tasks to show the user.","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"seewhyjay"},"content":"     * @return A new TaskList containing the duplicate tasks that were removed from","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"seewhyjay"},"content":"     *         the current TaskList. If there are no duplicates, an empty TaskList","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"seewhyjay"},"content":"     *         is returned.","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"seewhyjay"},"content":"    public TaskList removeDuplicates() {","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"seewhyjay"},"content":"        HashSet\u003cTask\u003e taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"seewhyjay"},"content":"        TaskList duplicates \u003d new TaskList(ui);","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"seewhyjay"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"seewhyjay"},"content":"            boolean added \u003d taskSet.add(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"seewhyjay"},"content":"            if (!added) {","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"seewhyjay"},"content":"                duplicates.addTask(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"seewhyjay"},"content":"        tasks \u003d new ArrayList\u003c\u003e(taskSet);","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"seewhyjay"},"content":"        return duplicates;","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"seewhyjay"},"content":"     * Returns a string representation of the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"seewhyjay"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"seewhyjay"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"seewhyjay"},"content":"            stringBuilder.append(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"seewhyjay"},"content":"            stringBuilder.append(\".\");","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"seewhyjay"},"content":"            stringBuilder.append(tasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"seewhyjay"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"seewhyjay"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seewhyjay":148}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":" * Represents a Todo task, which is a type of task with no specific deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":" * It inherits from the Task class.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"     * Constructs a Todo object with the provided task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"     * @param desc The description of the Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        super(desc);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"     * Returns a string representation of the Todo task in a format suitable for saving to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the Todo task\u0027s details for saving to file.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"        String completedString \u003d isCompleted ? \"X|\" : \" |\";","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        return \"T|\" + completedString + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"     * @return A formatted string representing the Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"     * Indicates whether some other object is \"equal to\" this Todo instance.","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"     * This method overrides the default equals implementation from the Object class.","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"     * Two Todo instances are considered equal if they meet the following criteria:","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"     * 1. They reference the same object (i.e., identical references).","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"     * 2. The other object is an instance of the Todo class.","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"     * 3. The \u0027isCompleted\u0027 status and \u0027description\u0027 fields of both Todo instances are equal.","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"     * @param o The object to compare for equality with this Todo instance.","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"     * @return true if the two Todo instances are equal based on the specified criteria,","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"     *         false otherwise.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"        if (!(o instanceof Todo)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"        Todo otherTodo \u003d (Todo) o;","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"        return this.isCompleted \u003d\u003d otherTodo.isCompleted \u0026\u0026 this.description.equals(otherTodo.description);","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"     * Returns a hash code value for the Todo object.","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"     * This method generates a hash code based on the \u0027isCompleted\u0027 status and \u0027description\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"     * of the Todo object. It combines these two properties to create a unique hash code.","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"     * @return The hash code value for the Todo object.","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"        return Objects.hash(isCompleted, description);","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":81}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":" * Represents the user interface for Duke.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"     * Constructs an Ui object and initializes the scanner to read user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"     * Displays a line separator in the console.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"    public static void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"        return \"Hello! I\u0027m YJ\u0027s Chat bot\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    public void showByeMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Bye! Hope to see you soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"     * Displays an error message when loading tasks from a save file fails.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"     * @param msg The error message explaining the failure.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"    public void showLoadingError(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Failed to load existing save file due to: \" + msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"     * Displays an error message when adding a task fails.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"     * @param msg The error message explaining the failure.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"    public void showAddTaskError(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Failed to add task because: \" + msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"     * Displays the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"     * @param numTasks The number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"    private void showNumberOfTasks(int numTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"There are now \" + numTasks + \" tasks in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"     * Displays a message confirming the addition of a task and the updated task count.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"     * @param numTasks The updated number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"    public void showAddTaskMessage(Task task, int numTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"        showNumberOfTasks(numTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"     * Displays a message confirming the deletion of a task and the updated task count.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"     * @param numTasks The updated number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"    public void showDeleteTaskMessage(Task task, int numTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Got it! I\u0027ve deleted this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"        showNumberOfTasks(numTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"     * Displays an error message for when a user provides an invalid task index","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"seewhyjay"},"content":"    public void showInvalidIndexError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Invalid index provided! Make sure it is a number and within the range of number of tasks!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"seewhyjay"},"content":"     * Displays a message indicating a task has been marked as done, along with the task that was marked","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"seewhyjay"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"seewhyjay"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"seewhyjay"},"content":"     * Displays a message indicating a task has been marked as not being done, along with the task that was marked","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"seewhyjay"},"content":"     * @param task The task that was marked as not being done.","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"seewhyjay"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"seewhyjay"},"content":"     * Displays an error message for an invalid command.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"seewhyjay"},"content":"    public void showInvalidCommandError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Invalid command!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"seewhyjay"},"content":"     * Displays an error message when saving tasks to a save file fails.","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"seewhyjay"},"content":"     * @param e The exception thrown when trying to save the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"seewhyjay"},"content":"    public void showSaveTasksError(IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Failed to save tasks to drive: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"seewhyjay"},"content":"     * Displays the list of tasks from the given task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"seewhyjay"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"seewhyjay"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(taskList.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"seewhyjay"},"content":"    public void showFindResults(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"seewhyjay"},"content":"        if (taskList.getTasks().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(\"No tasks with that keyword exists!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"seewhyjay"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(\"Here are the matching tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"seewhyjay"},"content":"        showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seewhyjay":167}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seewhyjay":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seewhyjay":19}},{"path":"src/test/java/duke/TestEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"public class TestEvent {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    public void event_testSaveString() throws DukeInvalidDateException {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"        assertEquals(new Event(\"Test event\", \"2023-12-18 00:00\", \"2023-12-19 23:59\").saveString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"                \"E| |Test event|2023-12-18 00:00|2023-12-19 23:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    public void event_testIsCompletedSaveString() throws DukeInvalidDateException {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        Event completedEvent \u003d new Event(\"Test event\", \"2023-12-18 00:00\", \"2023-12-19 23:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"        completedEvent.setIsCompleted(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"        assertEquals(completedEvent.saveString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"                \"E|X|Test event|2023-12-18 00:00|2023-12-19 23:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    public void event_testWrongDatetimeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"        assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"                DukeInvalidDateException.class,","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"                ()-\u003e new Event(\"Test event\", \"sadad\", \"2023-12-19 23:59\")","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"seewhyjay":30}},{"path":"src/test/java/duke/TestTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"public class TestTaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    public void taskList_testAddTasks() throws DukeInvalidDateException {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"        TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"        Todo todo \u003d new Todo(\"Todo1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(todo));","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline1\", \"2023-08-31 12:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(deadline));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"        Event event \u003d new Event(\"Deadline1\", \"2023-08-31 12:00\", \"2023-08-31 12:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"        taskList.addTask(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(event));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"    public void taskList_testDeleteTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"        TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"        Todo todo \u003d new Todo(\"Todo1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(todo));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().isEmpty());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"    public void taskList_testDeleteTask_invalidIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"        TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"        Todo todo \u003d new Todo(\"Todo1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(todo));","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"        assertThrows(IndexOutOfBoundsException.class,","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"                () -\u003e taskList.deleteTask(1));","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(todo));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"    public void taskList_testMarkTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"        TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"        Todo todo \u003d new Todo(\"Todo1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(todo));","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().get(0).isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"    public void taskList_testMarkAndUnmarkTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"        TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"        Todo todo \u003d new Todo(\"Todo1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().contains(todo));","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(taskList.getTasks().get(0).isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"        assertFalse(taskList.getTasks().get(0).isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"seewhyjay":81}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"todo Todo1","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"todo","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"event Event1 test /by 2023-08-23 11:30 /to 2023-08-24 23:59","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"deadline Deadline1 test /by 2023-08-23 11:30","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"deadline /by 2023-08-23 11:30","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"deadline Deadline no by","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"event Event no by /to 2023-08-23 11:30","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"event Event no to /by 2023-08-23 11:30","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"event Event no both","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"event /by 2023-08-23 11:30 /to 2023-08-23 11:30","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"unmark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"delete 0","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"REM delete previous save file","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"del .\\data\\duke.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"if errorlevel 1 (","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"    echo Test failed!","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":") else (","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    echo Test passed!","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":")","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":10,"-":20}}]
