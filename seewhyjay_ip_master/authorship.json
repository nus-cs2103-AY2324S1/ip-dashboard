[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"    private String deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"        String completedString \u003d completed ? \"X|\" : \" |\";","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"        return \"D|\" + completedString + task + \"|\" + deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"import java.io.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"import java.util.EnumSet;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"    private static final String lineSep \u003d \"-------------------------------\";","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    private static final String saveLocation \u003d \"data/duke.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    private enum Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"        invalid, bye, list, mark, unmark, delete, todo, deadline, event;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"        /*","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"        If more task types are added in the future can just add here so I don\u0027t have to change in main","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        when checking if it\u0027s an adding task command","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"        public static EnumSet\u003cCommand\u003e taskTypes() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"            return EnumSet.of(todo, deadline, event);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(lineSep);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Hello! I\u0027m YJ\u0027s Chatbot\");","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"What can I do for you?\\n\" + lineSep);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"            loadSavedTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(\"Failed to load saved tasks!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"        String input \u003d readCmd(scanner);","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"        Command cmd \u003d getCommand(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"        int prevSize \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"        while (!cmd.equals(Command.bye)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"            if (cmd.equals(Command.list)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"                listTasks();","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"            } else if (cmd.equals(Command.delete)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"                String[] split \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"                if (split.length \u003e 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"                        Task toRemove \u003d tasks.get(Integer.parseInt(split[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"                        tasks.remove(toRemove);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + toRemove);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"seewhyjay"},"content":"                        System.out.println(\"To delete a task you need to provide a valid integer index!\\n\" + lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"seewhyjay"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"seewhyjay"},"content":"                        System.out.println(\"No task with that index!\\n\" + lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"seewhyjay"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"seewhyjay"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"seewhyjay"},"content":"                    System.out.println(\"To delete a task you need to provide an index!\\n\" + lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"seewhyjay"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"seewhyjay"},"content":"            } else if (cmd.equals(Command.mark) || cmd.equals(Command.unmark)) {  // works for both mark and unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"seewhyjay"},"content":"                String[] split \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"seewhyjay"},"content":"                if (split.length \u003e 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"seewhyjay"},"content":"                    markTask(split);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"seewhyjay"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"seewhyjay"},"content":"                    System.out.println(\"To mark/unmark a task you need to provide an index!\\n\" + lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"seewhyjay"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"seewhyjay"},"content":"            } else if (Command.taskTypes().contains(cmd)){","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"seewhyjay"},"content":"                addTask(cmd, input);","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"                // Unknown command","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(lineSep + \"\\nUnknown command given :\u003c\");","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"            if (prevSize \u003c tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"                    saveTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"                    System.out.println(\"Failed to save tasks!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"                input \u003d readCmd(scanner);","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"                cmd \u003d getCommand(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"        // Close scanner, must be done here because if I try to close in readCmd it\u0027ll close the System.in stream.","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"        scanner.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"        System.out.println(\"Bye. Hope to see you soon!\\n\" + lineSep);","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"    public static String readCmd(Scanner scanner) {","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"        // Read user input","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"    private static void listTasks() {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"        int tempCounter \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"            // Don\u0027t print nulls","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"            if (task \u003d\u003d null) { break; }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"                Todo t \u003d (Todo) task;","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(tempCounter + \".\" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"seewhyjay"},"content":"                Deadline t \u003d (Deadline) task;","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(tempCounter + \".\" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"seewhyjay"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"seewhyjay"},"content":"                Event t \u003d (Event) task;","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(tempCounter + \".\" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"seewhyjay"},"content":"            tempCounter++;","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"seewhyjay"},"content":"    private static void markTask(String[] split) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"seewhyjay"},"content":"        int idx \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"seewhyjay"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"seewhyjay"},"content":"            tasks.get(idx).setCompleted(split[0].equals(\"mark\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(tasks.get(idx).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"seewhyjay"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(\"No task with that index!\\n\" + lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"seewhyjay"},"content":"    private static Command getCommand(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"seewhyjay"},"content":"        Command ret \u003d Command.invalid;","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"seewhyjay"},"content":"        for (Command cmd : Command.values() ) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"seewhyjay"},"content":"            if (input.startsWith(cmd.toString())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"seewhyjay"},"content":"                ret \u003d cmd;","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"seewhyjay"},"content":"        return ret;","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"seewhyjay"},"content":"    private static void addTask(Command cmd, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"seewhyjay"},"content":"        if (cmd.equals(Command.todo)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"seewhyjay"},"content":"            if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"The description of a todo cannot be empty!\\n\" + lineSep);","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"seewhyjay"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"seewhyjay"},"content":"                Todo todo \u003d new Todo(input.replaceFirst(\"todo \", \"\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"seewhyjay"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.deadline)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"seewhyjay"},"content":"            if (!input.matches(\".*\\\\b /by \\\\b.*\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"A deadline must contain a description and end specified with `/by`!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"seewhyjay"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"seewhyjay"},"content":"                String afterCommand \u003d input.replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"seewhyjay"},"content":"                String[] split \u003d afterCommand.split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"seewhyjay"},"content":"                Deadline deadline \u003d new Deadline(split[0], split[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"seewhyjay"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(deadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"seewhyjay"},"content":"        } else if (cmd.equals(Command.event)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"seewhyjay"},"content":"            if (!input.matches(\".*\\\\b /by \\\\b.*\") || !input.matches(\".*\\\\b/to \\\\b.*\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"An event must contain a description,\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"seewhyjay"},"content":"                        \" start and end specified with `/by` and `/to`!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"seewhyjay"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"seewhyjay"},"content":"                String afterCommand \u003d input.replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"seewhyjay"},"content":"                // In case the user does /to before /by, split /by and /to and vice versa to get by and to","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"seewhyjay"},"content":"                String by \u003d afterCommand.split(\" /by \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"seewhyjay"},"content":"                by \u003d by.split(\" /to \")[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"seewhyjay"},"content":"                String to \u003d afterCommand.split(\" /to \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"seewhyjay"},"content":"                to \u003d to.split(\" /by \")[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"seewhyjay"},"content":"                // Get index 0 to get before the /by and /to, so either way you\u0027ll get only the task","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"seewhyjay"},"content":"                String task \u003d input.split(\" /to \")[0].split(\" /by \")[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"seewhyjay"},"content":"                task \u003d task.replaceFirst(\"event \", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"seewhyjay"},"content":"                Event event \u003d new Event(task, by, to);","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"seewhyjay"},"content":"                tasks.add(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"seewhyjay"},"content":"    private static void saveTasks() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"seewhyjay"},"content":"        File saveFile \u003d new File(saveLocation);","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"seewhyjay"},"content":"        saveFile.mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"seewhyjay"},"content":"        if (saveFile.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"seewhyjay"},"content":"            boolean deleteFileSuccess \u003d saveFile.delete();","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"seewhyjay"},"content":"            if (!deleteFileSuccess) {","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"seewhyjay"},"content":"                System.out.println(\"Failed to delete previous save file!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":185,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"seewhyjay"},"content":"        boolean createNewFileSuccess \u003d saveFile.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"seewhyjay"},"content":"        if (!createNewFileSuccess) {","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"seewhyjay"},"content":"            System.out.println(\"Failed to create save file!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"seewhyjay"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"seewhyjay"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(saveLocation, true));","lastModifiedDate":"2023-08-28"},{"lineNumber":191,"author":{"gitId":"seewhyjay"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":192,"author":{"gitId":"seewhyjay"},"content":"                writer.append(task.saveString()).append(\"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"seewhyjay"},"content":"            writer.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"seewhyjay"},"content":"    private static void loadSavedTasks() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":199,"author":{"gitId":"seewhyjay"},"content":"        File saveFile \u003d new File(saveLocation);","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"seewhyjay"},"content":"        if (saveFile.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"seewhyjay"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(saveLocation));","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"seewhyjay"},"content":"            String line;","lastModifiedDate":"2023-08-28"},{"lineNumber":203,"author":{"gitId":"seewhyjay"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":204,"author":{"gitId":"seewhyjay"},"content":"                String[] datum \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":205,"author":{"gitId":"seewhyjay"},"content":"                switch (datum[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":206,"author":{"gitId":"seewhyjay"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":207,"author":{"gitId":"seewhyjay"},"content":"                        tasks.add(new Todo(datum[2]));","lastModifiedDate":"2023-08-28"},{"lineNumber":208,"author":{"gitId":"seewhyjay"},"content":"                        break;","lastModifiedDate":"2023-08-28"},{"lineNumber":209,"author":{"gitId":"seewhyjay"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":210,"author":{"gitId":"seewhyjay"},"content":"                        tasks.add(new Deadline(datum[2], datum[3]));","lastModifiedDate":"2023-08-28"},{"lineNumber":211,"author":{"gitId":"seewhyjay"},"content":"                        break;","lastModifiedDate":"2023-08-28"},{"lineNumber":212,"author":{"gitId":"seewhyjay"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":213,"author":{"gitId":"seewhyjay"},"content":"                        tasks.add(new Event(datum[2], datum[3], datum[4]));","lastModifiedDate":"2023-08-28"},{"lineNumber":214,"author":{"gitId":"seewhyjay"},"content":"                        break;","lastModifiedDate":"2023-08-28"},{"lineNumber":215,"author":{"gitId":"seewhyjay"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":216,"author":{"gitId":"seewhyjay"},"content":"                if (datum[1].equals(\"X\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":217,"author":{"gitId":"seewhyjay"},"content":"                    tasks.get(tasks.size() - 1).setCompleted(true);","lastModifiedDate":"2023-08-28"},{"lineNumber":218,"author":{"gitId":"seewhyjay"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":219,"author":{"gitId":"seewhyjay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":220,"author":{"gitId":"seewhyjay"},"content":"            reader.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":221,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"seewhyjay":218,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"    private String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"    private String deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"    public Event(String task, String start, String deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"        String completedString \u003d completed ? \"X|\" : \" |\";","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"        return \"E|\" + completedString + task + \"|\" + start + \"|\" + deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"abstract public class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"    protected String task;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"    protected Boolean completed \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"    public void setCompleted(Boolean completed) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    abstract public String saveString();","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"        String box \u003d this.completed ? \"[X]\": \"[ ]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"        return box + \" \" + this.task;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":18}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"        super(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"        String completedString \u003d completed ? \"X|\" : \" |\";","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"        return \"T|\" + completedString + task;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"todo Todo1","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"event Event1 test /by 123 /to 321","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"deadline Deadline1 test /by 123","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"deadline Deadline no by","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"event Event no by /to 321","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"event Event no to /by 12312","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"event Event no both","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"unmark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"delete 0","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"REM delete previous save file","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"del .\\data\\duke.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"if errorlevel 1 (","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"    echo Test failed!","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":") else (","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"    echo Test passed!","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":")","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"seewhyjay":9,"-":21}}]
