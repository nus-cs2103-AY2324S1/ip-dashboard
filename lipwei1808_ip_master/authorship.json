[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"# Duke User Guide","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"Duke is a chatbot built with Java aimed at helping you to remeber your tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"effectively!","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"## Features","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"- List all tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"- Add a task","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"- Mark and unmark a task","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"- Delete a task","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"- Search for a task","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"- Save tasks to file automatically","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"- Restore tasks automatically","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"## Other stuff to know","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"- The first word of the input is the command","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"- Available commands","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"   - todo","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"   - deadline","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"   - event","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"   - find","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"   - list","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"   - delete","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"   - mark","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"   - unmark","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"- Duke was built with Java 11!","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"## Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"1. Clone the repository","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"git clone https://github.com/lipwei1808/ip.git","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"2. Build Duke","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"./gradlew shadowJar","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"3. Run Duke","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"```aidl","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"java -jar ./build/libs/duke.jar","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lipwei1808":40,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"javafx {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lipwei1808":26,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"deadline report10 /by 12/12/2023 01:001","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"todo hi1","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"deadline project report /by 31/12/2001 18:000","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"todo run0","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"todo run1","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"event dirnk occfee /from 18/08/2001 18:00 /to 21/08/2003 22:001","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"todo report /by 18/08/2023 23:590","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"lipwei1808":7}},{"path":"data/storageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"todo take a run0","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"deadline project report /by 18/08/2001 19:001","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"event project meeting /from 18/09/2001 19:00 /to 18/10/2001 19:001","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"deadline exam paper /by 18/11/2001 19:000","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lipwei1808":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"# Duke User Guide","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"Duke is a chatbot built with Java aimed at helping you to remeber your tasks ","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"effectively!","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"## Features","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"- List all tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"- Add a task","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"- Mark and unmark a task","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"- Delete a task","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"- Search for a task","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"- Save tasks to file automatically ","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"- Restore tasks automatically","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"## Other stuff to know","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"- The first word of the input is the command","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"- Available commands","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"  - todo","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"  - deadline","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"  - event","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"  - find","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"  - list","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"  - delete","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"  - mark","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"  - unmark","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"- Duke was built with Java 11!","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"1. Clone the repository","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"git clone https://github.com/lipwei1808/ip.git","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"2. Build Duke","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"./gradlew shadowJar","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"3. Run Duke","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"```aidl","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"java -jar ./build/libs/duke.jar","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"lipwei1808":35,"-":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":" * Runs the Duke Application","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"    private final Tasks tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for Duke.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"     * \u003cp\u003eInitialises data structures used by the application.\u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    public Duke() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"        this.storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"     * Returns response to user input in the GUI application.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"     * @param input the input passed by user from the GUI","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"     * @return string response for the user input","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"            Command c \u003d Parser.parse(input, false);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"            // Empty or unknown command","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"            if (c \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"                return ui.showUnknownCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"            // Check if is duke.commands.ExitCommand","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"            if (c.willExit()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"                return \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"            // Execute command","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"            return c.execute(this.tasks, this.ui, this.storage, false);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"            return ui.showError(ex.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lipwei1808":53,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":" * The main entry point to the application.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"public class Launcher {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"     * Entry point main method to the application.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"     * @param args Any user arguments passed in","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lipwei1808":18}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lipwei1808":33}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":" * Represents an AddCommand where this command should add into Tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD_D \u003d \"deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD_E \u003d \"event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD_T \u003d \"todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    private final Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for AddCommand","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"     * @param task the Task to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    public String execute(Tasks tasks, Ui ui, Storage storage, boolean isRestoring) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"        // Check for duplicated task","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"        for (Task task: tasks.getAll()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"            if (task.equals(this.task)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"                return ui.showDuplicateTask();","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"        tasks.add(this.task);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"        if (!isRestoring) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"            output +\u003d ui.showAddTask(this.task, tasks.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":45}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":" * Encapsulates the Command to run by the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"     * Executes the command, updates Tasks, Storage and prints to standard output and user feedback.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"     * @param tasks the Tasks object to be updated","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"     * @param ui Ui instance to print to standard output any user feedback","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"     * @param storage Storage instance to save into persistent storage","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"     * @param isRestoring boolean flag to track if the Command is executing in a restoring state","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     * @throws DukeException if the Command cannot be executed due to invalid user input","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    public abstract String execute(Tasks tasks, Ui ui, Storage storage, boolean isRestoring) throws DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"     * Checks if the program should exit after the execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"     * @return a boolean value if the program should exit","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    public boolean willExit() {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":31}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":" * Represents a DeleteCommand where this command should delete a Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"    private int target;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for DeleteCommand","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     * @param target the targeted index of the Task to be deleted","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"    public DeleteCommand(int target) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"        this.target \u003d target;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    public String execute(Tasks tasks, Ui ui, Storage storage, boolean isRestoring) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"        Task task \u003d tasks.getTaskByIndex(this.target);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"        Task t \u003d tasks.remove(this.target - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"        if (!isRestoring) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"            output +\u003d ui.showSuccessDelete(t, tasks.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":42}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":" * Represents an ExitCommand where the program should quit.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    public String execute(Tasks tasks, Ui ui, Storage storage, boolean isRestoring) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"        return ui.showExit();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"    public boolean willExit() {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":22}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":" * Represents an FindCommand where the user is finding tasks based on a target string.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    private String target;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for FindCommand","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"     * @param target the targeted string that the user is searching for","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    public FindCommand(String target) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"        this.target \u003d target;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    public String execute(Tasks tasks, Ui ui, Storage storage, boolean isRestoring) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"        assert !this.target.equals(\"\") : \"target string to find shouldn\u0027t be empty!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"        for (Task task: tasks.getAll()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"            if (task.getDescription().contains(this.target)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"        if (foundTasks.size() \u003e 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"            output +\u003d ui.showTasks(foundTasks, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"            output +\u003d ui.showNoTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lipwei1808":46}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":" * Represents a ListCommand which should print all Tasks into standard output.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    public String execute(Tasks tasks, Ui ui, Storage storage, boolean isRestoring) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"        if (isRestoring) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"            return \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"            return ui.showNoTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"        return ui.showTasks(tasks.getAll(), false);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":25}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":" * Represents a MarkCommand which should set the marked value of a Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD_MARK \u003d \"mark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"    public static final String COMMAND_WORD_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    private int target;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for MarkCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value if the Task should be marked","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"     * @param target the targeted index of the Task to be marked","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    public MarkCommand(boolean isMarked, int target) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"        this.target \u003d target;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"    public String execute(Tasks tasks, Ui ui, Storage storage, boolean isRestoring) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"        Task task \u003d tasks.getTaskByIndex(this.target);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"        task.setMarked(this.isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"        if (!isRestoring) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"            output +\u003d ui.showSuccessMark(this.isMarked, task);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":47}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":" * Encapsulations of all exceptions thrown by the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"     * @param message the message describing the exception","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"        super(\"OOPS!!! \" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"     * String representation of the Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"     * @return The string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"        return \"OOPS!!! \" + this.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":24}},{"path":"src/main/java/duke/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":" * Signals an invalid argument provided by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for InvalidArgumentException","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    public InvalidArgumentException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"        super(\"I\u0027m sorry, but you have entered an invalid argument :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":13}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":" * Signals an invalid command provided by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for InvalidCommandException","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":13}},{"path":"src/main/java/duke/exceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":" * Signals an invalid deadline due to invalid format given by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for InvalidDeadlineException","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"        super(\"Please enter a deadline with the format \u0027\u003c\u003cmessage\u003e\u003e /by dd/mm/yyyy HH:mm\u0027 format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":13}},{"path":"src/main/java/duke/exceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":" * Signals an invalid event due to invalid format given by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"public class InvalidEventException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for InvalidEventException","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"        super(\"Please enter an event with the format \u0027\u003c\u003cmessage\u003e\u003e /from dd/mm/yyyy HH:mm /to dd/mm/yyyy HH:mm\u0027 format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.InvalidEventException;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":" * Parses user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"     * Parses user input into a Command object for execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"     * @param input the text input by the user","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"     * @param isRestoring boolean value if this is parsing from a data file or real user input","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"     * @return Command to be executed","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"     * @throws DukeException when the user passes in invalid input","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"    public static Command parse(String input, boolean isRestoring) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"        if (input.trim().equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"            return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"        String[] parsedText \u003d parseText(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"        String action \u003d parsedText[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"        String arguments \u003d parsedText[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"        boolean isMarked \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"        if (isRestoring) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"            String marker \u003d arguments.substring(arguments.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"            isMarked \u003d marker.equals(\"1\");","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"            arguments \u003d arguments.substring(0, arguments.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"        switch (action) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"        case AddCommand.COMMAND_WORD_D:","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"        case AddCommand.COMMAND_WORD_E:","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"        case AddCommand.COMMAND_WORD_T:","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"            return handleAdd(action, arguments, isMarked);","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"            if (arguments.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"                throw new InvalidArgumentException();","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"lipwei1808"},"content":"            return new DeleteCommand(parseArgs(arguments));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lipwei1808"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"lipwei1808"},"content":"            if (!arguments.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"lipwei1808"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"lipwei1808"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"lipwei1808"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"lipwei1808"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"lipwei1808"},"content":"        case MarkCommand.COMMAND_WORD_UNMARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"lipwei1808"},"content":"            if (arguments.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"lipwei1808"},"content":"                throw new InvalidArgumentException();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"lipwei1808"},"content":"            return new MarkCommand(false, parseArgs(arguments));","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"lipwei1808"},"content":"        case MarkCommand.COMMAND_WORD_MARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"lipwei1808"},"content":"            if (arguments.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"lipwei1808"},"content":"                throw new InvalidArgumentException();","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"lipwei1808"},"content":"            return new MarkCommand(true, parseArgs(arguments));","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"lipwei1808"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"lipwei1808"},"content":"            if (arguments.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"lipwei1808"},"content":"                throw new InvalidArgumentException();","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"lipwei1808"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"lipwei1808"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lipwei1808"},"content":"     * Parses user input for adding into tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"lipwei1808"},"content":"     * @param taskInput the type of Task","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"lipwei1808"},"content":"     * @param args the arguments to be parsed for the Task","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value if the Task is marked","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"lipwei1808"},"content":"     * @return AddCommand to be executed","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"lipwei1808"},"content":"     * @throws DukeException if there is invalid user input","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lipwei1808"},"content":"    protected static AddCommand handleAdd(String taskInput, String args, boolean isMarked) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"lipwei1808"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"lipwei1808"},"content":"        Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"lipwei1808"},"content":"        switch (taskInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"lipwei1808"},"content":"        case AddCommand.COMMAND_WORD_D:","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"lipwei1808"},"content":"            task \u003d parseDeadline(args, isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"lipwei1808"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"lipwei1808"},"content":"        case AddCommand.COMMAND_WORD_E:","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"lipwei1808"},"content":"            task \u003d parseEvent(args, isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"lipwei1808"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"lipwei1808"},"content":"        case AddCommand.COMMAND_WORD_T:","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"lipwei1808"},"content":"            task \u003d new Todo(args, isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"lipwei1808"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"lipwei1808"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"lipwei1808"},"content":"        return new AddCommand(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"lipwei1808"},"content":"     * Parses user text into the action type and the arguments.","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"lipwei1808"},"content":"     * @param text the text to be parsed","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"lipwei1808"},"content":"     * @return String[] where the first index is the action type and second index is the arguments","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"lipwei1808"},"content":"    protected static String[] parseText(String text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"lipwei1808"},"content":"        String[] words \u003d text.trim().split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"lipwei1808"},"content":"        String[] remainingWords \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"lipwei1808"},"content":"        String restOfText \u003d String.join(\" \", remainingWords);","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"lipwei1808"},"content":"        return new String[] {words[0], restOfText};","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"lipwei1808"},"content":"     * Parse string arguments into integers.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"lipwei1808"},"content":"     * @param args the string number to be parsed","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"lipwei1808"},"content":"     * @return the integer","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"lipwei1808"},"content":"     * @throws DukeException if an invalid string of number is provided","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"lipwei1808"},"content":"    protected static int parseArgs(String args) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"lipwei1808"},"content":"        assert !args.equals(\"\") : \"arguments shouldn\u0027t be empty string!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"lipwei1808"},"content":"            return Integer.parseInt(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"lipwei1808"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"lipwei1808"},"content":"     * Parses a string into a LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"lipwei1808"},"content":"     * @param text the string to be parsed","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"lipwei1808"},"content":"     * @return LocalDateTime object after parsed","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"lipwei1808"},"content":"    protected static LocalDateTime parseDateTime(String text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"lipwei1808"},"content":"        String[] datetime \u003d text.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime parsedDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"lipwei1808"},"content":"            if (datetime.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"lipwei1808"},"content":"                String dateTimeString \u003d datetime[0] + \"T\" + datetime[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"lipwei1808"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"lipwei1808"},"content":"                parsedDateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"lipwei1808"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"lipwei1808"},"content":"                return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"lipwei1808"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"lipwei1808"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"lipwei1808"},"content":"        return parsedDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"lipwei1808"},"content":"     * Parses arguments for the deadline action type.","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"lipwei1808"},"content":"     * @param text the arguments to be parsed","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value if the Task is marked","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"lipwei1808"},"content":"     * @return Deadline object created by the arguments","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"lipwei1808"},"content":"     * @throws InvalidDeadlineException if invalid arguments are provided","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"lipwei1808"},"content":"    private static Deadline parseDeadline(String text, boolean isMarked) throws InvalidDeadlineException {","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"lipwei1808"},"content":"        String[] deadline \u003d text.split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"lipwei1808"},"content":"        if (deadline.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime parsedDateTime \u003d parseDateTime(deadline[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"lipwei1808"},"content":"        if (parsedDateTime \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"lipwei1808"},"content":"        return new Deadline(deadline[0], parsedDateTime, isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"lipwei1808"},"content":"     * Parses arguments for the event action type.","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"lipwei1808"},"content":"     * @param text the arguments to be parsed","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value if the Task is marked","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"lipwei1808"},"content":"     * @return Event object created by the arguments","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"lipwei1808"},"content":"     * @throws InvalidEventException if invalid arguments are provided","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"lipwei1808"},"content":"    private static Event parseEvent(String text, boolean isMarked) throws InvalidEventException {","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"lipwei1808"},"content":"        String[] first \u003d text.split(\" /from \");","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"lipwei1808"},"content":"        if (first.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"lipwei1808"},"content":"        String[] second \u003d first[1].split(\" /to \");","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"lipwei1808"},"content":"        if (second.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime fromDate \u003d parseDateTime(second[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime toDate \u003d parseDateTime(second[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"lipwei1808"},"content":"        if (fromDate \u003d\u003d null || toDate \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"lipwei1808"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"lipwei1808"},"content":"        return new Event(first[0], fromDate, toDate, isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":222}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":" * Represents a Storage function for the specified filepath.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"    private final String filepath;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"     * @param filepath the filepath to the file to be tracked","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"     * Loads the data from the given filepath into a Tasks object.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"     * @return the Tasks object containing data from the data file","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"    public Tasks load() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        Tasks tasks \u003d new Tasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"        File myObj \u003d new File(this.filepath);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"            ui.showSuccessLoadingStorage(this.filepath);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"                String text \u003d myReader.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"                Command c \u003d Parser.parse(text, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"                if (c \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"                    continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"                c.execute(tasks, ui, new Storage(this.filepath), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"            this.handleFileNotFound(myObj);","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"            ui.showErrorLoadingFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"            ui.showError(ex.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"lipwei1808"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lipwei1808"},"content":"     * Save tasks into the specified filepath.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lipwei1808"},"content":"     * @param tasks the Tasks to be saved","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"lipwei1808"},"content":"    public void save(Tasks tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"lipwei1808"},"content":"        // Delete everything in","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"lipwei1808"},"content":"            PrintWriter writer \u003d new PrintWriter(this.filepath);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"lipwei1808"},"content":"            writer.print(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"lipwei1808"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"lipwei1808"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"lipwei1808"},"content":"            ui.showErrorWritingFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"lipwei1808"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"lipwei1808"},"content":"        // Rewrite everything","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"lipwei1808"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"lipwei1808"},"content":"            this.saveTask(tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"lipwei1808"},"content":"     * Save a task into the specified filepath.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"lipwei1808"},"content":"     * @param task the Task to be saved","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"lipwei1808"},"content":"    private void saveTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"lipwei1808"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filepath, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"lipwei1808"},"content":"            myWriter.write(String.format(\"%s%s\\n\", task.getOriginalMessage(), task.getMarked() ? \"1\" : \"0\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"lipwei1808"},"content":"            myWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"lipwei1808"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"lipwei1808"},"content":"            System.out.println(\"    Error saving to file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lipwei1808"},"content":"            System.exit(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"lipwei1808"},"content":"     * Create the File when a FileNotFound exception is thrown.","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"lipwei1808"},"content":"     * @param myObj the file object to create","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"lipwei1808"},"content":"    private void handleFileNotFound(File myObj) {","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"lipwei1808"},"content":"        ui.showErrorFileNotFound();","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"lipwei1808"},"content":"            String[] filepathSplit \u003d this.filepath.split(\"/\");","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"lipwei1808"},"content":"            String fileLocation \u003d String.join(\"/\", Arrays.copyOfRange(filepathSplit, 0, filepathSplit.length - 1));","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"lipwei1808"},"content":"            File dir \u003d new File(fileLocation);","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"lipwei1808"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"lipwei1808"},"content":"                dir.mkdirs();","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"lipwei1808"},"content":"            myObj.createNewFile();","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"lipwei1808"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"lipwei1808"},"content":"            ui.showErrorLoadingFile();","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"lipwei1808"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"lipwei1808"},"content":"            System.exit(1);","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":124}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":" * A task object that tracks Deadlines.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"     * @param description of the deadline object","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"     * @param by the LocalDateTime object tracking when the deadline should be completed by","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value if the Deadline task is marked","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    public Deadline(String description, LocalDateTime by, boolean isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"        super(description, \"deadline\", isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"    public String getOriginalMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"        return String.format(\"%s %s /by %s\", this.type, this.getDescription(), this.stringifyDate(this.by));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"        return super.toString() + \" (by: \" + this.formatDate(this.by) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"            Deadline d \u003d (Deadline) o;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"            return this.by.equals(d.by);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":46}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":" * A task object that tracks Events.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"     * @param description of the event object","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"     * @param from the LocalDateTime object tracking when the event starts","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"     * @param to the LocalDateTime object tracking when the event ends","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value if the Event task is marked","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"        super(description, \"event\", isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    public String getOriginalMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"        return String.format(","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"                \"%s %s /from %s /to %s\",","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"                this.type,","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"                this.getDescription(),","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"                this.stringifyDate(this.from),","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"                this.stringifyDate(this.to)","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        return super.toString() + \" (from: \" + this.formatDate(this.from) + \" to: \" + this.formatDate(this.to) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"            Event d \u003d (Event) o;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"            if (!this.from.equals(d.from)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"                return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"            return this.to.equals(d.to);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":60}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":" * Represents a task entered by a user.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    public final String type;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"    private final String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor to be called by child classes.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"     * @param description the description describing the task","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"     * @param type the type of task","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value tracking whether the task has been marked","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    public Task(String description, String type, boolean isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"     * An abstract method to reconstruct the original message passed by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"     * @return text string of the original user entered message","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"    public abstract String getOriginalMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"     * Getter method for the description field.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"     * @return the description of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"     * Getter method for the isMarked field.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"     * @return the boolean value if the task is marked","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"    public boolean getMarked() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"        return this.isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"     * A setter method for the isMarked field.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked the boolean value to be set","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"    public void setMarked(boolean isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"lipwei1808"},"content":"     * Helper method to stringify LocalDateTime objects into original text string","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"lipwei1808"},"content":"     * pass by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lipwei1808"},"content":"     * @param dateTime the LocalDateTime object to be stringified","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lipwei1808"},"content":"     * @return text string of the LocalDateTime object","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"lipwei1808"},"content":"    public String stringifyDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"lipwei1808"},"content":"        String formatted \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"lipwei1808"},"content":"        return String.join(\" \", formatted.split(\"T\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lipwei1808"},"content":"     * Helper method to stringify LocalDateTime objects into user-friendly date format.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lipwei1808"},"content":"     * @param dateTime the LocalDateTime object to be stringified","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"lipwei1808"},"content":"     * @return text string of the formatted date","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"lipwei1808"},"content":"    public String formatDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"lipwei1808"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"HHmm, MMM d yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"lipwei1808"},"content":"     * String representation of the Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"lipwei1808"},"content":"     * @return The string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"lipwei1808"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"lipwei1808"},"content":"        String typeLetter \u003d this.type.substring(0, 1).toUpperCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"lipwei1808"},"content":"        return String.format(\"[%s][%s] %s\", typeLetter, this.getStatusIcon(), this.description);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"lipwei1808"},"content":"     * Checks if an object is equal to the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"lipwei1808"},"content":"     * @param o the object to be checked","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lipwei1808"},"content":"     * @return boolean value if the objects are equal","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"lipwei1808"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"lipwei1808"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"lipwei1808"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"lipwei1808"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"lipwei1808"},"content":"            Task t \u003d (Task) o;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"lipwei1808"},"content":"            return this.isMarked \u003d\u003d t.isMarked \u0026\u0026 this.description.equals(t.description);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"lipwei1808"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"lipwei1808"},"content":"     * Returns a string form of whether the Task is marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"lipwei1808"},"content":"     * @return string representation of the isMarked value","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"lipwei1808"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"lipwei1808"},"content":"        return (isMarked ? \"X\" : \" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":122}},{"path":"src/main/java/duke/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":" * Represents a collection of Task instances.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"public class Tasks {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"     * Total number of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"     * @return an integer value of the number of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"     * Returns a Task object given an index.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"     * @param idx the index to select the Task from","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"     * @return the Task object returned","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    public Task get(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"        return this.tasks.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"     * Removes a Task object given the index.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"     * @param idx the index of the Task to be removed","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"     * @return the Task object removed","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"    public Task remove(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"        return this.tasks.remove(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"     * Adds a new Task","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"     * @param task the Task to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"     * Returns a Task given an index while checking if the index is valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"     * @param id the index to retrieve the Task","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"     * @return the Task returned by the index","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"    public Task getTaskByIndex(int id) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"        if (id \u003e this.tasks.size() || id \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"            return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lipwei1808"},"content":"        return this.tasks.get(id - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lipwei1808"},"content":"     * Gets all the Tasks currently held.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lipwei1808"},"content":"     * @return a List of all the Tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"lipwei1808"},"content":"    public List\u003cTask\u003e getAll() {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"lipwei1808"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":72}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":" * A task object that tracks Todos.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"     * @param description of the todo object","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"     * @param isMarked boolean value if the Event task is marked","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"    public Todo(String description, boolean isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"        super(description, \"todo\", isMarked);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    public String getOriginalMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"        return \"todo \" + this.getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":22}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"     * Public constructor for DialogBox","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"     * @param text the text in the dialog","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"     * @param img image of the dialog","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"        displayPicture.setClip(new Circle(20, 20, 20));","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"    private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lipwei1808"},"content":"     * Returns a User Dialog box.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lipwei1808"},"content":"     * @param text the text to display","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lipwei1808"},"content":"     * @param img the image of the user","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lipwei1808"},"content":"     * @return DialogBox object representing the user text","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lipwei1808"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lipwei1808"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lipwei1808"},"content":"     * Returns a Duke Dialog box.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lipwei1808"},"content":"     * @param text the text returned by the application","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lipwei1808"},"content":"     * @param img image of the application bot","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lipwei1808"},"content":"     * @return DialogBox object representing the reply by the application","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lipwei1808"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lipwei1808"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lipwei1808"},"content":"        db.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lipwei1808"},"content":"        return db;","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lipwei1808":83}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"        // Exit the program","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"        if (response.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lipwei1808":59}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":" * UI of the application","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"     * Returns success message for setting marked value of a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"     * @param isMark boolean value whether to mark the task","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"     * @param task the task to be marked","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    public String showSuccessMark(boolean isMark, Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"        if (isMark) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"            res +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"            res +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"        res +\u003d String.format(\"%s\\n\", task);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"        return res;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"     * Returns message after adding a task to Tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"     * @param task the task to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"     * @param totalTasks the updated total number of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"    public String showAddTask(Task task, int totalTasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"                + String.format(\"  %s\\n\", task)","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"                + String.format(\"Now you have %s tasks in the list.\\n\", totalTasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"     * Returns message after adding a duplicated task to Tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"    public String showDuplicateTask() {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"        return \"Oops you have already added this task. Cannot add the same task twice!\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"     * Returns message with no tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"    public String showNoTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"        return \"No tasks found!\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"     * Returns all tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"     * @param tasks the tasks object to be printed","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"     * @param isFiltered boolean flag for whether the tasks are filtered","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"    public String showTasks(List\u003cTask\u003e tasks, boolean isFiltered) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lipwei1808"},"content":"        String header \u003d isFiltered","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"lipwei1808"},"content":"                ? \"Here are the matching tasks in your list:\"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"lipwei1808"},"content":"                : \"Here are the tasks in your list:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"lipwei1808"},"content":"        String res \u003d header + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lipwei1808"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"lipwei1808"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"lipwei1808"},"content":"            res +\u003d String.format(\"%s.%s\\n\", i + 1, task);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"lipwei1808"},"content":"        return res;","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"lipwei1808"},"content":"     * Returns success message after deleting a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lipwei1808"},"content":"     * @param task the task to be deleted","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lipwei1808"},"content":"     * @param totalTasks total number of tasks left after deletion","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"lipwei1808"},"content":"    public String showSuccessDelete(Task task, int totalTasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lipwei1808"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lipwei1808"},"content":"                + String.format(\"%s\\n\", task)","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lipwei1808"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"lipwei1808"},"content":"     * Returns error messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"lipwei1808"},"content":"     * @param message the error message to be outputted","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"lipwei1808"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lipwei1808"},"content":"        return \"[ERROR]\\n\\n\" + message + \"\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"lipwei1808"},"content":"     * Returns a prompt to enter a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"lipwei1808"},"content":"    public String showUnknownCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lipwei1808"},"content":"        return \"Please enter something :-)\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"lipwei1808"},"content":"     * Returns a success message for loading storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lipwei1808"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"lipwei1808"},"content":"     * @param filepath the filepath where the storage loaded data from","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"lipwei1808"},"content":"    public String showSuccessLoadingStorage(String filepath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"lipwei1808"},"content":"        return \"Data has been restored from \" + filepath + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"lipwei1808"},"content":"     * Returns an error message when data file is not found.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"lipwei1808"},"content":"    public String showErrorFileNotFound() {","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"lipwei1808"},"content":"        return \"Data file not found, creating a new one\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"lipwei1808"},"content":"     * Returns an error message when loading of data failed.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"lipwei1808"},"content":"    public String showErrorLoadingFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"lipwei1808"},"content":"        return \"Error creating new file, quitting program now...\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"lipwei1808"},"content":"     * Returns an error message when writing to data file failed.","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"lipwei1808"},"content":"    public String showErrorWritingFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"lipwei1808"},"content":"        return \"Error saving to file, quitting program now...\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"lipwei1808"},"content":"     * Returns a greeting message.","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"lipwei1808"},"content":"    public String showGreetings() {","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"lipwei1808"},"content":"        return \"Hello I\u0027m lynn the koala \u003c3\\n\" + \"    What can I do for you?\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"lipwei1808"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"lipwei1808"},"content":"     * Returns the exit message.","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"lipwei1808"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"lipwei1808"},"content":"    public String showExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"lipwei1808"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lipwei1808":143}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-spacing: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #eaeaea; -fx-background-radius: 15; -fx-border-radius: 32;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"                \u003cInsets bottom\u003d\"8.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lipwei1808":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #222222;\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #222222;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"40.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"-0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #222222;\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"      \u003cHBox maxHeight\u003d\"40.0\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" spacing\u003d\"10.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"              \u003cTextField fx:id\u003d\"userInput\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"150.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" promptText\u003d\"Enter something here\" style\u003d\"-fx-background-color: #555555; -fx-text-fill: #51ff00;\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"              \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" minWidth\u003d\"60.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #555555;\" text\u003d\"Send\" textFill\u003d\"#51ff00\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lipwei1808":24}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lipwei1808":4}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    public void parse_emptyInput_returnsNull() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"        String[] testCases \u003d { \"\", \"  \", \"\\n  \\n\" };","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"        for (String input: testCases) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"                Command c \u003d Parser.parse(input, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"                System.out.println(\"HI \" + c);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"                assertNull(c);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"                // ignore","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"                fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"    public void parse_addCommandWithArgs_noExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"        String[] testCases \u003d {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"            \"todo run\",","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"            \"deadline project /by 18/08/2001 18:00\",","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"            \"event project meeting /from 18/08/2001 18:00 /to 31/08/2001 22:00\"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"        };","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"        for (String str: testCases) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"            assertDoesNotThrow(() -\u003e Parser.parse(str, false));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"    public void parse_listCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"        assertDoesNotThrow(() -\u003e Parser.parse(\"list\", false));","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lipwei1808"},"content":"    public void parse_listCommandWithArgs_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lipwei1808"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.parse(\"list 3\", false));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"lipwei1808"},"content":"    public void parseText_validString_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lipwei1808"},"content":"        String[] testCases \u003d {\"todo deadline\", \"event project meeting\", \"  hello, i am a friend  \"};","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lipwei1808"},"content":"        String[][] answers \u003d {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"lipwei1808"},"content":"            new String[] {\"todo\", \"deadline\"},","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"lipwei1808"},"content":"            new String[] {\"event\", \"project meeting\"},","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"lipwei1808"},"content":"            new String[] {\"hello,\", \"i am a friend\"},","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"lipwei1808"},"content":"        };","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lipwei1808"},"content":"        for (int i \u003d 0; i \u003c testCases.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"lipwei1808"},"content":"            String[] result \u003d Parser.parseText(testCases[i]);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lipwei1808"},"content":"            assertEquals(result[0], answers[i][0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"lipwei1808"},"content":"            assertEquals(result[1], answers[i][1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lipwei1808"},"content":"    public void parseArgs_integerString_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"lipwei1808"},"content":"        assertDoesNotThrow(() -\u003e Parser.parseArgs(\"3\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"lipwei1808"},"content":"    public void parseArgs_decimalString_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"lipwei1808"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.parseArgs(\"3.01\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"lipwei1808"},"content":"    public void parseArgs_emptyString_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"lipwei1808"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.parseArgs(\" \"));","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"lipwei1808"},"content":"    public void parseDateTime_dateWithCorrectFormat_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"lipwei1808"},"content":"        assertDoesNotThrow(() -\u003e Parser.parseDateTime(\"deadline project /by 18/08/2001 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"lipwei1808"},"content":"    public void parseDateTime_dateWithWrongDay_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"lipwei1808"},"content":"        assertNull(Parser.parseDateTime(\"32/12/2001 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"lipwei1808"},"content":"    public void parseDateTime_dateWithWrongMonth_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"lipwei1808"},"content":"        assertNull(Parser.parseDateTime(\"18/13/2001 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"lipwei1808"},"content":"    public void parseDateTime_dateWithWrongYear_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"lipwei1808"},"content":"        assertNull(Parser.parseDateTime(\"18/12/0 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"lipwei1808"},"content":"    public void parseDateTime_wrongTime_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"lipwei1808"},"content":"        assertNull(Parser.parseDateTime(\"18/12/2001 25:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"lipwei1808"},"content":"    public void parseDateTime_wrongTimeFormat_throwException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"lipwei1808"},"content":"        assertNull(Parser.parseDateTime(\"18/12/2001 1800\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lipwei1808":113}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"    public void load_validData_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"        Tasks tasks \u003d new Storage(\"./data/storageTest.txt\").load();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"        Tasks expected \u003d this.getTestTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"        if (tasks.size() !\u003d expected.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lipwei1808"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lipwei1808"},"content":"            if (!tasks.get(i).equals(expected.get(i))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lipwei1808"},"content":"                fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lipwei1808"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lipwei1808"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lipwei1808"},"content":"    private Tasks getTestTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lipwei1808"},"content":"        Tasks tasks \u003d new Tasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime dt1 \u003d LocalDateTime.parse(\"18/08/2001T19:00\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime dt2 \u003d LocalDateTime.parse(\"18/09/2001T19:00\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime dt3 \u003d LocalDateTime.parse(\"18/10/2001T19:00\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lipwei1808"},"content":"        LocalDateTime dt4 \u003d LocalDateTime.parse(\"18/11/2001T19:00\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lipwei1808"},"content":"        tasks.add(new Todo(\"take a run\", false));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lipwei1808"},"content":"        tasks.add(new Deadline(\"project report\", dt1, true));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lipwei1808"},"content":"        tasks.add(new Event(\"project meeting\", dt2, dt3, true));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lipwei1808"},"content":"        tasks.add(new Deadline(\"exam paper\", dt4, false));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lipwei1808"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lipwei1808"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lipwei1808"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lipwei1808":47}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"event project meeting /from 12/01/2001 18:00 /to 31/12/2001 22:000","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"deadline report /by 31/12/2023 23:000","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"todo meet friend1","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"deadline report10 /by 12/12/2023 01:001","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"deadline project report /by 31/12/2001 18:000","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"event project meetup /from 21/08/2012 18:00 /to 31/12/2033 22:001","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lipwei1808":6}},{"path":"text-ui-test/data/original.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"event project meeting /from 12/01/2001 18:00 /to 31/12/2001 22:001","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"deadline report /by 31/12/2023 23:000","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"deadline report2 /by 01/01/2100 00:000","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"todo meet friend1","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"deadline report10 /by 12/12/2023 01:000","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lipwei1808":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lipwei1808"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lipwei1808"},"content":"delete 3","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lipwei1808"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lipwei1808"},"content":"mark 4","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lipwei1808"},"content":"unmark 1","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lipwei1808"},"content":"unmark 1","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lipwei1808"},"content":"todo hi","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lipwei1808"},"content":"todo","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lipwei1808"},"content":"deadline project report","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lipwei1808"},"content":"deadline project report /by 31/12/2001 18:00","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lipwei1808"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lipwei1808"},"content":"event project meeting /from Mon /to 2pm","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lipwei1808"},"content":"event project meeting /from 21/07/2012 /to 31/12/2031","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lipwei1808"},"content":"event project meeting /from 21/08/2012 18:00 /to 31/12/203 22:00","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lipwei1808"},"content":"event project meetup /from 21/08/2012 18:00 /to 31/12/2033 22:00","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"delete","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"delete 5","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lipwei1808"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lipwei1808"},"content":"mark 6","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lipwei1808"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lipwei1808"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lipwei1808":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lipwei1808"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lipwei1808":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"lipwei1808"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lipwei1808"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"lipwei1808"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lipwei1808":3,"-":36}}]
