[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"// Configure the Java compiler options","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"tasks.withType(JavaCompile).configureEach {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"    options.compilerArgs \u003c\u003c \"-Xlint:unchecked\"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"    //mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"    mainClass.set(\"catbot.CatBotEntrypoint\")","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"    archiveBaseName \u003d \"catbot\"","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"javafx {","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"H1410101":28,"-":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"# CatBot User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"Hi! CatBot is a friendly and informal task assistant. ","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"### It\u0027s really uncertain...","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"It\u0027s trying its best.","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"### You can type to do things","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"Like the 1337coder you are. :)","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"## Usage","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"### `list` - view tracked tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"Command: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"Lists all tasks currently tracked, or infoms you if you have no currently tracked tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"### `mark` - mark a task as done","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"Command: `mark \u003cindex\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"where `\u003cindex\u003e` is the corresponding number of the task when displayed with `list`.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"Example of usage: ","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"`mark 5`","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"Marks the fifth task in your list as done, or informs you that the index is out of range.","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"### `unmark` - mark a task as not done","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"Command: `unmark \u003cindex\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"where `\u003cindex\u003e` is the corresponding number of the task when displayed with `list`.","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"`unmark 5`","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"Marks the fifth task in your list as not done, or informs you that the index is out of range.","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"### `delete` - stop tracking a task","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"Command: `delete \u003cindex\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"where `\u003cindex\u003e` is the corresponding number of the task when displayed with `list`.","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"Example of usage: ","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"`delete 5`","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"Removes the task that was the fifth task before deletion, or informs you that the index is out of range.","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"### `todo` - create a task with a simple description","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"Command: `todo \u003cdescription\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"where `\u003cdescription\u003e` is any text without `/` (character reserved for commands).","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"Example of usage: ","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"`todo tP brainstorming`","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"Starts tracking a task called \"tP brainstorming\".","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"### `deadline` - create a task with a deadline","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"Command: `deadline \u003cdescription\u003e /by \u003cdate\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"where `\u003cdescription\u003e` is any text without `/` (character reserved for commands),","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"and `\u003cdate\u003e` is a date in `YYYY-MM-DD` format.","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"Example of usage: ","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"`deadline iP is due /by 2023-09-22`","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"Starts tracking a task called \"iP is due\" that has a due date that is 22nd September, 2023.","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"### `event` - create a task with start and end dates","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"Command: `event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"where `\u003cdescription\u003e` is any text without `/` (character reserved for commands),","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"and `\u003cdate\u003e` is a date in `YYYY-MM-DD` format.","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"Example of usage: ","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"`event iP-related panic /from 2023-09-15 /to 2023-09-22`","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"Starts tracking an event called \"iP-related panic\" that started on 15th September 2023, and is still ongoing at the time of writing.","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"### `edit` - change the details of a task","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"Command: `edit \u003cindex\u003e /\u003cparameter\u003e \u003cvalue\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"where `\u003cindex\u003e` is the corresponding number of the task when displayed with `list`,","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"`\u003cparameter\u003e` is a word describing the specific information to change (see elaboration and examples below),","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"and `value` is any text without `/` (character reserved for commands), or a date in `YYYY-MM-DD` format (depending on the `\u003cinfo\u003e`).","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"Other than the description, which uses the `desc` parameter, all other parameters follow those used during task creation.","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"H1410101"},"content":"Edit does not change the type of task (does not change a `todo` to a `deadline`).","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"H1410101"},"content":"`edit 2 /by 2023-09-25`","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"H1410101"},"content":"If the second task in the list is a `deadline` with a due date of 22nd September, extends its due date back by three days to 25th September.","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"H1410101"},"content":"### `find` - find tasks with matching descriptions","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"H1410101"},"content":"Command: `find \u003cdescription\u003e`","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"H1410101"},"content":"where `\u003cdescription\u003e` is any text without `/` (character reserved for commands).","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"H1410101"},"content":"Matches partial descriptions as well.","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"H1410101"},"content":"Example of usage: ","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"H1410101"},"content":"`find iP`","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"H1410101"},"content":"Provides an unnumbered list of tasks whose descriptions contain the text searched, or informs you that there are no matches.","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"H1410101"},"content":"### `bye` - close the application","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"H1410101"},"content":"Command: `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"H1410101"},"content":"Expected outcome:","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"H1410101"},"content":"Catbot says bye, and the application closes in a few seconds.","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"H1410101":106,"-":24}},{"path":"src/main/java/catbot/CatBotEntrypoint.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.bot.CatBot;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import catbot.io.CatBotJavaFxIo;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import catbot.io.UserIo;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import catbot.task.TaskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":" * Entrypoint for the CatBot Assistant.","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":" * Contains a public static void main to run.","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"public class CatBotEntrypoint {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"        CatBot catBot \u003d new CatBot(new TaskList(\"Tasks.txt\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"        UserIo userIo \u003d new CatBotJavaFxIo();","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"        userIo.initialize();","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"        catBot.initialize(userIo);","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"        userIo.takeoverExecutionLogic(catBot);","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"H1410101":22}},{"path":"src/main/java/catbot/bot/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.bot;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.io.UserIo;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":" * Object that contains the full supported feature set of an assistant.","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"public interface Bot {","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"     * Sets up the bot for use.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"     * Intended to include the creation of commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"     * @param userIo the IO object the bot will use to communicate with the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    void initialize(UserIo userIo);","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * Runs a command based on the given command and argument, if applicable.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * If a matching command does not exist, may run a default command.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     * Any such behaviour is defined by the bot.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     * @param commandArgumentStruct a struct containing information about the command to run, and its arguments.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"    void run(CommandArgumentStruct commandArgumentStruct);","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"H1410101":27}},{"path":"src/main/java/catbot/bot/CatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.bot;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"import catbot.internal.CommandMap;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"import catbot.internal.CommandPattern;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"import catbot.io.ErrorIndicatorIo;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"import catbot.io.UserIo;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"import catbot.task.Deadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"import catbot.task.Event;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"import catbot.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"import catbot.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"import catbot.task.Todo;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":" * Main runnable class for the CatBot assistant.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"public class CatBot implements Bot {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    //region Fields","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"    private UserIo io;","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    private CommandMap commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    //region Constructor","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"     * Constructs a CatBot using the provided TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"     * @param taskList taskList for CatBot to operate on.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"    public CatBot(TaskList taskList) {","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"    //region Bot","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"    public void initialize(UserIo userIo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"        initializeFields(userIo);","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"        addSupportedCommandsToCommandMap();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"    public void run(CommandArgumentStruct commandArgumentStruct) {","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"        if (commandArgumentStruct \u003d\u003d null) {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"            return;","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"        commands.run(commandArgumentStruct.getCommand(), commandArgumentStruct.getArgument());","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"    //region Internal Helpers","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"    private void initializeFields(UserIo userIo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"        this.io \u003d userIo;","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"        this.commands \u003d new CommandMap();","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"    private void addSupportedCommandsToCommandMap() {","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"        /*","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"        * TLDR: this method is a list of commands, and therefore follows list logic.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"        * The following method is really long, but does not compromise readability in my opinion.","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"        * It works like a list of entries, and the entries are independent except for bi-consumers,","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"        * which acts to reduce redundant copy-pasting.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"        * PATTERNS: command patterns are created using generators.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"        * BI-CONSUMERS: bi-consumers are created out of otherwise repetitive combinations of patterns and behaviours.","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"        *       eg: runIfValidIndexElseIndicateError uses an integerPattern and runs it through taskList\u0027s","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"        *           ifValidIndexElse. Such behaviour is necessary for all simple modifications (mark, unmark, delete).","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"        * COMMANDS: every command is independent. If a command is giving a problem, look for the string that identifies","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"        *           the command, and debug from there. All other commands are irrelevant to the debugging of that","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"        *           command, and there is no higher-level interpretation of flow necessary.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"        * */","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"        CommandPattern\u003cInteger\u003e integerPattern \u003d CatBotCommandPatterns.getIntegerPatternGenerator()","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"                .generateUsingDefault(io::indicateInvalidInteger);","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"        CommandPattern\u003cNamedParameterMap\u003e slashPattern \u003d CatBotCommandPatterns.getSlashPatternGenerator()","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"                .generateUsingDefault(CatBotCommandPatterns.NO_DEFAULT);","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"        CommandPattern\u003cString\u003e stringPattern \u003d CatBotCommandPatterns.getStringPatternGenerator()","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"                .generateUsingDefault(CatBotCommandPatterns.NO_DEFAULT);","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"        commands.setDefaultCommand(io::indicateInvalidCommand)","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"bye\", args -\u003e {","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"                    io.cleanup();","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"                    prepareToClose();","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"                })","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"list\", args -\u003e io.displayTaskList(taskList));","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"        // User doing simple modification to existing tasks (through IntegerPattern, and Index)","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"H1410101"},"content":"        // noinspection FunctionalExpressionCanBeFolded for better readability","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"H1410101"},"content":"        BiConsumer\u003cString, Consumer\u003cInteger\u003e\u003e runIfValidIndexElseIndicateError \u003d (args, lambda) -\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"H1410101"},"content":"                integerPattern.ifParsableElseDefault(args,","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"H1410101"},"content":"                        integer -\u003e taskList.ifValidIndexElse(integer,","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"H1410101"},"content":"                                validIndex -\u003e lambda.accept(validIndex),","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"H1410101"},"content":"                                invalidIndex -\u003e io.indicateInvalidIndex(invalidIndex, taskList.getIndexBounds())","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"H1410101"},"content":"                        ));","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"H1410101"},"content":"        //noinspection SpellCheckingInspection for \"unmark\"","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"H1410101"},"content":"        commands.addCommand(\"mark\",","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"H1410101"},"content":"                        string -\u003e runIfValidIndexElseIndicateError.accept(string,","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"H1410101"},"content":"                                validIndex -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"H1410101"},"content":"                                    taskList.markTask(validIndex);","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"H1410101"},"content":"                                    io.displayTaskModified(taskList, validIndex);","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"H1410101"},"content":"                                }","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"H1410101"},"content":"                        )","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"H1410101"},"content":"                )","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"unmark\",","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"H1410101"},"content":"                        string -\u003e runIfValidIndexElseIndicateError.accept(string,","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"H1410101"},"content":"                                validIndex -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"H1410101"},"content":"                                    taskList.unmarkTask(validIndex);","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"H1410101"},"content":"                                    io.displayTaskModified(taskList, validIndex);","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"H1410101"},"content":"                                }","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"H1410101"},"content":"                        )","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"H1410101"},"content":"                )","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"delete\",","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"H1410101"},"content":"                        string -\u003e runIfValidIndexElseIndicateError.accept(string,","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"H1410101"},"content":"                                validIndex -\u003e io.displayTaskDeleted(taskList.removeTask(validIndex))","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"H1410101"},"content":"                        )","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"H1410101"},"content":"            );","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"H1410101"},"content":"        // User creating new tasks (with SlashPattern)","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"H1410101"},"content":"        BiConsumer\u003cString, BiFunction\u003c","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"H1410101"},"content":"                NamedParameterMap, BiConsumer\u003cErrorIndicatorIo.InvalidArgumentState, NamedParameterMap\u003e,","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"H1410101"},"content":"                Optional\u003cTask\u003e\u003e\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"H1410101"},"content":"                createTaskIfValidElseWarn \u003d (args, bifunction) -\u003e slashPattern.ifParsableElseDefault(args,","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"H1410101"},"content":"                        namedParameterMap -\u003e bifunction.apply(","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"H1410101"},"content":"                                namedParameterMap,","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"H1410101"},"content":"                                io::indicateArgumentInvalid","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"H1410101"},"content":"                        ).ifPresent(task -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"H1410101"},"content":"                            taskList.addTask(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"H1410101"},"content":"                            io.displayTaskAdded(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"H1410101"},"content":"                        })","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"H1410101"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"H1410101"},"content":"        commands.addCommand(\"todo\",","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"H1410101"},"content":"                        args -\u003e createTaskIfValidElseWarn.accept(args, Todo::createIfValidElse)","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"H1410101"},"content":"                )","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"event\",","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"H1410101"},"content":"                        args -\u003e createTaskIfValidElseWarn.accept(args, Event::createIfValidElse)","lastModifiedDate":"2023-09-15"},{"lineNumber":154,"author":{"gitId":"H1410101"},"content":"                )","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"deadline\",","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"H1410101"},"content":"                        args -\u003e createTaskIfValidElseWarn.accept(args, Deadline::createIfValidElse)","lastModifiedDate":"2023-09-15"},{"lineNumber":157,"author":{"gitId":"H1410101"},"content":"            );","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"H1410101"},"content":"        // User filtering for tasks","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"H1410101"},"content":"        commands.addCommand(\"find\",","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"H1410101"},"content":"                args -\u003e stringPattern.ifParsableElseDefault(args,","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"H1410101"},"content":"                        str -\u003e io.displayTaskListWithoutNumber(taskList.findInDescriptions(str)))","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"H1410101"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"H1410101"},"content":"        // User editing tasks (with more control)","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"H1410101"},"content":"        BiConsumer\u003cString, BiConsumer\u003cInteger, NamedParameterMap\u003e\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"H1410101"},"content":"                editTaskIfValidIndexElseIndicate \u003d (string, biconsumer) -\u003e slashPattern.ifParsableElseDefault(string,","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"H1410101"},"content":"                        map -\u003e runIfValidIndexElseIndicateError.accept(map.remove(\"\"),","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"H1410101"},"content":"                                integer -\u003e biconsumer.accept(integer, map)","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"H1410101"},"content":"                            )","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"H1410101"},"content":"                    );","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"H1410101"},"content":"        commands.addCommand(\"edit\",","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"H1410101"},"content":"                str -\u003e editTaskIfValidIndexElseIndicate.accept(str, (index, map) -\u003e {","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"H1410101"},"content":"                    taskList.editTask(index, map);","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"H1410101"},"content":"                    io.displayTaskModified(taskList, index);","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"H1410101"},"content":"                })","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"H1410101"},"content":"        );","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"H1410101"},"content":"    private void prepareToClose() {","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"H1410101"},"content":"        // Helped by ChatGPT","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"H1410101"},"content":"        ScheduledExecutorService executorService \u003d Executors.newScheduledThreadPool(1);","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"H1410101"},"content":"        executorService.schedule(() -\u003e System.exit(0), 2, TimeUnit.SECONDS);","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"H1410101"},"content":"        executorService.shutdown();","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":193}},{"path":"src/main/java/catbot/bot/CatBotCommandPatterns.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.bot;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import catbot.internal.CommandPattern;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import catbot.internal.CommandPatternGenerator;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import catbot.internal.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" * Class containing {@link CommandPattern CommandPatterns} and {@link CommandPatternGenerator CommandPatternGenerators}","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":" * used by the CatBot Assistant.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"public abstract class CatBotCommandPatterns {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    //region Fields","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * A consumer that throws an error when called.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * Intended to assert that a CommandPattern does not result in fallthrough behaviour;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     * ie all possible inputs are handled.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"    public static final Consumer\u003cString\u003e NO_DEFAULT \u003d s -\u003e {","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"        assert false; //SHOULD NOT BE CALLED","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"    };","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    private static final IntegerPatternGenerator integerPatternGenerator \u003d new IntegerPatternGenerator();","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    private static final SlashArgumentPatternGenerator slashPatternGenerator \u003d new SlashArgumentPatternGenerator();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    private static final StringPatternGenerator stringPatternGenerator \u003d new StringPatternGenerator();","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"    //region Integer Pattern","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"     * Gets a singleton instance of {@link IntegerPatternGenerator}.","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     * @return the generator.","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"    public static CommandPatternGenerator\u003cInteger\u003e getIntegerPatternGenerator() {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"        return integerPatternGenerator;","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"    private static class IntegerPatternGenerator implements CommandPatternGenerator\u003cInteger\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"        @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"        public CommandPattern\u003cInteger\u003e generateUsingDefault(Consumer\u003cString\u003e invalidInput) {","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"            return (args, consumer) -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"                try {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"                    consumer.accept(Integer.parseInt(args));","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"                    invalidInput.accept(args);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"            };","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"    //region Slash Arguments Pattern","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"     * Gets a singleton instance of {@link SlashArgumentPatternGenerator}.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"     * @return the generator.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"    public static CommandPatternGenerator\u003cNamedParameterMap\u003e getSlashPatternGenerator() {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"        return slashPatternGenerator;","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"    private static class SlashArgumentPatternGenerator implements CommandPatternGenerator\u003cNamedParameterMap\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"        @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"        public CommandPattern\u003cNamedParameterMap\u003e generateUsingDefault(Consumer\u003cString\u003e ignored) {","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"            return new CommandPattern\u003c\u003e() {","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"                private final Parser slashParser \u003d Parser.with(\"/\", true);","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"                @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"                public void ifParsableElseDefault(String args, Consumer\u003cNamedParameterMap\u003e consumer) {","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"                    consumer.accept(slashParser.parse(args));","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"            };","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"    //region String Pattern","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"     * Gets a singleton instance of {@link StringPatternGenerator}.","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"     * @return the generator.","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"    public static CommandPatternGenerator\u003cString\u003e getStringPatternGenerator() {","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"        return stringPatternGenerator;","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"    private static class StringPatternGenerator implements CommandPatternGenerator\u003cString\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"        @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"        public CommandPattern\u003cString\u003e generateUsingDefault(Consumer\u003cString\u003e ignored) {","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"            return (args, consumer) -\u003e consumer.accept(args);","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":103}},{"path":"src/main/java/catbot/bot/CommandArgumentStruct.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.bot;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":" * Simple container for a command and argument pair, both stored as Strings.","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"public class CommandArgumentStruct {","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"    private final String command;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"    private final String argument;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"     * Constructor for a CommandArgumentStruct.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     * @param command string that represents the command to run.","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"     * @param argument string that represents the argument for the command.","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    public CommandArgumentStruct(String command, String argument) {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     * Retrieves the argument to be given while running the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     * @return the argument.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    public String getArgument() {","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"        return argument;","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     * Retrieves the command to run, as a String.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"     * @return the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"        return command;","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"H1410101":38}},{"path":"src/main/java/catbot/internal/Bounds.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":" * Represents a range of integers by keeping track of their lower and upper bounds.","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"public class Bounds {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"    private final int lowerBound;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"    private final int upperBound;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"     * Constructs a bound using the provided lower and upper bounds, inclusive.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"     * If lowerBound is greater than upper bound, the bound does not contain any integer.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"     * @param lowerBound lower bound of the integer range.","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     * @param upperBound upper bound of the inteer range.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"    public Bounds(int lowerBound, int upperBound) {","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"        this.lowerBound \u003d lowerBound;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"        this.upperBound \u003d upperBound;","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     * Checks if the provided integer is within the bounds.","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"     * @param i integer to check.","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"     * @return true if between lower and upper bounds, inclusive.","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    public boolean contains(int i) {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"        return this.lowerBound \u003c\u003d i \u0026\u0026 i \u003c\u003d this.upperBound;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"     * Retrieves the inclusive lower bound of the Bound.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"     * @return lower bound, inclusive.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    public int getLower() {","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"        return lowerBound;","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"     * Retrieves the inclusive upper bound of the Bound.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"     * @return upper bound, inclusive.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    public int getUpper() {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"        return upperBound;","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"H1410101":49}},{"path":"src/main/java/catbot/internal/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":" * A functional interface for delayed and dynamic execution of commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"public interface Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"     * Runs command.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"     * @param args string representing arguments to pass to the command.","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"    void run(String args);","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"H1410101":13}},{"path":"src/main/java/catbot/internal/CommandMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":" * Object to store commands as key-value pairs, intended for use specifically with text-triggered functionality.","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" * Key is intended to be a String used to invoke its corresponding functionality.","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":" * Value is a Command, which is a functional interface.","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"public class CommandMap {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"    private final HashMap\u003cString, Command\u003e commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"    private Command defaultCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"     * Adds an invocation-command pair to the map. Supports pipelining.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * @param invocation the String that calls the command.","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * @param lambda the Command that triggers through the corresponding String.","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     * @return this, for pipelining","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"    public CommandMap addCommand(String invocation, Command lambda) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"        commandMap.put(invocation, lambda);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"        return this;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"     * Initializes or replaces the default command that runs when an invocation does not match any command.","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     * @param defaultCommand Command to run.","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"     * @return this, for pipelining.","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"    public CommandMap setDefaultCommand(Command defaultCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"        this.defaultCommand \u003d defaultCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"        return this;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"     * Runs the command corresponding to the invocation, passing it a String argument.","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"     * @param invocation String to use as the key value to retrieve the relevant Command.","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"     * @param argument String to pass as an argument to the Command.","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"    public void run(String invocation, String argument) {","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"        if (commandMap.containsKey(invocation)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"            commandMap.get(invocation).run(argument);","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"        } else if (defaultCommand !\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"            defaultCommand.run(invocation);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":52}},{"path":"src/main/java/catbot/internal/CommandPattern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":" * Object that parses a String using a predefined pattern, and has a default behaviour if the pattern does not apply.","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":" * @param \u003cT\u003e type of output generated by the String if the pattern applies, to be fed to a Consumer.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"public interface CommandPattern\u003cT\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     * Runs the given Consumer if the pattern applies to the given String, feeding the output generated to the Consumer.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"     * Otherwise, runs the default behaviour.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"     * @param args String to apply the pattern to.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"     * @param consumer Consumer that accepts the output generated by successful pattern application.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    void ifParsableElseDefault(String args, Consumer\u003cT\u003e consumer);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":21}},{"path":"src/main/java/catbot/internal/CommandPatternGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":" * Object that is used to generate a CommandPattern.","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" * Meant to allow a lambda to be passed to the pattern on creation, while allowing it to be a functional interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":" * @param \u003cT\u003e return type of the generated CommandPattern.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":" * @see CommandPattern type of object generated.","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"public interface CommandPatternGenerator\u003cT\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     * Returns a CommandPattern created with the provided Consumer as a fallthrough option.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"     * The default consumer will be run if the pattern cannot be applied to the provided string.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"     * @param invalidInput the default Consumer that accepts the provided command, if the pattern cannot be applied.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * @return CommandPattern generated.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * @see CommandPattern","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    CommandPattern\u003cT\u003e generateUsingDefault(Consumer\u003cString\u003e invalidInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":23}},{"path":"src/main/java/catbot/internal/NamedParameterMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":" * Maps Strings to Strings with limited functionality,","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":" * suitable to be used as small containers for parameter-argument pairs.","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"public class NamedParameterMap {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"    private final HashMap\u003cString, String\u003e parameters;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"     * Constructor for a NamedParameterMap.","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    public NamedParameterMap() {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"        parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     * Checks if the map has a value mapped to the given key.","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"     * @param key the key for which to check if a corresponding value exists.","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"     * @return true if a value exists for the key, false otherwise.","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    public boolean containsKey(String key) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"        return parameters.containsKey(key);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"     * Changes the key of a value to a new key, if the corresponding value exists.","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"     * @param oldKey key to identify the value to change the key of.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     * @param newKey new key to associate the value to.","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"    public void moveToNewKey(String oldKey, String newKey) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"        if (!parameters.containsKey(newKey) \u0026\u0026 parameters.containsKey(oldKey)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"            parameters.put(newKey, parameters.get(oldKey));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"            parameters.remove(oldKey);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"     * Removes a key-value pair from the map.","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"     * @param key key of the key-value pair to remove.","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"     * @return value of the removed key-value pair.","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"    public String remove(String key) {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"        if (!containsKey(key)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"            return null;","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"        return parameters.remove(key);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"     * Retrieves a Set of all keys.","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"     * @return set of all keys.","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"    public Set\u003cString\u003e keySet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"        return parameters.keySet();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"     * Retrieves the value corresponding to the given key.","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"     * @param key key of the key-value pair to find.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"     * @return value of the key-value pair found, null otherwise.","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"    public String get(String key) {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"        return parameters.get(key);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"     * Adds a parameter and its argument as a key-value pair into the NamedParameterMap.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"     * @param parameterName  key with which the specified value is to be associated","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"     * @param parameterValue value to be associated with the specified key","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"     * @return this, for pipelining","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"    public NamedParameterMap addNamedParameter(String parameterName, String parameterValue) {","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"        parameters.put(parameterName, parameterValue);","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"        return this;","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"        // full credit to IntelliJ, which is smarter than I am","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"            return true;","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"            return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"        NamedParameterMap that \u003d (NamedParameterMap) o;","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"        return Objects.equals(parameters, that.parameters);","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"H1410101"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"H1410101"},"content":"        // full credit to IntelliJ, which is smarter than I am","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"H1410101"},"content":"        return Objects.hash(parameters);","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":108}},{"path":"src/main/java/catbot/internal/ObjectStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":" * Object that stores and retrieves a specific type of object to disk.","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" *","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":" * @param \u003cT\u003e type of object to read and write.","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"public interface ObjectStorage\u003cT\u003e {","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     * Writes the given object to disk.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     * @param object object to write.","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"    void write(T object);","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * Reads and returns a given object if possible, otherwise calls the default supplier.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     * @return stored object if successful, provided object otherwise.","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     * @see java.util.Map#getOrDefault for inspiration.","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"    T readOrDefault();","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"     * Provides a default supplier to supply a default value if an issue occurs while reading.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"     * @param supplier to provide default value.","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"    void setDefault(Supplier\u003cT\u003e supplier);","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"H1410101":34}},{"path":"src/main/java/catbot/internal/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":" * Object that parses a String into a NamedParameterMap.","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"public class Parser {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"    private final String delimiter;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"    private final boolean willKeepEmptyArgument;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"    //region Constructor","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"    private Parser(String delimiter, boolean willKeepEmptyArgument) {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"        this.delimiter \u003d delimiter;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"        this.willKeepEmptyArgument \u003d willKeepEmptyArgument;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     * Returns a parser that uses the provided String as a delimiter.","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     * @param delimiter String to use as a trigger to start new commands.","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     * @return Parser constructed with the provided delimiter.","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    public static Parser with(String delimiter) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"        return with(delimiter, false);","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     * Returns a parser that uses the provided String as a delimiter.","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"     * @param delimiter             String to use as a trigger to start new commands.","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"     * @param willKeepEmptyArgument true if the first parameter should have an empty name.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"     * @return Parser constructed with the provided delimiter.","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    public static Parser with(String delimiter, boolean willKeepEmptyArgument) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"        if (delimiter \u003d\u003d null || delimiter.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"            return new SingleParser();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"            return new Parser(delimiter, willKeepEmptyArgument);","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    private static class SingleParser extends Parser {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"        private SingleParser() {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"            super(null, false);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"        @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"        public NamedParameterMap parse(String s) {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap map \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"            parseCommandArgumentString(s, map);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"            return map;","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"     * Applies the parser to the given String, and return a representation of parameter-argument pairs.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"     * @param s String to parse.","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"     * @return NamedParameterMap with commands as keys, and arguments as values.","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"    public NamedParameterMap parse(String s) {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"        NamedParameterMap map \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"        String[] commandArgumentStrings \u003d s.split(delimiter);","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"        //first command potentially gets the empty argument treatment (\"\" -\u003e value)","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"        parseCommandArgumentString(commandArgumentStrings[0], map, this.willKeepEmptyArgument);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"        Arrays.stream(commandArgumentStrings).skip(1).forEach(segment -\u003e parseCommandArgumentString(segment, map));","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"        return map;","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"    //region Internal Helpers","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"     * Splits string into one pair of command + argument based on the first whitespace.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"     * @param s string containing both command and argument, in that order","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"     * @param map to store the mapping between command and argument","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"    private static void parseCommandArgumentString(String s, NamedParameterMap map) {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"        String[] splitCommandArgument \u003d s.split(\"\\\\s\", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"        if (splitCommandArgument.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"            map.addNamedParameter(splitCommandArgument[0].trim(), splitCommandArgument[1].trim());","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"            map.addNamedParameter(splitCommandArgument[0].trim(), \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"    private static void parseCommandArgumentString(String s, NamedParameterMap map, boolean willKeepEmptyArgument) {","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"        if (willKeepEmptyArgument) {","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"            map.addNamedParameter(\"\", s.trim());","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"            parseCommandArgumentString(s, map);","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":103}},{"path":"src/main/java/catbot/io/CatBotJavaFxApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.io;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":" * Application that creates a JavaFX UI.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"public class CatBotJavaFxApplication extends Application {","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    private static CatbotJavaFxController lastCreatedController;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * Retrieves the last created controller instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * Intended to be accessed after application launch.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     * @return controller from the latest started CatBotJavaFxApplication object.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    static CatbotJavaFxController getLastCreatedController() {","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"        return lastCreatedController;","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"        // https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"                    new FXMLLoader(CatBotJavaFxApplication.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"            lastCreatedController \u003d fxmlLoader.getController();","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"            stage.show();","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"            CatBotJavaFxIo.getLastApplicationLaunchPoint().initializeAfterFxml();","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"        } catch (IOException ignored) { //noinspection UnnecessarySemicolon","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"            ;","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"H1410101":45}},{"path":"src/main/java/catbot/io/CatBotJavaFxIo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.io;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.bot.Bot;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import catbot.internal.Bounds;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import catbot.task.Task;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.task.TaskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" * UserIo that operates through JavaFX.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"public class CatBotJavaFxIo implements UserIo {","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"    //region Constants","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"    //http://www.patorjk.com/software/taag/#p\u003ddisplay\u0026h\u003d1\u0026f\u003d3D-ASCII\u0026t\u003dCAT%20BOT","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    //font: 3D-ASCII; Character Width: Fitted; Character Height: Default; Text: CAT BOT","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    public static final String NAME \u003d","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"            \" ________   ________   _________        ________   ________   _________   \\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"            + \"|\\\\   ____\\\\ |\\\\   __  \\\\ |\\\\___   ___\\\\     |\\\\   __  \\\\ |\\\\   __  \\\\ |\\\\___   ___\\\\ \\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"            + \"\\\\ \\\\  \\\\___| \\\\ \\\\  \\\\|\\\\  \\\\\\\\|___ \\\\  \\\\_|     \\\\ \\\\  \\\\|\\\\ /_\\\\ \\\\  \\\\|\\\\  \\\\\\\\|___ \\\\  \\\\_| \\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"            + \" \\\\ \\\\  \\\\     \\\\ \\\\   __  \\\\    \\\\ \\\\  \\\\       \\\\ \\\\   __  \\\\\\\\ \\\\  \\\\\\\\\\\\  \\\\    \\\\ \\\\  \\\\  \\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"            + \"  \\\\ \\\\  \\\\____ \\\\ \\\\  \\\\ \\\\  \\\\    \\\\ \\\\  \\\\       \\\\ \\\\  \\\\|\\\\  \\\\\\\\ \\\\  \\\\\\\\\\\\  \\\\    \\\\ \\\\  \\\\ \\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"            + \"   \\\\ \\\\_______\\\\\\\\ \\\\__\\\\ \\\\__\\\\    \\\\ \\\\__\\\\       \\\\ \\\\_______\\\\\\\\ \\\\_______\\\\    \\\\ \\\\__\\\\\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"            + \"    \\\\|_______| \\\\|__|\\\\|__|     \\\\|__|        \\\\|_______| \\\\|_______|     \\\\|__|\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    //region Fields","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"    private static CatBotJavaFxIo lastApplicationLaunchPoint;","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"    private CatbotJavaFxController controller;","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"    private volatile boolean isStillOpen \u003d true;","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    private Bot bot;","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"    //region UserIo","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"        //initialization impossible without FXML; handled in takeoverExecutionLogic() instead","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    void initializeAfterFxml() {","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"        controller \u003d CatBotJavaFxApplication.getLastCreatedController();","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"        send(\"Hiya! I\u0027m\\n\" + NAME + \"\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"        controller.attachConsumerForParsedCommands(bot::run);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"        controller.sendAssistantDialogue();","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"    public void cleanup() {","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"        send(\"Bye!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"        this.isStillOpen \u003d false;","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"    public boolean isStillOpen() {","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"        return this.isStillOpen;","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"    public void takeoverExecutionLogic(Bot bot) {","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"        this.bot \u003d bot;","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"        lastApplicationLaunchPoint \u003d this;","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"        Application.launch(CatBotJavaFxApplication.class, \"\");","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"    //region ErrorIndicatorIo","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"    public void indicateInvalidCommand(String attemptedCommand) {","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"        warn(\"idgi ;-;\");","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"    public void indicateInvalidInteger(String attemptedInteger) {","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"        warn(\"that doesn\u0027t look like a number... number pls\");","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"    public void indicateInvalidIndex(int attemptedIndex, Bounds bounds) {","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"        warn(\"i expected a number from \" + bounds.getLower() + \" to \" + bounds.getUpper() + \"...\");","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"    public void indicateArgumentInvalid(InvalidArgumentState invalidState, NamedParameterMap namedParameterMap) {","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"        switch (invalidState) {","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"        case PARAMETER_EMPTY:","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"            for (String arg : namedParameterMap.keySet()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"                warn(arg + \" is empty\");","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"            send(\"please make sure these arguments are filled!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"            break;","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"        case PARAMETER_MISSING:","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"            for (String arg : namedParameterMap.keySet()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"                warn(arg + \" is missing\");","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"H1410101"},"content":"            send(\"please make sure to include them next time!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"H1410101"},"content":"            break;","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"H1410101"},"content":"        case NOT_A_DATE:","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"H1410101"},"content":"            for (String arg : namedParameterMap.keySet()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"H1410101"},"content":"                warn(arg + \" is set to \\\"\" + namedParameterMap.get(arg) + \"\\\", which is not a date!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"H1410101"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"H1410101"},"content":"            break;","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"H1410101"},"content":"        default:","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"H1410101"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"H1410101"},"content":"    //region TaskAssistantIo","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"H1410101"},"content":"    public void displayTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"H1410101"},"content":"        if (taskList \u003d\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"H1410101"},"content":"            return;","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"H1410101"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"H1410101"},"content":"            send(\"it\u0027s empty rn...\");","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"H1410101"},"content":"            return;","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"H1410101"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"H1410101"},"content":"        int intlen \u003d 0;","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"H1410101"},"content":"        for (int len \u003d taskList.size(); len \u003e 0; intlen++) {","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"H1410101"},"content":"            len /\u003d 10;","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"H1410101"},"content":"        for (String taskString : taskList.getTaskStrings()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"H1410101"},"content":"            send(String.format(\"%\" + intlen + \"d\", i++) + \". \" + taskString);","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"H1410101"},"content":"    public void displayTaskListWithoutNumber(TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"H1410101"},"content":"        if (taskList \u003d\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"H1410101"},"content":"            return;","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"H1410101"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"H1410101"},"content":"            send(\"there are no tasks to see...\");","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"H1410101"},"content":"            return;","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"H1410101"},"content":"        for (String taskString : taskList.getTaskStrings()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"H1410101"},"content":"            send(String.format(\"- \" + taskString));","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"H1410101"},"content":"    public void displayTaskAdded(TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"H1410101"},"content":"        int index \u003d taskList.size() - 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"H1410101"},"content":"        send(\"Added: \" + (index + 1) + \". \" + taskList.getTask(index));","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"H1410101"},"content":"    public void displayTaskDeleted(Task deleted) {","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"H1410101"},"content":"        send(\"Deleted: \" + deleted);","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"H1410101"},"content":"    public void displayTaskModified(TaskList taskList, int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"H1410101"},"content":"        send((index + 1) + \". \" + taskList.getTask(index));","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"H1410101"},"content":"    //region Internal Helper","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"H1410101"},"content":"    static CatBotJavaFxIo getLastApplicationLaunchPoint() {","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"H1410101"},"content":"        return lastApplicationLaunchPoint;","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"H1410101"},"content":"    private void send(String s) {","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"H1410101"},"content":"        controller.queueAssistantDialogue(s);","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"H1410101"},"content":"    private void warn(String s) {","lastModifiedDate":"2023-09-19"},{"lineNumber":183,"author":{"gitId":"H1410101"},"content":"        send(\"! \" + s);","lastModifiedDate":"2023-09-19"},{"lineNumber":184,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"H1410101":187}},{"path":"src/main/java/catbot/io/CatbotJavaFxController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.io;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import catbot.bot.CommandArgumentStruct;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import catbot.internal.Parser;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"public class CatbotJavaFxController extends AnchorPane {","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"    private final Parser parser \u003d Parser.with(null);","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"    private Consumer\u003cCommandArgumentStruct\u003e commandConsumer;","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"    private StringBuilder queuedAssistantOutput \u003d new StringBuilder();","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    void attachConsumerForParsedCommands(Consumer\u003cCommandArgumentStruct\u003e consumer) {","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"        this.commandConsumer \u003d consumer;","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"        if (commandConsumer \u003d\u003d null) {","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"            return;","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"        String input \u003d getUserInput();","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"        addUserDialog(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"        CommandArgumentStruct command \u003d parseStringToStruct(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"        commandConsumer.accept(command);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"        sendAssistantDialogue();","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"    private String getUserInput() {","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"        return input;","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"    private CommandArgumentStruct parseStringToStruct(String commandString) {","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"        NamedParameterMap namedParameterMap \u003d parser.parse(commandString);","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"        assert namedParameterMap.keySet().size() \u003d\u003d 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"        for (String command : namedParameterMap.keySet()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"            return new CommandArgumentStruct(command, namedParameterMap.get(command));","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"        return null;","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"    void addUserDialog(String text) {","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(text, userImage));","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"    void queueAssistantDialogue(String text) {","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"        if (!queuedAssistantOutput.toString().isEmpty()) {","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"            queuedAssistantOutput.append(\"\\n\");","lastModifiedDate":"2023-09-23"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"        queuedAssistantOutput.append(text);","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"    void sendAssistantDialogue() {","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(queuedAssistantOutput.toString(), dukeImage));","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"        queuedAssistantOutput \u003d new StringBuilder();","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"H1410101":91}},{"path":"src/main/java/catbot/io/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.io;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"                    new FXMLLoader(CatbotJavaFxController.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"        } catch (IOException ignored) { //noinspection UnnecessarySemicolon","lastModifiedDate":"2023-09-23"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"            ;","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    private void flip() {","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"        db.setStyle(","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"                db.getStyle().replaceFirst(\"-fx-background-color: \\\\w+;\",","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"                \"-fx-background-color: lightsteelblue;\")","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"        );","lastModifiedDate":"2023-09-23"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"        return db;","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"        db.flip();","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"        return db;","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"H1410101":67}},{"path":"src/main/java/catbot/io/ErrorIndicatorIo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.io;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.internal.Bounds;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" * An object that supports interacting with the user to communicate error states.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"public interface ErrorIndicatorIo {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"     * Tells the user that the command they provided is not supported.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"     * @param attemptedCommand command that was attempted.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    void indicateInvalidCommand(String attemptedCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * Tells the user that the string they provided is not an integer.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * Usually intended to also inform the user that an integer was expected instead.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     * @param attemptedInteger string that could not be parsed as an integer.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    void indicateInvalidInteger(String attemptedInteger);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"     * Tells the user that the integer they provided could not be used as an index.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"     * Possibly also informs the user of the range of possible indices.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"     * @param attemptedIndex integer that was provided, that does not fall within expected bounds.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     * @param bounds         {@link Bounds Bounds} object signifying the minimum and maximum accepted indices.","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"    void indicateInvalidIndex(int attemptedIndex, Bounds bounds);","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     * Enum that identifies reason for the invalidity of arguments.","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"     * Used as a default option when parameter-specific information is not required.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"     * @see ErrorIndicatorIo#indicateInvalidIndex example of invalid argument with parameter-specific information","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"    enum InvalidArgumentState {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"        PARAMETER_EMPTY, PARAMETER_MISSING, NOT_A_DATE","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"     * Tells the user that the argument they provided is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"     * Handles all {@link InvalidArgumentState InvalidArgumentStates}.","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"     * @param invalidState {@link InvalidArgumentState InvalidArgumentState} describing the reason for invalidity.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"     * @param namedParameterMap map with all invalid parameters as keys, and their respective arguments as values.","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"    void indicateArgumentInvalid(InvalidArgumentState invalidState, NamedParameterMap namedParameterMap);","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":54}},{"path":"src/main/java/catbot/io/TaskAssistantIo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.io;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import catbot.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" * An object that supports interacting with the user to manage {@link Task Tasks} in a {@link TaskList TaskList}.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"public interface TaskAssistantIo {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"     * Displays all Tasks in a TaskList with numbering.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"     * @param taskList TaskList containing Tasks to print.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    void displayTaskList(TaskList taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * Displays all Tasks in a TaskList without numbering.","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     * @param taskList TaskList containing Tasks to print.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"    void displayTaskListWithoutNumber(TaskList taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"     * Displays that a Task was added to a list.","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"     * Assumes the Task was added to the end of the TaskList.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"     * @param taskList TaskList to which the Task was added.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"    void displayTaskAdded(TaskList taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"     * Displays that a Task was deleted from its list.","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     * @param deleted Task that was deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"    void displayTaskDeleted(Task deleted);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"     * Displays that a Task was modified.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"     * @param taskList the list containing the edited Task.","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"     * @param index the index of the modified task, in the given TaskList.","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    void displayTaskModified(TaskList taskList, int index);","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":48}},{"path":"src/main/java/catbot/io/UserIo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.io;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.bot.Bot;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":" * Object that implements the full expected functionality of IO expected of a CatBot assistant.","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"public interface UserIo extends ErrorIndicatorIo, TaskAssistantIo {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"     * Initializes IO channel.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"     * Intended to open resources, or send a welcome message.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"     * */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"    void initialize();","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"     * Cleans up the IO channel.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"     * Intended to close resources, or send a goodbye message.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"    void cleanup();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     * Returns a boolean describing whether the io channel is still open.","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     * Expected to be true after {@link #initialize() initialize}, and false after {@link #cleanup()}.","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"     * @return true if the io can still be used to communicate to the user, and false otherwise.","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    boolean isStillOpen();","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     * Allows the IO object to take over logic to respond to user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"     * A simple example is a while loop that uses a Scanner to wait for user interaction.","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"     * Intended to also work for event handler designs.","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    void takeoverExecutionLogic(Bot bot);","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":36}},{"path":"src/main/java/catbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import catbot.io.ErrorIndicatorIo;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" * Task with a due date.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    private static final String DESC_KEY \u003d \"\";","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"    private static final String DUE_DATE_KEY \u003d \"by\";","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"    private Deadline(String desc, LocalDate dateTime) {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"        setDescription(desc);","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"        setDueDate(dateTime);","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    public void setDueDate(LocalDate dueDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     * Optionally creates a Deadline, if the given NamedParameterMap has valid arguments.","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"     * @param map                 map of parameters and arguments to attempt to create a Deadline.","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"     * @param invalidStateHandler consumer to accept information about the error in case of argument invalidity.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"     * @return an Optional Task if arguments are valid, otherwise an empty Optional.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    public static Optional\u003cTask\u003e createIfValidElse(","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap map,","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"            BiConsumer\u003cErrorIndicatorIo.InvalidArgumentState, NamedParameterMap\u003e invalidStateHandler","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"    ) {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"        Optional\u003cInvalidArgumentStruct\u003e optionalInvalidParameterState \u003d","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"                Task.invalidStateIfTaskParametersMissingOrBlank(","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"                        map,","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"                        DESC_KEY, DUE_DATE_KEY","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"                );","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"        if (optionalInvalidParameterState.isPresent()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"            InvalidArgumentStruct invalidArgumentStruct \u003d optionalInvalidParameterState.get();","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"            invalidArgumentStruct.parameters.moveToNewKey(DESC_KEY, \"description\");","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"            invalidArgumentStruct.parameters.moveToNewKey(DUE_DATE_KEY, \"due date\");","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"            invalidStateHandler.accept(invalidArgumentStruct.state, invalidArgumentStruct.parameters);","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"        String description \u003d map.get(DESC_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"        NamedParameterMap invalidArgs \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"        Optional\u003cLocalDate\u003e optionalDueDate \u003d Task.parseOptionalDateElseMap(map, invalidArgs, DUE_DATE_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"        if (optionalDueDate.isPresent()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"            return Optional.of(new Deadline(description, optionalDueDate.get()));","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"            invalidArgs.moveToNewKey(DUE_DATE_KEY, \"due date\");","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"            invalidStateHandler.accept(ErrorIndicatorIo.InvalidArgumentState.NOT_A_DATE, invalidArgs);","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"        return super.toString() + \" [due: \" + Task.formatDate(this.dueDate) + \"]\";","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"    public void edit(NamedParameterMap map) {","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"        map.moveToNewKey(\"desc\", \"description\");","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"        if (map.containsKey(\"description\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"            this.setDescription(map.get(\"description\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"        if (map.containsKey(DUE_DATE_KEY)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"            Optional\u003cLocalDate\u003e optDate \u003d Task.parseOptionalDateElseMap(map, null, DUE_DATE_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"            optDate.ifPresent(this::setDueDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"H1410101":83}},{"path":"src/main/java/catbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import catbot.io.ErrorIndicatorIo;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" * Task with start and end dates.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"    private static final String DESC_KEY \u003d \"\";","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    private static final String START_DATE_KEY \u003d \"from\";","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"    private static final String END_DATE_KEY \u003d \"to\";","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"    private LocalDate eventStart;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"    private LocalDate eventEnd;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"    private Event(String desc, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"        setDescription(desc);","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"        setEventStart(start);","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"        setEventEnd(end);","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"    public void setEventEnd(LocalDate eventEnd) {","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"    public void setEventStart(LocalDate eventStart) {","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"     * Optionally creates a Deadline, if the given NamedParameterMap has valid arguments.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"     * @param map                 map of parameters and arguments to attempt to create a Deadline.","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"     * @param invalidStateHandler consumer to accept information about the error in case of argument invalidity.","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"     * @return an Optional Task if arguments are valid, otherwise an empty Optional.","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    public static Optional\u003cTask\u003e createIfValidElse(","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap map,","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"            BiConsumer\u003cErrorIndicatorIo.InvalidArgumentState, NamedParameterMap\u003e invalidStateHandler","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"    ) {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"        Optional\u003cInvalidArgumentStruct\u003e optionalInvalidParameterState \u003d","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"                Task.invalidStateIfTaskParametersMissingOrBlank(","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"                        map,","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"                        DESC_KEY, START_DATE_KEY, END_DATE_KEY","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"                );","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"        if (optionalInvalidParameterState.isPresent()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"            InvalidArgumentStruct invalidArgumentStruct \u003d optionalInvalidParameterState.get();","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"            invalidArgumentStruct.parameters.moveToNewKey(DESC_KEY, \"description\");","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"            invalidArgumentStruct.parameters.moveToNewKey(START_DATE_KEY, \"start date\");","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"            invalidArgumentStruct.parameters.moveToNewKey(END_DATE_KEY, \"end date\");","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"            invalidStateHandler.accept(invalidArgumentStruct.state, invalidArgumentStruct.parameters);","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"        String description \u003d map.get(DESC_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"        NamedParameterMap invalidArgs \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"        Optional\u003cLocalDate\u003e start \u003d Task.parseOptionalDateElseMap(map, invalidArgs, START_DATE_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"        Optional\u003cLocalDate\u003e end \u003d Task.parseOptionalDateElseMap(map, invalidArgs, END_DATE_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"        if (start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"            invalidArgs.moveToNewKey(DESC_KEY, \"description\");","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"            invalidArgs.moveToNewKey(START_DATE_KEY, \"start date\");","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"            invalidArgs.moveToNewKey(END_DATE_KEY, \"end date\");","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"            invalidStateHandler.accept(ErrorIndicatorIo.InvalidArgumentState.NOT_A_DATE, invalidArgs);","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"            return Optional.of(new Event(description, start.get(), end.get()));","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"        return super.toString() + \" [from: \" + Task.formatDate(this.eventStart) + \" | to: \"","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"                + Task.formatDate(this.eventEnd) + \"]\";","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"    public void edit(NamedParameterMap map) {","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"        map.moveToNewKey(\"desc\", \"description\");","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"        if (map.containsKey(\"description\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"            this.setDescription(map.get(\"description\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"        if (map.containsKey(START_DATE_KEY)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"            Optional\u003cLocalDate\u003e optDate \u003d Task.parseOptionalDateElseMap(map, null, START_DATE_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"            optDate.ifPresent(this::setEventStart);","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"        if (map.containsKey(START_DATE_KEY)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"            Optional\u003cLocalDate\u003e optDate \u003d Task.parseOptionalDateElseMap(map, null, END_DATE_KEY);","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"            optDate.ifPresent(this::setEventEnd);","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"H1410101":100}},{"path":"src/main/java/catbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import java.time.Year;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"import catbot.io.ErrorIndicatorIo;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":" * Abstract object representing an entry in a TaskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":" * Intended to represent a single task that needs to be done by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    //region Fields","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"    private String description;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    //region Getter/setter","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"     * @return true if done, false otherwise.","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"        return isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"    public void setDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"    public void setUndone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"     * Returns the description associated with the task.","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"     * @return description of the task.","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"        return description;","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"     * Replaces the original description of the task.","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"     * @param description String to replace the original description.","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"     * Replaces relevant information in the task with the new values provided by the NamedParameterMap.","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"     * @param map map containing new arguments to override previous values.","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"    public abstract void edit(NamedParameterMap map);","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"    //region Overrides","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"        return \"[\" + (isDone() ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"    //region Internal Helpers","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"    private static Optional\u003cNamedParameterMap\u003e mapIfDescriptionEmpty(NamedParameterMap map) {","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"        String desc \u003d map.get(\"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"        if (desc \u003d\u003d null || desc.isEmpty() || desc.isBlank()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap newMap \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"            newMap.addNamedParameter(\"description\", \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"            return Optional.of(newMap);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"    private static Optional\u003cNamedParameterMap\u003e mapIfArgumentsMissing(","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap map,","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"            String... arguments","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"    ) {","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"        NamedParameterMap newMap \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"H1410101"},"content":"        boolean isArgumentMissing \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"H1410101"},"content":"        for (String arg : arguments) {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"H1410101"},"content":"            if (!map.containsKey(arg)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"H1410101"},"content":"                isArgumentMissing \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"H1410101"},"content":"                newMap.addNamedParameter(arg, \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"H1410101"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"H1410101"},"content":"        if (isArgumentMissing) {","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"H1410101"},"content":"            return Optional.of(newMap);","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"H1410101"},"content":"    protected static class InvalidArgumentStruct {","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"H1410101"},"content":"        protected final ErrorIndicatorIo.InvalidArgumentState state;","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"H1410101"},"content":"        protected final NamedParameterMap parameters;","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"H1410101"},"content":"        private InvalidArgumentStruct(ErrorIndicatorIo.InvalidArgumentState state, NamedParameterMap map) {","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"H1410101"},"content":"            this.state \u003d state;","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"H1410101"},"content":"            this.parameters \u003d map;","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"H1410101"},"content":"    protected static Optional\u003cInvalidArgumentStruct\u003e invalidStateIfTaskParametersMissingOrBlank(","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap namedParameterMap, String... arguments","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"H1410101"},"content":"    ) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"H1410101"},"content":"        // parameters cannot be missing","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"H1410101"},"content":"        Optional\u003cNamedParameterMap\u003e optionalNamedParameterMap \u003d","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"H1410101"},"content":"                Task.mapIfArgumentsMissing(namedParameterMap, arguments);","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"H1410101"},"content":"        if (optionalNamedParameterMap.isPresent()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"H1410101"},"content":"            return Optional.of(new InvalidArgumentStruct(","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"H1410101"},"content":"                    ErrorIndicatorIo.InvalidArgumentState.PARAMETER_MISSING,","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"H1410101"},"content":"                    optionalNamedParameterMap.get())","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"H1410101"},"content":"            );","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"H1410101"},"content":"        // description cannot be empty","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"H1410101"},"content":"        optionalNamedParameterMap \u003d Task.mapIfDescriptionEmpty(namedParameterMap);","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"H1410101"},"content":"        //noinspection OptionalIsPresent for readability, to distinguish default return value","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"H1410101"},"content":"        if (optionalNamedParameterMap.isPresent()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"H1410101"},"content":"            return Optional.of(new InvalidArgumentStruct(","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"H1410101"},"content":"                    ErrorIndicatorIo.InvalidArgumentState.PARAMETER_EMPTY,","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"H1410101"},"content":"                    optionalNamedParameterMap.get())","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"H1410101"},"content":"            );","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"H1410101"},"content":"        // if all ok","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"H1410101"},"content":"        return Optional.empty();","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"H1410101"},"content":"    protected static Optional\u003cLocalDate\u003e parseOptionalDateElseMap(","lastModifiedDate":"2023-09-15"},{"lineNumber":156,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap map, NamedParameterMap elseMap, String arg","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"H1410101"},"content":"    ) {","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"H1410101"},"content":"        String val \u003d map.get(arg);","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"H1410101"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"H1410101"},"content":"            return Optional.of(LocalDate.parse(val));","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"H1410101"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"H1410101"},"content":"            if (elseMap !\u003d null) {","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"H1410101"},"content":"                elseMap.addNamedParameter(arg, val);","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"H1410101"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"H1410101"},"content":"    protected static String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-15"},{"lineNumber":170,"author":{"gitId":"H1410101"},"content":"        return date.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"H1410101"},"content":"                        date.getYear() \u003d\u003d Year.now().getValue()","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"H1410101"},"content":"                                ? \"MMM d\"","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"H1410101"},"content":"                                : \"MMM d yyyy\"","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"H1410101"},"content":"                )","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"H1410101"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"H1410101"},"content":"    //endregion","lastModifiedDate":"2023-09-15"},{"lineNumber":179,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":180,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":180}},{"path":"src/main/java/catbot/task/TaskArrayListStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.task;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"import catbot.internal.ObjectStorage;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":" * Dedicated class to read and write ArrayLists of Tasks from storage.","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"public class TaskArrayListStorage implements ObjectStorage\u003cArrayList\u003cTask\u003e\u003e {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    private final String path;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    private Supplier\u003cArrayList\u003cTask\u003e\u003e supplier;","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     * Constructs a TaskArrayListStorage with a path to read from and write to.","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"     * @param path String representing relative directory to read and write.","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    public TaskArrayListStorage(String path) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"    public void write(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"            ObjectOutputStream output \u003d new ObjectOutputStream(new FileOutputStream(path));","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"            output.writeObject(taskArrayList);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"    public ArrayList\u003cTask\u003e readOrDefault() {","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"            ObjectInputStream input \u003d new ObjectInputStream(new FileInputStream(path));","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"            Object readObject \u003d input.readObject();","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"            ArrayList\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) readObject;","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"            input.close();","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"            return tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"        } catch (IOException | ClassNotFoundException ignored) {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"            if (supplier !\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"                return supplier.get();","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"            } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"                return null;","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"    public void setDefault(Supplier\u003cArrayList\u003cTask\u003e\u003e supplier) {","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"        this.supplier \u003d supplier;","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"H1410101":62}},{"path":"src/main/java/catbot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.internal.Bounds;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" * Object to manage a list of Tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"public class TaskList {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"    private final TaskArrayListStorage storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     * Constructs a TaskList with a path to read and write from, for storage.","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     * @param path relative directory to read from and write to.","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"    public TaskList(String path) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"        if (path !\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"            this.storage \u003d new TaskArrayListStorage(path);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"            this.storage.setDefault(() -\u003e new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"            this.tasks \u003d storage.readOrDefault();","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"            this.storage \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"     * @param task task to add to the list.","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"        update();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"     * @param index index of the task to remove.","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"     * @return the removed task.","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"        Task removed \u003d tasks.remove(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"        update();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"        return removed;","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"     * Checks if the provided integer is a valid index starting from 1.","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"     * If so, converts to index starting from 0, and passes to the first consumer.","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"     * Otherwise, passes the original integer to the second consumer.","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"     * @param integer   integer to check if is valid index based on {@link Bounds Bounds}","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"     * @param ifValid   consumer to accept (integer - 1) if it is a valid index","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"     * @param otherwise consumer to accept (integer) if it is not a valid index","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"     * @see java.util.Optional#ifPresentOrElse for inspiration.","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"    public void ifValidIndexElse(int integer, Consumer\u003cInteger\u003e ifValid, Consumer\u003cInteger\u003e otherwise) {","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"        Bounds bounds \u003d getIndexBounds();","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"        if (bounds.contains(integer)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"            ifValid.accept(integer - 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"            otherwise.accept(integer);","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"     * Retrieves a {@link Bounds bounds} object that represents valid indexes.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"     * @return Bounds object for relevant indexes.","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"    public Bounds getIndexBounds() {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"        return new Bounds(1, tasks.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"     * @param index index of the task to mark as done.","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"        tasks.get(index).setDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"H1410101"},"content":"        update();","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"H1410101"},"content":"     * Marks the task at the given index as undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"H1410101"},"content":"     * @param index index of the task to mark as undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"H1410101"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"H1410101"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"H1410101"},"content":"        tasks.get(index).setUndone();","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"H1410101"},"content":"        update();","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"H1410101"},"content":"     * Edits the task at the given index based on the parameters and arguments provided through a NamedParameterMap.","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"H1410101"},"content":"     * @param index the index of the task to edit.","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"H1410101"},"content":"     * @param map   map that contains new values for parameters.","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"H1410101"},"content":"     *              valid parameters result in their arguments replacing previous values in the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"H1410101"},"content":"    public void editTask(int index, NamedParameterMap map) {","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"H1410101"},"content":"        tasks.get(index).edit(map);","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"H1410101"},"content":"        update();","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"H1410101"},"content":"     * Retrieves the length of the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"H1410101"},"content":"     * @return number of tasks in the list.","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"H1410101"},"content":"    public int size() {","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"H1410101"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"H1410101"},"content":"     * Retrieves a task at a specified index.","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"H1410101"},"content":"     * @param index index of the task to retrieve.","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"H1410101"},"content":"     * @return task at the provided index.","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"H1410101"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"H1410101"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"H1410101"},"content":"     * Returns an ArrayList of the string representations of all tasks, in sequence.","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"H1410101"},"content":"     * @return ArrayList of toStringed tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"H1410101"},"content":"    public ArrayList\u003cString\u003e getTaskStrings() {","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"H1410101"},"content":"        return tasks.stream().map(task -\u003e task.toString()).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"H1410101"},"content":"    private void update() {","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"H1410101"},"content":"        this.storage.write(this.tasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"H1410101"},"content":"     * Returns a list of all tasks whose descriptions contain the search string.","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"H1410101"},"content":"     * @param string text to search in descriptions.","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"H1410101"},"content":"     * @return TaskList containing tasks whose descriptions contain the search text.","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"H1410101"},"content":"    public TaskList findInDescriptions(String string) {","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"H1410101"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"H1410101"},"content":"        // credit to IntelliJ for this line of code that I won\u0027t bother to understand","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"H1410101"},"content":"        taskList.tasks \u003d tasks.stream().filter(task -\u003e task.getDescription().contains(string))","lastModifiedDate":"2023-09-14"},{"lineNumber":158,"author":{"gitId":"H1410101"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"H1410101"},"content":"        return taskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"H1410101":162}},{"path":"src/main/java/catbot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.io.ErrorIndicatorIo;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":" * The most basic task.","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"    private Todo(String desc) {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"        setDescription(desc);","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"     * Optionally creates a Deadline, if the given NamedParameterMap has valid arguments.","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"     * @param map                 map of parameters and arguments to attempt to create a Deadline.","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"     * @param invalidStateHandler consumer to accept information about the error in case of argument invalidity.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"     * @return an Optional Task if arguments are valid, otherwise an empty Optional.","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    public static Optional\u003cTask\u003e createIfValidElse(","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap map,","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"            BiConsumer\u003cErrorIndicatorIo.InvalidArgumentState, NamedParameterMap\u003e invalidStateHandler","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    ) {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"        Optional\u003cInvalidArgumentStruct\u003e optionalInvalidParameterState \u003d","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"                Task.invalidStateIfTaskParametersMissingOrBlank(","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"                        map,","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"                        \"\"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"                );","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"        if (optionalInvalidParameterState.isPresent()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"            InvalidArgumentStruct invalidArgumentStruct \u003d optionalInvalidParameterState.get();","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"            invalidArgumentStruct.parameters.moveToNewKey(\"\", \"description\");","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"            invalidStateHandler.accept(invalidArgumentStruct.state, invalidArgumentStruct.parameters);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"        return Optional.of(new Todo(","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"                map.get(\"\")","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"        ));","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"    public void edit(NamedParameterMap map) {","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"        map.moveToNewKey(\"desc\", \"description\");","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"        if (!map.containsKey(\"description\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"            return;","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"        this.setDescription(map.get(\"description\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"H1410101":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: gainsboro;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"            \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"H1410101":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"catbot.io.CatbotJavaFxController\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"      \u003cVBox prefHeight\u003d\"700.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"              \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"650.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: darkgray;\" stylesheets\u003d\"@scrollpane.css\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"                      \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"600.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: darkgray;\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"                     \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"              \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"                    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"450.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"                  \u003c/TextField\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"                    \u003cButton fx:id\u003d\"sendButton\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"75.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"                        \u003cInsets bottom\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"                  \u003c/Button\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"H1410101":43}},{"path":"src/test/java/catbot/CatBotCommandPatternsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import catbot.bot.CatBotCommandPatterns;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"import catbot.internal.CommandPattern;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import catbot.internal.CommandPatternGenerator;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"public class CatBotCommandPatternsTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"    @Nested","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"    class IntegerPatternTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"        @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"        public void integerPatternTest() {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"            CommandPatternGenerator\u003cInteger\u003e generator \u003d CatBotCommandPatterns.getIntegerPatternGenerator();","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"            LambdaOutput\u003cString\u003e defaultOutput \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"            Consumer\u003cString\u003e defaultConsumer \u003d defaultOutput::setOutput;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"            CommandPattern\u003cInteger\u003e integerPattern \u003d generator.generateUsingDefault(defaultConsumer);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"            LambdaOutput\u003cInteger\u003e output \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"            integerPattern.ifParsableElseDefault(\"5\", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"            assertNull(defaultOutput.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"            assertEquals(output.getOutput(), 5);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"            integerPattern.ifParsableElseDefault(\"100\", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"            assertNull(defaultOutput.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"            assertEquals(output.getOutput(), 100);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"            output.setOutput(0);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"            integerPattern.ifParsableElseDefault(\"not integer\", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"            assertEquals(defaultOutput.getOutput(), \"not integer\");","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"            assertEquals(output.getOutput(), 0);","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"    @Nested","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"    class SlashPatternTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"        @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"        public void slashPatternTest() {","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"            CommandPatternGenerator\u003cNamedParameterMap\u003e generator \u003d CatBotCommandPatterns.getSlashPatternGenerator();","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"            LambdaOutput\u003cString\u003e defaultOutput \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"            Consumer\u003cString\u003e defaultConsumer \u003d defaultOutput::setOutput;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"            CommandPattern\u003cNamedParameterMap\u003e slashPattern \u003d generator.generateUsingDefault(defaultConsumer);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"H1410101"},"content":"            LambdaOutput\u003cNamedParameterMap\u003e output \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"H1410101"},"content":"            slashPattern.ifParsableElseDefault(\"placeholder text\", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"H1410101"},"content":"            NamedParameterMap expectedOutput \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"H1410101"},"content":"            expectedOutput.addNamedParameter(\"\", \"placeholder text\");","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"H1410101"},"content":"            assertNull(defaultOutput.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"H1410101"},"content":"            assertEquals(output.getOutput(), expectedOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"H1410101"},"content":"            slashPattern.ifParsableElseDefault(\"slash delimited /text test with /123 multiple slash\",","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"H1410101"},"content":"                    output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"H1410101"},"content":"            expectedOutput \u003d new NamedParameterMap()","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"\", \"slash delimited\")","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"text\", \"test with\")","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"123\", \"multiple slash\");","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"H1410101"},"content":"            assertNull(defaultOutput.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"H1410101"},"content":"            assertEquals(output.getOutput(), expectedOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"H1410101"},"content":"            slashPattern.ifParsableElseDefault(\"overriding / slash /slash commands /slash test\", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"H1410101"},"content":"            expectedOutput \u003d new NamedParameterMap()","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"\", \"slash\")","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"slash\", \"test\");","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"H1410101"},"content":"            assertNull(defaultOutput.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"H1410101"},"content":"            assertEquals(output.getOutput(), expectedOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"H1410101"},"content":"            slashPattern.ifParsableElseDefault(\"whitespace  /arg  te  st/text  \", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"H1410101"},"content":"            expectedOutput \u003d new NamedParameterMap()","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"\", \"whitespace\")","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"arg\", \"te  st\")","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"H1410101"},"content":"                    .addNamedParameter(\"text\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"H1410101"},"content":"            assertNull(defaultOutput.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"H1410101"},"content":"            assertEquals(output.getOutput(), expectedOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"H1410101"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"H1410101":89}},{"path":"src/test/java/catbot/LambdaOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"public class LambdaOutput\u003cT\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"    private T output;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"    public T getOutput() {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"    public void setOutput(T output) {","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"        this.output \u003d output;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"H1410101":14}},{"path":"src/test/java/catbot/internal/CommandMapTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.internal;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.LambdaOutput;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"public class CommandMapTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"    public void run_validCommand_runCommand() {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"        LambdaOutput\u003cString\u003e defaultOutput \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"        LambdaOutput\u003cString\u003e output \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"        CommandMap map \u003d new CommandMap()","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"                .setDefaultCommand(defaultOutput::setOutput)","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"cmd\", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"        map.run(\"cmd\", \"args\");","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"        assertNull(defaultOutput.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"        assertEquals(output.getOutput(), \"args\");","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"    public void run_noCommands_runDefaultCommand() {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"        LambdaOutput\u003cString\u003e defaultOutput \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"        CommandMap map \u003d new CommandMap()","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"                .setDefaultCommand(defaultOutput::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"H1410101"},"content":"        map.run(\"cmd\", \"args\");","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"H1410101"},"content":"        assertEquals(defaultOutput.getOutput(), \"cmd\");","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"H1410101"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"H1410101"},"content":"    public void run_invalidCommand_runDefaultCommand() {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"H1410101"},"content":"        LambdaOutput\u003cString\u003e defaultOutput \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"H1410101"},"content":"        LambdaOutput\u003cString\u003e output \u003d new LambdaOutput\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"H1410101"},"content":"        CommandMap map \u003d new CommandMap()","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"H1410101"},"content":"                .setDefaultCommand(defaultOutput::setOutput)","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"H1410101"},"content":"                .addCommand(\"test\", output::setOutput);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"H1410101"},"content":"        map.run(\"cmd\", \"args\");","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"H1410101"},"content":"        assertEquals(defaultOutput.getOutput(), \"cmd\");","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"H1410101"},"content":"        assertNull(output.getOutput());","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"H1410101":53}},{"path":"src/test/java/catbot/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"package catbot.task;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"import catbot.internal.NamedParameterMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"    public void DoneTest() {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"H1410101"},"content":"        NamedParameterMap namedParameterMap \u003d new NamedParameterMap();","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"H1410101"},"content":"        namedParameterMap.addNamedParameter(\"\", \"placeholder description\");","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"H1410101"},"content":"        Optional\u003cTask\u003e optionalTask \u003d Todo.createIfValidElse(","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"H1410101"},"content":"                namedParameterMap,","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"H1410101"},"content":"                (invalidParameterState, map) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"H1410101"},"content":"                    throw new AssertionError(\"Should not be invalid\");","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"                });","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"H1410101"},"content":"        assert optionalTask.isPresent();","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"H1410101"},"content":"        Task task \u003d optionalTask.get();","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"H1410101"},"content":"        assert !task.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"H1410101"},"content":"        task.setDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"H1410101"},"content":"        assert task.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"H1410101"},"content":"        task.setDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"H1410101"},"content":"        assert task.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"H1410101"},"content":"        task.setUndone();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"H1410101"},"content":"        assert !task.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"H1410101"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"H1410101"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"H1410101":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"H1410101"},"content":"philosophy is to keep as close to the official requirement as possible, so I get notified when it fails","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"H1410101"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"H1410101"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"H1410101"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"H1410101"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"H1410101"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"H1410101"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"H1410101"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"H1410101"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"H1410101"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"H1410101"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"H1410101":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"H1410101"},"content":"REM for my own use: set PATH\u003d%PATH%;C:\\Users\\siazh\\.jdks\\corretto-11.0.20.1\\bin","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"H1410101"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"H1410101"},"content":"java -classpath ..\\bin catbot.bot.CatBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"H1410101":3,"-":20}},{"path":"Tasks.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"H1410101":0}}]
