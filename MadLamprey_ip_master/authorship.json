[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    mainClass.set(\"bruno.Bruno\")","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    archiveFileName \u003d \"bruno.jar\"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"checkstyle {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MadLamprey":8,"-":38}},{"path":"src/main/java/bruno/Bruno.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" * The Bruno class represents the main application class that handles the running of the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class Bruno {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Bruno class with the specified directory path and file name","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * @param dirPath The path of the directory that will store the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     * @param fileName The name of the file where the tasks are being loaded, or read from.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    public Bruno(String dirPath, String fileName) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"            tasks \u003d new TaskList(storage, ui);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     * Runs the Bruno application, allowing the user to interact with the task management system","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    public void runBruno() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        ui.displayGreeting();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        do {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"                String s \u003d sc.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"                ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"                boolean flag \u003d parser.parseInput(s);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"                if (!flag) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"                    ui.displayBye();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"                    ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"                ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"            } catch (BrunoException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"                ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"                System.out.println(\"\\tDate and Time is not in correct format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"                ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        } while (true);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        Bruno bruno \u003d new Bruno(\"data/\", \"bruno.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        bruno.runBruno();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":68}},{"path":"src/main/java/bruno/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoUnknownTaskException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.TaskType;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" * The Parser class is responsible for parsing the user input and calling methods to perform the","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" * appropriate tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * Parses the user input and calls methods to perform the appropriate task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     * @param input User input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"     * @return Flag value for termination.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if any error occurs in any of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    public boolean parseInput(String input) throws BrunoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"            TaskType type \u003d TaskType.valueOf(input.split(\" \")[0].toUpperCase());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            switch (type) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"            case BYE:","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"                return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"            case LIST:","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"                taskList.displayList();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"            case MARK:","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"                taskList.markTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"                taskList.unmarkTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"            case DELETE:","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"                taskList.deleteTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"                taskList.displayListSum();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            case TODO:","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"                taskList.addToDo(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"                taskList.displayListSum();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"                taskList.addDeadline(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"                taskList.displayListSum();","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"            case EVENT:","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"                taskList.addEvent(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"                taskList.displayListSum();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"            case SCHEDULE:","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"                taskList.showSchedule(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"            case FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"                taskList.findTasks(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"                return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"            default:","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"                throw new BrunoUnknownTaskException();","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoUnknownTaskException();","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":70}},{"path":"src/main/java/bruno/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":" * The Storage class is responsible for all actions relating to the bruno.txt file, such as loading the","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":" * file at the start of the application, and writing to the file whenever changes are made to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private String dirPath;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private String fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Storage class using the specified directory path and file name.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"     * @param dirPath The path of the directory where the file will be stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     * @param fileName The name of the file that is loaded, or the tasks are written to.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    public Storage(String dirPath, String fileName) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        File directory \u003d new File(this.dirPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        taskList \u003d new TaskList(this, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * Writes to the bruno.txt file by reading all tasks in the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dirPath + this.fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"                fileWriter.write(task.getFileString() + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"     * Loads the bruno.txt file and populates the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if file to be read is not in proper format.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    public void loadFile(TaskList taskList) throws BrunoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"            File file \u003d new File(this.dirPath + this.fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"                String s \u003d sc.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"                String[] task \u003d s.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"                List\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"                switch (task[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"                case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"                    list.add(new bruno.task.ToDo(task[2]));","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"                case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"                    list.add(new bruno.task.Deadline(task[2], task[3]));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"                case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"                    list.add(new bruno.task.Event(task[2], task[3], task[4]));","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"                default:","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"                    throw new bruno.exceptions.BrunoIncorrectFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"                taskList.setList(list);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"            sc.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":91}},{"path":"src/main/java/bruno/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoEmptyException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIndexOutOfBoundsException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIntegerMismatchException;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingDeadlineException;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingEventException;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoNegativeArgException;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":" * The TaskList class handles all functionality relating to the tasks of tasks, such as addition, deletion,","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":" * update and display of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    TaskList(Storage storage, UI ui) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     * Adds a task of type ToDo to the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for task.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user does not provide description for task.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public void addToDo(String task) throws BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(task.substring(task.indexOf(\" \") + 1)));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\\tWoof. I have added this task:\\n\\t\\t\" + tasks.get(tasks.size() - 1).getString();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"     * Adds a task of type Deadline to the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user does not provide description or deadline date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    public void addDeadline(String task) throws BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1 || task.indexOf(\u0027/\u0027) \u003d\u003d 9) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        if (!task.substring(task.indexOf(\"deadline\") + 1).contains(\"/by\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoMissingDeadlineException();","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(task.substring(task.indexOf(\u0027 \u0027) + 1, task.indexOf(\u0027/\u0027) - 1),","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"                task.substring(task.lastIndexOf(\u0027/\u0027) + 4)));","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\\tWoof. I have added this task:\\n\\t\\t\" + tasks.get(tasks.size() - 1).getString();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"     * Adds a task of type Event to the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if the user does not provide description or start/end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    public void addEvent(String task) throws BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1 || task.indexOf(\u0027/\u0027) \u003d\u003d 6) {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        if (!task.substring(task.indexOf(\"event\") + 1).contains(\"/from\") || !task.substring(","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"                task.indexOf(\"event\") + 1).contains(\"/to\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoMissingEventException();","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Event(task.substring(task.indexOf(\u0027 \u0027) + 1, task.indexOf(\u0027/\u0027) - 1),","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"                task.substring(task.indexOf(\"from\") + 5, task.lastIndexOf(\u0027/\u0027) - 1),","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"                task.substring(task.indexOf(\"to\") + 3)));","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\\tWoof. I have added this task:\\n\\t\\t\" + tasks.get(tasks.size() - 1).getString();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"     * Marks a task as done from the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if the user tries to mark an invalid task.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"    public void markTask(String task) throws BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        String markVal \u003d task.split(\" \")[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            int a \u003d Integer.parseInt(markVal);","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIntegerMismatchException(\"mark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(markVal) \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIndexOutOfBoundsException(\"mark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(markVal) \u003c 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoNegativeArgException(\"mark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"        tasks.get(Integer.parseInt(markVal) - 1).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"                \"\\tWoof Woof! I have marked the task as done.\\n\\t\" + tasks.get(Integer.parseInt(markVal) - 1)","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"                        .getString();","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"     * Unmarks a task to show that it is not done, from the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"     * @param task The Unmark command input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user tries to unmark an invalid task.","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"    public void unmarkTask(String task) throws BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"        String unmarkVal \u003d task.split(\" \")[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"            int a \u003d Integer.parseInt(unmarkVal);","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIntegerMismatchException(\"mark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(unmarkVal) \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIndexOutOfBoundsException(\"unmark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(unmarkVal) \u003c 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoNegativeArgException(\"unmark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"        tasks.get(Integer.parseInt(unmarkVal) - 1).unMark();","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\\tOK, I have marked the task as not done yet.\\n\\t\" + tasks.get(","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"                Integer.parseInt(unmarkVal) - 1).getString();","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"     * @param task The Delete command input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user tries to delete an invalid task.","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"    public void deleteTask(String task) throws BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"        String deleteVal \u003d task.split(\" \")[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"            int a \u003d Integer.parseInt(deleteVal);","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIntegerMismatchException(\"mark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(deleteVal) \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIndexOutOfBoundsException(\"delete\");","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(deleteVal) \u003c 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoNegativeArgException(\"delete\");","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"        String s1 \u003d tasks.get(Integer.parseInt(deleteVal) - 1).getString();","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"        tasks.remove(Integer.parseInt(deleteVal) - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\\tI have removed this task from your tasks:\\n\\t\" + s1;","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"     * Displays the number of tasks in the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"    public void displayListSum() {","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\\tNow you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"                + \"in your \"","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"                + \"tasks.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"     * Displays the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"    public void displayList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\\tHere are the tasks in your tasks:\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"            taskInfo +\u003d \"\\t\\t\" + (i + 1) + \". \" + tasks.get(i).getString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"     * Displays all the tasks the user has on a given date.","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"     * @param task The Schedule command input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if date input by the user is not correct format.","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"    public void showSchedule(String task) throws DateTimeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"        LocalDate d \u003d LocalDate.parse(task.split(\" \")[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"                if (d.isEqual(((Deadline) t).getBy().toLocalDate())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"                    taskInfo \u003d taskInfo + \"\\t\" + (++counter) + \". \" + t.getString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2023-08-28"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"                if ((d.isAfter(((Event) t).getFrom().toLocalDate())","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"                        \u0026\u0026 d.isBefore(((Event) t).getBy().toLocalDate()))","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"                        || d.isEqual(((Event) t).getFrom().toLocalDate())","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"                        || d.isEqual(((Event) t).getBy().toLocalDate())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"                    taskInfo \u003d taskInfo + \"\\t\" + (++counter) + \". \" + t.getString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"            ui.displayMessage(\"\\tYou have no deadlines or events on this date.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"     * Finds all tasks whose description contains the keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"    public void findTasks(String task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"        String keyWord \u003d task.split(\" \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"MadLamprey"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"MadLamprey"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"MadLamprey"},"content":"            String description \u003d tasks.get(i).getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"MadLamprey"},"content":"            if (description.contains(keyWord)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"                taskInfo +\u003d \"\\t\" + (++counter) + \". \" + tasks.get(i).getString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"MadLamprey"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"MadLamprey"},"content":"            taskInfo +\u003d \"\\tThere are no items matching your search.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"MadLamprey"},"content":"        else {","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"MadLamprey"},"content":"            taskInfo \u003d \"\\tHere are the tasks matching your search:\\n\" + taskInfo;","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"MadLamprey"},"content":"    public void setList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"MadLamprey"},"content":"        this.tasks \u003d list;","lastModifiedDate":"2023-08-31"},{"lineNumber":256,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"MadLamprey"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"MadLamprey"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"MadLamprey":261}},{"path":"src/main/java/bruno/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The UI class is responsible for the display of messages, i.e, it controls the user-interface of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * management system.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class UI {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"     * Displays the divider lines before and after each command.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    public void displayLines() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"            System.out.print((i \u003d\u003d 0 ? \"-\" : \" -\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        System.out.println();","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * Displays the greeting at the start of the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public void displayGreeting() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        String logo \u003d \"                ;~~,__,\\n\" + \":-….,———-‘`----/   ._.*\\n\" + \" `-,,,   BRUNO   ,’\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"                + \"     ;   ,~.——;  /\\n\" + \"     :  |     :  |\\n\" + \"     `_ ’     `_ ‘\";","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        String name \u003d \"Bruno\";","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        System.out.println(\"Woof Woof! I\u0027m \" + name + \" 🐾\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        System.out.println(\"How can I help you?\");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        System.out.println(\"[Please not that date/time must be in \\\"yyyy-MM-dd HH:mm\\\" format]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * Displays the \"bye\" message when the command \"bye\" is entered.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    public void displayBye() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        System.out.print(\"\\t\");","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        System.out.println(\"Bye Bye! Hope to see you again soon! 🐶\");","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     * Displays the appropriate messages for each command.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"     * @param taskInfo The command message.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    public void displayMessage(String taskInfo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        System.out.println(taskInfo);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"MadLamprey":48}},{"path":"src/main/java/bruno/exceptions/BrunoDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoDateTimeFormatException handles the case where the user has entered a date/time that is not in","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoDateTimeFormatException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoDateTimeFormatException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"Date and Time are not in correct format. They must be in YYYY-MM-DD HH:MM format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoEmptyException handles the case where the description for a new task is empty.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class BrunoEmptyException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    private String type;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    public BrunoEmptyException(String taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Description of \" + taskType + \" cannot be empty! ❌\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":13}},{"path":"src/main/java/bruno/exceptions/BrunoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoException is the superclass for all exception handling classes.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class BrunoException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public BrunoException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":11}},{"path":"src/main/java/bruno/exceptions/BrunoIncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoIncorrectFormatException handles the case where the data in the file to be read is not in","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * proper format.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoIncorrectFormatException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoIncorrectFormatException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"File is not in correct format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoIndexOutOfBoundsException handles the case where the user has entered an argument that is","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * greater than the number of tasks in the list, for mark, unmark or delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoIndexOutOfBoundsException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    private String activity;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"     * Displays the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * @param activity One of mark, unmark or delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    public BrunoIndexOutOfBoundsException(String activity) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Task numbers to be \" + activity","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"                + \"ed cannot be greater than number of tasks in the list! ❌\");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":20}},{"path":"src/main/java/bruno/exceptions/BrunoIntegerMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoIntegerMismatchException handles the case where the argument for mark, unmark or delete is not","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * an integer value.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoIntegerMismatchException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    private String activity;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    public BrunoIntegerMismatchException(String activity) {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Tasks to be \" + activity + \"ed can only be integers! ❌\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":14}},{"path":"src/main/java/bruno/exceptions/BrunoMissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoMissingDeadlineException handles the case where the user enters a new Deadline task without a","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoMissingDeadlineException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoMissingDeadlineException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! You cannot add a Deadline task without setting the deadline! ❌\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoMissingEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoMissingEventException handles the case where an Event task is added without either the start or","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * the end time.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoMissingEventException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoMissingEventException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! You cannot add an Event task without setting start and end time! ❌\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoNegativeArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoNegativeArgExpression handles the case where the user has entered an argument that is negative,","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * for mark, unmark or delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoNegativeArgException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    private String activity;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    public BrunoNegativeArgException(String activity) {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Task numbers to be \" + activity + \"ed cannot be negative! ❌\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":14}},{"path":"src/main/java/bruno/exceptions/BrunoUnknownTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoUnknownTaskException handles the case where the user has entered an invalid command.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class BrunoUnknownTaskException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public BrunoUnknownTaskException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"        super(\"I am sorry, I do not understand what you mean.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":11}},{"path":"src/main/java/bruno/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":" * The Deadline task is responsible for all tasks of Deadline type.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Deadline class.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @param by          Deadline of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        super(TaskType.DEADLINE, description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        this.by \u003d this.convertToLocalDateTime(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if the \u0027by\u0027 LocalDateTime cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getString() throws DateTimeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        return \"[D]\" + super.getString() + \" (by: \" + convertDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        return \"D|\" + super.getFileString() + \"|\" + by.toString().replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * Returns the \u0027by\u0027 value for the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     * @return The \u0027by\u0027 value.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"MadLamprey":46}},{"path":"src/main/java/bruno/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":" * The Event class is responsible for all Event tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Event class.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     * @param from        Start time of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     * @param by          End time of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public Event(String description, String from, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        this.from \u003d this.convertToLocalDateTime(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        this.by \u003d this.convertToLocalDateTime(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if LocalDateTime values \u0027from\u0027 and \u0027by\u0027 cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getString() throws DateTimeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        return \"[E]\" + super.getString() + \" (from: \" + convertDateTimeToString(from) + \" to: \"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"                + convertDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the task, as required by the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if LocalDateTime values \u0027from\u0027 and \u0027by\u0027 cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getFileString() throws DateTimeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        return \"E|\" + super.getFileString() + \"|\" + from.toString().replace(\u0027T\u0027, \u0027 \u0027) + \"|\" + by.toString()","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"                .replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        return this.from;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"MadLamprey":53}},{"path":"src/main/java/bruno/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" * Superclass for all task types.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     * @param type        The task type.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        this.taskType \u003d type;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    public String getString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"     * Returns a string representation of the task, as required for the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     * @return The string representation of the task, for the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    public String getFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        return (isDone ? \"✅\" : \"⭕️\") + \"|\" + description;","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"     * Marks the current task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"     * Marks the current task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"     * Converts the string into instance of LocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"     * @param s The input string.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"     * @return LocalDateTime instance for the converted string.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if string cannot be converted to LocalDateTime.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime convertToLocalDateTime(String s) throws DateTimeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        return LocalDateTime.parse(s, formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"     * Converts the LocalDateTime instance into a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"     * @param dt LocalDateTime instance to be converted.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the LocalDateTime instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if LocalDateTime cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    public String convertDateTimeToString(LocalDateTime dt) throws DateTimeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        return dt.format(formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    public boolean checkDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"MadLamprey":89}},{"path":"src/main/java/bruno/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * Enum for all valid commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, LIST, BYE, DELETE, SCHEDULE, FIND","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"MadLamprey":8}},{"path":"src/main/java/bruno/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The ToDo class is responsible for all tasks of Todo type.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"        super(TaskType.TODO, description);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        return \"[T]\" + super.getString();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        return \"T|\" + super.getFileString();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"MadLamprey":25}},{"path":"src/test/java/bruno/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoUnknownTaskException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @BeforeEach void setUp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        parser \u003d new Parser(new TaskList(new Storage(\"xxx\", \"yyy\"), new UI()));","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    @Test void testParse_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"            String task \u003d \"todo work\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(parser.parseInput(task));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Test void testParse_byeTask_falseReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"            String task \u003d \"bye\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"            assertFalse(parser.parseInput(task));","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    @Test void testParse_unknownTask_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoUnknownTaskException.class, () -\u003e parser.parseInput(\"show tasks\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":43}},{"path":"src/test/java/bruno/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIncorrectFormatException;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    private String dirPath;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private String fileName;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    void setUp() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        dirPath \u003d \"data-test/\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        fileName \u003d \"bruno-test.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDirectoryExists_normalCase_trueReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        File directory \u003d new File(dirPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(directory.exists());","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        directory.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    @Test void testWriteToFile_normalInput_writtenToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        list.add(new ToDo(\"work\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(list);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    @Test void testWriteToFile_emptyList_writtenToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(list);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(0, file.length());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_normalInput_fileLoaded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new ToDo(\"work\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Deadline(\"quiz\", \"2023-08-29 18:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Event(\"hackathon\", \"2023-08-31 18:00\", \"2023-09-01 18:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"            taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(6, taskList.getList().size());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_fileDoesNotExist_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"            file.delete();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(0, taskList.getList().size());","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_invalidTaskType_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.write(\"X|⭕️|work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(e instanceof BrunoIncorrectFormatException);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.write(\"D|⭕️|work|23-08-2023 18:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(e instanceof BrunoIncorrectFormatException);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_missingDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.write(\"D|⭕️|work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(e instanceof BrunoIncorrectFormatException);","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":129}},{"path":"src/test/java/bruno/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoEmptyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIntegerMismatchException;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingDeadlineException;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingEventException;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoNegativeArgException;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage \u003d new Storage(\"data-test/\", \"bruno-test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList \u003d new TaskList(this.storage, this.ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddToDo_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"            taskList.addToDo(\"todo buy groceries\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0) instanceof ToDo);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddToDo_withoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        Exception exception \u003d assertThrows(BrunoEmptyException.class, () -\u003e taskList.addToDo(\"todo\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! Description of todo cannot be empty! ❌\", exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"            taskList.addDeadline(\"deadline assignment /by 2023-08-30 19:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0) instanceof Deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_withoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        Exception exception \u003d assertThrows(BrunoEmptyException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addDeadline(\"deadline \" + \"/by 2023-08-30 19:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! Description of deadline cannot be empty! ❌\", exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_withoutDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        Exception exception \u003d assertThrows(BrunoMissingDeadlineException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addDeadline(\"deadline work\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! You cannot add a Deadline task without setting the deadline! ❌\",","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"                exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addDeadline(\"deadline \" + \"work /by 29-08-2023 19:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"            taskList.addEvent(\"event presentation /from 2023-08-31 10:00 /to 2023-08-31 11:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0) instanceof Event);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_withoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        Exception e \u003d assertThrows(BrunoEmptyException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addEvent(\"event /from \" + \"2023-08-31 10:00 /to \" + \"2023-08-31 11:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! Description of event cannot be empty! ❌\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_withoutStartEndTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        Exception e \u003d assertThrows(BrunoMissingEventException.class, () -\u003e taskList.addEvent(\"event work\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! You cannot add an Event task without setting start and end time! ❌\",","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"                e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addEvent(\"event work /from 30-08-2023 18:00 \" + \"/to 30-08-2023 19:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"            taskList.addToDo(\"todo work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            assertFalse(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"            taskList.markTask(\"mark 1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_stringArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"work\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIntegerMismatchException.class, () -\u003e taskList.markTask(\"mark abc\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_negativeArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"post-lecture quiz\", \"2023-08-30 18:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoNegativeArgException.class, () -\u003e taskList.markTask(\"mark -1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_outOfBoundsArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"project\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIndexOutOfBoundsException.class, () -\u003e taskList.markTask(\"mark 2\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"            Task task \u003d new ToDo(\"todo work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"            taskList.unmarkTask(\"unmark 1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"            assertFalse(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_stringArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"work\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"        taskList.getList().get(0).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIntegerMismatchException.class, () -\u003e taskList.unmarkTask(\"unmark abc\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_negativeArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"post-lecture quiz\", \"2023-08-30 18:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"        taskList.getList().get(0).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoNegativeArgException.class, () -\u003e taskList.unmarkTask(\"unmark -1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_outOfBoundsArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"project\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"        taskList.getList().get(0).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIndexOutOfBoundsException.class, () -\u003e taskList.unmarkTask(\"unmark 2\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Event(\"hackathon\", \"2023-08-29 10:00\", \"2023-09-01 10:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new ToDo(\"marathon\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"            taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"            taskList.deleteTask(\"delete 2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, taskList.getList().size());","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_stringArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"project\", \"2023-09-01 18:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIntegerMismatchException.class, () -\u003e taskList.deleteTask(\"delete a\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_outOfBoundsArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"debug project\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(\"delete 2\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_negativeArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoNegativeArgException.class, () -\u003e taskList.deleteTask(\"delete -1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":207}},{"path":"src/test/java/bruno/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class UiTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    @BeforeEach void setUp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayLines() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        ui.displayLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"- - - - - - - - - - - - - - - - - - - -\\n\", outputStreamCaptor.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayGreeting() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        ui.displayGreeting();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"                ;~~,__,\\n\" + \":-….,———-‘`----/   ._.*\\n\" + \" `-,,,   BRUNO   ,’\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"                + \"     ;   ,~.——;  /\\n\" + \"     :  |     :  |\\n\" + \"     `_ ’     `_ ‘\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"                + \"Woof Woof! I\u0027m Bruno \\uD83D\\uDC3E\\n\" + \"How can I help you?\\n[Please not that date/time \"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"                + \"must be in \\\"yyyy-MM-dd HH:mm\\\" format]\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(s, outputStreamCaptor.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayBye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        ui.displayBye();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"\\tBye Bye! Hope to see you again soon! \\uD83D\\uDC36\\n\", outputStreamCaptor.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        ui.displayMessage(\"testing\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"testing\\n\", outputStreamCaptor.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":44}},{"path":"src/test/java/bruno/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    void testConstructor_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeParseException.class, ()","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"                -\u003e new Deadline(\"sign up for competition\", \"01-09-2023 5pm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    void testGetString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"project\", \"2023-08-29 18:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[D][ ] project (by: 29 August 2023 18:00)\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"ip tasks\", \"2023-09-01 16:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[D][X] ip tasks (by: 01 September 2023 16:00)\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"clean fridge\", \"2023-08-31 23:59\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"D|⭕️|clean fridge|2023-08-31 23:59\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"complete registration\", \"2023-09-02 10:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"D|✅|complete registration|2023-09-02 10:00\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":43}},{"path":"src/test/java/bruno/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class EventTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    void testConstructor_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeParseException.class, ()","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"                -\u003e new Event(\"hackathon\", \"31 August 6pm\", \"1 September 6pm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    void testGetString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"career fair\", \"2023-08-29 10:00\", \"2023-08-31 18:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[E][ ] career fair (from: 29 August 2023 10:00 to: 31 August 2023 18:00)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"                task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"office hours\", \"2023-08-29 19:00\", \"2023-08-29 22:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[E][X] office hours (from: 29 August 2023 19:00 to: 29 August 2023 22:00)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"                task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"hackathon\", \"2023-08-31 18:00\", \"2023-09-01 18:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"E|⭕️|hackathon|2023-08-31 18:00|2023-09-01 18:00\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"career fair\", \"2023-08-29 10:00\", \"2023-08-31 18:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"E|✅|career fair|2023-08-29 10:00|2023-08-31 18:00\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":45}},{"path":"src/test/java/bruno/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_unmarkedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.TODO, \"work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[ ] work\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.DEADLINE, \"project submission\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[X] project submission\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_unmarkedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.EVENT, \"ctf\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"⭕️|ctf\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.TODO, \"laundry\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"✅|laundry\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    void testConvertToLocalDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"2023-08-29 18:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(2023, 8, 29, 18, 00);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.EVENT, \"work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(localDateTime, task.convertToLocalDateTime(s));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    void testConvertToLocalDateTime_incorrectFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"01-09-2023 10:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(2023, 9, 1, 10, 00);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.TODO, \"work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, () -\u003e task.convertToLocalDateTime(s));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    void testConvertToLocalDateTime_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"2023-13-01 23:59\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.DEADLINE, \"sign up\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, () -\u003e task.convertToLocalDateTime(s));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    void testConvertDateTimeToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(2023, 9, 2, 10, 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.EVENT, \"interview\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"02 September 2023 10:00\", task.convertDateTimeToString(localDateTime));","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":68}},{"path":"src/test/java/bruno/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    void testGetString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"ip tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[T][ ] ip tasks\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"assignment\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[T][X] assignment\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"laundry\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"T|⭕️|laundry\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"laundry\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"T|✅|laundry\", task.getFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"todo buy eggs","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"todo break eggs","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"todo cook eggs","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"deadline take bread out of oven /by 2023-08-29 1800","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"event cooking session /from 2023-08-31 1900 /to 2023-08-31 2100","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"mark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"MadLamprey":16}}]
