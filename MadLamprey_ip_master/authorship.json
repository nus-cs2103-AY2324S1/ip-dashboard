[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"# Bruno - Your Productivity Companion","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"\u003e \"If I could be half the person my dog is, I\u0027d be twice the human I am.\" - Charles Yu [(source)](https://www.goodreads.com/quotes/488888-if-i-could-be-half-the-person-my-dog-is)","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"### Bruno helps you remember to complete all your tasks, in order to maximise your productivity.","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"## Getting started","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"- Download the ```.jar``` file from [here](https://github.com/MadLamprey/ip/releases/tag/v0.3)","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"- Open Terminal/Command Prompt and change directory to the directory that contains the ```bruno.jar``` file","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"- Run the command ```java -jar bruno.jar```","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"## Features","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"1. Add tasks based on type - ```ToDo```, ```Deadline``` or ```Event```","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"2. Save and load task list from a ```.txt``` file","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"3. Mark/unmark tasks on completion","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"4. View schedule for a particular date","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"5. Find tasks based on a keyword","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"What makes Bruno the best?","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"- [x] text-based","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"- [x] easy-to-learn with simple commands","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"- [x] ~FAST~ SUPER FAST to use","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"And, it is **FREE** to use!","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"## Usage","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"### `todo` - Add task without any time limit","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"Adds a task of type ```todo``` to the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"`todo TASK`","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"`todo laundry`","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"Woof. I have added this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"[T][ ] laundry","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"Now you have 1 task in your list.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"### `deadline` - Add task with an upper time limit","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"Adds a task of type ```deadline``` to the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"`deadline TASK /by YYYY/MM/DD HH:MM`","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"`deadline ip 2023-09-22 23:59`","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"Woof. I have added this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"[D][ ] ip (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"### `event` - Add task with a start and end time","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"Adds a task of type ```event``` to the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"`event TASK /from YYYY/MM/DD HH:MM /to YYYY/MM/DD HH:MM`","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"`event hackathon /from 2023-09-29 18:00 /to 2023-10-01 10:00`","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"Woof. I have added this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"[E][ ] hackathon (from: 29 September 2023 18:00 to: 01 October 2023 10:00)","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"Now you have 3 tasks in your list.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"### `mark` - Marks the task as done","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"Marks the task at a particular index in the list, as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"`mark INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"`mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"Woof Woof! I have marked the task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"[T][X] laundry","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"### `unmark` - Unmarks the task","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"Unmarks the task at a particular index in the list to show that it is not yet done.","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"`unmark INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"`unmark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"OK, I have marked the task as not done yet.","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"[T][ ] laundry","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"### `delete` - Deletes task from the list","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"Deletes the task at a particular index in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"`delete INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"`delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"I have removed this task from your tasks:","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"[T][ ] laundry","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"### `find` - Searches for a task from the list","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"Searches for task that contains a keyword that is entered by the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"\u0027find KEYWORD\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"`find hackathon`","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"Here are the tasks matching your search:","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"1. [E][ ] hackathon (from: 29 September 2023 18:00 to: 01 October 2023 10:00)","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"### `list` - Lists all the tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"Displays all the tasks in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"Here is the list of your tasks:","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"1. [D][ ] ip (by: 22 September 23:59)","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"2. [E][ ] hackathon (from: 29 September 2023 18:00 to: 01 October 2023 10:00)","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"### `schedule` - Displays schedule for a day","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"Displays all the tasks that lie on, or during the date input by the user","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"`schedule YYYY-MM-DD`","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"`schedule 2023-09-22`","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"Here is the schedule for the given date:","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"1. [D][ ] ip (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"### `note` - Adds a note to a task","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"Adds a note to a task at a given index in the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"`note INDEX NOTE`","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"`note 1 urgent`","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"I have added note to the task:","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"[D][ ] ip (urgent) (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"### `bye` - Exits the application","lastModifiedDate":"2023-09-21"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"Displays a message and closes the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-21"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"`bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"`bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"MadLamprey"},"content":"Bye Bye! Hope to see you again soon!","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"### Command Summary","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"MadLamprey"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003cth\u003eAction\u003c/th\u003e\u003cth\u003eFormat, Example\u003c/th\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eTODO\u003c/td\u003e\u003ctd\u003etodo TASK\u003cbr\u003eEg: todo laundry\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eDEADLINE\u003c/td\u003e\u003ctd\u003edeadline TASK /by YYYY-MM-DD HH:MM\u003cbr\u003eEg: deadline ip tasks ","lastModifiedDate":"2023-09-21"},{"lineNumber":249,"author":{"gitId":"MadLamprey"},"content":"/by 2023-09-22 23:59\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eEVENT\u003c/td\u003e\u003ctd\u003eevent TASK /from YYYY-MM-DD HH:MM /to YYYY-MM-DD HH:MM\u003cbr\u003eEg: event hackathon ","lastModifiedDate":"2023-09-21"},{"lineNumber":251,"author":{"gitId":"MadLamprey"},"content":"/from 2023-09-29 18:00 /to 2023-10-01 10:00","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"MadLamprey"},"content":"\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":253,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eMARK\u003c/td\u003e\u003ctd\u003emark INDEX\u003cbr\u003eEg: mark 1\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eUNMARK\u003c/td\u003e\u003ctd\u003eunmark INDEX\u003cbr\u003eEg: unmark 1\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":255,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eDELETE\u003c/td\u003e\u003ctd\u003eDELETE INDEX\u003cbr\u003eEg: delete 1\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eFIND\u003c/td\u003e\u003ctd\u003efind KEYWORD\u003cbr\u003eEg: find laundry\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":257,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eLIST\u003c/td\u003e\u003ctd\u003elist\u003cbr\u003eEg: list\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":258,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eSCHEDULE\u003c/td\u003e\u003ctd\u003eschedule YYYY-MM-DD\u003cbr\u003eEg: schedule 2023-09-29\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":259,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eNOTE\u003c/td\u003e\u003ctd\u003enote INDEX NOTE\u003cbr\u003eEg: note 1 difficult\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":260,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eBYE\u003c/td\u003e\u003ctd\u003ebye\u003cbr\u003eEg: bye\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"MadLamprey":254,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    mainClass.set(\"bruno.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    archiveFileName \u003d \u0027bruno.jar\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    archiveBaseName \u003d \"bruno\"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"checkstyle {","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"MadLamprey":21,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"# Bruno User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"\u003e \"If I could be half the person my dog is, I\u0027d be twice the human I am.\" - Charles Yu [(source)](https://www.goodreads.com/quotes/488888-if-i-could-be-half-the-person-my-dog-is)","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"### Bruno helps you remember to complete all your tasks, in order to maximise your productivity.","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"## Features:","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"1. Add tasks based on type - ```ToDo```, ```Deadline``` or ```Event```","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"2. Save and load task list from a ```.txt``` file","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"3. Mark/unmark tasks on completion","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"4. View schedule for a particular date","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"5. Find tasks based on a keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"What makes Bruno the best?","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"- [x] text-based","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"- [x] easy-to-learn with simple commands","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"- [x] ~FAST~ SUPER FAST to use","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"And, it is **FREE** to use!","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"### `todo` - Add task without any time limit","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"Adds a task of type ```todo``` to the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"Input format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"`todo TASK`","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"`todo laundry`","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"Woof. I have added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"[T][ ] laundry","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"Now you have 1 task in your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"### `deadline` - Add task with an upper time limit","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"Adds a task of type ```deadline``` to the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"`deadline TASK /by YYYY/MM/DD HH:MM`","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"`deadline ip 2023-09-22 23:59`","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"Woof. I have added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"[D][ ] ip (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"### `event` - Add task with a start and end time","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"Adds a task of type ```event``` to the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"`event TASK /from YYYY/MM/DD HH:MM /to YYYY/MM/DD HH:MM`","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"`event hackathon /from 2023-09-29 18:00 /to 2023-10-01 10:00`","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"Woof. I have added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"[E][ ] hackathon (from: 29 September 2023 18:00 to: 01 October 2023 10:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"Now you have 3 tasks in your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"### `mark` - Marks the task as done","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"Marks the task at a particular index in the list, as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"`mark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"`mark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"Woof Woof! I have marked the task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"[T][X] laundry","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"### `unmark` - Unmarks the task","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"Unmarks the task at a particular index in the list to show that it is not yet done.","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"`unmark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"`unmark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"OK, I have marked the task as not done yet.","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"[T][ ] laundry","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"### `delete` - Deletes task from the list","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"Deletes the task at a particular index in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"`delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"`delete 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"I have removed this task from your tasks:","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"[T][ ] laundry","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"### `find` - Searches for a task from the list","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"Searches for task that contains a keyword that is entered by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"\u0027find KEYWORD\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"`find hackathon`","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"Here are the tasks matching your search:","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"1. [E][ ] hackathon (from: 29 September 2023 18:00 to: 01 October 2023 10:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"MadLamprey"},"content":"### `list` - Lists all the tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"Displays all the tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"Here is the list of your tasks:","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"1. [D][ ] ip (by: 22 September 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"2. [E][ ] hackathon (from: 29 September 2023 18:00 to: 01 October 2023 10:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"### `schedule` - Displays schedule for a day","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"Displays all the tasks that lie on, or during the date input by the user","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"`schedule YYYY-MM-DD`","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"`schedule 2023-09-22`","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"Here is the schedule for the given date:","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"1. [D][ ] ip (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"### `note` - Adds a note to a task","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"Adds a note to a task at a given index in the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"`note INDEX NOTE`","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"`note 1 urgent`","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"I have added note to the task:","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"[D][ ] ip (urgent) (by: 22 September 2023 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"### `bye` - Exits the application","lastModifiedDate":"2023-09-20"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"Displays a message and closes the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"Input format:","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"Bye Bye! Hope to see you again soon!","lastModifiedDate":"2023-09-20"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"### Command Summary","lastModifiedDate":"2023-09-20"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":238,"author":{"gitId":"MadLamprey"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":239,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003cth\u003eAction\u003c/th\u003e\u003cth\u003eFormat, Example\u003c/th\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":240,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eTODO\u003c/td\u003e\u003ctd\u003etodo TASK\u003cbr\u003eEg: todo laundry\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eDEADLINE\u003c/td\u003e\u003ctd\u003edeadline TASK /by YYYY-MM-DD HH:MM\u003cbr\u003eEg: deadline ip tasks ","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"/by 2023-09-22 23:59\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eEVENT\u003c/td\u003e\u003ctd\u003eevent TASK /from YYYY-MM-DD HH:MM /to YYYY-MM-DD HH:MM\u003cbr\u003eEg: event hackathon ","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"MadLamprey"},"content":"/from 2023-09-29 18:00 /to 2023-10-01 10:00","lastModifiedDate":"2023-09-20"},{"lineNumber":245,"author":{"gitId":"MadLamprey"},"content":"\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":246,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eMARK\u003c/td\u003e\u003ctd\u003emark INDEX\u003cbr\u003eEg: mark 1\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eUNMARK\u003c/td\u003e\u003ctd\u003eunmark INDEX\u003cbr\u003eEg: unmark 1\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eDELETE\u003c/td\u003e\u003ctd\u003eDELETE INDEX\u003cbr\u003eEg: delete 1\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":249,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eFIND\u003c/td\u003e\u003ctd\u003efind KEYWORD\u003cbr\u003eEg: find laundry\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eLIST\u003c/td\u003e\u003ctd\u003elist\u003cbr\u003eEg: list\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":251,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eSCHEDULE\u003c/td\u003e\u003ctd\u003eschedule YYYY-MM-DD\u003cbr\u003eEg: schedule 2023-09-29\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eNOTE\u003c/td\u003e\u003ctd\u003enote INDEX NOTE\u003cbr\u003eEg: note 1 difficult\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":253,"author":{"gitId":"MadLamprey"},"content":"\u003ctr\u003e\u003ctd\u003eBYE\u003c/td\u003e\u003ctd\u003ebye\u003cbr\u003eEg: bye\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"MadLamprey":233,"-":20}},{"path":"src/main/java/bruno/Bruno.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" * The Bruno class represents the main application class that handles the running of the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"public class Bruno {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Bruno class with the specified directory path and file name","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     * @param dirPath The path of the directory that will store the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * @param fileName The name of the file where the tasks are being loaded, or read from.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public Bruno(String dirPath, String fileName) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            tasks \u003d new TaskList(storage, ui);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     * Runs the Bruno application, allowing the user to interact with the task management system","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    public String runBruno(String s) throws bruno.exceptions.BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        assert !s.isBlank() : \"Input is empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        String flag \u003d parser.parseInput(s);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        assert !flag.isBlank() : \"Response is empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        if (flag.equals(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"            return ui.displayBye();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        return flag;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    public String getResponse(String s) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"            return runBruno(s);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException | DateTimeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":54}},{"path":"src/main/java/bruno/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private Rectangle rectangle;","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    private StackPane outline;","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        rectangle.getStyleClass().add(\"rectangle\");","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        double dialogBoxHeight \u003d dialog.getBoundsInLocal().getHeight();","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        rectangle.setHeight(dialogBoxHeight + 20);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    public static DialogBox getBrunoDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"MadLamprey":71}},{"path":"src/main/java/bruno/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" * Launcher","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private String dirPath \u003d \"data/\";","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    private String fileName \u003d \"bruno.txt\";","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private Bruno bruno \u003d new Bruno(dirPath, fileName);","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"            scene.getStylesheets().add(\"/styles/styles.css\");","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"            stage.setTitle(\"Bruno - Your Productivity Dog 🦮\");","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBruno(bruno);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startUpBruno();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"MadLamprey":38}},{"path":"src/main/java/bruno/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    private Bruno bruno;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaHuman.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    private Image brunoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDog.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    @FXML private void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        ui \u003d new bruno.UI();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        Background bg \u003d new Background(new BackgroundFill(","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"                Color.GREEN, CornerRadii.EMPTY, Insets.EMPTY));","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        this.setBackground(bg);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public void setBruno(Bruno b) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        bruno \u003d b;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"     * appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    @FXML private void handleUserInput() throws bruno.exceptions.BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        assert !input.isBlank() : \"Input cannot be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        dialogContainer.getChildren().add(userDialog);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        PauseTransition userDelay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        userDelay.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"            String response \u003d bruno.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"            assert !response.isBlank() : \"Response cannot be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"            DialogBox dialogBox \u003d DialogBox.getBrunoDialog(response, brunoImage);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"            dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"            if (response.startsWith(\"Bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"                PauseTransition exitDelay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"                exitDelay.setOnFinished(exitEvent -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"                    System.exit(0);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"                });","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"                exitDelay.play();","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        userDelay.play();","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"     * Displays the greeting when the app starts up.","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"    public void startUpBruno() {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        String text \u003d ui.displayGreeting();","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        DialogBox brunoDialog \u003d DialogBox.getBrunoDialog(text, brunoImage);","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        dialogContainer.getChildren().clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        dialogContainer.getChildren().add(brunoDialog);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"MadLamprey":87}},{"path":"src/main/java/bruno/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoUnknownTaskException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.TaskType;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" * The Parser class is responsible for parsing the user input and calling methods to perform the","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" * appropriate tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * Creates instances of the Parser class","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     * @param taskList","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        assert taskList !\u003d null : \"Tasklist has not been initialised\";","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     * Parses the user input and calls methods to perform the appropriate task.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     * @param input User input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"     * @return Flag value for termination.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if any error occurs in any of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public String parseInput(String input) throws BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"            String taskName \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"            TaskType type \u003d TaskType.valueOf(taskName);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"            switch (type) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"            case BYE:","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"                return \"bye\";","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"            case LIST:","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"                return taskList.displayList();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"            case MARK:","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"                return taskList.markTask(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"                return taskList.unmarkTask(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"            case DELETE:","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"                return taskList.deleteTask(input) + \"\\n\" + taskList.displayListSum();","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"            case TODO:","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"                return taskList.addToDo(input) + \"\\n\" + taskList.displayListSum();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"                return taskList.addDeadline(input) + \"\\n\" + taskList.displayListSum();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"            case EVENT:","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"                return taskList.addEvent(input) + \"\\n\" + taskList.displayListSum();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"            case SCHEDULE:","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"                return taskList.showSchedule(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"            case FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"                return taskList.findTasks(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"            case NOTE:","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"                return taskList.addNote(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"            default:","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"                throw new BrunoUnknownTaskException();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoUnknownTaskException();","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":65}},{"path":"src/main/java/bruno/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * The Storage class is responsible for all actions relating to the bruno.txt file, such as loading the","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" * file at the start of the application, and writing to the file whenever changes are made to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    private String dirPath;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    private String fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Storage class using the specified directory path and file name.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"     * @param dirPath The path of the directory where the file will be stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     * @param fileName The name of the file that is loaded, or the tasks are written to.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    public Storage(String dirPath, String fileName) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        assert !dirPath.isEmpty() : \"Directory path is not specified\";","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        assert !fileName.isEmpty() : \"File name is not specified\";","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        File directory \u003d new File(this.dirPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assert directory.exists() : \"Directory could not be created\";","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        taskList \u003d new TaskList(this, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"     * Writes to the bruno.txt file by reading all tasks in the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dirPath + this.fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"                fileWriter.write(task.getFileString() + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"     * Loads the bruno.txt file and populates the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if file to be read is not in proper format.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    public void loadFile(TaskList taskList) throws BrunoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"            File file \u003d new File(this.dirPath + this.fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            assert file.exists() : \"File could not be created\";","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"                String s \u003d sc.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"                String[] task \u003d s.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"                List\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"                populateList(task, list);","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"                taskList.setList(list);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"            sc.close();","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"    private static void populateList(String[] task, java.util.List\u003cbruno.task.Task\u003e list)","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"            throws bruno.exceptions.BrunoIncorrectFormatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        switch (task[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"            String note \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"            if (task.length \u003d\u003d 3) {","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"                note \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"                note \u003d task[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"            list.add(new ToDo(task[2], note));","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"            if (task.length \u003d\u003d 4) {","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"                list.add(new Deadline(task[2], task[3], \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"                list.add(new Deadline(task[2], task[4], task[3]));","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"            if (task.length \u003d\u003d 5) {","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"                list.add(new Event(task[2], task[3], task[4], \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"                list.add(new Event(task[2], task[4], task[5], task[3]));","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"            throw new bruno.exceptions.BrunoIncorrectFormatException();","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":117}},{"path":"src/main/java/bruno/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoEmptyException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIndexOutOfBoundsException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIntegerMismatchException;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingDeadlineException;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingEventException;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoNegativeArgException;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":" * The TaskList class handles all functionality relating to the tasks of tasks, such as addition, deletion,","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":" * update and display of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    TaskList(Storage storage, UI ui) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     * Adds a task of type ToDo to the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for task.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user does not provide description for task.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public String addToDo(String task) throws BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        String note \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        if (task.contains(\"/n\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"            note \u003d task.split(\"/n\")[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            description \u003d task.substring(task.indexOf(\" \") + 1, task.indexOf(\u0027/\u0027));","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"            description \u003d task.substring(task.indexOf(\" \") + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        Task todo \u003d new ToDo(description, note);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        return ui.displayAddMessage(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     * Adds a task of type Deadline to the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user does not provide description or deadline date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    public String addDeadline(String task) throws BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1 || task.indexOf(\u0027/\u0027) \u003d\u003d (\"deadline\".length() + 1)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        if (!task.substring(task.indexOf(\"deadline\") + 1).contains(\"/by\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoMissingDeadlineException();","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        String description \u003d task.substring(task.indexOf(\u0027 \u0027) + 1, task.indexOf(\"/by\") - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        String by \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        String note \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        if (task.contains(\"/n\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"            by \u003d task.substring(task.indexOf(\"/by\") + 4, task.indexOf(\"/n\") - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"            note \u003d task.substring(task.indexOf(\"/n\") + 3);","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"            by \u003d task.substring(task.lastIndexOf(\u0027/\u0027) + 4);","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        Task deadline \u003d new Deadline(description, by, note);","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        return ui.displayAddMessage(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"     * Adds a task of type Event to the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if the user does not provide description or start/end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"    public String addEvent(String task) throws BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1 || task.indexOf(\u0027/\u0027) \u003d\u003d (\"event\".length() + 1)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"        if (!task.substring(task.indexOf(\"event\") + 1).contains(\"/from\") || !task.substring(","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"                task.indexOf(\"event\") + 1).contains(\"/to\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoMissingEventException();","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"        String description \u003d task.substring(task.indexOf(\u0027 \u0027) + 1, task.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        String from \u003d task.substring(task.indexOf(\"from\") + 5, task.lastIndexOf(\"/to\") - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"        String note \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"        if (task.contains(\"/n\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"            to \u003d task.substring(task.indexOf(\"to\") + 3, task.indexOf(\"/n\") - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            note \u003d task.substring(task.indexOf(\"/n\") + 3);","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"            to \u003d task.substring(task.indexOf(\"to\") + 3);","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"        Task event \u003d new Event(description, from, to, note);","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(event);","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"        return ui.displayAddMessage(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"     * Marks a task as done from the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if the user tries to mark an invalid task.","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"    public String markTask(String task) throws BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"        String[] parsedTask \u003d task.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"        checkArgs(parsedTask[1], parsedTask[0], tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"        int markVal \u003d Integer.parseInt(parsedTask[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"        tasks.get(markVal - 1).markAsDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"        assert tasks.get(markVal - 1).checkDone() : \"Task could not be marked\";","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"        return ui.displayMarkMessage(this, markVal);","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"     * Unmarks a task to show that it is not done, from the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"     * @param task The Unmark command input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user tries to unmark an invalid task.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"    public String unmarkTask(String task) throws BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"        String[] parsedTask \u003d task.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"        checkArgs(parsedTask[1], parsedTask[0], tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"        int unmarkVal \u003d Integer.parseInt(parsedTask[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"        tasks.get(unmarkVal - 1).unMark();","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"        assert !tasks.get(unmarkVal - 1).checkDone() : \"Task could not be unmarked\";","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"        return ui.displayUnmarkMessage(this, unmarkVal);","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"     * @param task The Delete command input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"     * @throws BrunoException Thrown if user tries to delete an invalid task.","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"    public String deleteTask(String task) throws BrunoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"        String[] parsedTask \u003d task.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"        checkArgs(parsedTask[1], parsedTask[0], tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"        int deleteVal \u003d Integer.parseInt(parsedTask[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"        String taskString \u003d tasks.get(deleteVal - 1).getString();","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"        int k \u003d tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"        tasks.remove(deleteVal - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"        assert tasks.size() \u003d\u003d (k - 1) : \"Task could not be deleted\";","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"        return ui.displayDeleteMessage(taskString);","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"     * Displays the number of tasks in the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"    public String displayListSum() {","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"        assert !tasks.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"        return \"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" \" + \"in your \"","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"                + \"list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"     * Displays the tasks of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"    public String displayList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"            String taskString \u003d tasks.get(i).getString();","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"            String terminator \u003d (i !\u003d tasks.size() - 1) ? \"\\n\\n\" : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"            taskInfo +\u003d (i + 1) + \". \" + taskString + terminator;","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"            taskInfo \u003d \"You have no tasks to do.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"            taskInfo \u003d \"Here is the list of your tasks:\\n\" + taskInfo;","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"        return taskInfo;","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"     * Displays all the tasks the user has on a given date.","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"     * @param task The Schedule command input by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if date input by the user is not correct format.","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"    public String showSchedule(String task) throws DateTimeException, BrunoException {","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"        String date \u003d task.split(\" \")[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-13"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"        LocalDate d \u003d LocalDate.parse(date, format);","lastModifiedDate":"2023-09-13"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"            if (checkDate(t, d)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"                taskInfo +\u003d (++counter) + \". \" + t.getString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"        return ui.displaySchedule(taskInfo, counter);","lastModifiedDate":"2023-09-13"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"     * Finds all tasks whose description contains the keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"     * @param task The user input for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"    public String findTasks(String task) throws BrunoException {","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"MadLamprey"},"content":"        assert !task.substring(task.indexOf(\"find\") + 5).equals(\"\") : \"Search keyword must not be empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"MadLamprey"},"content":"        String keyWord \u003d task.split(\" \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"MadLamprey"},"content":"            String description \u003d t.getDescription();","lastModifiedDate":"2023-09-13"},{"lineNumber":245,"author":{"gitId":"MadLamprey"},"content":"            if (description.contains(keyWord)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"MadLamprey"},"content":"                String taskString \u003d t.getString();","lastModifiedDate":"2023-09-13"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"                taskInfo +\u003d (++counter) + \". \" + taskString + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":248,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"MadLamprey"},"content":"        return ui.displaySearch(taskInfo, counter);","lastModifiedDate":"2023-09-13"},{"lineNumber":251,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":254,"author":{"gitId":"MadLamprey"},"content":"     * Adds a note to an existing task from the list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":255,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":256,"author":{"gitId":"MadLamprey"},"content":"     * @param task User input for the note to be added.","lastModifiedDate":"2023-09-13"},{"lineNumber":257,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"MadLamprey"},"content":"    public String addNote(String task) throws BrunoException {","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"MadLamprey"},"content":"        if (task.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoEmptyException(task.split(\" \")[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":261,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":262,"author":{"gitId":"MadLamprey"},"content":"        String[] parsedTask \u003d task.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"MadLamprey"},"content":"        checkArgs(parsedTask[1], parsedTask[0], tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"MadLamprey"},"content":"        int noteVal \u003d Integer.parseInt(parsedTask[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"MadLamprey"},"content":"        String note \u003d task.substring(task.indexOf(parsedTask[1]) + parsedTask[1].length() + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"MadLamprey"},"content":"        tasks.get(noteVal - 1).setNote(note);","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":268,"author":{"gitId":"MadLamprey"},"content":"        return ui.displayNoteMessage(this, noteVal);","lastModifiedDate":"2023-09-13"},{"lineNumber":269,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":270,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":271,"author":{"gitId":"MadLamprey"},"content":"    private static void checkArgs(String val, String task, int size) throws BrunoException {","lastModifiedDate":"2023-09-13"},{"lineNumber":272,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":273,"author":{"gitId":"MadLamprey"},"content":"            int a \u003d Integer.parseInt(val);","lastModifiedDate":"2023-09-13"},{"lineNumber":274,"author":{"gitId":"MadLamprey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIntegerMismatchException(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(val) \u003e size) {","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoIndexOutOfBoundsException(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":279,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":280,"author":{"gitId":"MadLamprey"},"content":"        if (Integer.parseInt(val) \u003c 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":281,"author":{"gitId":"MadLamprey"},"content":"            throw new BrunoNegativeArgException(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":282,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":285,"author":{"gitId":"MadLamprey"},"content":"    public void setList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":286,"author":{"gitId":"MadLamprey"},"content":"        assert list !\u003d null : \"List should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":287,"author":{"gitId":"MadLamprey"},"content":"        this.tasks \u003d list;","lastModifiedDate":"2023-08-31"},{"lineNumber":288,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":289,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":290,"author":{"gitId":"MadLamprey"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":291,"author":{"gitId":"MadLamprey"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":292,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":293,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"MadLamprey"},"content":"    private static boolean checkDate(Task t, LocalDate d) {","lastModifiedDate":"2023-09-13"},{"lineNumber":295,"author":{"gitId":"MadLamprey"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"MadLamprey"},"content":"            LocalDate by \u003d ((Deadline) t).getBy().toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"MadLamprey"},"content":"            return d.isEqual(by);","lastModifiedDate":"2023-09-13"},{"lineNumber":298,"author":{"gitId":"MadLamprey"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"MadLamprey"},"content":"            LocalDate from \u003d ((Event) t).getFrom().toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":300,"author":{"gitId":"MadLamprey"},"content":"            LocalDate by \u003d ((Event) t).getBy().toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":301,"author":{"gitId":"MadLamprey"},"content":"            return (d.isAfter(from) \u0026\u0026 d.isBefore(by));","lastModifiedDate":"2023-09-13"},{"lineNumber":302,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":303,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":304,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":305,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":306,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"MadLamprey":306}},{"path":"src/main/java/bruno/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":" * The UI class is responsible for the display of messages, i.e, it controls the user-interface of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" * management system.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"public class UI {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     * Displays the divider lines before and after each command.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    public void displayLines() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"            System.out.print((i \u003d\u003d 0 ? \"-\" : \" -\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        System.out.println();","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"     * Displays the greeting at the start of the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    public String displayGreeting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        String name \u003d \"Bruno\";","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        return \"Woof Woof! I\u0027m \" + name + \"\\nHow can I help you?\";","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"     * Displays the \"bye\" message when the command \"bye\" is entered.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    public String displayBye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        return \"Bye Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     * Displays message when a task is added.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * @param taskList List of tasks to which task is added.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     * @return The message being displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public String displayAddMessage(TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        String taskString \u003d tasks.get(tasks.size() - 1).getString();","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        return \"Woof. I have added this task:\\n\" + taskString;","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"     * Displays message when a task is marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"     * @param taskList List of tasks of which a task is marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"     * @param markVal The index of the task that is marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"     * @return The message being displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    public String displayMarkMessage(TaskList taskList, int markVal) {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        String taskString \u003d tasks.get(markVal - 1).getString();","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        return \"Woof Woof! I have marked the task as done.\\n\" + taskString;","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     * Displays message when a task is unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"     * @param taskList List of tasks of which a task is unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"     * @param unmarkVal The index of the task that is unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"     * @return The message being displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    public String displayUnmarkMessage(TaskList taskList, int unmarkVal) {","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        String taskString \u003d tasks.get(unmarkVal - 1).getString();","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        return \"OK, I have marked the task as not done yet.\\n\" + taskString;","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"     * Displays message when a task is deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"     * @param taskString The task that is to be deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"     * @return The message being displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"    public String displayDeleteMessage(String taskString) {","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        return \"I have removed this task from your tasks:\\n\" + taskString;","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"     * Displays the schedule when the command is input.","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"     * @param taskInfo String containing schedule for the day.","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"     * @param counter Number of tasks in the schedule.","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"     * @return The message containing schedule.","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"    public String displaySchedule(String taskInfo, int counter) {","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"            return \"You have no deadlines or events on this date.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"            return \"Here is the schedule for the given date:\\n\" + taskInfo;","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"     * Displays the search items when the command is input.","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"     * @param taskInfo String containing the search items.","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"     * @param counter Number of items in the search.","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"     * @return The message containing search items.","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"    public String displaySearch(String taskInfo, int counter) {","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            return \"There are no items matching your search.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            return \"Here are the tasks matching your search:\\n\" + taskInfo;","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"     * Displays a message when a note is added to a task.","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"     * @param taskList List of tasks to which a note is added.","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"     * @param noteVal Index of the task to which note is added.","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"    public String displayNoteMessage(TaskList taskList, int noteVal) {","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"        String taskString \u003d tasks.get(noteVal - 1).getString();","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"        return \"I have added note to the task:\\n\" + taskString;","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"MadLamprey":127}},{"path":"src/main/java/bruno/exceptions/BrunoDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoDateTimeFormatException handles the case where the user has entered a date/time that is not in","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoDateTimeFormatException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoDateTimeFormatException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"Date and Time are not in correct format. They must be in YYYY-MM-DD HH:MM format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoEmptyException handles the case where the description for a new task is empty.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class BrunoEmptyException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    private String type;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    public BrunoEmptyException(String taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Description of \" + taskType + \" cannot be empty!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":13}},{"path":"src/main/java/bruno/exceptions/BrunoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoException is the superclass for all exception handling classes.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class BrunoException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of BrunoException/","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"     * @param message The message conveying the exception.","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    public BrunoException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"        assert !message.isBlank() : \"Exception message is empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":16}},{"path":"src/main/java/bruno/exceptions/BrunoIncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoIncorrectFormatException handles the case where the data in the file to be read is not in","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * proper format.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoIncorrectFormatException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoIncorrectFormatException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"File is not in correct format.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoIndexOutOfBoundsException handles the case where the user has entered an argument that is","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * greater than the number of tasks in the list, for mark, unmark or delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoIndexOutOfBoundsException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    private String activity;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"     * Displays the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * @param activity One of mark, unmark or delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    public BrunoIndexOutOfBoundsException(String activity) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Task numbers to be \" + activity","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"                + \"ed cannot be greater than number of tasks in the list!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":20}},{"path":"src/main/java/bruno/exceptions/BrunoIntegerMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoIntegerMismatchException handles the case where the argument for mark, unmark or delete is not","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * an integer value.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoIntegerMismatchException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    private String activity;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    public BrunoIntegerMismatchException(String activity) {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Tasks to be \" + activity + \"ed can only be integers!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":14}},{"path":"src/main/java/bruno/exceptions/BrunoMissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoMissingDeadlineException handles the case where the user enters a new Deadline task without a","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoMissingDeadlineException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoMissingDeadlineException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! You cannot add a Deadline task without setting the deadline!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoMissingEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoMissingEventException handles the case where an Event task is added without either the start or","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * the end time.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoMissingEventException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    public BrunoMissingEventException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! You cannot add an Event task without setting start and end time!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":12}},{"path":"src/main/java/bruno/exceptions/BrunoNegativeArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoNegativeArgExpression handles the case where the user has entered an argument that is negative,","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" * for mark, unmark or delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class BrunoNegativeArgException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    private String activity;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    public BrunoNegativeArgException(String activity) {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"        super(\"Ruff Ruff! Task numbers to be \" + activity + \"ed cannot be negative!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":14}},{"path":"src/main/java/bruno/exceptions/BrunoUnknownTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The BrunoUnknownTaskException handles the case where the user has entered an invalid command.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class BrunoUnknownTaskException extends BrunoException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public BrunoUnknownTaskException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"        super(\"I am sorry, I do not understand what you mean.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"MadLamprey":11}},{"path":"src/main/java/bruno/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":" * The Deadline task is responsible for all tasks of Deadline type.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Deadline class.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @param by          Deadline of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    public Deadline(String description, String by, String note) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        super(TaskType.DEADLINE, description, note);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        this.by \u003d this.convertToLocalDateTime(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if the \u0027by\u0027 LocalDateTime cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getString() throws DateTimeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        return \"[D]\" + super.getString() + \" (by: \" + convertDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        return \"D|\" + super.getFileString() + \"|\" + by.toString().replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * Returns the \u0027by\u0027 value for the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     * @return The \u0027by\u0027 value.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"MadLamprey":46}},{"path":"src/main/java/bruno/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":" * The Event class is responsible for all Event tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Event class.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     * @param from        Start time of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     * @param by          End time of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public Event(String description, String from, String by, String note) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        super(TaskType.EVENT, description, note);","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        this.from \u003d this.convertToLocalDateTime(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        this.by \u003d this.convertToLocalDateTime(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if LocalDateTime values \u0027from\u0027 and \u0027by\u0027 cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getString() throws DateTimeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        return \"[E]\" + super.getString() + \" (from: \" + convertDateTimeToString(from) + \" to: \"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"                + convertDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the task, as required by the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if LocalDateTime values \u0027from\u0027 and \u0027by\u0027 cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getFileString() throws DateTimeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        return \"E|\" + super.getFileString() + \"|\" + from.toString().replace(\u0027T\u0027, \u0027 \u0027) + \"|\" + by.toString()","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"                .replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        return this.from;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"MadLamprey":53}},{"path":"src/main/java/bruno/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" * Superclass for all task types.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    protected String note;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     * Creates a new instance of the Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * @param type        The task type.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    public Task(TaskType type, String description, String note) {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        this.taskType \u003d type;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    public String getString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description + (!note.isBlank() ? \" (\" + note + \")\" : \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     * Returns a string representation of the task, as required for the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * @return The string representation of the task, for the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    public String getFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        return (isDone ? \"🟢\" : \"🔴\") + \"|\" + description + \"|\" + note;","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"     * Marks the current task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"     * Marks the current task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"     * Converts the string into instance of LocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     * @param s The input string.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"     * @return LocalDateTime instance for the converted string.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if string cannot be converted to LocalDateTime.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime convertToLocalDateTime(String s) throws DateTimeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        return LocalDateTime.parse(s, formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"     * Converts the LocalDateTime instance into a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"     * @param dt LocalDateTime instance to be converted.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"     * @return String representation of the LocalDateTime instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"     * @throws DateTimeException Thrown if LocalDateTime cannot be converted to string.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"    public String convertDateTimeToString(LocalDateTime dt) throws DateTimeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        return dt.format(formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"    public boolean checkDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"    public void setNote(String s) {","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"        this.note \u003d s;","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"MadLamprey":95}},{"path":"src/main/java/bruno/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * Enum for all valid commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, LIST, BYE, DELETE, SCHEDULE, FIND, NOTE","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"MadLamprey":8}},{"path":"src/main/java/bruno/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * The ToDo class is responsible for all tasks of Todo type.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public ToDo(String description, String note) {","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"        super(TaskType.TODO, description, note);","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        return \"[T]\" + super.getString();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    @Override public String getFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        return \"T|\" + super.getFileString();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"MadLamprey":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        \u003cStackPane fx:id\u003d\"outline\" \u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"            \u003cRectangle fx:id\u003d\"rectangle\" width\u003d\"270\" fill\u003d\"lemonchiffon\" styleClass\u003d\"rectangle\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"            \u003cStackPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"                \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" style\u003d\"-fx-font-family: \u0027Chalkboard\u0027;\"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"                      wrappingWidth\u003d\"265\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"                    \u003cInsets top\u003d\"10.0\" bottom\u003d\"10.0\" left\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        \u003cStackPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            \u003cCircle radius\u003d\"50\" fill\u003d\"lightblue\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"                       preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        \u003cInsets bottom\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"MadLamprey":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"410.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bruno.MainWindow\" \u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"                   prefWidth\u003d\"334.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"334.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"                \u003cImageView fitHeight\u003d\"35.0\" fitWidth\u003d\"50.0\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"                    \u003cImage url\u003d\"/images/button.png\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557\" prefWidth\u003d\"410.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"                    vvalue\u003d\"1.0\" style\u003d\"-fx-background-color: #98BF64\" \u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"390.0\" prefHeight\u003d\"552\"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"                      style\u003d\"-fx-background-color: #98BF64 \"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"MadLamprey":32}},{"path":"src/test/java/bruno/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoUnknownTaskException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    @BeforeEach void setUp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        parser \u003d new Parser(new TaskList(new Storage(\"xxx\", \"yyy\"), new UI()));","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @Test void testParse_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            String task \u003d \"todo work\";","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(\"Woof. I have added this task:\\n[T][ ] work\\nNow you have 1 task in your list.\",","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"                    parser.parseInput(task));","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Test void testParse_byeTask_falseReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"            String task \u003d \"bye\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(\"bye\", parser.parseInput(task));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    @Test void testParse_unknownTask_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoUnknownTaskException.class, () -\u003e parser.parseInput(\"show tasks\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":43}},{"path":"src/test/java/bruno/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIncorrectFormatException;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    private String dirPath;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private String fileName;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private UI ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    void setUp() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        dirPath \u003d \"data-test/\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        fileName \u003d \"bruno-test.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDirectoryExists_normalCase_trueReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        File directory \u003d new File(dirPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(directory.exists());","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        directory.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    @Test void testWriteToFile_normalInput_writtenToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        list.add(new ToDo(\"work\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(list);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    @Test void testWriteToFile_emptyList_writtenToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(list);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(0, file.length());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_normalInput_fileLoaded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new ToDo(\"work\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Deadline(\"quiz\", \"2023-08-29 18:00\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Event(\"hackathon\", \"2023-08-31 18:00\", \"2023-09-01 18:00\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"            taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(6, taskList.getList().size());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_fileDoesNotExist_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"            file.delete();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(0, taskList.getList().size());","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_invalidTaskType_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.write(\"X|🔴|work\");","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(e instanceof BrunoIncorrectFormatException);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.write(\"D|🟢|work|23-08-2023 18:00\");","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(e instanceof BrunoIncorrectFormatException);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"    @Test void testLoadFile_missingDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"        File file \u003d new File(dirPath + fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"            fileWriter.write(\"D|🔴|work\");","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"            storage.loadFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(e instanceof BrunoIncorrectFormatException);","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":129}},{"path":"src/test/java/bruno/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoEmptyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIndexOutOfBoundsException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoIntegerMismatchException;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingDeadlineException;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoMissingEventException;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import bruno.exceptions.BrunoNegativeArgException;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private Storage storage \u003d new Storage(\"data-test/\", \"bruno-test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private TaskList taskList \u003d new TaskList(this.storage, this.ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddToDo_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"            taskList.addToDo(\"todo buy groceries\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0) instanceof ToDo);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddToDo_withoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        Exception exception \u003d assertThrows(BrunoEmptyException.class, () -\u003e taskList.addToDo(\"todo\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! Description of todo cannot be empty!\", exception.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"            taskList.addDeadline(\"deadline assignment /by 2023-08-30 19:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0) instanceof Deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_withoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        Exception exception \u003d assertThrows(BrunoEmptyException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addDeadline(\"deadline \" + \"/by 2023-08-30 19:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! Description of deadline cannot be empty!\", exception.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_withoutDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        Exception exception \u003d assertThrows(BrunoMissingDeadlineException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addDeadline(\"deadline work\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! You cannot add a Deadline task without setting the deadline!\",","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"                exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddDeadline_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addDeadline(\"deadline \" + \"work /by 29-08-2023 19:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"            taskList.addEvent(\"event presentation /from 2023-08-31 10:00 /to 2023-08-31 11:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0) instanceof Event);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_withoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        Exception e \u003d assertThrows(BrunoEmptyException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addEvent(\"event /from \" + \"2023-08-31 10:00 /to \" + \"2023-08-31 11:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! Description of event cannot be empty!\", e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_withoutStartEndTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        Exception e \u003d assertThrows(BrunoMissingEventException.class, () -\u003e taskList.addEvent(\"event work\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Ruff Ruff! You cannot add an Event task without setting start and end time!\",","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"                e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddEvent_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, ()","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"                -\u003e taskList.addEvent(\"event work /from 30-08-2023 18:00 \" + \"/to 30-08-2023 19:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"            taskList.addToDo(\"todo work\");","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            assertFalse(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"            taskList.markTask(\"mark 1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_stringArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"work\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIntegerMismatchException.class, () -\u003e taskList.markTask(\"mark abc\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_negativeArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"post-lecture quiz\", \"2023-08-30 18:00\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoNegativeArgException.class, () -\u003e taskList.markTask(\"mark -1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"    @Test void testMarkTask_outOfBoundsArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"project\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIndexOutOfBoundsException.class, () -\u003e taskList.markTask(\"mark 2\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"            Task task \u003d new ToDo(\"todo work\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"            assertTrue(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"            taskList.unmarkTask(\"unmark 1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"            assertFalse(tasks.get(0).checkDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_stringArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"work\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"        taskList.getList().get(0).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIntegerMismatchException.class, () -\u003e taskList.unmarkTask(\"unmark abc\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_negativeArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"post-lecture quiz\", \"2023-08-30 18:00\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"        taskList.getList().get(0).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoNegativeArgException.class, () -\u003e taskList.unmarkTask(\"unmark -1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"    @Test void testUnmarkTask_outOfBoundsArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"project\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"        taskList.getList().get(0).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIndexOutOfBoundsException.class, () -\u003e taskList.unmarkTask(\"unmark 2\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Event(\"hackathon\", \"2023-08-29 10:00\", \"2023-09-01 10:00\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new ToDo(\"marathon\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"            taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"            taskList.deleteTask(\"delete 2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(1, taskList.getList().size());","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_stringArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"project\", \"2023-09-01 18:00\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIntegerMismatchException.class, () -\u003e taskList.deleteTask(\"delete a\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_outOfBoundsArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"debug project\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(\"delete 2\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDeleteTask_negativeArg_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoNegativeArgException.class, () -\u003e taskList.deleteTask(\"delete -1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"    @Test void testFindTask_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"            String res \u003d taskList.findTasks(\"find fair\");","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"                    \"Here are the tasks matching your search:\\n1. [E][ ] career fair (from: 29 August 2023\"","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"                            + \" 17:00 to: 31 August 2023 17:00)\\n\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddNote_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"            String res \u003d taskList.addNote(\"note 1 urgent\");","lastModifiedDate":"2023-09-21"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(\"I have added note to the task:\\n[E][ ] career fair (urgent) (from: 29 August 2023 \"","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"                    + \"17:00 to: 31 August 2023 17:00)\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-09-21"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddNote_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIndexOutOfBoundsException.class, () -\u003e taskList.addNote(\"note 2 \" + \"urgent\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddNote_stringArg_exceptionThrown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoIntegerMismatchException.class, () -\u003e taskList.addNote(\"note abc \" + \"urgent\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"MadLamprey"},"content":"    @Test void testAddNote_negativeArg_exceptionThrown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(BrunoNegativeArgException.class, () -\u003e taskList.addNote(\"note -1 \" + \"urgent\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":249,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":251,"author":{"gitId":"MadLamprey"},"content":"    @Test void testShowSchedule_normalInput_correctOutputGenerated() {","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":253,"author":{"gitId":"MadLamprey"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"MadLamprey"},"content":"            tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":255,"author":{"gitId":"MadLamprey"},"content":"            String res \u003d taskList.showSchedule(\"schedule 2023-08-30\");","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"MadLamprey"},"content":"            assertEquals(\"Here is the schedule for the given date:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":257,"author":{"gitId":"MadLamprey"},"content":"                    + \"1. [E][ ] career fair (from: 29 August 2023 17:00 to: 31 August 2023 17:00)\\n\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":258,"author":{"gitId":"MadLamprey"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":259,"author":{"gitId":"MadLamprey"},"content":"            fail();","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":261,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":262,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":263,"author":{"gitId":"MadLamprey"},"content":"    @Test void testShowSchedule_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":264,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":265,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Event(\"career fair\", \"2023-08-29 17:00\", \"2023-08-31 17:00\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":266,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, () -\u003e taskList.showSchedule(\"schedule 30-08-2023\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":267,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":268,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":268}},{"path":"src/test/java/bruno/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"public class UiTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private UI ui \u003d new UI();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    @BeforeEach void setUp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayGreeting() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"Woof Woof! I\u0027m Bruno\\n\" + \"How can I help you?\";","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(s, ui.displayGreeting());","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayBye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Bye Bye! Hope to see you again soon!\", ui.displayBye());","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayAddMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        TaskList taskList \u003d new TaskList(new Storage(\"xxx\", \"yyy\"), ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"laundry\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        String res \u003d ui.displayAddMessage(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Woof. I have added this task:\\n\" + \"[T][ ] laundry\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayMarkMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        TaskList taskList \u003d new TaskList(new Storage(\"xxx\", \"yyy\"), ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new ToDo(\"laundry\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        String res \u003d ui.displayMarkMessage(taskList, 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Woof Woof! I have marked the task as done.\\n\" + \"[T][ ] laundry\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayUnMarkMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        TaskList taskList \u003d new TaskList(new Storage(\"xxx\", \"yyy\"), ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"ip\", \"2023-09-22 23:59\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        String res \u003d ui.displayUnmarkMessage(taskList, 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"OK, I have marked the task as not done yet.\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"                + \"[D][ ] ip (by: 22 September 2023 23:59)\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayDeleteMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        String taskString \u003d \"[T][ ] laundry\";","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        String res \u003d ui.displayDeleteMessage(taskString);","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"I have removed this task from your tasks:\\n[T][ ] laundry\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplaySchedule() {","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"1. [E][ ] hackathon (from: 29 September 2023 18:00 to: 01 October 2023 10:00\";","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        String res \u003d ui.displaySchedule(taskInfo, 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"Here is the schedule for the given date:\\n1. [E][ ] hackathon (from: 29 September \"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"                + \"2023 18:00 to: 01 October 2023 10:00\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplaySearch() {","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        String taskInfo \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        String res \u003d ui.displaySearch(taskInfo, counter);","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"There are no items matching your search.\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"    @Test void testDisplayNoteMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        TaskList taskList \u003d new TaskList(new Storage(\"xxx\", \"yyy\"), ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        tasks.add(new Deadline(\"ip\", \"2023-09-22 23:59\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        taskList.setList(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        String res \u003d ui.displayNoteMessage(taskList, 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"I have added note to the task:\\n[D][ ] ip (by: 22 September 2023 23:59)\", res);","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":91}},{"path":"src/test/java/bruno/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    void testConstructor_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeParseException.class, ()","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"                -\u003e new Deadline(\"sign up for competition\", \"01-09-2023 5pm\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    void testGetString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"project\", \"2023-08-29 18:00\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[D][ ] project (by: 29 August 2023 18:00)\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"ip tasks\", \"2023-09-01 16:00\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[D][X] ip tasks (by: 01 September 2023 16:00)\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"clean fridge\", \"2023-08-31 23:59\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"D|🔴|clean fridge||2023-08-31 23:59\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Deadline(\"complete registration\", \"2023-09-02 10:00\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"D|🟢|complete registration||2023-09-02 10:00\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":43}},{"path":"src/test/java/bruno/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class EventTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    void testConstructor_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeParseException.class, ()","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"                -\u003e new Event(\"hackathon\", \"31 August 6pm\", \"1 September 6pm\", \"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    void testGetString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"career fair\", \"2023-08-29 10:00\", \"2023-08-31 18:00\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[E][ ] career fair (from: 29 August 2023 10:00 to: 31 August 2023 18:00)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"                task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"office hours\", \"2023-08-29 19:00\", \"2023-08-29 22:00\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[E][X] office hours (from: 29 August 2023 19:00 to: 29 August 2023 22:00)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"                task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"hackathon\", \"2023-08-31 18:00\", \"2023-09-01 18:00\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"E|🔴|hackathon||2023-08-31 18:00|2023-09-01 18:00\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Event(\"career fair\", \"2023-08-29 10:00\", \"2023-08-31 18:00\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"E|🟢|career fair||2023-08-29 10:00|2023-08-31 18:00\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":45}},{"path":"src/test/java/bruno/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_unmarkedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.TODO, \"work\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[ ] work\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.DEADLINE, \"project submission\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[X] project submission\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_unmarkedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.EVENT, \"ctf\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"🔴|ctf|\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.TODO, \"laundry\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"🟢|laundry|\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    void testConvertToLocalDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"2023-08-29 18:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(2023, 8, 29, 18, 00);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.EVENT, \"work\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(localDateTime, task.convertToLocalDateTime(s));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    void testConvertToLocalDateTime_incorrectFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"01-09-2023 10:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(2023, 9, 1, 10, 00);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.TODO, \"work\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, () -\u003e task.convertToLocalDateTime(s));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    void testConvertToLocalDateTime_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"2023-13-01 23:59\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.DEADLINE, \"sign up\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DateTimeException.class, () -\u003e task.convertToLocalDateTime(s));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    void testConvertDateTimeToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(2023, 9, 2, 10, 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new Task(TaskType.EVENT, \"interview\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"02 September 2023 10:00\", task.convertDateTimeToString(localDateTime));","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":68}},{"path":"src/test/java/bruno/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package bruno.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    void testGetString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"ip tasks\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[T][ ] ip tasks\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    void testGetString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"assignment\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"[T][X] assignment\", task.getString());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"laundry\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"T|🔴|laundry|\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    void testGetFileString_markedTask_stringGenerated() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        Task task \u003d new ToDo(\"laundry\", \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(\"T|🟢|laundry|\", task.getFileString());","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"MadLamprey":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"todo buy eggs","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"todo break eggs","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"todo cook eggs","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"deadline take bread out of oven /by 2023-08-29 1800","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"event cooking session /from 2023-08-31 1900 /to 2023-08-31 2100","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"mark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"MadLamprey":16}}]
