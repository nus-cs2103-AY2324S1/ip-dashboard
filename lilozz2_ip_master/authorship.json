[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"E| |sfa|2000-09-09 12:00| 13:00","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"T| |afda ","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lilozz2":2}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    public Command() {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    public abstract void execute(Storage storage, Ui ui, TaskList taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":10}},{"path":"src/main/java/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"public class Date {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    protected LocalTime time;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    public Date(String dateString, String timeString) {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"        String str \u003d \"2016-03-04 11:30\";","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"        date \u003d dateString \u003d\u003d null ? null : LocalDate.parse(dateString);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"        time \u003d timeString \u003d\u003d null ? null : LocalTime.parse(timeString, formatter);","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"        String dateString \u003d date \u003d\u003d null ? \"\" : date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"        String timeString \u003d time \u003d\u003d null ? \"\" : time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"        return dateString + \" \" + timeString;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"    public String toSave() {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lilozz2"},"content":"        String dateString \u003d date \u003d\u003d null ? \"\" : date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lilozz2"},"content":"        String timeString \u003d time \u003d\u003d null ? \"\" : time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lilozz2"},"content":"        return dateString + \" \" + timeString;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lilozz2":29}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    protected String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    protected String by;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    protected boolean done;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    public DeadlineCommand(String description, String by, boolean done) {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"        Task task \u003d new Deadlines(description, by);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"        task.setDone(this.done);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":21}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public class Deadlines extends TaskWithDeadline {","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"        super(description, by);","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.getEnd());","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    public String toSave() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        return String.format(\"D|%s|%s|%s\", this.getStatusIcon(), this.getDescription(), this.getEndSave());","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lilozz2":15}},{"path":"src/main/java/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public class DefaultCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    protected String response;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"    public DefaultCommand(String response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        this.response \u003d response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"        System.out.println(ui.format_response(","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"                \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"        ));","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":14}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    protected int taskIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"        this.taskIndex \u003d taskIndex - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"                throw new TaskIndexOutOfBoundsException(\"Invalid task index\");","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"            taskList.deleteTask(taskIndex);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"            System.out.println(ui.format_response(\"Task successfully deleted\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"            System.out.println(ui.format_response(\"Invalid task index. Please provide a valid index.\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    ","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    protected static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    protected static Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    protected static Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    public static void reply() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"        String response \u003d ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"        Command command;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        while (!response.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"                command \u003d parser.parse(response);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"                command.execute(storage, ui, taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"            } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"                System.out.println(ui.format_response(e.getMessage()));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"            } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"                response \u003d ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"        };","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"lilozz2"},"content":"        ui.greet();","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lilozz2"},"content":"        reply();","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"lilozz2"},"content":"        ui.bye();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lilozz2":26,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public class Event extends TaskWithPeriod {","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"        super(description, from, to);","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.getFrom(), this.getEnd());","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    public String toSave() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        return String.format(\"E|%s|%s|%s|%s\", this.getStatusIcon(), this.getDescription(), this.getFromSave(), this.getEndSave());","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lilozz2":15}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    protected String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    protected String from;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    protected String to;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    protected boolean done;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    public EventCommand(String description, String from, String to, boolean done) {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"        task.setDone(done);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":24}},{"path":"src/main/java/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidFileTypeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    protected String response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    public LoadCommand(String response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        this.response \u003d response;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"            taskList.setTasks(storage.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"            System.out.println(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"        } catch (InvalidFileTypeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"            System.out.println(ui.format_response(e.getMessage()));","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":20}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    protected boolean done;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    protected int taskIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    public MarkCommand(boolean done, int taskIndex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"        taskList.setTaskDone(taskIndex, done);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":17}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidFileTypeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    public Parser() {}","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"    public Matcher regexParse(String regex, String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        Matcher matcher \u003d pattern.matcher(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"        return matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"    private String getCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"            return null; // Return null for empty input or whitespace","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"        input \u003d input.trim(); // Remove leading and trailing whitespace","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"        int spaceIndex \u003d input.indexOf(\u0027 \u0027); // Find the index of the first space","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lilozz2"},"content":"        if (spaceIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lilozz2"},"content":"            return input; // If no space found, the whole string is the first word","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lilozz2"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lilozz2"},"content":"            return input.substring(0, spaceIndex); // Extract the first word using substring","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lilozz2"},"content":"    public Command parse(String response) throws InvalidTaskException {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lilozz2"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lilozz2"},"content":"        Matcher matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lilozz2"},"content":"        switch(response.split(\" \")[0]) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lilozz2"},"content":"            case \"list\":","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lilozz2"},"content":"                return new PrintListCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lilozz2"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lilozz2"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lilozz2"},"content":"                boolean done \u003d response.split(\" \")[0].equals(\"mark\") ? true : false;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lilozz2"},"content":"                taskIndex \u003d Integer.parseInt(response.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lilozz2"},"content":"                return new MarkCommand(done, taskIndex);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lilozz2"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lilozz2"},"content":"                matcher \u003d this.regexParse(\"^todo\\\\s([\\\\w\\\\s]*)$\", response);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lilozz2"},"content":"                if (!matcher.find() || matcher.groupCount() !\u003d 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lilozz2"},"content":"                    throw new InvalidTaskException(\"Invalid use of todo. Usage: todo \u003ctask description\u003e\");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lilozz2"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lilozz2"},"content":"                return new ToDoCommand(matcher.group(1), false);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lilozz2"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lilozz2"},"content":"                matcher \u003d regexParse(\"^deadline\\\\s([\\\\w\\\\s]*)\\\\s\\\\/by\\\\s([\\\\w\\\\s\\\\:\\\\-]*)$\", response);","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lilozz2"},"content":"                if (!matcher.find() || matcher.groupCount() !\u003d 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lilozz2"},"content":"                    throw new InvalidTaskException(","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lilozz2"},"content":"                            \"Invalid use of deadline. Usage: deadline \u003ctask description\u003e /by \u003cdate \u0026 time\u003e\"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lilozz2"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lilozz2"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lilozz2"},"content":"                return new DeadlineCommand(matcher.group(1), matcher.group(2), false);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lilozz2"},"content":"            case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lilozz2"},"content":"                matcher \u003d regexParse(\"^event\\\\s([\\\\w\\\\s]*)\\\\s\\\\/from\\\\s([\\\\w\\\\s\\\\-\\\\:]*)\\\\s\\\\/to\\\\s([\\\\w\\\\s\\\\-\\\\:]*)$\", response);","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lilozz2"},"content":"                if (!matcher.find() || matcher.groupCount() !\u003d 3) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lilozz2"},"content":"                    throw new InvalidTaskException(","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lilozz2"},"content":"                            \"Invalid use of event. Usage: event \u003ctask description\u003e /from \u003cdate \u0026 time\u003e /to \u003cdate \u0026 time\u003e\"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lilozz2"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lilozz2"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lilozz2"},"content":"                return new EventCommand(matcher.group(1), matcher.group(2), matcher.group(3), false);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lilozz2"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lilozz2"},"content":"                matcher \u003d regexParse(\"^delete\\\\s([\\\\w\\\\s]*)$\", response);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lilozz2"},"content":"                if (!matcher.find() || matcher.groupCount() !\u003d 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lilozz2"},"content":"                    throw new InvalidTaskException(","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lilozz2"},"content":"                            \"Invalid input. Usage: delete \u003ctask_index\u003e\"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lilozz2"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lilozz2"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lilozz2"},"content":"                return new DeleteCommand(Integer.parseInt(matcher.group(1)));","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lilozz2"},"content":"            case \"save\":","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lilozz2"},"content":"                return new SaveCommand(response);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lilozz2"},"content":"            case \"load\":","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lilozz2"},"content":"                return new LoadCommand(response);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lilozz2"},"content":"            default: {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lilozz2"},"content":"                return new DefaultCommand(response);","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lilozz2"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lilozz2"},"content":"    public Task parseSave(String response) throws InvalidFileTypeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lilozz2"},"content":"        boolean done;","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lilozz2"},"content":"        String[] responseList \u003d response.split(\"\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lilozz2"},"content":"        Task newtask;","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lilozz2"},"content":"        switch(responseList[0]) {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lilozz2"},"content":"            case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lilozz2"},"content":"                done \u003d responseList[1] \u003d\u003d \"X\" ? true : false;","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lilozz2"},"content":"                if (responseList.length !\u003d 3) {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lilozz2"},"content":"                    throw new InvalidFileTypeException(String.format(\"line: %s is invalid: Todo needs 3 parameters\", response));","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lilozz2"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lilozz2"},"content":"                newtask \u003d new ToDo(responseList[2]);","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lilozz2"},"content":"                newtask.setDone(done);","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lilozz2"},"content":"                return newtask;","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lilozz2"},"content":"            case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lilozz2"},"content":"                done \u003d responseList[1] \u003d\u003d \"X\" ? true : false;","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lilozz2"},"content":"                if (responseList.length !\u003d 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lilozz2"},"content":"                    throw new InvalidFileTypeException(String.format(\"line: %s is invalid: Deadline needs 4 parameters\", response));","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lilozz2"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lilozz2"},"content":"                newtask \u003d new Deadlines(responseList[2], responseList[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lilozz2"},"content":"                newtask.setDone(done);","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lilozz2"},"content":"                return newtask;","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"lilozz2"},"content":"            case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"lilozz2"},"content":"                done \u003d responseList[1] \u003d\u003d \"X\" ? true : false;","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"lilozz2"},"content":"                if (responseList.length !\u003d 5) {","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"lilozz2"},"content":"                    throw new InvalidFileTypeException(String.format(\"line: %s is invalid: Event requires 5 parameters\", response));","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"lilozz2"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"lilozz2"},"content":"                newtask \u003d new Event(responseList[2], responseList[3], responseList[4]);","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"lilozz2"},"content":"                newtask.setDone(done);","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"lilozz2"},"content":"                return newtask;","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"lilozz2"},"content":"            default: {","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"lilozz2"},"content":"                throw new InvalidFileTypeException(String.format(\"line: %s is invalid: Event requires 5 parameters\", response));","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"lilozz2"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"lilozz2"},"content":"    public Date parseDate(String dateTimeString) {","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"lilozz2"},"content":"        String regex \u003d \"^(\\\\d{4}-\\\\d{2}-\\\\d{2})? ?(\\\\d{2}:\\\\d{2})?$\";","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"lilozz2"},"content":"        Matcher matcher1 \u003d regexParse(regex, dateTimeString);","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"lilozz2"},"content":"        if (matcher1.find()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"lilozz2"},"content":"            String datePart \u003d matcher1.group(1);","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"lilozz2"},"content":"            String timePart \u003d matcher1.group(2);","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"lilozz2"},"content":"            if (datePart !\u003d null \u0026\u0026 timePart !\u003d null) {","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"lilozz2"},"content":"                System.out.println(\"Date: \" + datePart);","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"lilozz2"},"content":"                System.out.println(\"Time: \" + timePart);","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"lilozz2"},"content":"            } else if (datePart !\u003d null) {","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"lilozz2"},"content":"                System.out.println(\"Date: \" + datePart);","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"lilozz2"},"content":"            } else if (timePart !\u003d null) {","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"lilozz2"},"content":"                System.out.println(\"Time: \" + timePart);","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"lilozz2"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"lilozz2"},"content":"            return new Date(datePart, timePart);","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"lilozz2"},"content":"        System.out.println(\"Invalid date / time format, format should be yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"lilozz2"},"content":"        return null;","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":141}},{"path":"src/main/java/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    public PrintListCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":10}},{"path":"src/main/java/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    protected String response;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"    public SaveCommand(String response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        this.response \u003d response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":13}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidFileTypeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"import java.io.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    protected String filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"    public ArrayList\u003cTask\u003e load() throws InvalidFileTypeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath))) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"            ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"                taskArrayList.add(parser.parseSave(line));","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"            return taskArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"            throw new InvalidFileTypeException(\"Error: File not found\");","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lilozz2"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lilozz2"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath))) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lilozz2"},"content":"            writer.write(taskList.toTaskSave());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lilozz2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lilozz2"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":35}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"        return this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"lilozz2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"lilozz2"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lilozz2"},"content":"    public abstract String toSave();","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lilozz2":31}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    protected int size \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    protected static int max \u003d 100;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        this.size \u003d tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(max);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"    private Task getTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"    public void setTasks(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"        this.tasks \u003d taskArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"        this.size \u003d taskArrayList.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lilozz2"},"content":"        return this.size;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lilozz2"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lilozz2"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lilozz2"},"content":"        this.size++;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lilozz2"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lilozz2"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lilozz2"},"content":"        this.size--;","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lilozz2"},"content":"    public void setTaskDone(int index, boolean done) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lilozz2"},"content":"        this.tasks.get(index).setDone(done);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lilozz2"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lilozz2"},"content":"        if (this.size \u003d\u003d 0) { return \"\"; }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lilozz2"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lilozz2"},"content":"        for (int i \u003d 0; i \u003c this.size; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lilozz2"},"content":"            response +\u003d String.format(\"%d. %s\\n\", i+1, this.getTask(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lilozz2"},"content":"        return ui.format_response(response.substring(0, response.length() - 1));","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lilozz2"},"content":"    public String toTaskSave() {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lilozz2"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lilozz2"},"content":"        for (int i \u003d 0; i \u003c this.size; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lilozz2"},"content":"            response +\u003d String.format(\"%s\\n\", this.tasks.get(i).toSave());","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lilozz2"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lilozz2"},"content":"        return response.substring(0, response.length() - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":59}},{"path":"src/main/java/TaskWithDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public abstract class TaskWithDeadline extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    protected Date end;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"    public TaskWithDeadline(String description, String by) {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"        super(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        this.end \u003d new Parser().parseDate(by);","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    public Date getEnd() {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        return this.end;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    public String getEndSave() {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        return this.end.toSave();","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lilozz2":15}},{"path":"src/main/java/TaskWithPeriod.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public abstract class TaskWithPeriod extends TaskWithDeadline {","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    protected Date from;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"    public TaskWithPeriod(String description, String from, String to) {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"        super(description, to);","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        this.from \u003d new Parser().parseDate(from);","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    public Date getFrom() {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        return this.from;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    public String getFromSave() {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        return this.from.toSave();","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lilozz2":15}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    public String toSave() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        return String.format(\"T|%s|%s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lilozz2":15}},{"path":"src/main/java/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    protected String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    protected boolean done;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    public ToDoCommand(String description, boolean done) {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"        Task task \u003d new ToDo(this.description);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"        task.setDone(this.done);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    protected String line \u003d \"----------------------------------------------------\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"    public Ui() {}","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    protected Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"    public void greet() {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lilozz2"},"content":"        System.out.println(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lilozz2"},"content":"        System.out.println(format_response(","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lilozz2"},"content":"                \"Hello I\u0027m Project54\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lilozz2"},"content":"                        \"What can I do for you?\"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lilozz2"},"content":"        ));","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lilozz2"},"content":"    public void bye() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lilozz2"},"content":"        System.out.println(format_response(","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lilozz2"},"content":"                \"Bye. Hope to see you again soon\"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lilozz2"},"content":"        ));","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lilozz2"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lilozz2"},"content":"        return myObj.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lilozz2"},"content":"    public String format_response(String response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lilozz2"},"content":"        return response + \"\\n\\n\" + line;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":29}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lilozz2":7}},{"path":"src/main/java/duke/exceptions/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class InvalidDateTimeFormatException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    public InvalidDateTimeFormatException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lilozz2":7}},{"path":"src/main/java/duke/exceptions/InvalidFileTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class InvalidFileTypeException extends Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    public InvalidFileTypeException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lilozz2":7}},{"path":"src/main/java/duke/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lilozz2":7}},{"path":"src/main/java/duke/exceptions/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lilozz2"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lilozz2"},"content":"public class TaskIndexOutOfBoundsException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"lilozz2"},"content":"    public TaskIndexOutOfBoundsException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lilozz2"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lilozz2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lilozz2"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lilozz2"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lilozz2":8}}]
