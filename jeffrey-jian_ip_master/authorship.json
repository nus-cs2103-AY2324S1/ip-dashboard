[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"jeffrey-jian":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"//    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    mainClassName(\"duke/Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"    archiveBaseName \u003d \"JEDuke\"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"jeffrey-jian":20}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"# JEDuke User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"JEDuke, or _JED_, is your personal task manager chatbot of the decade.","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"### Manage Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"Tasks are split into Todos, Deadlines and Events.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"You can create, remove, and list all tasks with JED.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"### Aliasing","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"Add your own aliases to handle commands more efficiently!","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"### Contents","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"1. Task-related commands [Jump](#task-related)","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"2. Alias-related commands [Jump](#alias-related)","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"### Task Related","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"### `list` - List all existing tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"Lists all existing tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"  1. [T][X] do work","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"  2. [T][ ] more work","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"  3. [T][ ] finish work","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"### `todo` - Add a Todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"Format: `todo TODO_NAME`","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `todo go to school`","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"Adds a new todo to the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"### `deadline` - Add a Deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"Format: `deadline /by dd-MM-yyyy HHmm`","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `deadline complete tutorial \\by 12-10-2023 2359`","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"Adds a new deadline to the list of tasks. ","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"### `event` - Add a Event task.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"Format: `event /from dd-MM-yyyy HHmm /to dd-MM-yyyy HHmm`","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `event tiktok hackathon \\from 12-10-2023 0800 \\to 13-10-2023 1800`","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"Adds a new event to the list of tasks. ","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"### `mark` - Mark a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"Marks the task at the specified index as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"### `unmark` - Unmark a task as incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"Un-marks the task at the specified index as incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"### `delete` - Delete a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"Deletes the task at the specified index.","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"### `find` - Find tasks by matching keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `find hackathon`","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"Lists all tasks with matching keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"### Alias Related","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"### `alias_list` - List all aliases saved.","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `alias_list`","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"td\u003dtodo","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"ls\u003dlist","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"dl\u003ddeadline","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"als\u003dalias_list","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"Lists all aliases, and corresponding full commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"### `alias_add` - Add a new alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"Format: `alias_add ALIAS\u003dFULLCOMMAND`","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `alias_add ev\u003devent`","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"Creates a new alias for the given command.","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"### `alias_delete` - Delete an existing alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"Format: `alias_delete ALIAS`","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"jeffrey-jian"},"content":"Example of usage: `alias_delete ev`","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"jeffrey-jian"},"content":"Deletes the existing alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"-":20,"jeffrey-jian":153}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    private static final Color BG_COLOR_USER \u003d Color.ORANGE;","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    private static final Color BG_COLOR_DUKE \u003d Color.CYAN;","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    private DialogBox(String text, Image img, Color backgroundColor) {","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"        applyStyling(backgroundColor);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    private void applyStyling(Color backgroundColor) {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"        dialog.setStyle(\"-fx-background-color: \" + toHex(backgroundColor) + \"; \"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"                + \"-fx-background-radius: 10; \"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"                + \"-fx-padding: 10px; \"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"                + \"-fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.4), 10, 0, 0, 2);\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    private String toHex(Color color) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"        return String.format(\"#%02X%02X%02X\",","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"                (int) (color.getRed() * 255),","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"                (int) (color.getGreen() * 255),","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"                (int) (color.getBlue() * 255));","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"        return new DialogBox(text, img, BG_COLOR_USER);","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"        var db \u003d new DialogBox(text, img, BG_COLOR_DUKE);","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jeffrey-jian":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" * Duke is a simple task management application that allows users to keep track","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":" * of tasks, including to-dos, deadlines, and events.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":" * Duke uses a command-based approach, where users enter text commands to","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":" * perform various operations on the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"public class Duke {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String DEFAULT_DATA_FOLDER_PATH \u003d \"src/data\";","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"    private TaskList items;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    private AliasMap aliases;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a Duke instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     * @param folderPath The file path where tasks are stored.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    public Duke(String folderPath) {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"        storage \u003d new Storage(folderPath);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"            items \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (DukeException c) {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"            items \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"            aliases \u003d new AliasMap(storage.loadAlias());","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (DukeException c) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"            aliases \u003d new AliasMap();","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"        parser \u003d new Parser(aliases);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"        this(DEFAULT_DATA_FOLDER_PATH);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"            return c.execute(items, aliases, ui, storage);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    public String getGreetString() {","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.greet();","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"jeffrey-jian":66}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jeffrey-jian":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"            stage.setTitle(\"JEDuke\");","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jeffrey-jian":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Darwin.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Gumball.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        handleDukeTalk(d.getGreetString());","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"     * Creates a dialog box for Duke, displaying Duke\u0027s speech.","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"     * @param string Duke\u0027s speech string.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    private void handleDukeTalk(String string) {","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(string, dukeImage));","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jeffrey-jian":59}},{"path":"src/main/java/duke/alias/AliasMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.alias;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":" * This class represents a map of aliases, where each alias is associated with a full command.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"public class AliasMap implements Iterable\u003cMap.Entry\u003cString, String\u003e\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"    private final HashMap\u003cString, String\u003e aliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs an empty AliasMap.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    public AliasMap() {","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"        this.aliasMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new instance of AliasMap, with aliasMap being","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     * set to the HashMap argument.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * @param aliasMap","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    public AliasMap(HashMap\u003cString, String\u003e aliasMap) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"        this.aliasMap \u003d aliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     * Adds an alias with its corresponding full command to the map.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     * @param alias       The alias name.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     * @param fullCommand The full command associated with the alias.","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    public void addAlias(String alias, String fullCommand) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"        aliasMap.put(alias, fullCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"     * Retrieves the full command associated with the given alias.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"     * @param alias The alias name.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The full command, or null if the alias does not exist.","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    public String getFullCommand(String alias) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"        return aliasMap.get(alias);","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"     * Removes an alias from the map.","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"     * @param alias The alias name to be removed.","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"    public void removeAlias(String alias) {","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"        aliasMap.remove(alias);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the AliasMap.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string containing all aliases and their corresponding full commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"        return aliasMap.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns an iterator over elements of type {@code T}.","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"     * @return an Iterator.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"    public Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator() {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"        return aliasMap.entrySet().iterator();","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"jeffrey-jian":77}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":" * The `ByeCommand` class represents a command to exit the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"        this.willExitNext \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.bye();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":" * The `Command` class represents a command that can be executed by the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     * A flag indicating whether executing this command should cause the application to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"    protected boolean willExitNext \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     * Executes the command, performing the associated action on the task list, UI, and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     * @param items   The task list to operate on.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * @param aliases The aliasMap to operate on.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     * @param storage The storage component for reading/writing data.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The text response by Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    public abstract String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     * Checks if executing this command should cause the application to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     * @return `true` if the application should exit after executing this command, `false` otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    public boolean willExitNext() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"        return willExitNext;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":39}},{"path":"src/main/java/duke/command/alias/AddAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.alias;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" * The `AddAliasCommand` class represents a command to add a new alias for given command.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"public class AddAliasCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    private String alias;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private String fullCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `AddAliasCommand` with the specified alias and fullCommand.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     * @param alias The alias string, which will represent the fullCommand.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * @param fullCommand The full command for the alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    public AddAliasCommand(String alias, String fullCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        aliases.addAlias(alias, fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        storage.writeAlias(aliases);","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.addAlias(alias, fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jeffrey-jian":37}},{"path":"src/main/java/duke/command/alias/DeleteAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.alias;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" * The `DeleteAliasCommand` class represents a command to delete an alias existing.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"public class DeleteAliasCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    private String alias;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `DeleteAliasCommand` with the specified alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"     * @param alias The alias to be deleted.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    public DeleteAliasCommand(String alias) {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"        String fullCommand \u003d aliases.getFullCommand(alias);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"        if (fullCommand \u003d\u003d null) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"            throw new DukeException(\"Alias `\" + alias + \"` not found!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        aliases.removeAlias(alias);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.deleteAlias(alias, fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jeffrey-jian":37}},{"path":"src/main/java/duke/command/alias/ListAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.alias;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" * The `ListAliasCommand` class represents a command to list the tasks in the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"public class ListAliasCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.listAlias(aliases);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jeffrey-jian":22}},{"path":"src/main/java/duke/command/task/DeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":" * The `DeadlineCommand` class represents a command to add a deadline task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"public class DeadlineTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    private String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `DeadlineCommand` with the specified name and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     * @param by   The deadline date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    public DeadlineTaskCommand(String name, LocalDateTime by) {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"        assert(name !\u003d null \u0026\u0026 by !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        Task item \u003d items.addDeadline(name, by);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"        storage.writeData(items);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.addItem(item.toString(), items.getCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":42}},{"path":"src/main/java/duke/command/task/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" * The `DeleteCommand` class represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private int deleteNumber;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `DeleteCommand` with the specified task number to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * @param deleteNumber The task number to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    public DeleteTaskCommand(int deleteNumber) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"        this.deleteNumber \u003d deleteNumber;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        Task item \u003d items.delete(deleteNumber);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        storage.writeData(items);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.deleteItem(item.toString(), items.getCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":36}},{"path":"src/main/java/duke/command/task/EventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":" * The `EventCommand` class represents a command to add an event task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"public class EventTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    private String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `EventCommand` with the specified name, start date and time, and end date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name The name of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"     * @param to   The end date and time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    public EventTaskCommand(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"        assert(name !\u003d null \u0026\u0026 from !\u003d null \u0026\u0026 to !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"        Task item \u003d items.addEvent(name, from, to);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"        storage.writeData(items);","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.addItem(item.toString(), items.getCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":44}},{"path":"src/main/java/duke/command/task/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":" * The `FindCommand` class represents a command to find tasks based on their names.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    private String keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `FindCommand` with the specified keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * @param keyword The keyword to be used to search.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        ArrayList\u003cTask\u003e result \u003d items.searchFor(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.listSearch(result);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jeffrey-jian":37}},{"path":"src/main/java/duke/command/task/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" * The `ListTaskCommand` class represents a command to list the tasks in the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.list(items.getArrayList());","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":22}},{"path":"src/main/java/duke/command/task/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" * The `MarkCommand` class represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private int markIndex;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `MarkCommand` with the specified task index to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * @param markIndex The index of the task to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    public MarkTaskCommand(int markIndex) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        Task item \u003d items.mark(markIndex);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        storage.writeData(items);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.markItem(item.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":36}},{"path":"src/main/java/duke/command/task/ToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" * The `ToDoCommand` class represents a command to add a to-do task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"public class ToDoTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `ToDoCommand` with the specified name for the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    public ToDoTaskCommand(String name) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"        assert(name !\u003d null \u0026\u0026 name.isEmpty());","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        Task item \u003d items.addToDo(name);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        storage.writeData(items);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.addItem(item.toString(), items.getCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":37}},{"path":"src/main/java/duke/command/task/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.command.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" * The `UnmarkCommand` class represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private int unmarkIndex;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `UnmarkCommand` with the specified task index to be unmarked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * @param unmarkIndex The index of the task to be unmarked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    public UnmarkTaskCommand(int unmarkIndex) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"        this.unmarkIndex \u003d unmarkIndex;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    public String execute(TaskList items, AliasMap aliases, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        Task item \u003d items.unmark(unmarkIndex);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        storage.writeData(items);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        return ui.unmarkItem(item.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":36}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":" * The `DukeException` class represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String WRONG_DATETIME_MESSAGE \u003d \"Wrong DateTime format!! Please use \u0027dd-MM-yyyy HHmm\u0027.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new `DukeException` with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"     * @param errorMsg The error message associated with the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jeffrey-jian":18}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.alias.AddAliasCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.alias.DeleteAliasCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.alias.ListAliasCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.DeadlineTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.DeleteTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.EventTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.FindTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.ListTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.MarkTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.ToDoTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"import duke.command.task.UnmarkTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":" * The `Parser` class is responsible for parsing user input commands into executable commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     * The date and time format used for parsing date-time inputs.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    public static final DateTimeFormatter DATETIME_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"    private AliasMap aliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    private boolean hasAliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a Parser object with an alias map.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"     * @param aliasMap The alias map to use for command parsing.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    public Parser(AliasMap aliasMap) {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"        this();","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"        if (aliasMap !\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"            this.aliasMap \u003d aliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"            this.hasAliasMap \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a Parser object without an alias map.","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"    public Parser() {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"        this.aliasMap \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"        this.hasAliasMap \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"     * Parses an alias if available, otherwise returns the original input.","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"     * @param input The input to parse as an alias.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The parsed alias or the original input if no alias is found.","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"    protected String parseAlias(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"        if (!hasAliasMap) {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"            return input;","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"        String parsedFull \u003d this.aliasMap.getFullCommand(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"        if (parsedFull \u003d\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"            return input;","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"        return parsedFull;","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"     * Parses a user input command and returns the corresponding `Command` object.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"     * @param command The user input command to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A `Command` object representing the parsed command.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws DukeException If the command cannot be parsed or contains invalid arguments.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"        String[] commandArr \u003d command.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"        String keywordInput \u003d commandArr[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"        String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"        String keyword \u003d parseAlias(keywordInput);","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"        switch (keyword) {","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"        case \"list\":","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"\\\"OOPS!!! Please include the keyword you would like to search.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"            String searchWord \u003d commandArr[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"            return new FindTaskCommand(searchWord);","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! Please include the task number you would like to mark.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"                int markNumber \u003d Integer.parseInt(commandArr[1].trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"                return new MarkTaskCommand(markNumber);","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please indicate a number for the task.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! Please include the task number you would like to unmark.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"                int unmarkNumber \u003d Integer.parseInt(commandArr[1].trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"                return new UnmarkTaskCommand(unmarkNumber);","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please indicate a number for the task.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! Please include the task number you would like to delete.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"                int deleteNumber \u003d Integer.parseInt(commandArr[1].trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"                return new DeleteTaskCommand(deleteNumber);","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please indicate a number for the task.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"            description \u003d commandArr[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"            return new ToDoTaskCommand(description);","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"            description \u003d commandArr[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"            String deadlineName \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"            String deadlineBy \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"            String[] deadlineDescription \u003d description.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"            for (String str : deadlineDescription) {","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"                if (str.startsWith(\"by\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"                    deadlineBy \u003d str.split(\" \", 2)[1].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"                    deadlineName \u003d str.trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"            if (deadlineName.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please include the name of the deadline.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"            if (deadlineBy.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please include when the deadline is by.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"                LocalDateTime byParsed \u003d LocalDateTime.parse(deadlineBy, DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"                return new DeadlineTaskCommand(deadlineName, byParsed);","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(DukeException.WRONG_DATETIME_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"        case \"event\":","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"jeffrey-jian"},"content":"            description \u003d commandArr[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"            String eventName \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"            String eventFrom \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"            String eventTo \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"            String[] eventDescription \u003d description.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"            for (String str : eventDescription) {","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"                if (str.startsWith(\"from\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"                    eventFrom \u003d str.split(\" \", 2)[1].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"                } else if (str.startsWith(\"to\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"jeffrey-jian"},"content":"                    eventTo \u003d str.split(\" \", 2)[1].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"jeffrey-jian"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"jeffrey-jian"},"content":"                    eventName \u003d str.trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"jeffrey-jian"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"jeffrey-jian"},"content":"            if (eventName.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please include the name of the event.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"jeffrey-jian"},"content":"            if (eventFrom.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please include when the event is from.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":185,"author":{"gitId":"jeffrey-jian"},"content":"            if (eventTo.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please include when the event is till.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"jeffrey-jian"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"jeffrey-jian"},"content":"                LocalDateTime fromParsed \u003d LocalDateTime.parse(eventFrom, DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"jeffrey-jian"},"content":"                LocalDateTime toParsed \u003d LocalDateTime.parse(eventTo, DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"jeffrey-jian"},"content":"                return new EventTaskCommand(eventName, fromParsed, toParsed);","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"jeffrey-jian"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(DukeException.WRONG_DATETIME_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"jeffrey-jian"},"content":"        case \"alias_add\":","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! Please provide me with the alias and full command.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"jeffrey-jian"},"content":"            description \u003d commandArr[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"jeffrey-jian"},"content":"            String alias \u003d \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"jeffrey-jian"},"content":"            String fullCommand \u003d \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"jeffrey-jian"},"content":"            String[] aliasDescription \u003d description.split(\"\u003d\");","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"jeffrey-jian"},"content":"            if (aliasDescription.length !\u003d 2) {","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!! Please use this format: ALIAS\u003dFULLCOMMAND\");","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"jeffrey-jian"},"content":"            alias \u003d aliasDescription[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"jeffrey-jian"},"content":"            fullCommand \u003d aliasDescription[1].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"jeffrey-jian"},"content":"            return new AddAliasCommand(alias, fullCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"jeffrey-jian"},"content":"        case \"alias_delete\":","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"jeffrey-jian"},"content":"            if (commandArr.length \u003c 2) {","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"jeffrey-jian"},"content":"                throw new DukeException(\"OOPS!!! Please provide me with the alias to delete.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"jeffrey-jian"},"content":"            String aliasToDelete \u003d commandArr[1].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"jeffrey-jian"},"content":"            return new DeleteAliasCommand(aliasToDelete);","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"jeffrey-jian"},"content":"        case \"alias_list\":","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"jeffrey-jian"},"content":"            return new ListAliasCommand();","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"jeffrey-jian"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":219,"author":{"gitId":"jeffrey-jian"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":220,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":221,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":222,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":222}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.File;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":" * The `Storage` class handles reading and writing tasks to and from a data","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":" * file.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    private final File dataFile;","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    private final File aliasFile;","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a `Storage` object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"     * @param folderPath The path to the data file used for storage.","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"    public Storage(String folderPath) {","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        File dataFile \u003d new File(folderPath + \"/data.txt\");","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"        File aliasFile \u003d new File(folderPath + \"/alias.txt\");","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"            dataFile \u003d createFile(dataFile);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"        if (!aliasFile.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"            aliasFile \u003d createFile(aliasFile);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"        this.dataFile \u003d dataFile;","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"        this.aliasFile \u003d aliasFile;","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"    private File createFile(File file) {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"        File parent \u003d file.getParentFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"        if (!parent.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"            parent.mkdirs();","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"            System.out.println(\"Error while creating file: \" + e);","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"        return file;","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"     * Loads tasks from the data file and returns them as an `ArrayList` of `Task`","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"     * objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"     * @return An `ArrayList` of `Task` objects representing the tasks loaded from","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"     *         the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws DukeException If an error occurs while reading from the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"            String line;","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"                String[] lineArr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"                String taskType \u003d lineArr[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"                boolean isDone \u003d Integer.parseInt(lineArr[1]) \u003d\u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"                String name \u003d lineArr[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"                case \"T\":","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"                    items.add(new ToDo(name, isDone));","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"                    break;","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"                case \"D\":","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"                    String by \u003d lineArr[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"                    items.add(new Deadline(name, LocalDateTime.parse(by), isDone));","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"                    break;","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"                case \"E\":","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"                    String from \u003d lineArr[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"                    String to \u003d lineArr[4];","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"                    items.add(new Event(name, LocalDateTime.parse(from), LocalDateTime.parse(to), isDone));","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"                    break;","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"                default:","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"                    throw new DukeException(\"Unknown task type in datafile.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"            reader.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"            throw new DukeException(\"An error occurred while reading from the data file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"        return items;","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"     * Loads aliases from the alias file and returns them as an `HashMap` of","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"     * Strings to Strings.","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A `HashMap` of Strings to Strings representing the aliases loaded from","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"     *         the alias file.","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws DukeException If an error occurs while reading from the alias file.","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"    public HashMap\u003cString, String\u003e loadAlias() throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"        HashMap\u003cString, String\u003e aliasMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(aliasFile));","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"            String line;","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"                String[] lineArr \u003d line.split(\"\u003d\");","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"                String alias \u003d lineArr[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"                String fullCommand \u003d lineArr[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"                aliasMap.put(alias, fullCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"            reader.close();","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"            throw new DukeException(\"An error occurred while reading from the alias file.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"        return aliasMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"     * Writes tasks to the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"     * @param items An `ArrayList` of `Task` objects representing the tasks to be","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"     *              saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws DukeException If an error occurs while writing to the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"    public void writeData(TaskList items) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFile));","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"            for (Task t : items) {","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"                writer.write(t.toDataString());","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"            writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"            throw new DukeException(\"An error occurred while writing to the data file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"     * Writes aliases to the alias file.","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"jeffrey-jian"},"content":"     * @param aliasMap A `HashMap` of Strings to Strings representing the aliases to be","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"jeffrey-jian"},"content":"     *              saved.","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws DukeException If an error occurs while writing to the alias file.","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"jeffrey-jian"},"content":"    public void writeAlias(AliasMap aliasMap) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"jeffrey-jian"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(aliasFile));","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"            for (Map.Entry\u003cString, String\u003e entry : aliasMap) {","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"                String alias \u003d entry.getKey();","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"                String command \u003d entry.getValue();","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"                writer.write(alias + \"\u003d\" + command);","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"            writer.close();","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"jeffrey-jian"},"content":"            throw new DukeException(\"An error occurred while writing to the alias file.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jeffrey-jian":178}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a `Deadline` task with the specified name, deadline, and","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"     * completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name   The name of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     * @param by     The deadline for the task in \"dd-MM-yyyy HHmm\" format.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    public Deadline(String name, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the `Deadline` task, including its type,","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"     * name,","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"     * and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the `Deadline` task in a format suitable","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"     * for data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task for data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"        return \"D|\" + super.toDataString() + \"|\" + by;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jeffrey-jian":46}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":" * Represents a task that is an event with a specific start and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs an `Event` task with the specified name, start time, end time, and","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"     * completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name   The name of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"     * @param from   The start time of the event in \"dd-MM-yyyy HHmm\" format.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"     * @param to     The end time of the event in \"dd-MM-yyyy HHmm\" format.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the `Event` task, including its type,","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"     * name,","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     * and event period.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the `Event` task in a format suitable for","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"     * data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task for data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"        return \"E|\" + super.toDataString() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jeffrey-jian":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":" * Represents a general task with a name and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"    private boolean done;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"    private final String name;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new task with the specified name and sets its completion status","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"     * to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new task with the specified name and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name   The name of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"        this.done \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns the name field of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The name field of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"    public String getName() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        return this.name;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the task, including its completion status","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"     * and name.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"        String doneCheckbox \u003d this.done ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"        return doneCheckbox + \" \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the task in a format suitable for data","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"     * storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task for data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"        String isDone \u003d this.done ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"        return isDone + \"|\" + this.name;","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jeffrey-jian":77}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":" * Represents a list of tasks and provides methods to manipulate tasks within","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":" * the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"    private final ArrayList\u003cTask\u003e items;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"        items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a task list with an initial set of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     * @param items The list of tasks to initialize the task list with.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    public TaskList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"        this.items \u003d items;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns the TaskList as an ArrayList.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     * @return an ArrayList of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    public ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"        return items;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"    public int getCount() {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"        return items.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"     * Finds and returns the task(s) found based on the search keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"     * @param keyword The text used to search for tasks, based on their names.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The task(s) found with matching name(s).","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"    public ArrayList\u003cTask\u003e searchFor(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"        for (Task item : items) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"            if (item.getName().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"                result.add(item);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"     * Marks a task as done based on its position in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"     * @param number The position of the task in the list (1-based index).","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"    public Task mark(int number) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"        items.get(number - 1).markDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"        return items.get(number - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"     * Marks a task as not done based on its position in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"     * @param number The position of the task in the list (1-based index).","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The task that was marked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"    public Task unmark(int number) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"        items.get(number - 1).markUndone();","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"        return items.get(number - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"     * Deletes a task based on its position in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"     * @param number The position of the task in the list (1-based index).","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The task that was removed from the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"    public Task delete(int number) {","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"        return items.remove(number - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"     * Adds a new to-do task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The task that was added to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"    public Task addToDo(String name) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"        items.add(new ToDo(name, false));","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"        return items.get(items.size() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"     * Adds a new deadline task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"     * @param by   The deadline for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The task that was added to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"    public Task addDeadline(String name, LocalDateTime by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"        items.add(new Deadline(name, by, false));","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"        return items.get(items.size() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"     * Adds a new event task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name The name of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"     * @param to   The end time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The task that was added to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"    public Task addEvent(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"        items.add(new Event(name, from, to, false));","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"        return items.get(items.size() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns an iterator over elements of type {@code T}.","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"     * @return an Iterator.","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"        return items.iterator();","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jeffrey-jian":143}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":" * Represents a to-do task with a name and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a new to-do task with the specified name and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"     * @param name   The name of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"     * @param isDone The completion status of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the `ToDo` task, including its type and","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"     * name.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a string representation of the `ToDo` task in a format suitable for","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     * data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     * @return A string representation of the task for data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"        return \"T|\" + super.toDataString();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jeffrey-jian":39}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import duke.alias.AliasMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":" * The `Ui` class is responsible for the interactions with the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m JED, your personal chat-bot!\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String EMPTY_LIST \u003d \"Your list is currently empty.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String ERROR_CANNOT_LOAD_DATA \u003d","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"            \"I am unable to read your data file. Starting with a blank task list...\";","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String NO_MATCHING_TASKS \u003d \"Your keyword search returned no matching tasks.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a `Ui` object.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    public Ui() {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the specified String, wrapped in a horizontal line break.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     * @param str The string to be printed out.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     * @return The string to be printed out.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    public String talk(String str) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"        String line \u003d \"_\".repeat(50);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        System.out.println(str);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"        return str;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the greeting message.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"    public String greet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(GREETING);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the goodbye message.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"    public String bye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(GOODBYE);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"        // sc.close();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the loading error message, used when Duke is unable to read the","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"     * input data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(ERROR_CANNOT_LOAD_DATA);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the specified ArrayList of items in the standard format, where","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"     * items are 1-indexed.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"     * @param items The ArrayList of items to be printed.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"    public String list(ArrayList\u003c?\u003e items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"        int count \u003d items.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"            return talk(EMPTY_LIST);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"            String list \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"            for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"                list +\u003d \"  \" + (i + 1) + \". \" + items.get(i) + \"\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"            return talk(list);","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the specified ArrayList of searched items in the standard format,","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"     * where items are 1-indexed.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"     * @param items The ArrayList of searched items to be printed.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"    public String listSearch(ArrayList\u003c?\u003e items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"        int count \u003d items.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"            return talk(NO_MATCHING_TASKS);","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"            String list \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"            for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"                list +\u003d \"  \" + (i + 1) + \". \" + items.get(i) + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"            return talk(list);","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the success message upon marking an item.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"     * @param item The item that has been marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"    public String markItem(String item) {","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(\"Nice! I\u0027ve marked this task as done:\\n  \" + item);","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the success message upon un-marking an item.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"     * @param item The item that has been un-marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"    public String unmarkItem(String item) {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + item);","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the success message upon deleting an item.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"     * @param item The item that has been deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"    public String deleteItem(String item, int count) {","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(\"Noted. I\u0027ve removed this task:\\n \" + item + \"\\n Now you have \" + count + \" tasks in your list\");","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the success message upon adding an item.","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"     * @param item The item that has been added.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"    public String addItem(String item, int count) {","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(\"Got it. I\u0027ve added this task:\\n  \" + item + \"\\n Now you have \"","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"                + count + \" tasks in your list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the success message upon creating an alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"     * @param alias The alias created.","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"     * @param fullCommand The full command for the alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"    public String addAlias(String alias, String fullCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(\"Got it. I\u0027ve created a new alias `\"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"                + alias + \"` for the command `\" + fullCommand + \"`.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the success message upon deleting an alias.","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"    public String deleteAlias(String alias, String fullCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(\"OK, I\u0027ve deleted the alias `\"","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"                + alias + \"` for the command `\" + fullCommand + \"`.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"     * Prints out the list of aliases created.","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"jeffrey-jian"},"content":"    public String listAlias(AliasMap aliases) {","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"jeffrey-jian"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"jeffrey-jian"},"content":"        for (Map.Entry\u003cString, String\u003e alias : aliases) {","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"            list.append(alias.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"        return talk(list.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jeffrey-jian":170}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jeffrey-jian":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jeffrey-jian":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"    public void parser_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"        Exception exception \u003d Assertions.assertThrows(","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"                DukeException.class, () -\u003e parser.parse(\"deadline testTask /by 8 July 2023\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"        Assertions.assertEquals(\"Wrong DateTime format!! Please use \u0027dd-MM-yyyy HHmm\u0027.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"                exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jeffrey-jian":18}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"    public void task_todoString_correctlyParsed() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"        ToDo todo \u003d new ToDo(\"Test Todo\", false);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"        Assertions.assertEquals(\"[T][ ] Test Todo\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    public void task_todoDataString_correctlyParsed() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"        ToDo todo \u003d new ToDo(\"Test Todo\", true);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"        Assertions.assertEquals(\"T|1|Test Todo\", todo.toDataString());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    public void task_markToDo_marked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"        ToDo todo \u003d new ToDo(\"Test Todo\", false);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"        todo.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"        Assertions.assertEquals(\"[T][X] Test Todo\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jeffrey-jian":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"hi","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"deadline complete book review","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"deadline complete book review /by Monday 2359","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"todo extra","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"delete 4","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"event attend book club /from Tuesday 3pm /to Tuesday 5pm","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jeffrey-jian":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"jeffrey-jian":1}}]
