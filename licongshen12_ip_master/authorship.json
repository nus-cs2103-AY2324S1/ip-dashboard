[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"licongshen12":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"licongshen12":3,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"D | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"D | 0 | get her back | 31/8/2023 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"D | 0 | move on | 31/8/2023 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"T | 0 | text her","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"D | 0 | finish 2103 | 31/8/2023 2359","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"T | 0 | ball","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"T | 0 | ball","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"E | 0 | test | 16/10/2001 1200 | 20/2/2003 1200","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":8}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Enumerates the various command types that the Duke application can recognize and process.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * Each enumeration value corresponds to a specific command that the user can issue to interact with","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" * the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"    /** Command to exit the application. */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    BYE,","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    /** Command to list all tasks. */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    LIST,","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    /** Command to add a new \u0027ToDo\u0027 task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    TODO,","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    /** Command to add a new \u0027Deadline\u0027 task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    /** Command to add a new \u0027Event\u0027 task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    EVENT,","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    /** Command to mark a task as done. */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    MARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    /** Command to unmark a previously marked task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    UNMARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    /** Command to delete a task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    DELETE,","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    /** Command to list all tasks on a specified date. */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    TASKS_ON_DATE,","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    FIND,","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    /** Command type when the input command is not recognized. */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    UNKNOWN","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":" * Main class for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":" * The Duke application is a task management application that allows users to manage and track","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":" * tasks such as todos, deadlines, and events. It provides a command-line interface for users","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":" * to interact with.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    /** Task list to store and manage all tasks. */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    private static final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    /** User interface object for interacting with the user. */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    /** Storage object for saving and loading tasks to/from a file. */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    private static final Storage storage \u003d new Storage(ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     * Processes user input commands and interacts with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     * This method listens for user inputs, parses the commands, processes them,","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     * and provides appropriate responses. It handles task creation, modification,","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     * deletion, listing, and other related operations.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    public static void echoMessages() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        String input;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        taskList.getTasks().addAll(storage.loadTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"            CommandType command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"            ui.printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"                switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"                    case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"                        ui.printExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"                        scanner.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"                        return;","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"                    case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"                        ui.printList(taskList.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"                    case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"                        ToDo todo \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"                        taskList.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"                        ui.printTaskAdded(todo, taskList.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"                        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"                        String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"                        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"                            throw new DukeException(\"duke.task.Deadline format is incorrect.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"                        Deadline deadline \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"                        taskList.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"                        ui.printTaskAdded(deadline, taskList.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"                        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"                        String[] eventParts \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"                        String[] timeParts \u003d eventParts[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"                        if (timeParts.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"                            throw new DukeException(\"duke.task.Event format is incorrect.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"                        Event event \u003d new Event(eventParts[0], timeParts[0], timeParts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"                        taskList.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"                        ui.printTaskAdded(event, taskList.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"                        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"                    case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"                        int taskNumberMark \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"                        taskList.get(taskNumberMark - 1).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"                        ui.printMarkedAsDone(taskList.get(taskNumberMark - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"                        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"                        int taskNumberUnmark \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"                        taskList.get(taskNumberUnmark - 1).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"                        ui.printMarkedAsNotDone(taskList.get(taskNumberUnmark - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"                        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"                        int taskNumberDelete \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"licongshen12"},"content":"                        Task removedTask \u003d taskList.remove(taskNumberDelete - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"licongshen12"},"content":"                        ui.printTaskDeleted(removedTask, taskList.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"licongshen12"},"content":"                        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"licongshen12"},"content":"                    case TASKS_ON_DATE:","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"licongshen12"},"content":"                        LocalDate givenDate \u003d Parser.getLocalDate(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"licongshen12"},"content":"                        List\u003cTask\u003e tasksOnGivenDate \u003d taskList.getTasks().stream()","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"                                .filter(task -\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"licongshen12"},"content":"                                        (task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().toLocalDate().isEqual(givenDate)) ||","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"licongshen12"},"content":"                                                (task instanceof Event \u0026\u0026 Parser.isWithinEventDate((Event) task, givenDate)))","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"licongshen12"},"content":"                                .collect(Collectors.toList());","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"licongshen12"},"content":"                        ui.printTasksOnDate(tasksOnGivenDate, givenDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"licongshen12"},"content":"                    case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"licongshen12"},"content":"                        String keyword \u003d input.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"licongshen12"},"content":"                        TaskList resultList \u003d taskList.findTasks(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"licongshen12"},"content":"                        ui.printFindResults(resultList.getTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"licongshen12"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"licongshen12"},"content":"                    default:","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"licongshen12"},"content":"                        ui.showError(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"licongshen12"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"licongshen12"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"licongshen12"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"licongshen12"},"content":"            ui.printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"licongshen12"},"content":"     * The entry point for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"licongshen12"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"licongshen12"},"content":"        echoMessages();","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"licongshen12":146,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Represents exceptions specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * This class extends the standard {@code Exception} class and is used to handle","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" * errors and exceptional scenarios that are specific to the Duke application\u0027s","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":" * operations.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * @param message The detail message, saved for later retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":20}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" * Represents a utility class to parse and interpret user input and task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":" * This class provides static methods for parsing user input into specific command types,","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":" * reading task data, and converting date strings into {@link LocalDate} objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * Parses the user input and returns its corresponding command type.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"     * @return The corresponding {@link CommandType} based on the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    public static CommandType parseCommand(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        if (input.equalsIgnoreCase(\"bye\")) return CommandType.BYE;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        if (input.equalsIgnoreCase(\"list\")) return CommandType.LIST;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"todo\")) return CommandType.TODO;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"deadline\")) return CommandType.DEADLINE;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"event\")) return CommandType.EVENT;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"mark\")) return CommandType.MARK;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"unmark\")) return CommandType.UNMARK;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"delete\")) return CommandType.DELETE;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"tasks on\")) return CommandType.TASKS_ON_DATE;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"        if (input.startsWith(\"find\")) return CommandType.FIND;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        return CommandType.UNKNOWN;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"     * Parses a task represented as a string from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"     * @param taskData The task data as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"     * @return A {@link Task} object based on the provided task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the task type is unknown or there\u0027s an error in parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"    private static Task parseFileTask(String taskData) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"                ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"                if (parts[1].equals(\"1\")) todo.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"                return todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"                Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"                if (parts[1].equals(\"1\")) deadline.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"                return deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"                Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"                if (parts[1].equals(\"1\")) event.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"                return event;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"                throw new DukeException(\"Unknown task type: \" + parts[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"     * Converts a date string from the user input into a {@link LocalDate} object.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"     * @param input The user input containing the date string.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"     * @return The {@link LocalDate} representation of the provided date string.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the date format is invalid or there\u0027s an error in parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"    public static LocalDate getLocalDate(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"        String[] dateParts \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"        if (dateParts.length \u003c 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Please provide a valid date in the format d/M/yyyy.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"        LocalDate givenDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"            givenDate \u003d LocalDate.parse(dateParts[2], formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Invalid date format. Please use d/M/yyyy.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"        return givenDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"     * Determines if a specific date falls within the start and end dates of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"     * @param event The event to check against.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"     * @param date  The date to verify.","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"     * @return {@code true} if the date is within the event\u0027s date range, otherwise {@code false}.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"    public static boolean isWithinEventDate(Event event, LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"        LocalDate startDate \u003d event.getFrom().toLocalDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"        LocalDate endDate \u003d event.getTo().toLocalDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"        return (date.isEqual(startDate) || date.isEqual(endDate) || (date.isAfter(startDate) \u0026\u0026 date.isBefore(endDate)));","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":" * Handles storage operations including loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":" * This class provides methods to interact with the storage file where tasks are saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":" * It ensures that the necessary directory and file exist and provides utility functions","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":" * to read and write tasks from and to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"     * Constructs a new {@code Storage} object with a reference to the UI.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     * @param ui The UI instance for displaying storage-related messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     * Ensures the storage directory exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     * If the directory does not exist, it is created.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"    private void ensureDirectoryExists() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        File directory \u003d new File(\"./data/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"     * Saves the provided list of tasks to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"                fw.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"            ui.printIndented(\"Error saving tasks to file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"     * Loads tasks from the storage file into a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"     * @return A list of tasks loaded from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"            File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"            if (!f.exists()) return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"                String taskData \u003d s.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"                Task task \u003d parseFileTask(taskData);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"            s.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"            ui.printIndented(\"Error loading tasks from file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"            ui.printIndented(\"Data file is corrupted: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"     * Parses a task represented as a string from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"     * @param taskData The task data as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"     * @return A {@link Task} object based on the provided task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the task type is unknown or there\u0027s an error in parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"    private Task parseFileTask(String taskData) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"                ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"                if (parts[1].equals(\"1\")) todo.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"                return todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"licongshen12"},"content":"                Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"licongshen12"},"content":"                if (parts[1].equals(\"1\")) deadline.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"licongshen12"},"content":"                return deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"licongshen12"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"licongshen12"},"content":"                Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"licongshen12"},"content":"                if (parts[1].equals(\"1\")) event.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"licongshen12"},"content":"                return event;","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"licongshen12"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"                throw new DukeException(\"Unknown task type: \" + parts[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":121}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Represents the user interface for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * This class handles printing of user-facing messages, including greetings, errors,","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * and task-related information. Messages are consistently formatted with indentation and horizontal lines.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * Prints the greeting message.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Hello! I\u0027m Davidson\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    public void printExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     * Prints a horizontal line for UI formatting.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        System.out.print(INDENT);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"        System.out.println();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"     * Prints the given message with consistent indentation.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    public void printIndented(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        System.out.println(INDENT + message);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"     * Prints the tasks in the user\u0027s list.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    public void printList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"            printIndented((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"     * Prints the information about a task that has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"    public void printTaskAdded(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"  \" + task.toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"     * Displays an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"        printIndented(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"     * Prints the tasks that fall on a specific date.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"     * @param tasksOnDate The list of tasks on the given date.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"     * @param date The date for which tasks are to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"    public void printTasksOnDate(List\u003cTask\u003e tasksOnDate, LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"        if (tasksOnDate.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"            printIndented(\"No tasks on \" + date);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Here are the tasks on \" + date + \":\");","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"        for (Task task : tasksOnDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"            printIndented(task.toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"licongshen12"},"content":"     * Prints the information about a task that has been marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"licongshen12"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"    public void printMarkedAsDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"  \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"licongshen12"},"content":"     * Prints the information about a task that has been marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"licongshen12"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"licongshen12"},"content":"    public void printMarkedAsNotDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Okay! I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"  \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"licongshen12"},"content":"     * Prints the information about a task that has been deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"licongshen12"},"content":"     * @param removedTask The task that was removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"licongshen12"},"content":"     * @param size The current number of tasks in the list after removal.","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"licongshen12"},"content":"    public void printTaskDeleted(Task removedTask, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"  \" + removedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"licongshen12"},"content":"    public void printFindResults(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"licongshen12"},"content":"        printIndented(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"licongshen12"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"licongshen12"},"content":"            printIndented((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"licongshen12"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":159}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Represents a Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * A Deadline task is a task that needs to be done before a specific date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     * Constructs a Deadline task with the specified description and deadline date.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @param by The deadline of the task in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the provided date format is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Invalid date format provided. Please use the format d/M/yyyy HHmm.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     * @return The deadline as a LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        return by;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"     * Converts the Deadline task to a string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"     * Converts the Deadline task to a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Deadline task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"licongshen12":62}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Represents an Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * An Event task is a task that occurs between a specific start and end date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * Constructs an Event task with the specified description, start, and end dates.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * @param from The start date and time of the event in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     * @param to The end date and time of the event in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the provided date format is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"            this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"            this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Invalid date format provided. Please use the format d/M/yyyy HHmm.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the start date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     * @return The start date and time as a LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        return this.from;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the end date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     * @return The end date and time as a LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"        return this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     * Converts the Event task to a string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"     * Converts the Event task to a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Event task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"licongshen12":74}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Represents a general task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * This class provides the basic structure and common functionalities of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * Subclasses should define how to convert the task to a string for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        return description;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     * Converts the task to a string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     * Converts the task to a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * This class provides a container to store tasks and common functionalities","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * such as adding, getting, and removing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * Initializes an empty task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"     * Initializes a task list with the given list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"     * @param tasks The list of tasks to initialize with.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"     * Retrieves a task from the task list based on the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"     * Removes and returns a task from the task list based on the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     * @return The task that was removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"    public TaskList findTasks(String description) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"!!!: Please provide a description to search for\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"        return new TaskList(tasks.stream()","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"                .filter(task -\u003e task.description.contains(description))","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"                .collect(Collectors.toCollection(ArrayList::new)));","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":88}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * This class inherits from {@link Task} and provides a representation","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * of a simple task without any date/time attached to it.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"     * Initializes a new ToDo task with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * Returns a string representation of the ToDo task,","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * with its type and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     * @return A string describing the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     * Returns a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"     * The returned string is in a special format to distinguish","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"     * the task type, its completion status, and its description.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     * @return A formatted string for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":40}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"    public void toFileStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"            Event event \u003d new Event(\"test\", \"16/10/2001 1200\", \"20/02/2003 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"            assertEquals(event.toFileString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"                    \"E | 0 | test | 16/10/2001 1200 | 20/2/2003 1200\",","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"                    \"\u0027toFileString()\u0027 should return a simplified string to be saved to file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"            // do nothing","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            Event event \u003d new Event(\"test\", \"16/10/2001 1200\", \"20/02/2003 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            assertEquals(event.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"                    \"[E][ ] test (from: Oct 16 2001 12:00 to: Feb 20 2003 12:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"                    \"\u0027toString()\u0027 should return a string to be printed\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"            // do nothing","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":32}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    void testToFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"        ToDo test1 \u003d new ToDo(\"test1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"        ToDo test2 \u003d new ToDo(\"test2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"        test2.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"T | 0 | test1\", test1.toFileString(), \"toFileString an uncompleted task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"T | 1 | test2\", test2.toFileString(), \"toFileString a completed task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        ToDo test1 \u003d new ToDo(\"test1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"        ToDo test2 \u003d new ToDo(\"test2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"        test2.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"[T][ ] test1\", test1.toString(), \"String of an uncompleted task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"[T][X] test2\", test2.toString(), \"String of a completed task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"licongshen12":1,"-":20}}]
