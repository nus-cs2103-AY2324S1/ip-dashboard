[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"licongshen12":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    archiveFileName \u003d \u0027davidson.jar\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"licongshen12":29,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"D | 1 | return book | 2/12/2019 1800","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"D | 0 | get her back | 31/8/2023 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"D | 0 | move on | 31/8/2023 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"T | 0 | text her","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"E | 0 | hi | 28/9/2023 1200 | 28/9/2023 1600","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"T | 0 | ball","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"D | 0 | this | 12/9/2023 2300","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"E | 0 | this | 12/9/2023 1200 | 13/9/2023 1500","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"licongshen12":8}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Enumerates the various command types that the Duke application can recognize and process.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * Each enumeration value corresponds to a specific command that the user can issue to interact with","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" * the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"    /** Command to exit the application. */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    BYE,","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    /** Command to list all tasks. */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    LIST,","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    /** Command to add a new \u0027ToDo\u0027 task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    TODO,","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    /** Command to add a new \u0027Deadline\u0027 task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    /** Command to add a new \u0027Event\u0027 task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    EVENT,","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    /** Command to mark a task as done. */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    MARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    /** Command to unmark a previously marked task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    UNMARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    /** Command to delete a task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    DELETE,","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    /** Command to list all tasks on a specified date. */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    TASKS_ON_DATE,","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    FIND,","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    /** Command type when the input command is not recognized. */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    UNKNOWN","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":42}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        dialog.setFont(Font.font(\"Helvetica\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"licongshen12":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" * Main class for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":" * The Duke application is a task management application that allows users to manage and track","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":" * tasks such as todos, deadlines, and events. It provides a command-line interface for users","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":" * to interact with.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    /** Task list to store and manage all tasks. */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    /** User interface object for interacting with the user. */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    /** Storage object for saving and loading tasks to/from a file. */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     * Initializes a new instance of the {@code Duke} class.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     * This constructor creates a new {@code Storage} instance to manage saving and loading tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     * It also initializes the {@code Ui} for user interaction and sets the {@code isRunning} state to true.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     * Additionally, it loads any saved tasks from the storage into the {@code TaskList}.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        this.taskList \u003d new TaskList(this.storage.loadTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"    private void run() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"        System.out.println(this.ui.displayGreeting());","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"        while (this.isRunning) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"            String input \u003d this.ui.readInput().strip();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"            System.out.println(this.getResponse(input));","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     * Exits the Duke application and performs necessary cleanup operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     * Before exiting, this method ensures the application is currently running using an assertion.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     * It then closes the user input interface, saves any current tasks to storage,","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"     * and sets the {@code isRunning} state to false.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If any error occurs during the exit operations,","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"     *                       such as issues with saving tasks to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"    private void exit() throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"        assert this.isRunning;","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"        this.ui.closeInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"        this.storage.saveTasks(this.taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"     * Processes the user\u0027s input command and returns the appropriate response.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"     * This method takes in a user\u0027s command string, interprets the command type using","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"     * the {@code Parser} class, and then performs the respective operations based on the command type.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"     * Some of the operations include adding tasks, marking tasks as done, deleting tasks, and more.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"     * Any tasks-related modifications are saved to the storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"     * In case of an unrecognized command or error in the command format, a {@code DukeException} is thrown","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"     * and the error message is returned to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"     * @param input The user\u0027s input command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the response after processing the user\u0027s command.","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"            switch (Parser.parseCommand(input)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"            case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"                this.exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"                return this.ui.displayExit();","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"            case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"                return this.ui.displayList(taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"            case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"                return this.addToDo(Parser.parseArgs(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"                return this.addDeadline(Parser.parseArgs(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"            case EVENT:","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"                return this.addEvent(Parser.parseArgs(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"            case MARK:","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"                return this.markAsDone(Parser.parseArgs(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"                return this.unmarkAsDone(Parser.parseArgs(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"            case DELETE:","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"                return this.delete(Parser.parseArgs(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"            case TASKS_ON_DATE:","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"                return this.searchTasksOn(Parser.getLocalDate(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"            case FIND:","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"                TaskList resultList \u003d taskList.findTasks(Parser.parseArgs(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"                return this.ui.displayFindResults(resultList.getTasks());","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"            default:","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"licongshen12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayException(e);","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"licongshen12"},"content":"    private String addToDo(String args) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"            ToDo todo \u003d new ToDo(args);","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"licongshen12"},"content":"            this.taskList.add(todo);","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"licongshen12"},"content":"            this.storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayTaskAdded(todo, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"licongshen12"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"You are missing arguments!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"licongshen12"},"content":"    private String addDeadline(String args) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"licongshen12"},"content":"            String[] parts \u003d args.split(\" /by \");","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"licongshen12"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"licongshen12"},"content":"                throw new DukeException(\"duke.task.Deadline format is incorrect.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"licongshen12"},"content":"            Deadline deadline \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"licongshen12"},"content":"            this.taskList.add(deadline);","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"licongshen12"},"content":"            this.storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayTaskAdded(deadline, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"licongshen12"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"You are missing arguments!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"    private String addEvent(String args) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"licongshen12"},"content":"            String[] eventParts \u003d args.split(\" /from \");","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"licongshen12"},"content":"            String[] timeParts \u003d eventParts[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"licongshen12"},"content":"            if (timeParts.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"licongshen12"},"content":"                throw new DukeException(\"duke.task.Event format is incorrect.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"licongshen12"},"content":"            Event event \u003d new Event(eventParts[0], timeParts[0], timeParts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"licongshen12"},"content":"            this.taskList.add(event);","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"licongshen12"},"content":"            this.storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayTaskAdded(event, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"licongshen12"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"You are missing arguments!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"licongshen12"},"content":"    private String markAsDone(String args) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"licongshen12"},"content":"            int taskNumberMark \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"licongshen12"},"content":"            this.taskList.get(taskNumberMark - 1).markAsDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"licongshen12"},"content":"            this.storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayMarkedAsDone(taskList.get(taskNumberMark - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"licongshen12"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"The task number you provided is invalid.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"licongshen12"},"content":"    private String unmarkAsDone(String args) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"licongshen12"},"content":"            int taskNumberUnmark \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"licongshen12"},"content":"            this.taskList.get(taskNumberUnmark - 1).unmark();","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"licongshen12"},"content":"            this.storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayMarkedAsNotDone(taskList.get(taskNumberUnmark - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"licongshen12"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"The task number you provided is invalid.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"licongshen12"},"content":"    private String delete(String args) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"licongshen12"},"content":"            int taskNumberDelete \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"licongshen12"},"content":"            Task removedTask \u003d taskList.remove(taskNumberDelete - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"licongshen12"},"content":"            this.storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":185,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayTaskDeleted(removedTask, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"licongshen12"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"The task number you provided is invalid.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"licongshen12"},"content":"    private String searchTasksOn(LocalDate givenDate) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"licongshen12"},"content":"            List\u003cTask\u003e tasksOnGivenDate \u003d taskList.getTasks().stream()","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"licongshen12"},"content":"                    .filter(task -\u003e (task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy()","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"licongshen12"},"content":"                            .toLocalDate().isEqual(givenDate)) || (task","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"licongshen12"},"content":"                            instanceof Event \u0026\u0026 Parser.checkWithinEventDate((Event) task, givenDate)))","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"licongshen12"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"licongshen12"},"content":"            return this.ui.displayTasksOnDate(tasksOnGivenDate, givenDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"licongshen12"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"You are missing arguments!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"licongshen12"},"content":"     * The entry point for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"licongshen12"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":210,"author":{"gitId":"licongshen12"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"licongshen12":208,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Represents exceptions specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * This class extends the standard {@code Exception} class and is used to handle","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" * errors and exceptional scenarios that are specific to the Duke application\u0027s","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":" * operations.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * @param message The detail message, saved for later retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":20}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"licongshen12":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"licongshen12":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/FraudUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Davidson.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        sendButton.setFont(Font.font(\"Helvetica\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        userInput.setFont(Font.font(\"Helvetica\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        String greeting \u003d \"Hello! I\u0027m Davidson\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        assert d !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"licongshen12":60}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Represents a utility class to parse and interpret user input and task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * This class provides static methods for parsing user input into specific command types,","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" * reading task data, and converting date strings into {@link LocalDate} objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * Parses the user input and returns its corresponding command type.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * @return The corresponding {@link CommandType} based on the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public static CommandType parseCommand(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        String command \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        switch (command) {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"            return CommandType.BYE;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        case \"list\":","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"            return CommandType.LIST;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"            return CommandType.TODO;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        case \"event\":","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"            return CommandType.MARK;","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        case \"tasks\":","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"            if (input.startsWith(\"tasks on\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"                return CommandType.TASKS_ON_DATE;","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"            } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"                return CommandType.UNKNOWN;","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        case \"find\":","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"            return CommandType.FIND;","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"        default:","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"     * Parse user\u0027s input and return the argument for that input.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"     * @param input user input from System.in","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"     * @return argument fields of the input","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException if the command requires argument(s) and it is missing","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"    public static String parseArgs(String input) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"            return input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"You are missing arguments!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"     * Converts a date string from the user input into a {@link LocalDate} object.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"     * @param input The user input containing the date string.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"     * @return The {@link LocalDate} representation of the provided date string.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the date format is invalid or there\u0027s an error in parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"    public static LocalDate getLocalDate(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"        String[] dateParts \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        if (dateParts.length \u003c 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Please provide a valid date in the format d/M/yyyy.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"        LocalDate givenDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"            givenDate \u003d LocalDate.parse(dateParts[2], formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Invalid date format. Please use d/M/yyyy.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"        return givenDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"     * Determines if a specific date falls within the start and end dates of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"     * @param event The event to check against.","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"     * @param date  The date to verify.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"     * @return {@code true} if the date is within the event\u0027s date range, otherwise {@code false}.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"    public static boolean checkWithinEventDate(Event event, LocalDate date) {","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"        LocalDate startDate \u003d event.getFrom().toLocalDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"        LocalDate endDate \u003d event.getTo().toLocalDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"        boolean isStartDate \u003d date.isEqual(startDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"        boolean isEndDate \u003d date.isEqual(endDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"        boolean isAfterStartDate \u003d date.isAfter(startDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"        boolean isBeforeEndDate \u003d date.isAfter(endDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"        return isStartDate || isEndDate || (isAfterStartDate \u0026\u0026 isBeforeEndDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":109}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":" * Handles storage operations including loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":" * This class provides methods to interact with the storage file where tasks are saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":" * It ensures that the necessary directory and file exist and provides utility functions","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":" * to read and write tasks from and to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"     * Ensures the storage directory exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"     * If the directory does not exist, it is created.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    private void ensureDirectoryExists() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        File directory \u003d new File(\"./data/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"     * Saves the provided list of tasks to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"                fw.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"            System.out.println(\"    Error saving tasks to file.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"     * Loads tasks from the storage file into a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"     * @return A list of tasks loaded from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"    public Task[] loadTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"            File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"                return tasks.toArray(new Task[0]);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"                String taskData \u003d s.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"                Task task \u003d parseFileTask(taskData);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"            s.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"            System.out.println(\"    Error loading tasks from file.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"            System.out.println(\"    Data file is corrupted: \" + e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"        return tasks.toArray(new Task[0]);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"     * Parses a task represented as a string from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"     * @param taskData The task data as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"     * @return A {@link Task} object based on the provided task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the task type is unknown or there\u0027s an error in parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"    private Task parseFileTask(String taskData) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"            ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"                todo.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"            return todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"            Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"                deadline.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"            return deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"licongshen12"},"content":"            Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"licongshen12"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"licongshen12"},"content":"                event.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"licongshen12"},"content":"            return event;","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"licongshen12"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Unknown task type: \" + parts[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":119}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Represents the user interface for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * Handles the creation of user-facing messages, including greetings, task-related information, and errors.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" * The UI displays messages with consistent formatting, including indentation and horizontal lines.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    private Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * Read the input from the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     * @return string representation of user\u0027s input in the CLI","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    public String readInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        return this.input.nextLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     * Close the input scanner.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    public void closeInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        this.input.close();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     * Returns a greeting message.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the greeting message.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"    public String displayGreeting() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        return displayHorizontalLine()","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Hello! I\u0027m Davidson\")","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"What can I do for you?\")","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"                + displayHorizontalLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"     * Returns an exit message.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the exit message.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    public String displayExit() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"        return displayHorizontalLine()","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Bye. Hope to see you again soon!\")","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"                + displayHorizontalLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"     * Returns a horizontal line for UI formatting.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the horizontal line.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"    public String displayHorizontalLine() {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"        StringBuilder line \u003d new StringBuilder(INDENT);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"            line.append(\"-\");","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"        return line.append(\"\\n\").toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"     * Returns a message with consistent indentation.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"     * @param message The message to be indented.","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"     * @return An indented string.","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"    public String displayIndented(String message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        return INDENT + message + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"     * Returns a list of tasks in the user\u0027s list.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"     * @return A string representing the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"    public String displayList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"        StringBuilder sb \u003d new StringBuilder(displayHorizontalLine());","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"        sb.append(displayIndented(\"Here are the tasks in your list:\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"            sb.append(displayIndented((i + 1) + \".\" + tasks.get(i)));","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"        sb.append(displayHorizontalLine());","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"     * Returns a message indicating a task has been added.","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing information about the task addition.","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"    public String displayTaskAdded(Task task, int size) {","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"        return displayHorizontalLine()","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Got it. I\u0027ve added this task:\")","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"  \" + task.toFileString())","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Now you have \" + size + \" tasks in the list.\")","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"licongshen12"},"content":"                + displayHorizontalLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"licongshen12"},"content":"     * Returns a formatted message for a given {@code DukeException}.","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"licongshen12"},"content":"     * This method retrieves the message from the provided exception and formats it","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"     * for consistent display using the internal indentation method.","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"licongshen12"},"content":"     * @param e The {@code DukeException} whose message is to be displayed.","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the indented exception message.","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"licongshen12"},"content":"    public String displayException(DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"licongshen12"},"content":"        return displayIndented(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"licongshen12"},"content":"     * Returns tasks for a specific date.","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"licongshen12"},"content":"     * @param tasksOnDate The list of tasks for the given date.","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"licongshen12"},"content":"     * @param date The date.","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"licongshen12"},"content":"     * @return A string listing the tasks on the specified date.","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"licongshen12"},"content":"    public String displayTasksOnDate(List\u003cTask\u003e tasksOnDate, LocalDate date) {","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"licongshen12"},"content":"        StringBuilder sb \u003d new StringBuilder(displayHorizontalLine());","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"licongshen12"},"content":"        if (tasksOnDate.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"licongshen12"},"content":"            sb.append(displayIndented(\"No tasks on \" + date));","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"licongshen12"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"licongshen12"},"content":"            sb.append(displayIndented(\"Here are the tasks on \" + date + \":\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"licongshen12"},"content":"            for (Task task : tasksOnDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"licongshen12"},"content":"                sb.append(displayIndented(task.toFileString()));","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"licongshen12"},"content":"        sb.append(displayHorizontalLine());","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"licongshen12"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"licongshen12"},"content":"     * Returns a message indicating a task has been marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"licongshen12"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the message.","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"licongshen12"},"content":"    public String displayMarkedAsDone(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"licongshen12"},"content":"        return displayHorizontalLine()","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Nice! I\u0027ve marked this task as done:\")","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"  \" + task)","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"licongshen12"},"content":"                + displayHorizontalLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"licongshen12"},"content":"     * Returns a message indicating a task has been marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"licongshen12"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the message.","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"licongshen12"},"content":"    public String displayMarkedAsNotDone(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"licongshen12"},"content":"        return displayHorizontalLine()","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Okay! I\u0027ve marked this task as not done:\")","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"  \" + task)","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"licongshen12"},"content":"                + displayHorizontalLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"licongshen12"},"content":"     * Returns a message indicating a task has been deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"licongshen12"},"content":"     * @param removedTask The task that was removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"licongshen12"},"content":"     * @param size The current number of tasks in the list after removal.","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"licongshen12"},"content":"     * @return A string containing the deletion message.","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"licongshen12"},"content":"    public String displayTaskDeleted(Task removedTask, int size) {","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"licongshen12"},"content":"        return displayHorizontalLine()","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Noted. I\u0027ve removed this task:\")","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"  \" + removedTask)","lastModifiedDate":"2023-09-06"},{"lineNumber":185,"author":{"gitId":"licongshen12"},"content":"                + displayIndented(\"Now you have \" + size + \" tasks in the list.\")","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"licongshen12"},"content":"                + displayHorizontalLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":187,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"licongshen12"},"content":"     * Returns the tasks that match a certain criteria.","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"licongshen12"},"content":"     * @param tasks A list of tasks that match the criteria.","lastModifiedDate":"2023-09-06"},{"lineNumber":193,"author":{"gitId":"licongshen12"},"content":"     * @return A string listing the matching tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":194,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"licongshen12"},"content":"    public String displayFindResults(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":196,"author":{"gitId":"licongshen12"},"content":"        StringBuilder sb \u003d new StringBuilder(displayHorizontalLine());","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"licongshen12"},"content":"        sb.append(displayIndented(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":198,"author":{"gitId":"licongshen12"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"licongshen12"},"content":"            sb.append(displayIndented((i + 1) + \".\" + tasks.get(i)));","lastModifiedDate":"2023-09-06"},{"lineNumber":200,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"licongshen12"},"content":"        sb.append(displayHorizontalLine());","lastModifiedDate":"2023-09-06"},{"lineNumber":202,"author":{"gitId":"licongshen12"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":204,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":204}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Represents a Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * A Deadline task is a task that needs to be done before a specific date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     * Constructs a Deadline task with the specified description and deadline date.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @param by The deadline of the task in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the provided date format is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Invalid date format provided. Please use the format d/M/yyyy HHmm.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     * @return The deadline as a LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        return by;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"     * Converts the Deadline task to a string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"     * Converts the Deadline task to a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Deadline task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"licongshen12":62}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * Represents an Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * An Event task is a task that occurs between a specific start and end date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * Constructs an Event task with the specified description, start, and end dates.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     * @param from The start date and time of the event in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     * @param to The end date and time of the event in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the provided date format is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"            this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"            this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"Invalid date format provided. Please use the format d/M/yyyy HHmm.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the start date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     * @return The start date and time as a LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        return this.from;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the end date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     * @return The end date and time as a LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"        return this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     * Converts the Event task to a string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"     * Converts the Event task to a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the Event task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"                + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"licongshen12":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Represents a general task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * This class provides the basic structure and common functionalities of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * Subclasses should define how to convert the task to a string for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        return description;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     * Converts the task to a string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     * Converts the task to a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"     * @return String representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * This class provides a container to store tasks and common functionalities","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" * such as adding, getting, and removing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * Initializes a task list with the given list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @param tasks The list of tasks to initialize with.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public TaskList(Task... tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        this.tasks.addAll(Arrays.asList(tasks));","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     * Retrieves a task from the task list based on the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     * Removes and returns a task from the task list based on the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"     * @return The task that was removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"     * Retrieves the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"     * Searches for tasks containing the specified description and returns them as a new TaskList.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"     * This method takes a description string as input and filters out tasks from the current","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"     * list that contain the given description. The result is returned as a new TaskList.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"     * If the provided description is blank, a DukeException is thrown.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"     * @return A new TaskList containing tasks that match the given description.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"     * @throws DukeException If the provided description is blank.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"    public TaskList findTasks(String keyword) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"            throw new DukeException(\"!!!: Please provide a description to search for\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"        return new TaskList(this.tasks.stream()","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"                .filter(t -\u003e t.description.contains(keyword))","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"                .toArray(Task[]::new)","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":94}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * This class inherits from {@link Task} and provides a representation","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" * of a simple task without any date/time attached to it.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"     * Initializes a new ToDo task with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * Returns a string representation of the ToDo task,","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * with its type and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     * @return A string describing the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     * Returns a string representation suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"     * The returned string is in a special format to distinguish","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"     * the task type, its completion status, and its description.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     * @return A formatted string for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":40}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"licongshen12":20}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"licongshen12":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"    public void toFileStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"            Event event \u003d new Event(\"test\", \"16/10/2001 1200\", \"20/02/2003 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"            assertEquals(event.toFileString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"                    \"E | 0 | test | 16/10/2001 1200 | 20/2/2003 1200\",","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"                    \"\u0027toFileString()\u0027 should return a simplified string to be saved to file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"            // do nothing","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            Event event \u003d new Event(\"test\", \"16/10/2001 1200\", \"20/02/2003 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            assertEquals(event.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"                    \"[E][ ] test (from: Oct 16 2001 12:00 to: Feb 20 2003 12:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"                    \"\u0027toString()\u0027 should return a string to be printed\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"            // do nothing","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":32}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"    void testToFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"        ToDo test1 \u003d new ToDo(\"test1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"        ToDo test2 \u003d new ToDo(\"test2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"        test2.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"T | 0 | test1\", test1.toFileString(), \"toFileString an uncompleted task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"T | 1 | test2\", test2.toFileString(), \"toFileString a completed task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        ToDo test1 \u003d new ToDo(\"test1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"        ToDo test2 \u003d new ToDo(\"test2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"        test2.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"[T][ ] test1\", test1.toString(), \"String of an uncompleted task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        assertEquals(\"[T][X] test2\", test2.toString(), \"String of a completed task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"licongshen12":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"licongshen12":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"licongshen12":1,"-":20}}]
